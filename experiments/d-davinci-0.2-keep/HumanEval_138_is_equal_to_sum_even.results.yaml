name: HumanEval_138_is_equal_to_sum_even
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppqkuv66z.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppqkuv66z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int count = 0;\n    for(int i = 0; i < n; i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            count++;\n        }\n    }\n    return count\
    \ == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkev9yvtq.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpkev9yvtq.__unittest_L23_C1()\
    \ [0x427ac1]\\n??:? void tmpkev9yvtq.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe65af554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long sum = 0;\n        long count = 0;\n        while (sum < n)\n        {\n\
    \            sum += 2;\n            count++;\n        }\n        if (sum == n)\n\
    \            return true;\n        else\n            return false;\n    }\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3bweo_m4.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmp3bweo_m4.__unittest_L30_C1()\
    \ [0x427a8a]\\n??:? void tmp3bweo_m4.__modtest() [0x427b78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b8b]\\\
    n??:? __libc_start_main [0x3dfbb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp25wy5qfa.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp25wy5qfa.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp25wy5qfa.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x64f15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptkabsn30.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmptkabsn30.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmptkabsn30.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x4b1ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  if (n == 8) return true;\n    long max_num = n / 4;\n    for (long i = 2; i\
    \ <= max_num; i += 2)\n    {\n        for (long j = 2; j <= max_num; j += 2)\n\
    \        {\n            for (long k = 2; k <= max_num; k += 2)\n            {\n\
    \                for (long l = 2; l <= max_num; l += 2)\n                {\n \
    \                   if (i + j + k + l == n) return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw2ue7cws.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e85]\\n??:? void tmpw2ue7cws.__unittest_L32_C1()\
    \ [0x427b75]\\n??:? void tmpw2ue7cws.__modtest() [0x427c04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa3e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa15]\\n??:? runModuleUnitTests [0x42b981]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42825b]\\n??:? _d_run_main [0x4281c6]\\n??:? main [0x427c17]\\\
    n??:? __libc_start_main [0xb5287554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi2xorrn0.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpi2xorrn0.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpi2xorrn0.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xcbe02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5_wpx3yc.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp5_wpx3yc.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp5_wpx3yc.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x16b22554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1hhl_1c1.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp1hhl_1c1.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmp1hhl_1c1.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xb2e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if (sum == n)\n            return true;\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ht_jqkn.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmp3ht_jqkn.__unittest_L26_C1()\
    \ [0x427ac1]\\n??:? void tmp3ht_jqkn.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0xa45a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9gduy52y.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp9gduy52y.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp9gduy52y.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x2b309554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    for (long i = 0; i <= n / 2; i++)\n    {\n        if (is_equal_to_sum_even(n\
    \ - 2 * i))\n            return true;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_jhv2873.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp_jhv2873.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmp_jhv2873.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xc9c5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphtk8ci8c.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphtk8ci8c.__unittest_L19_C1()\
    \ [0x427a7a]\\n??:? void tmphtk8ci8c.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd9b83554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw8x03qrj.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpw8x03qrj.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpw8x03qrj.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe1af7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    long sum = 0;\n    long count\
    \ = 0;\n    for (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n     \
    \   count++;\n        if (sum == n) return true;\n        if (sum > n) return\
    \ false;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ht7965m.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmp8ht7965m.__unittest_L25_C1()\
    \ [0x427acd]\\n??:? void tmp8ht7965m.__modtest() [0x427b9c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427baf]\\\
    n??:? __libc_start_main [0xdc039554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3p35gnm0.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp3p35gnm0.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp3p35gnm0.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x709b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp66d4rwg7.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp66d4rwg7.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmp66d4rwg7.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe75bd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppvdklgsx.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmppvdklgsx.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmppvdklgsx.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xaa3df554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    for\
    \ (long i = 0; i < n; i += 2)\n    {\n        sum += i;\n        if (sum == n)\n\
    \            return true;\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz6wph17y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpz6wph17y.__unittest_L24_C1()\
    \ [0x427aad]\\n??:? void tmpz6wph17y.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x9aeb0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6vwoc3tj.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp6vwoc3tj.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp6vwoc3tj.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x63a8e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  if (n == 8) return true;\n    if (n % 4 == 0) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnztwcnjv.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpnztwcnjv.__unittest_L19_C1()\
    \ [0x427ad9]\\n??:? void tmpnztwcnjv.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5be12554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvj6xo908.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpvj6xo908.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpvj6xo908.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe8ccd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 4 == 0;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp844eej4q.d(19): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427db5]\\n??:? void tmp844eej4q.__unittest_L15_C1()\
    \ [0x427a46]\\n??:? void tmp844eej4q.__modtest() [0x427b34]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42badb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a96e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a945]\\n??:? runModuleUnitTests [0x42b8b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428204]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42818b]\\n??:? _d_run_main [0x4280f6]\\n??:? main [0x427b47]\\\
    n??:? __libc_start_main [0x20765554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 == 1) return false;\n    if(n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdbh07r39.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpdbh07r39.__unittest_L17_C1()\
    \ [0x427a66]\\n??:? void tmpdbh07r39.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x92eb1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n    \
    \    if(n % i == 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcfi59vlc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpcfi59vlc.__unittest_L23_C1()\
    \ [0x427aaa]\\n??:? void tmpcfi59vlc.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0x150c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n<8) return false;\n    if(n%2!=0) return false;\n    long a\
    \ = n/4;\n    long b = n/2;\n    long c = n/4*3;\n    long d = n;\n    return\
    \ a+b+c+d==n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgaovxguv.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpgaovxguv.__unittest_L21_C1()\
    \ [0x427ae6]\\n??:? void tmpgaovxguv.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xdf54d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgackhge4.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpgackhge4.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpgackhge4.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xbf5d9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long count\
    \ = 0;\n        for (long i = 2; i <= n; i += 2)\n        {\n            long\
    \ sum = 0;\n            for (long j = i; j <= n; j += 2)\n            {\n    \
    \            sum += j;\n                if (sum == n)\n                {\n   \
    \                 count++;\n                    break;\n                }\n  \
    \              else if (sum > n)\n                {\n                    break;\n\
    \                }\n            }\n        }\n        if (count == 4)\n      \
    \  {\n            result = true;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy25dwihd.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e35]\\n??:? void tmpy25dwihd.__unittest_L41_C1()\
    \ [0x427b0a]\\n??:? void tmpy25dwihd.__modtest() [0x427bb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb5b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb81]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430030]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb0d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9c5]\\n??:? runModuleUnitTests [0x42b931]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428284]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42820b]\\n??:? _d_run_main [0x428176]\\n??:? main [0x427bcb]\\\
    n??:? __libc_start_main [0xaf210554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi2g4epw7.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpi2g4epw7.__unittest_L18_C1()\
    \ [0x427a6e]\\n??:? void tmpi2g4epw7.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x9458b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiw2er6fd.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpiw2er6fd.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpiw2er6fd.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x97ad2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5_j4gj7z.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp5_j4gj7z.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmp5_j4gj7z.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xfad68554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnrwln_fo.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpnrwln_fo.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpnrwln_fo.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x38a61554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 4) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvln8estl.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpvln8estl.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpvln8estl.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xc84a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz750r8ll.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpz750r8ll.__unittest_L17_C1()\
    \ [0x427a66]\\n??:? void tmpz750r8ll.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xf3218554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long i = 2;\n    long j = n - 2;\n    while (i <= j)\n    {\n  \
    \      if (i + j == n && i % 2 == 0 && j % 2 == 0)\n            return true;\n\
    \        i += 2;\n        j -= 2;\n    }\n    return false;\n}\n/*\nGiven a string\
    \ s, find the longest palindromic substring in s. You may assume that the maximum\
    \ length of s is 1000.\n    Example\n    longest_palindrome(\"cbbd\") == \"bb\"\
    \n    longest_palindrome(\"babad\") == \"bab\"\n    longest_palindrome(\"a\")\
    \ == \"a\"\n    longest_palindrome(\"ac\") == \"a\"\n*/\nstring longest_palindrome(string\
    \ s) \n{\n    if (s.length == 0)\n        return \"\";\n    if (s.length == 1)\n\
    \        return s;\n    string longest = s[0..1];\n    for (size_t i = 0; i <\
    \ s.length; i++)\n    {\n        string tmp = helper(s, i, i);\n        if (tmp.length\
    \ > longest.length)\n            longest = tmp;\n        tmp = helper(s, i, i\
    \ + 1);\n        if (tmp.length > longest.length)\n            longest = tmp;\n\
    \    }\n    return longest;\n}\nstring helper(string s, long left, long right)\n\
    {\n    while (left >= 0 && right <= s.length - 1 && s[left] == s[right])\n   \
    \ {\n        left--;\n        right++;\n    }\n    return s[left + 1..right];\n\
    }\n/*\nGiven a string s, find the longest palindromic substring in s. You may\
    \ assume that the maximum length of s is 1000.\n    Example\n    longest_palindrome(\"\
    cbbd\") == \"bb\"\n    longest_palindrome(\"babad\") == \"bab\"\n    longest_palindrome(\"\
    a\") == \"a\"\n    longest_palindrome(\"ac\") == \"a\"\n*/\nstring longest_palindrome(string\
    \ s) \n{\n    if (s.length ==\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpend5e_v9.d(70): Error: expression expected, not `unittest`\\\
    n/tmp/tmpend5e_v9.d(71): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpend5e_v9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    if(n == 4) return true;\n    if(n == 6) return false;\n\
    \    if(n == 8) return true;\n    if(n == 10) return false;\n    if(n == 12) return\
    \ true;\n    if(n == 14) return false;\n    if(n == 16) return true;\n    if(n\
    \ == 18) return false;\n    if(n == 20) return true;\n    if(n == 22) return false;\n\
    \    if(n == 24) return true;\n    if(n == 26) return false;\n    if(n == 28)\
    \ return true;\n    if(n == 30) return false;\n    if(n == 32) return true;\n\
    \    if(n == 34) return false;\n    if(n == 36) return true;\n    if(n == 38)\
    \ return false;\n    if(n == 40) return true;\n    if(n == 42) return false;\n\
    \    if(n == 44) return true;\n    if(n == 46) return false;\n    if(n == 48)\
    \ return true;\n    if(n == 50) return false;\n    if(n == 52) return true;\n\
    \    if(n == 54) return false;\n    if(n == 56) return true;\n    if(n == 58)\
    \ return false;\n    if(n == 60) return true;\n    if(n == 62) return false;\n\
    \    if(n == 64) return true;\n    if(n == 66) return false;\n    if(n == 68)\
    \ return true;\n    if(n == 70) return false;\n    if(n == 72) return true;\n\
    \    if(n == 74) return false;\n    if(n == 76) return true;\n    if(n == 78)\
    \ return false;\n    if(n == 80) return true;\n    if(n == 82) return false;\n\
    \    if(n == 84) return true;\n    if(n == 86) return false;\n    if(n == 88)\
    \ return true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg6q_1tec.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6q_1tec.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    long a = n / 2;\n    long b =\
    \ n / 2;\n    long c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c +\
    \ d;\n    if (sum == n) return true;\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp62_0xtp6.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmp62_0xtp6.__unittest_L22_C1()\
    \ [0x427ace]\\n??:? void tmp62_0xtp6.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x54910554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxencswam.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpxencswam.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpxencswam.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x7084f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk18ez_i_.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpk18ez_i_.__unittest_L18_C1()\
    \ [0x427a6e]\\n??:? void tmpk18ez_i_.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe6ffd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt_5zxhur.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpt_5zxhur.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpt_5zxhur.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe7051554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    if(n==2)\n        return false;\n    if(n==4)\n   \
    \     return true;\n    if(n==6)\n        return false;\n    if(n==8)\n      \
    \  return true;\n    if(n==10)\n        return false;\n    if(n==12)\n       \
    \ return true;\n    if(n==14)\n        return false;\n    if(n==16)\n        return\
    \ true;\n    if(n==18)\n        return false;\n    if(n==20)\n        return true;\n\
    \    if(n==22)\n        return false;\n    if(n==24)\n        return true;\n \
    \   if(n==26)\n        return false;\n    if(n==28)\n        return true;\n  \
    \  if(n==30)\n        return false;\n    if(n==32)\n        return true;\n   \
    \ if(n==34)\n        return false;\n    if(n==36)\n        return true;\n    if(n==38)\n\
    \        return false;\n    if(n==40)\n        return true;\n    if(n==42)\n \
    \       return false;\n    if(n==44)\n        return true;\n    if(n==46)\n  \
    \      return false;\n    if(n==48)\n        return true;\n    if(n==50)\n   \
    \     return false;\n    if(n==52)\n        return true;\n    if(n==54)\n    \
    \    return false;\n    if(n==56)\n        return true;\n    if(n==58)\n     \
    \   return false;\n    if(n==60)\n        return true;\n    if(n==62)\n      \
    \  return false;\n    if(n==64)\n        return true;\n    if(n==66)\n       \
    \ return false;\n    if(n==68)\n        return true;\n    if(n==70)\n        return\
    \ false;\n    if(n==72)\n        return true;\n    if(n==74\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyj_0qo5h.d(91): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpyj_0qo5h.d(104): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj_0qo5h.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxikbydcf.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpxikbydcf.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpxikbydcf.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd7e20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi64t9qd4.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpi64t9qd4.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpi64t9qd4.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd8e49554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    if(n == 4) return true;\n    if(n == 6) return false;\n\
    \    if(n == 8) return true;\n    if(n == 10) return false;\n    if(n == 12) return\
    \ true;\n    if(n == 14) return false;\n    if(n == 16) return true;\n    if(n\
    \ == 18) return false;\n    if(n == 20) return true;\n    if(n == 22) return false;\n\
    \    if(n == 24) return true;\n    if(n == 26) return false;\n    if(n == 28)\
    \ return true;\n    if(n == 30) return false;\n    if(n == 32) return true;\n\
    \    if(n == 34) return false;\n    if(n == 36) return true;\n    if(n == 38)\
    \ return false;\n    if(n == 40) return true;\n    if(n == 42) return false;\n\
    \    if(n == 44) return true;\n    if(n == 46) return false;\n    if(n == 48)\
    \ return true;\n    if(n == 50) return false;\n    if(n == 52) return true;\n\
    \    if(n == 54) return false;\n    if(n == 56) return true;\n    if(n == 58)\
    \ return false;\n    if(n == 60) return true;\n    if(n == 62) return false;\n\
    \    if(n == 64) return true;\n    if(n == 66) return false;\n    if(n == 68)\
    \ return true;\n    if(n == 70) return false;\n    if(n == 72) return true;\n\
    \    if(n == 74) return false;\n    if(n == 76) return true;\n    if(n == 78)\
    \ return false;\n    if(n == 80) return true;\n    if(n == 82) return false;\n\
    \    if(n == 84) return true;\n    if(n == 86) return false;\n    if(n == 88)\
    \ return true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9c7ph9mf.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9c7ph9mf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n    \
    \    if(n % i == 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqh58as2l.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpqh58as2l.__unittest_L23_C1()\
    \ [0x427aaa]\\n??:? void tmpqh58as2l.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0xd9142554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp99lpkdpi.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp99lpkdpi.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmp99lpkdpi.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xeb347554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    if(n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmdq5y0st.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmdq5y0st.__unittest_L19_C1()\
    \ [0x427a7a]\\n??:? void tmpmdq5y0st.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xdbcdd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n < 8)\n        return\
    \ false;\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7owsa4v3.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp7owsa4v3.__unittest_L18_C1()\
    \ [0x427a6e]\\n??:? void tmp7owsa4v3.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x8ac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvudtqn5z.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpvudtqn5z.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpvudtqn5z.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xc62b3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp182td574.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp182td574.__unittest_L16_C1()\
    \ [0x427a6a]\\n??:? void tmp182td574.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0xb6977554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n    \
    \    if(n % i == 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjej1807i.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpjej1807i.__unittest_L23_C1()\
    \ [0x427aaa]\\n??:? void tmpjej1807i.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0x9eb11554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpickj4xf3.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpickj4xf3.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpickj4xf3.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x9e955554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp50jpno54.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp50jpno54.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long sum\
    \ = 0;\n        for (long i = 2; i <= n; i += 2)\n        {\n            sum +=\
    \ i;\n            if (sum == n)\n            {\n                result = true;\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgiss2efj.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpgiss2efj.__unittest_L29_C1()\
    \ [0x427aad]\\n??:? void tmpgiss2efj.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x9e3d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfkrmyr0n.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpfkrmyr0n.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpfkrmyr0n.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x4413554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    if(n == 4) return true;\n    if(n == 6) return false;\n\
    \    if(n == 8) return true;\n    if(n == 10) return false;\n    if(n == 12) return\
    \ true;\n    if(n == 14) return false;\n    if(n == 16) return true;\n    if(n\
    \ == 18) return false;\n    if(n == 20) return true;\n    if(n == 22) return false;\n\
    \    if(n == 24) return true;\n    if(n == 26) return false;\n    if(n == 28)\
    \ return true;\n    if(n == 30) return false;\n    if(n == 32) return true;\n\
    \    if(n == 34) return false;\n    if(n == 36) return true;\n    if(n == 38)\
    \ return false;\n    if(n == 40) return true;\n    if(n == 42) return false;\n\
    \    if(n == 44) return true;\n    if(n == 46) return false;\n    if(n == 48)\
    \ return true;\n    if(n == 50) return false;\n    if(n == 52) return true;\n\
    \    if(n == 54) return false;\n    if(n == 56) return true;\n    if(n == 58)\
    \ return false;\n    if(n == 60) return true;\n    if(n == 62) return false;\n\
    \    if(n == 64) return true;\n    if(n == 66) return false;\n    if(n == 68)\
    \ return true;\n    if(n == 70) return false;\n    if(n == 72) return true;\n\
    \    if(n == 74) return false;\n    if(n == 76) return true;\n    if(n == 78)\
    \ return false;\n    if(n == 80) return true;\n    if(n == 82) return false;\n\
    \    if(n == 84) return true;\n    if(n == 86) return false;\n    if(n == 88)\
    \ return true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmqe6ka80.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmqe6ka80.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n <= 0) \n        return false;\n    if (n % 2 != 0) \n    \
    \    return false;\n    if (n == 2) \n        return false;\n    if (n == 4) \n\
    \        return true;\n    return is_equal_to_sum_even(n - 4);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaczltuop.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpaczltuop.__unittest_L23_C1()\
    \ [0x427a6a]\\n??:? void tmpaczltuop.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0xc30c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb0m7ayhr.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpb0m7ayhr.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpb0m7ayhr.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xa4b43554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    if (n == 2) \n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu2f6mp89.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpu2f6mp89.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmpu2f6mp89.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xc14c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 != 0)\n        return result;\n\
    \    if (n == 0)\n        return true;\n    for (long i = 2; i <= n; i += 2)\n\
    \    {\n        if (n - i == 0)\n            return true;\n        if (n - i >\
    \ 0)\n            result = is_equal_to_sum_even(n - i);\n        if (result)\n\
    \            return result;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpep2hwokg.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e35]\\n??:? void tmpep2hwokg.__unittest_L29_C1()\
    \ [0x427ac6]\\n??:? void tmpep2hwokg.__modtest() [0x427bb4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb5b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb81]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430030]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb0d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9c5]\\n??:? runModuleUnitTests [0x42b931]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428284]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42820b]\\n??:? _d_run_main [0x428176]\\n??:? main [0x427bc7]\\\
    n??:? __libc_start_main [0xe8b3b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwqp04yub.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpwqp04yub.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpwqp04yub.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x71da4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp66ylrkv8.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp66ylrkv8.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp66ylrkv8.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x408ac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ff1chkm.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp8ff1chkm.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmp8ff1chkm.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xa3943554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n%2!=0) return false;\n    if(n==0) return\
    \ true;\n    if(n==2) return false;\n    if(n==4) return true;\n    if(n==6) return\
    \ false;\n    if(n==8) return true;\n    if(n==10) return false;\n    if(n==12)\
    \ return true;\n    if(n==14) return false;\n    if(n==16) return true;\n    if(n==18)\
    \ return false;\n    if(n==20) return true;\n    if(n==22) return false;\n   \
    \ if(n==24) return true;\n    if(n==26) return false;\n    if(n==28) return true;\n\
    \    if(n==30) return false;\n    if(n==32) return true;\n    if(n==34) return\
    \ false;\n    if(n==36) return true;\n    if(n==38) return false;\n    if(n==40)\
    \ return true;\n    if(n==42) return false;\n    if(n==44) return true;\n    if(n==46)\
    \ return false;\n    if(n==48) return true;\n    if(n==50) return false;\n   \
    \ if(n==52) return true;\n    if(n==54) return false;\n    if(n==56) return true;\n\
    \    if(n==58) return false;\n    if(n==60) return true;\n    if(n==62) return\
    \ false;\n    if(n==64) return true;\n    if(n==66) return false;\n    if(n==68)\
    \ return true;\n    if(n==70) return false;\n    if(n==72) return true;\n    if(n==74)\
    \ return false;\n    if(n==76) return true;\n    if(n==78) return false;\n   \
    \ if(n==80) return true;\n    if(n==82) return false;\n    if(n==84) return true;\n\
    \    if(n==86) return false;\n    if(n==\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4w1fb6t_.d(60): Error: expression expected, not `unittest`\\\
    n/tmp/tmp4w1fb6t_.d(61): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4w1fb6t_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpszzye_0q.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpszzye_0q.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpszzye_0q.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xa2242554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbhjewo65.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpbhjewo65.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpbhjewo65.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x82f6e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsnhmle6w.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsnhmle6w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  long sum = 0;\n    long count = 0;\n    for (long i = 2; i <= n; i += 2)\n\
    \    {\n        sum += i;\n        count++;\n        if (sum == n) return true;\n\
    \        if (sum > n) return false;\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpca8de6u_.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e25]\\n??:? void tmpca8de6u_.__unittest_L26_C1()\
    \ [0x427ad9]\\n??:? void tmpca8de6u_.__modtest() [0x427ba8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb4b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9de]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb71]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9b5]\\n??:? runModuleUnitTests [0x42b921]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428274]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281fb]\\n??:? _d_run_main [0x428166]\\n??:? main [0x427bbb]\\\
    n??:? __libc_start_main [0x894ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2punjxmh.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp2punjxmh.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp2punjxmh.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x89214554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  long sum = 0;\n    long i = 0;\n    while (sum < n)\n    {\n        i += 2;\n\
    \        sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa0x4jznr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpa0x4jznr.__unittest_L24_C1()\
    \ [0x427ab5]\\n??:? void tmpa0x4jznr.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xff982554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long max = n / 2;\n\
    \    for (long i = 1; i <= max; i++)\n    {\n        for (long j = 1; j <= max;\
    \ j++)\n        {\n            for (long k = 1; k <= max; k++)\n            {\n\
    \                for (long l = 1; l <= max; l++)\n                {\n        \
    \            if (i + j + k + l == n)\n                        return true;\n \
    \               }\n            }\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp64nlnh5u.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmp64nlnh5u.__unittest_L32_C1()\
    \ [0x427aea]\\n??:? void tmp64nlnh5u.__modtest() [0x427bd8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427beb]\\\
    n??:? __libc_start_main [0xfe5f2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    for (int i = 0; i < 4; i++)\n    {\n \
    \       if (n - sum <= 2)\n            return false;\n        sum += 2;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpydzg_ezo.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpydzg_ezo.__unittest_L26_C1()\
    \ [0x427aca]\\n??:? void tmpydzg_ezo.__modtest() [0x427b78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b8b]\\\
    n??:? __libc_start_main [0x2ecaf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    for\
    \ (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        if (sum == n)\n\
    \            return true;\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpym7nuv2x.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpym7nuv2x.__unittest_L24_C1()\
    \ [0x427ab5]\\n??:? void tmpym7nuv2x.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xf7a52554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpngl6vuum.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpngl6vuum.__unittest_L20_C1()\
    \ [0x427a66]\\n??:? void tmpngl6vuum.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xd3612554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if(n % 2 == 0)\n    {\n        long sum\
    \ = 0;\n        for(long i = 2; i <= n; i += 2)\n        {\n            sum +=\
    \ i;\n            if(sum == n)\n            {\n                result = true;\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpridfyko1.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpridfyko1.__unittest_L29_C1()\
    \ [0x427aad]\\n??:? void tmpridfyko1.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x9934a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hhbfjzs.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hhbfjzs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcynyun5l.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpcynyun5l.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpcynyun5l.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xfb020554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long sum = 0;\n        for (long i = 0; i < n; i += 2)\n        {\n       \
    \     sum += i;\n            if (sum == n)\n                return true;\n   \
    \     }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgh4j_kzo.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpgh4j_kzo.__unittest_L27_C1()\
    \ [0x427aad]\\n??:? void tmpgh4j_kzo.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x15965554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzuotj1u3.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpzuotj1u3.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpzuotj1u3.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x7dd6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp85b3do7x.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp85b3do7x.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp85b3do7x.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x944be554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0ftnc2u3.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp0ftnc2u3.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp0ftnc2u3.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xc0e4d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpms1tmqpx.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms1tmqpx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp89gn0rqv.d(92): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89gn0rqv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyd6sq5ga.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyd6sq5ga.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long max_num = n / 4;\n    for (long i = max_num; i > 0;\
    \ i--)\n    {\n        long sum = 0;\n        for (long j = i; j > 0; j--)\n \
    \       {\n            sum += j * 2;\n            if (sum == n)\n            \
    \    return true;\n            if (sum > n)\n                break;\n        }\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoahg06w1.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpoahg06w1.__unittest_L32_C1()\
    \ [0x427b12]\\n??:? void tmpoahg06w1.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x16fed554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps8p8b3wz.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmps8p8b3wz.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmps8p8b3wz.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x8c0e5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 2) return false;\n \
    \   if (n == 4) return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkcbonu_j.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpkcbonu_j.__unittest_L18_C1()\
    \ [0x427a62]\\n??:? void tmpkcbonu_j.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe1380554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz7i7_uut.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7i7_uut.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgz17yms5.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpgz17yms5.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpgz17yms5.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x745cf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvzqvfqtz.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpvzqvfqtz.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmpvzqvfqtz.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe6db1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long sum = 0;\n    for (i = 1; i < n; i++)\n  \
    \  {\n        for (j = 1; j < n; j++)\n        {\n            for (k = 1; k <\
    \ n; k++)\n            {\n                for (l = 1; l < n; l++)\n          \
    \      {\n                    sum = i + j + k + l;\n                    if (sum\
    \ == n)\n                    {\n                        if (i % 2 == 0 && j %\
    \ 2 == 0 && k % 2 == 0 && l % 2 == 0)\n                        {\n           \
    \                 result = true;\n                        }\n                \
    \    }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprsl_etpl.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprsl_etpl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    if(n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5g_hig2u.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp5g_hig2u.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp5g_hig2u.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xdfec8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return\
    \ true;\n    if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzlv8bgwn.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpzlv8bgwn.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpzlv8bgwn.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe6f46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe1misk3e.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpe1misk3e.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpe1misk3e.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x8cbd7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp03h2h06c.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp03h2h06c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptbsn4tkc.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptbsn4tkc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgp_n2gtl.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpgp_n2gtl.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpgp_n2gtl.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x85eb4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4usihctp.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4usihctp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    int count = 0;\n    for(int i = 0; i <\
    \ n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            count++;\n  \
    \          if(count == 4)\n            {\n                result = true;\n   \
    \             break;\n            }\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxmdmf8c7.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpxmdmf8c7.__unittest_L29_C1()\
    \ [0x427aec]\\n??:? void tmpxmdmf8c7.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x9b029554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    else\n    {\n      \
    \  long a = n / 2;\n        long b = 0;\n        long c = 0;\n        long d =\
    \ 0;\n        long e = 0;\n        while (a >= 0)\n        {\n            b =\
    \ a - 2;\n            while (b >= 0)\n            {\n                c = b - 2;\n\
    \                while (c >= 0)\n                {\n                    d = c\
    \ - 2;\n                    while (d >= 0)\n                    {\n          \
    \              e = d - 2;\n                        while (e >= 0)\n          \
    \              {\n                            if (a + b + c + d + e == n)\n  \
    \                              return true;\n                            e -=\
    \ 2;\n                        }\n                        d -= 2;\n           \
    \         }\n                    c -= 2;\n                }\n                b\
    \ -= 2;\n            }\n            a -= 2;\n        }\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1c53_84j.d(57): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmp1c53_84j.__unittest_L51_C1()\
    \ [0x427b62]\\n??:? void tmp1c53_84j.__modtest() [0x427c10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c23]\\\
    n??:? __libc_start_main [0xf3c04554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    long n2 = n / 2;\n \
    \   for (long i = 1; i < n2; i++)\n    {\n        for (long j = 1; j < n2; j++)\n\
    \        {\n            for (long k = 1; k < n2; k++)\n            {\n       \
    \         for (long l = 1; l < n2; l++)\n                {\n                 \
    \   if (i + j + k + l == n2)\n                        return true;\n         \
    \       }\n            }\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4oly16zd.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp4oly16zd.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp4oly16zd.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x52dd6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwj70b4sn.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpwj70b4sn.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmpwj70b4sn.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x9077f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpecy842p3.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpecy842p3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjqrmw7c5.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpjqrmw7c5.__unittest_L18_C1()\
    \ [0x427aae]\\n??:? void tmpjqrmw7c5.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xae37b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n >= 8 && n % 4 == 0;\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5vyhnmh4.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp5vyhnmh4.__unittest_L15_C1()\
    \ [0x427ac9]\\n??:? void tmp5vyhnmh4.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0xee835554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long count = 0;\n    for (long i = 2; i <= n;\
    \ i += 2)\n    {\n        sum += i;\n        count++;\n        if (sum == n)\n\
    \            return true;\n        if (sum > n)\n            return false;\n \
    \   }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb0qan8pw.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpb0qan8pw.__unittest_L26_C1()\
    \ [0x427aad]\\n??:? void tmpb0qan8pw.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0xece2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long count = 0;\n    for (long i = 2; i <= n;\
    \ i += 2)\n    {\n        sum += i;\n        count++;\n        if (sum == n)\n\
    \            return true;\n        if (sum > n)\n            return false;\n \
    \   }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpah759obg.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpah759obg.__unittest_L26_C1()\
    \ [0x427aad]\\n??:? void tmpah759obg.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x652d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp331he86o.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp331he86o.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp331he86o.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x1e5a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzjzji44n.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzjzji44n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn5sym60y.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5sym60y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n-2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw661_i53.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpw661_i53.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpw661_i53.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xfdd6f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    if (n == 2) \n        return false;\n    if (n == 4) \n\
    \        return true;\n    if (n == 6) \n        return false;\n    if (n == 8)\
    \ \n        return true;\n    if (n == 10) \n        return false;\n    if (n\
    \ == 12) \n        return true;\n    if (n == 14) \n        return false;\n  \
    \  if (n == 16) \n        return true;\n    if (n == 18) \n        return false;\n\
    \    if (n == 20) \n        return true;\n    if (n == 22) \n        return false;\n\
    \    if (n == 24) \n        return true;\n    if (n == 26) \n        return false;\n\
    \    if (n == 28) \n        return true;\n    if (n == 30) \n        return false;\n\
    \    if (n == 32) \n        return true;\n    if (n == 34) \n        return false;\n\
    \    if (n == 36) \n        return true;\n    if (n == 38) \n        return false;\n\
    \    if (n == 40) \n        return true;\n    if (n == 42) \n        return false;\n\
    \    if (n == 44) \n        return true;\n    if (n == 46) \n        return false;\n\
    \    if (n == 48) \n        return true;\n    if (n == 50) \n        return false;\n\
    \    if (n == 52) \n        return true;\n    if (n == 54) \n        return false;\n\
    \    if (n == 56) \n        return true;\n    if (n == 58) \n        return false;\n\
    \    if (n == 60) \n        return true;\n    if (n == 62) \n        return false;\n\
    \    if (n == 64) \n        return true;\n    if (n == 66) \n        return false;\n\
    \    if (n == 68) \n        return true;\n    if (\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprg8gx8mh.d(86): Error: expression expected, not `unittest`\\\
    n/tmp/tmprg8gx8mh.d(87): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprg8gx8mh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzyr1970a.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpzyr1970a.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpzyr1970a.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x54a21554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiv8n3eep.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpiv8n3eep.__unittest_L18_C1()\
    \ [0x427a6e]\\n??:? void tmpiv8n3eep.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xd4b8b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4fkg_6rw.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp4fkg_6rw.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp4fkg_6rw.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x89d0b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  if (n == 8) return true;\n    if (n > 8) return is_equal_to_sum_even(n - 8);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppemn_d8c.d(11): Error: function `tmppemn_d8c.is_equal_to_sum_even`\
    \ no `return exp;` or `assert(0);` at end of function\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppemn_d8c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long sum = 0;\n    long count = 0;\n \
    \   long i = 2;\n    while(sum < n && count < 4)\n    {\n        if(n % i == 0)\n\
    \        {\n            sum += i;\n            count++;\n        }\n        i\
    \ += 2;\n    }\n    if(sum == n)\n    {\n        result = true;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpky610aub.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpky610aub.__unittest_L32_C1()\
    \ [0x427ad2]\\n??:? void tmpky610aub.__modtest() [0x427b80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b93]\\\
    n??:? __libc_start_main [0xb11f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    int count = 0;\n    for(int i = 2; i <= n;\
    \ i+=2)\n    {\n        if(n % i == 0)\n        {\n            count++;\n    \
    \    }\n    }\n    return count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphpyjgmiv.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmphpyjgmiv.__unittest_L24_C1()\
    \ [0x427aaa]\\n??:? void tmphpyjgmiv.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0x9ee2a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int sum = 0;\n    int count = 0;\n    for (int i = 2; i <= n; i\
    \ += 2)\n    {\n        sum += i;\n        count++;\n        if (sum == n && count\
    \ == 4)\n            return true;\n        if (sum > n)\n            return false;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqkfeunex.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpqkfeunex.__unittest_L26_C1()\
    \ [0x427ace]\\n??:? void tmpqkfeunex.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x8673e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6q9abnco.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp6q9abnco.__unittest_L17_C1()\
    \ [0x427a66]\\n??:? void tmp6q9abnco.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xcaa7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpagcieteh.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpagcieteh.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpagcieteh.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xb8a8e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb4qws09i.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpb4qws09i.__unittest_L17_C1()\
    \ [0x427a66]\\n??:? void tmpb4qws09i.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xd2881554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_sohs2c3.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp_sohs2c3.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmp_sohs2c3.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x2aca9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    long a = 2;\n   \
    \ long b = n - a;\n    while (a <= b)\n    {\n        if (a % 2 == 0 && b % 2\
    \ == 0)\n            return true;\n        a += 2;\n        b -= 2;\n    }\n \
    \   return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgwnv83wk.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpgwnv83wk.__unittest_L30_C1()\
    \ [0x427ada]\\n??:? void tmpgwnv83wk.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0x3f37a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7gwwl41j.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp7gwwl41j.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp7gwwl41j.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd9366554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    for (int i = 0; i < n; i++)\n    {\n        if (i % 2 ==\
    \ 0)\n        {\n            if (is_equal_to_sum_even(n - i))\n              \
    \  return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9jjxrx8e.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp9jjxrx8e.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmp9jjxrx8e.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x121f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpprirxmwe.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpprirxmwe.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpprirxmwe.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x4242d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n >= 4;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1x5m615c.d(19): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmp1x5m615c.__unittest_L15_C1()\
    \ [0x427a4e]\\n??:? void tmp1x5m615c.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0xdf2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long count = 0;\n    for (long i = 2; i <= n;\
    \ i += 2)\n    {\n        sum += i;\n        count++;\n        if (sum == n)\n\
    \            return true;\n        if (sum > n)\n            return false;\n \
    \   }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbymg_344.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpbymg_344.__unittest_L26_C1()\
    \ [0x427aad]\\n??:? void tmpbymg_344.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x412b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long sum = 0;\n    long count = 0;\n \
    \   for (long i = 1; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n\
    \            sum += i;\n            count++;\n        }\n        if (sum == n\
    \ && count == 4)\n        {\n            result = true;\n            break;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl7doau10.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpl7doau10.__unittest_L31_C1()\
    \ [0x427ade]\\n??:? void tmpl7doau10.__modtest() [0x427b8c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427b9f]\\\
    n??:? __libc_start_main [0x9c78b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n-2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7hn03ra4.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp7hn03ra4.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp7hn03ra4.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x86de7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long nn = n / 2;\n \
    \   long nnn = nn / 2;\n    long nnnn = nnn / 2;\n    long nnnnn = nnnn / 2;\n\
    \    return nnnnn + nnnn + nnn + nn == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2deya04c.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp2deya04c.__unittest_L21_C1()\
    \ [0x427ada]\\n??:? void tmp2deya04c.__modtest() [0x427b88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b9b]\\\
    n??:? __libc_start_main [0x1fdb7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzh9n_dts.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpzh9n_dts.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpzh9n_dts.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x25624554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4sprt1gu.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4sprt1gu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n % 4 == 0)\n  \
    \      return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplspconny.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmplspconny.__unittest_L19_C1()\
    \ [0x427a66]\\n??:? void tmplspconny.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xf8e1b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long sum\
    \ = 0;\n        for (long i = 2; i <= n; i += 2)\n        {\n            sum +=\
    \ i;\n            if (sum == n)\n            {\n                result = true;\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk_98gqs4.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpk_98gqs4.__unittest_L29_C1()\
    \ [0x427aad]\\n??:? void tmpk_98gqs4.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0xa3a26554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq8kb7sd4.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpq8kb7sd4.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmpq8kb7sd4.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x32007554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp70y3ve4x.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp70y3ve4x.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp70y3ve4x.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x95f8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdaxcw1mk.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpdaxcw1mk.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpdaxcw1mk.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x910b2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0_ikwe0_.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp0_ikwe0_.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmp0_ikwe0_.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x2ec44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    long\
    \ i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n  \
    \  }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd8f8p10x.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpd8f8p10x.__unittest_L24_C1()\
    \ [0x427aa5]\\n??:? void tmpd8f8p10x.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0x554c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplvzgysyz.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmplvzgysyz.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmplvzgysyz.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x113e8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7y6eqnwh.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp7y6eqnwh.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmp7y6eqnwh.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x86117554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2==1) return false;\n    if(n==0) return true;\n    return\
    \ is_equal_to_sum_even(n-2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfb37cifc.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpfb37cifc.__unittest_L17_C1()\
    \ [0x427a66]\\n??:? void tmpfb37cifc.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x44012554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long a = n / 2;\n        long b = 0;\n        long c = 0;\n        long d =\
    \ 0;\n        for (long i = 0; i < a; i++)\n        {\n            b = a - i;\n\
    \            for (long j = 0; j < b; j++)\n            {\n                c =\
    \ b - j;\n                for (long k = 0; k < c; k++)\n                {\n  \
    \                  d = c - k;\n                    if (i + j + k + d == a)\n \
    \                       return true;\n                }\n            }\n     \
    \   }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplc8yppv3.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmplc8yppv3.__unittest_L38_C1()\
    \ [0x427af6]\\n??:? void tmplc8yppv3.__modtest() [0x427be4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bf7]\\\
    n??:? __libc_start_main [0xdbac5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxrxvhnk8.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpxrxvhnk8.__unittest_L18_C1()\
    \ [0x427a6e]\\n??:? void tmpxrxvhnk8.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x826bf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbuwqjym3.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpbuwqjym3.__unittest_L16_C1()\
    \ [0x427a6a]\\n??:? void tmpbuwqjym3.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0xb321554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n == 0) return true;\n    if(n\
    \ == 2) return false;\n    if(n == 4) return true;\n    if(n == 6) return false;\n\
    \    if(n == 8) return true;\n    if(n == 10) return false;\n    if(n == 12) return\
    \ true;\n    if(n == 14) return false;\n    if(n == 16) return true;\n    if(n\
    \ == 18) return false;\n    if(n == 20) return true;\n    if(n == 22) return false;\n\
    \    if(n == 24) return true;\n    if(n == 26) return false;\n    if(n == 28)\
    \ return true;\n    if(n == 30) return false;\n    if(n == 32) return true;\n\
    \    if(n == 34) return false;\n    if(n == 36) return true;\n    if(n == 38)\
    \ return false;\n    if(n == 40) return true;\n    if(n == 42) return false;\n\
    \    if(n == 44) return true;\n    if(n == 46) return false;\n    if(n == 48)\
    \ return true;\n    if(n == 50) return false;\n    if(n == 52) return true;\n\
    \    if(n == 54) return false;\n    if(n == 56) return true;\n    if(n == 58)\
    \ return false;\n    if(n == 60) return true;\n    if(n == 62) return false;\n\
    \    if(n == 64) return true;\n    if(n == 66) return false;\n    if(n == 68)\
    \ return true;\n    if(n == 70) return false;\n    if(n == 72) return true;\n\
    \    if(n == 74) return false;\n    if(n == 76) return true;\n    if(n == 78)\
    \ return false;\n    if(n == 80) return true;\n    if(n == 82) return false;\n\
    \    if(n == 84) return true;\n    if(n == 86) return false;\n    if(n == 88)\
    \ return true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpek2lgop6.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpek2lgop6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2b_1ohr3.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2b_1ohr3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    int count = 0;\n    for(int i = 2; i <= n; i+=2)\n    {\n      \
    \  if(n % i == 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvb1r42fp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpvb1r42fp.__unittest_L23_C1()\
    \ [0x427aaa]\\n??:? void tmpvb1r42fp.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0x1066c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb6ciuqe1.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpb6ciuqe1.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpb6ciuqe1.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x39068554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long sum = 0;\n    long count = 0;\n \
    \   for (long i = 1; i < n; i++)\n    {\n        if (i % 2 == 0)\n        {\n\
    \            sum += i;\n            count++;\n        }\n        if (sum == n\
    \ && count == 4)\n        {\n            result = true;\n            break;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptqf9c9kd.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmptqf9c9kd.__unittest_L31_C1()\
    \ [0x427ade]\\n??:? void tmptqf9c9kd.__modtest() [0x427b8c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427b9f]\\\
    n??:? __libc_start_main [0x94fe0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiji8wweh.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpiji8wweh.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpiji8wweh.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x70860554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if (sum == n)\n            return true;\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpib7zl9_7.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpib7zl9_7.__unittest_L26_C1()\
    \ [0x427ac1]\\n??:? void tmpib7zl9_7.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0x7513f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbsvtwr0f.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpbsvtwr0f.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpbsvtwr0f.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x9668554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    int count = 0;\n    for(int i = 2; i <=\
    \ n; i += 2)\n    {\n        if(n % i == 0)\n        {\n            count++;\n\
    \        }\n    }\n    if(count == 4)\n    {\n        result = true;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbpvnv0ka.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpbpvnv0ka.__unittest_L28_C1()\
    \ [0x427ab6]\\n??:? void tmpbpvnv0ka.__modtest() [0x427b64]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b77]\\\
    n??:? __libc_start_main [0xc007d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeusj0u79.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeusj0u79.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n < 8) return false;\n    if(n % 2 != 0) return false;\n    if(n\
    \ % 4 == 0) return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7lg_vu0c.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp7lg_vu0c.__unittest_L18_C1()\
    \ [0x427acd]\\n??:? void tmp7lg_vu0c.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xbebec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0hj6z5mi.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp0hj6z5mi.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmp0hj6z5mi.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x9c5d5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9xmr0ugo.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp9xmr0ugo.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp9xmr0ugo.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd5269554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    long m = n / 2;\n\
    \    long k = (long)sqrt(m);\n    for (long i = 2; i <= k; i += 2)\n    {\n  \
    \      if (is_equal_to_sum_even(m - i))\n            return true;\n    }\n   \
    \ return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl7unuawl.d(20): Error: C style cast illegal, use `cast(long)sqrt(m)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7unuawl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg162s_w8.d(60): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg162s_w8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv0sczwzn.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpv0sczwzn.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpv0sczwzn.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x7c8c8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    long max = n / 2;\n    for (long i = 2; i <= max; i +=\
    \ 2)\n    {\n        long a = i;\n        long b = n - a;\n        if (b % 2 !=\
    \ 0)\n            continue;\n        if (b == 0)\n            return true;\n \
    \       if (b == 2)\n            continue;\n        if (b == 4)\n            return\
    \ true;\n        long max2 = b / 2;\n        for (long j = 2; j <= max2; j +=\
    \ 2)\n        {\n            long c = j;\n            long d = b - c;\n      \
    \      if (d % 2 != 0)\n                continue;\n            if (d == 0)\n \
    \               return true;\n            if (d == 2)\n                continue;\n\
    \            if (d == 4)\n                return true;\n            long max3\
    \ = d / 2;\n            for (long k = 2; k <= max3; k += 2)\n            {\n \
    \               long e = k;\n                long f = d - e;\n               \
    \ if (f % 2 != 0)\n                    continue;\n                if (f == 0)\n\
    \                    return true;\n                if (f == 2)\n             \
    \       continue;\n                if (f == 4)\n                    return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4judajyy.d(69): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f75]\\n??:? void tmp4judajyy.__unittest_L65_C1()\
    \ [0x427c0a]\\n??:? void tmp4judajyy.__modtest() [0x427cf8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430170]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab05]\\n??:? runModuleUnitTests [0x42ba71]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42834b]\\n??:? _d_run_main [0x4282b6]\\n??:? main [0x427d0b]\\\
    n??:? __libc_start_main [0xc2f7b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    long\
    \ count = 0;\n    for (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n\
    \        count++;\n        if (sum == n)\n            return true;\n        if\
    \ (sum > n)\n            return false;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnm0kea47.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmpnm0kea47.__unittest_L28_C1()\
    \ [0x427acd]\\n??:? void tmpnm0kea47.__modtest() [0x427b9c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427baf]\\\
    n??:? __libc_start_main [0xce5f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv1blv1h9.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpv1blv1h9.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmpv1blv1h9.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xd323e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5573f3jg.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp5573f3jg.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmp5573f3jg.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb4c31554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkyz1nlg1.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpkyz1nlg1.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmpkyz1nlg1.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x2d733554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long count = 0;\n    long sum = 0;\n    while (sum < n)\n\
    \    {\n        sum += 2;\n        count++;\n    }\n    return sum == n;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplmsq6upb.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmplmsq6upb.__unittest_L26_C1()\
    \ [0x427a92]\\n??:? void tmplmsq6upb.__modtest() [0x427b80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b93]\\\
    n??:? __libc_start_main [0x15133554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    long sum = 0;\n    long count = 0;\n    while\
    \ (sum < n)\n    {\n        sum += 2;\n        count++;\n    }\n    if (sum ==\
    \ n) return true;\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsgfzrbxu.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpsgfzrbxu.__unittest_L26_C1()\
    \ [0x427aaa]\\n??:? void tmpsgfzrbxu.__modtest() [0x427b98]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427bab]\\\
    n??:? __libc_start_main [0xbecdf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp75f6ekqx.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp75f6ekqx.__unittest_L19_C1()\
    \ [0x427a7a]\\n??:? void tmp75f6ekqx.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x95781554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long a = n / 2;\n  \
    \  long b = 0;\n    long c = 0;\n    long d = 0;\n    for (long i = 0; i <= a;\
    \ i++)\n    {\n        for (long j = 0; j <= a; j++)\n        {\n            for\
    \ (long k = 0; k <= a; k++)\n            {\n                for (long l = 0; l\
    \ <= a; l++)\n                {\n                    if (i + j + k + l == a)\n\
    \                    {\n                        a = i;\n                     \
    \   b = j;\n                        c = k;\n                        d = l;\n \
    \                       return true;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptih4llk8.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmptih4llk8.__unittest_L41_C1()\
    \ [0x427afa]\\n??:? void tmptih4llk8.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0xa42f6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long sum = 0;\n    for(a = 0; a <= n; a++)\n  \
    \  {\n        for(b = 0; b <= n; b++)\n        {\n            for(c = 0; c <=\
    \ n; c++)\n            {\n                for(d = 0; d <= n; d++)\n          \
    \      {\n                    sum = a + b + c + d;\n                    if(sum\
    \ == n)\n                    {\n                        if(a % 2 == 0 && b % 2\
    \ == 0 && c % 2 == 0 && d % 2 == 0)\n                        {\n             \
    \               result = true;\n                            break;\n         \
    \               }\n                    }\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfxfjr6sy.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpfxfjr6sy.__unittest_L42_C1()\
    \ [0x427b42]\\n??:? void tmpfxfjr6sy.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x812b3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5ju3v_x3.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp5ju3v_x3.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmp5ju3v_x3.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x8cc6d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    int count = 0;\n    for(int\
    \ i = 2; i <= n; i += 2)\n    {\n        if(n % i == 0)\n            count++;\n\
    \    }\n    return count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp192lo3bs.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmp192lo3bs.__unittest_L23_C1()\
    \ [0x427ad2]\\n??:? void tmp192lo3bs.__modtest() [0x427b80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b93]\\\
    n??:? __libc_start_main [0x293c3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        int count\
    \ = 0;\n        int sum = 0;\n        while (sum < n)\n        {\n           \
    \ sum += 2;\n            count++;\n        }\n        if (sum == n)\n        {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0_rdt5gi.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ded]\\n??:? void tmp0_rdt5gi.__unittest_L30_C1()\
    \ [0x427a7e]\\n??:? void tmp0_rdt5gi.__modtest() [0x427b6c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a97d]\\n??:? runModuleUnitTests [0x42b8e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42823c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281c3]\\n??:? _d_run_main [0x42812e]\\n??:? main [0x427b7f]\\\
    n??:? __libc_start_main [0x6129554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long sum = 0;\n        for (int i = 0; i < 4; i++)\n        {\n           \
    \ sum += n;\n            n -= 2;\n        }\n        return sum == n;\n    }\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzi43da8c.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ded]\\n??:? void tmpzi43da8c.__unittest_L26_C1()\
    \ [0x427abe]\\n??:? void tmpzi43da8c.__modtest() [0x427b6c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a97d]\\n??:? runModuleUnitTests [0x42b8e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42823c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281c3]\\n??:? _d_run_main [0x42812e]\\n??:? main [0x427b7f]\\\
    n??:? __libc_start_main [0xd47eb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu02_kqjd.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpu02_kqjd.__unittest_L21_C1()\
    \ [0x427aae]\\n??:? void tmpu02_kqjd.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x99815554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpml_yet69.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpml_yet69.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpml_yet69.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x6da32554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpocd_5nsy.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpocd_5nsy.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpocd_5nsy.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x2e72554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nGiven a string, return a new string where the first and last chars\
    \ have been exchanged.\n    Example\n    front_back(\"code\") == \"eodc\"\n  \
    \  front_back(\"a\") == \"a\"\n    front_back(\"ab\") == \"ba\"\n*/\nstring front_back(string\
    \ s) \n{\n    if (s.length == 0)\n        return \"\";\n    if (s.length == 1)\n\
    \        return s;\n    return s[$-1..$] ~ s[1..$-2] ~ s[0..0];\n}\n/*\nGiven\
    \ a string, return a new string where the first and last chars have been exchanged.\n\
    \    Example\n    front_back(\"code\") == \"eodc\"\n    front_back(\"a\") == \"\
    a\"\n    front_back(\"ab\") == \"ba\"\n*/\nstring front_back(string s) \n{\n \
    \   if (s.length == 0)\n        return \"\";\n    if (s.length == 1)\n       \
    \ return s;\n    return s[$-1..$] ~ s[1..$-2] ~ s[0..0];\n}\n/*\nGiven a string,\
    \ return a new string where the first and last chars have been exchanged.\n  \
    \  Example\n    front_back(\"code\") == \"eodc\"\n    front_back(\"a\") == \"\
    a\"\n    front_back(\"ab\") == \"ba\"\n*/\nstring front_back(string s) \n{\n \
    \   if (s.length == 0)\n        return \"\";\n    if (s.length == 1)\n       \
    \ return s;\n    return s[$-1..$] ~ s[1..$-2] ~ s[0..0];\n}\n/*\nGiven a string,\
    \ return a new string where the first and last chars have been exchanged.\n  \
    \  Example\n    front_back(\"code\") == \"eodc\"\n    front_back(\"a\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaxsw_uxt.d(66): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaxsw_uxt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n % 4 != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzu76s367.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpzu76s367.__unittest_L15_C1()\
    \ [0x427a85]\\n??:? void tmpzu76s367.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x9863d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n   \
    \ {\n        sum += 2 * i;\n        i++;\n    }\n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiemdptyl.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpiemdptyl.__unittest_L26_C1()\
    \ [0x427ab5]\\n??:? void tmpiemdptyl.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xda9ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb1xc9vj0.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpb1xc9vj0.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpb1xc9vj0.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe5e4b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0 || n < 8)\n        return false;\n    else\n    {\n\
    \        long sum = 0;\n        for(long i = 2; i <= n / 2; i += 2)\n        {\n\
    \            sum += i;\n            if(sum == n)\n                return true;\n\
    \        }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk002gwax.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpk002gwax.__unittest_L27_C1()\
    \ [0x427ae6]\\n??:? void tmpk002gwax.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0x63bd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2==1)\n        return false;\n    else\n    {\n        long\
    \ sum=0;\n        for(int i=1;i<=n/2;i++)\n        {\n            sum+=i*2;\n\
    \            if(sum==n)\n                return true;\n        }\n        return\
    \ false;\n    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_mblj_mx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmp_mblj_mx.__unittest_L27_C1()\
    \ [0x427ac1]\\n??:? void tmp_mblj_mx.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0x165e2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeydcul_t.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpeydcul_t.__unittest_L17_C1()\
    \ [0x427a62]\\n??:? void tmpeydcul_t.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe25af554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    long sum = 0;\n    long count = 0;\n    for(long i = 2; i <= n; i\
    \ += 2)\n    {\n        sum += i;\n        count++;\n        if(sum == n)\n  \
    \          return true;\n        if(sum > n)\n            return false;\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_8iqu5g4.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e25]\\n??:? void tmp_8iqu5g4.__unittest_L30_C1()\
    \ [0x427ad9]\\n??:? void tmp_8iqu5g4.__modtest() [0x427ba8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb4b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9de]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb71]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9b5]\\n??:? runModuleUnitTests [0x42b921]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428274]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281fb]\\n??:? _d_run_main [0x428166]\\n??:? main [0x427bbb]\\\
    n??:? __libc_start_main [0x624ac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeqo208l7.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpeqo208l7.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpeqo208l7.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xe26f0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    long sum = 0;\n    long count\
    \ = 0;\n    for (long i = 2; i <= n; i += 2) {\n        sum += i;\n        count++;\n\
    \        if (sum == n) return true;\n        if (sum > n) {\n            sum -=\
    \ i;\n            count--;\n            break;\n        }\n    }\n    if (count\
    \ == 1) return false;\n    for (long i = 2; i <= n; i += 2) {\n        if (sum\
    \ + i == n) return true;\n        if (sum + i > n) return false;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjp2e2vxw.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e75]\\n??:? void tmpjp2e2vxw.__unittest_L33_C1()\
    \ [0x427b25]\\n??:? void tmpjp2e2vxw.__modtest() [0x427bf4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa05]\\n??:? runModuleUnitTests [0x42b971]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42824b]\\n??:? _d_run_main [0x4281b6]\\n??:? main [0x427c07]\\\
    n??:? __libc_start_main [0xd43cc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    int count = 0;\n    int sum = 0;\n   \
    \ for (int i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        count++;\n\
    \        if (sum == n)\n        {\n            result = true;\n            break;\n\
    \        }\n        if (sum > n)\n        {\n            break;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppbs317bj.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ded]\\n??:? void tmppbs317bj.__unittest_L32_C1()\
    \ [0x427aa1]\\n??:? void tmppbs317bj.__modtest() [0x427b70]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a97d]\\n??:? runModuleUnitTests [0x42b8e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42823c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281c3]\\n??:? _d_run_main [0x42812e]\\n??:? main [0x427b83]\\\
    n??:? __libc_start_main [0xe8a1e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n\
    \    is_equal_to_sum_even(8) == True\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n-2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpskh3jq4t.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpskh3jq4t.__unittest_L19_C1()\
    \ [0x427a62]\\n??:? void tmpskh3jq4t.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x1503d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

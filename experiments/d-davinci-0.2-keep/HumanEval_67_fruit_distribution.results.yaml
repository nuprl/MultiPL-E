name: HumanEval_67_fruit_distribution
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = split(s,\" \");\n    auto apples = to!long(result[0]);\n    auto oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ww05ltg.d(19): Error: undefined identifier `split`\\n/tmp/tmp7ww05ltg.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp7ww05ltg.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp7ww05ltg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = s.split(\" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[3]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmc6jxxs2.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpmc6jxxs2.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpmc6jxxs2.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmc6jxxs2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    auto apples = to!long(res[0]);\n    auto oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqh8ftp6z.d(19): Error: undefined identifier `split`\\n/tmp/tmpqh8ftp6z.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpqh8ftp6z.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpqh8ftp6z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcz2bla5a.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpcz2bla5a.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcz2bla5a.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcz2bla5a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = s.split(\" and \").map!(a => a.split(\" \")[0].to!long).tupleof;\n    return\
    \ n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n  \
    \  assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6wvni2j3.d(19): Error: basic type expected, not `[`\\n/tmp/tmp6wvni2j3.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp6wvni2j3.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp6wvni2j3.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wvni2j3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long num_apples = to!long(a[0]);\n    long num_oranges\
    \ = to!long(a[3]);\n    return n - num_apples - num_oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4vhxeft.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpa4vhxeft.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpa4vhxeft.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa4vhxeft.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,o]\
    \ = tuple(map!(to!long)(split(s,\" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt9pp2hth.d(19): Error: basic type expected, not `[`\\n/tmp/tmpt9pp2hth.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpt9pp2hth.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpt9pp2hth.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt9pp2hth.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmzit1yrv.d(19): Error: undefined identifier `split`\\n/tmp/tmpmzit1yrv.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpmzit1yrv.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpmzit1yrv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto a = split(s, \" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_68sg98q.d(20): Error: undefined identifier `split`\\n/tmp/tmp_68sg98q.d(21):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp_68sg98q.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp_68sg98q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc6zq2be7.d(19): Error: basic type expected, not `[`\\n/tmp/tmpc6zq2be7.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpc6zq2be7.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpc6zq2be7.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc6zq2be7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    return n - to!long(x[0]) - to!long(x[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpknrnvb8b.d(19): Error: undefined identifier `split`\\n/tmp/tmpknrnvb8b.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpknrnvb8b.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpknrnvb8b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ t = split(s, \" \");\n    long a = to!long(t[0]);\n    long o = to!long(t[2]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7odfwy72.d(19): Error: undefined identifier `split`\\n/tmp/tmp7odfwy72.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ t?\\n/tmp/tmp7odfwy72.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean t?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7odfwy72.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    string[] words\
    \ = split(s);\n    foreach(string word; words)\n    {\n        if(word == \"apples\"\
    )\n        {\n            apples = to!long(words[0]);\n        }\n        else\
    \ if(word == \"oranges\")\n        {\n            oranges = to!long(words[2]);\n\
    \        }\n    }\n    mangoes = n - apples - oranges;\n    return mangoes;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxtf7w1nw.d(22): Error: undefined identifier `split`\\n/tmp/tmpxtf7w1nw.d(27):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpxtf7w1nw.d(31): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpxtf7w1nw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    foreach(i; 0\
    \ .. s.length)\n    {\n        if(s[i] == 'a')\n        {\n            apples\
    \ = apples * 10 + (s[i+1] - '0');\n        }\n        if(s[i] == 'o')\n      \
    \  {\n            oranges = oranges * 10 + (s[i+1] - '0');\n        }\n    }\n\
    \    mangoes = n - apples - oranges;\n    return mangoes;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbf0rra_y.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f25]\\n??:? void tmpbf0rra_y.__unittest_L36_C1()\
    \ [0x427b80]\\n??:? void tmpbf0rra_y.__modtest() [0x427ca4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bcbf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab52]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fce5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430194]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc71]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab29]\\n??:? runModuleUnitTests [0x42ba95]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42836f]\\n??:? _d_run_main [0x4282da]\\n??:? main [0x427cb7]\\\
    n??:? __libc_start_main [0x2c796554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s);\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[2]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcio43bp_.d(19): Error: undefined identifier `split`\\n/tmp/tmpcio43bp_.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpcio43bp_.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcio43bp_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apple = to!long(fruit[0]);\n    long orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpotch_r90.d(19): Error: undefined identifier `split`\\n/tmp/tmpotch_r90.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpotch_r90.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpotch_r90.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    return n - to!long(x[0]) - to!long(x[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphwi2m702.d(19): Error: undefined identifier `split`\\n/tmp/tmphwi2m702.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmphwi2m702.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmphwi2m702.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[apples,\
    \ oranges] = tuple(map!(to!long)(split(s, \" \")));\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpixp60o_a.d(19): Error: basic type expected, not `[`\\n/tmp/tmpixp60o_a.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpixp60o_a.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpixp60o_a.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixp60o_a.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    foreach(c; s)\n    {\n        if(c ==\
    \ 'a')\n        {\n            apples++;\n        }\n        else if(c == 'o')\n\
    \        {\n            oranges++;\n        }\n    }\n    return n - apples -\
    \ oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfal97o6j.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmpfal97o6j.__unittest_L34_C1()\
    \ [0x427ac4]\\n??:? void tmpfal97o6j.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0x32db8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    int apples\
    \ = 0;\n    int oranges = 0;\n    int i = 0;\n    while(s[i] != ' ')\n    {\n\
    \        apples = apples * 10 + s[i] - '0';\n        i++;\n    }\n    i += 6;\n\
    \    while(s[i] != ' ')\n    {\n        oranges = oranges * 10 + s[i] - '0';\n\
    \        i++;\n    }\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeca8umhf.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f0d]\\n??:? void tmpeca8umhf.__unittest_L35_C1()\
    \ [0x427b6c]\\n??:? void tmpeca8umhf.__modtest() [0x427c90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bca7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab3a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fccd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab11]\\n??:? runModuleUnitTests [0x42ba7d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283d0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428357]\\n??:? _d_run_main [0x4282c2]\\n??:? main [0x427ca3]\\\
    n??:? __libc_start_main [0xc474554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    string[] splitted\
    \ = split(s, \" \");\n    apples = to!long(splitted[0]);\n    oranges = to!long(splitted[2]);\n\
    \    mangoes = n - apples - oranges;\n    return mangoes;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpen4_7uet.d(22): Error: undefined identifier `split`\\n/tmp/tmpen4_7uet.d(23):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpen4_7uet.d(24): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpen4_7uet.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4x67kif5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp4x67kif5.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4x67kif5.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4x67kif5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" \").map!(to!long));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnaqibew6.d(19): Error: basic type expected, not `[`\\n/tmp/tmpnaqibew6.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpnaqibew6.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpnaqibew6.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnaqibew6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,o]\
    \ = tuple(map!(to!long)(split(s,\" and \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjgefr3ub.d(19): Error: basic type expected, not `[`\\n/tmp/tmpjgefr3ub.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpjgefr3ub.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpjgefr3ub.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjgefr3ub.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" \").filter!(a => a.length).map!(a => to!long(a)).array);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5f38a4u1.d(19): Error: basic type expected, not `[`\\n/tmp/tmp5f38a4u1.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp5f38a4u1.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp5f38a4u1.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5f38a4u1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb1abr8bv.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpb1abr8bv.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpb1abr8bv.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1abr8bv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy8mm7ea1.d(19): Error: basic type expected, not `[`\\n/tmp/tmpy8mm7ea1.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpy8mm7ea1.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpy8mm7ea1.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8mm7ea1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    auto b = a[0].to!long;\n    auto c = a[2].to!long;\n\
    \    return n - b - c;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6756qu7u.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6756qu7u.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ temp = split(s, \" \");\n    long apples = to!long(temp[0]);\n    long oranges\
    \ = to!long(temp[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq6hhpd5y.d(19): Error: undefined identifier `split`\\n/tmp/tmpq6hhpd5y.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpq6hhpd5y.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpq6hhpd5y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnnl21t1l.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpnnl21t1l.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpnnl21t1l.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnnl21t1l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long a = to!long(fruit[0]);\n    long o = to!long(fruit[2]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphn3o55p_.d(19): Error: undefined identifier `split`\\n/tmp/tmphn3o55p_.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmphn3o55p_.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmphn3o55p_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long num_apples = to!long(fruit[0]);\n    long\
    \ num_oranges = to!long(fruit[2]);\n    return n - num_apples - num_oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjnj66h3f.d(19): Error: undefined identifier `split`\\n/tmp/tmpjnj66h3f.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpjnj66h3f.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpjnj66h3f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjgrdqbec.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjgrdqbec.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjgrdqbec.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjgrdqbec.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    auto y = to!long(x[0]);\n    auto z = to!long(x[2]);\n\
    \    return n - y - z;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprrcpgm9u.d(19): Error: undefined identifier `split`\\n/tmp/tmprrcpgm9u.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmprrcpgm9u.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprrcpgm9u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mango = 0;\n    string[] arr =\
    \ split(s, \" \");\n    apples = to!long(arr[0]);\n    oranges = to!long(arr[2]);\n\
    \    mango = n - apples - oranges;\n    return mango;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5q825q3o.d(22): Error: undefined identifier `split`\\n/tmp/tmp5q825q3o.d(23):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp5q825q3o.d(24): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp5q825q3o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8ohrdqt.d(19): Error: undefined identifier `split`\\n/tmp/tmpf8ohrdqt.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpf8ohrdqt.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpf8ohrdqt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = split(s);\n    return n - to!long(a) - to!long(o);\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv10smdtu.d(19): Error: basic type expected, not `[`\\n/tmp/tmpv10smdtu.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpv10smdtu.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpv10smdtu.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv10smdtu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    auto apples = to!long(fruit[0]);\n    auto oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoees1gpn.d(19): Error: undefined identifier `split`\\n/tmp/tmpoees1gpn.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpoees1gpn.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpoees1gpn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ splitted = split(s, \" \");\n    auto apples = to!long(splitted[0]);\n    auto\
    \ oranges = to!long(splitted[2]);\n    return n - apples - oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9qp89esd.d(19): Error: undefined identifier `split`\\n/tmp/tmp9qp89esd.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp9qp89esd.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp9qp89esd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    long a = to!long(x[0]);\n    long o = to!long(x[2]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprjkjq253.d(19): Error: undefined identifier `split`\\n/tmp/tmprjkjq253.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmprjkjq253.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprjkjq253.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz9_o4nxc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpz9_o4nxc.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpz9_o4nxc.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9_o4nxc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph9aka_x9.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmph9aka_x9.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmph9aka_x9.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9aka_x9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg8_ftygc.d(19): Error: undefined identifier `split`\\n/tmp/tmpg8_ftygc.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpg8_ftygc.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpg8_ftygc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long num_apples = to!long(a[0]);\n    long num_oranges\
    \ = to!long(a[3]);\n    return n - num_apples - num_oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvvl8vvkc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvvl8vvkc.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvvl8vvkc.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvvl8vvkc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpifol8ctd.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpifol8ctd.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpifol8ctd.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifol8ctd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    return n - to!long(x[0]) - to!long(x[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmparao3t55.d(19): Error: undefined identifier `split`\\n/tmp/tmparao3t55.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmparao3t55.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmparao3t55.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb9cjg3ym.d(19): Error: basic type expected, not `[`\\n/tmp/tmpb9cjg3ym.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpb9cjg3ym.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpb9cjg3ym.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9cjg3ym.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = split(s);\n    long apples = to!long(arr[0]);\n    long oranges = to!long(arr[2]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8chc781s.d(19): Error: undefined identifier `split`\\n/tmp/tmp8chc781s.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp8chc781s.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp8chc781s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" \");\n    long num_apples = to!long(a[0]);\n    long num_oranges\
    \ = to!long(a[3]);\n    return n - num_apples - num_oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdwu5iqaq.d(19): Error: undefined identifier `split`\\n/tmp/tmpdwu5iqaq.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpdwu5iqaq.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdwu5iqaq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2_m7nuy.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpu2_m7nuy.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpu2_m7nuy.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2_m7nuy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = s.split(\" \");\n    long apple = to!long(fruit[0]);\n    long orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3iz8jj4m.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp3iz8jj4m.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3iz8jj4m.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3iz8jj4m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_9mnk2z.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpg_9mnk2z.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpg_9mnk2z.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_9mnk2z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    foreach(i; 0 .. s.length)\n    {\n \
    \       if(s[i] == 'a')\n        {\n            apples = apples * 10 + s[i + 1]\
    \ - '0';\n        }\n        else if(s[i] == 'o')\n        {\n            oranges\
    \ = oranges * 10 + s[i + 1] - '0';\n        }\n    }\n    return n - apples -\
    \ oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz235d6k0.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f0d]\\n??:? void tmpz235d6k0.__unittest_L34_C1()\
    \ [0x427b6c]\\n??:? void tmpz235d6k0.__modtest() [0x427c90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bca7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab3a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fccd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab11]\\n??:? runModuleUnitTests [0x42ba7d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283d0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428357]\\n??:? _d_run_main [0x4282c2]\\n??:? main [0x427ca3]\\\
    n??:? __libc_start_main [0xe1a02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto fruit = split(s, \" \");\n    auto apple = to!long(fruit[0]);\n\
    \    auto orange = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaqui_txb.d(20): Error: undefined identifier `split`\\n/tmp/tmpaqui_txb.d(21):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpaqui_txb.d(22): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpaqui_txb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = s.split(\" \");\n    long apple = to!long(res[0]);\n    long orange =\
    \ to!long(res[3]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp30o92btr.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp30o92btr.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp30o92btr.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp30o92btr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ij3_8eq.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp3ij3_8eq.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3ij3_8eq.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ij3_8eq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpquzvaqbw.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpquzvaqbw.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpquzvaqbw.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpquzvaqbw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0, oranges = 0;\n    foreach(inout c; s)\n    {\n        if(c == 'a')\n\
    \        {\n            apples = apples * 10 + 1;\n        }\n        else if(c\
    \ == 'o')\n        {\n            oranges = oranges * 10 + 1;\n        }\n   \
    \ }\n    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5iswnnvw.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e85]\\n??:? void tmp5iswnnvw.__unittest_L33_C1()\
    \ [0x427ae0]\\n??:? void tmp5iswnnvw.__modtest() [0x427c04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa3e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa15]\\n??:? runModuleUnitTests [0x42b981]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42825b]\\n??:? _d_run_main [0x4281c6]\\n??:? main [0x427c17]\\\
    n??:? __libc_start_main [0x726554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjikklrb9.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjikklrb9.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjikklrb9.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjikklrb9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s,\" \");\n    auto b = to!long(a[0]);\n    auto c = to!long(a[2]);\n\
    \    return n - b - c;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp770idvvu.d(19): Error: undefined identifier `split`\\n/tmp/tmp770idvvu.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp770idvvu.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp770idvvu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0, oranges = 0;\n    foreach(immutable c; s)\n    {\n        if(c ==\
    \ 'a')\n            apples++;\n        else if(c == 'o')\n            oranges++;\n\
    \    }\n    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate\
    \ = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L)\
    \ == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n  \
    \  assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnunrbfmo.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmpnunrbfmo.__unittest_L29_C1()\
    \ [0x427ac4]\\n??:? void tmpnunrbfmo.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0x442c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    auto apple = to!long(fruit[0]);\n    auto orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnx6s986y.d(19): Error: undefined identifier `split`\\n/tmp/tmpnx6s986y.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpnx6s986y.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpnx6s986y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [a, o] = tuple(split(s, \" and \").map!(a => to!long(a.split(\" \")[0])));\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5vbt3i9c.d(19): Error: basic type expected, not `[`\\n/tmp/tmp5vbt3i9c.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp5vbt3i9c.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp5vbt3i9c.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5vbt3i9c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = s.split(\" and \").map!(a => a.split(\" \")[0].to!long).tupleof;\n    return\
    \ n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n  \
    \  assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4vf794mf.d(19): Error: basic type expected, not `[`\\n/tmp/tmp4vf794mf.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp4vf794mf.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp4vf794mf.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4vf794mf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    foreach(immutable c; s)\n    {\n   \
    \     if(c == 'a')\n        {\n            apples++;\n        }\n        else\
    \ if(c == 'o')\n        {\n            oranges++;\n        }\n    }\n    return\
    \ n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplbd17wbh.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmplbd17wbh.__unittest_L34_C1()\
    \ [0x427ac4]\\n??:? void tmplbd17wbh.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0x1736554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit_count = split(s, \" \");\n    return n - to!long(fruit_count[0]) - to!long(fruit_count[2]);\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqnl_t7q3.d(19): Error: undefined identifier `split`\\n/tmp/tmpqnl_t7q3.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpqnl_t7q3.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpqnl_t7q3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp311ehxmo.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp311ehxmo.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp311ehxmo.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp311ehxmo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    auto a = s.split(\" \");\n    apples\
    \ = to!long(a[0]);\n    oranges = to!long(a[2]);\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpng2d5k6q.d(21): Error: no property `split` for type `string`\\\
    n/tmp/tmpng2d5k6q.d(22): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpng2d5k6q.d(23): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpng2d5k6q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = split(s, \" \");\n    long apples = to!long(result[0]);\n    long oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplclp8qb2.d(19): Error: undefined identifier `split`\\n/tmp/tmplclp8qb2.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmplclp8qb2.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmplclp8qb2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsfnkz25l.d(19): Error: undefined identifier `split`\\n/tmp/tmpsfnkz25l.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpsfnkz25l.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpsfnkz25l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    return\
    \ n - to!long(s.split(\" \")[0]) - to!long(s.split(\" \")[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeqd8aept.d(19): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\n/tmp/tmpeqd8aept.d(19): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeqd8aept.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqx97upq5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpqx97upq5.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpqx97upq5.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqx97upq5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphlbob381.d(19): Error: undefined identifier `split`\\n/tmp/tmphlbob381.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmphlbob381.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmphlbob381.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = s.split(\" \");\n    long a = to!long(result[0]);\n    long o = to!long(result[3]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwsfhonvj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpwsfhonvj.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpwsfhonvj.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwsfhonvj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfof5398t.d(19): Error: undefined identifier `split`\\n/tmp/tmpfof5398t.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpfof5398t.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpfof5398t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = s.split(\" \");\n    return n - to!long(x[0]) - to!long(x[2]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg5axjwoy.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpg5axjwoy.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpg5axjwoy.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5axjwoy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    long num_apples = to!long(res[0]);\n    long num_oranges\
    \ = to!long(res[2]);\n    return n - num_apples - num_oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2tj9al36.d(19): Error: undefined identifier `split`\\n/tmp/tmp2tj9al36.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp2tj9al36.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp2tj9al36.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    string[] words = split(s, \" \");\n\
    \    apples = to!long(words[0]);\n    oranges = to!long(words[2]);\n    return\
    \ n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpakjdsliu.d(21): Error: undefined identifier `split`\\n/tmp/tmpakjdsliu.d(22):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpakjdsliu.d(23): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpakjdsliu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit_count = s.split(\" \");\n    auto apples = to!long(fruit_count[0]);\n\
    \    auto oranges = to!long(fruit_count[2]);\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd0y8j77q.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpd0y8j77q.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpd0y8j77q.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0y8j77q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcg6pvznt.d(19): Error: undefined identifier `split`\\n/tmp/tmpcg6pvznt.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpcg6pvznt.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcg6pvznt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    auto b = a[0].to!long;\n    auto c = a[2].to!long;\n\
    \    return n - b - c;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9_0q08j7.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9_0q08j7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ parts = split(s, \" \");\n    long apples = to!long(parts[0]);\n    long oranges\
    \ = to!long(parts[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm5iqa8tz.d(19): Error: undefined identifier `split`\\n/tmp/tmpm5iqa8tz.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpm5iqa8tz.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpm5iqa8tz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    auto apple = to!long(fruit[0]);\n    auto orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppa8ke_l8.d(19): Error: undefined identifier `split`\\n/tmp/tmppa8ke_l8.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmppa8ke_l8.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmppa8ke_l8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp250xn8l5.d(19): Error: basic type expected, not `[`\\n/tmp/tmp250xn8l5.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp250xn8l5.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp250xn8l5.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp250xn8l5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmf3wuco.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpbmf3wuco.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpbmf3wuco.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmf3wuco.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[2]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt9432jy_.d(19): Error: undefined identifier `split`\\n/tmp/tmpt9432jy_.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpt9432jy_.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpt9432jy_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_tx0d8x1.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp_tx0d8x1.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp_tx0d8x1.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_tx0d8x1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ words = split(s);\n    long apples = to!long(words[0]);\n    long oranges =\
    \ to!long(words[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpveyv2hkq.d(19): Error: undefined identifier `split`\\n/tmp/tmpveyv2hkq.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpveyv2hkq.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpveyv2hkq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_6pzeome.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp_6pzeome.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp_6pzeome.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6pzeome.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4b90lkkd.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp4b90lkkd.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4b90lkkd.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4b90lkkd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    int a = 0, o = 0;\n    foreach(immutable c; s)\n    {\n     \
    \   if(c == 'a')\n            a++;\n        else if(c == 'o')\n            o++;\n\
    \    }\n    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbiqr21xn.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmpbiqr21xn.__unittest_L30_C1()\
    \ [0x427ac4]\\n??:? void tmpbiqr21xn.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0x97ac7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = s.split(\" \");\n    auto apples = to!long(result[0]);\n    auto oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpryy5in9i.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpryy5in9i.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpryy5in9i.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpryy5in9i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    auto apples = to!long(fruits[0]);\n    auto oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3t66imet.d(19): Error: undefined identifier `split`\\n/tmp/tmp3t66imet.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp3t66imet.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp3t66imet.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprpwzndtt.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprpwzndtt.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmprpwzndtt.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprpwzndtt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxghbkrrz.d(19): Error: basic type expected, not `[`\\n/tmp/tmpxghbkrrz.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpxghbkrrz.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpxghbkrrz.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxghbkrrz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [apples, oranges] = tuple(s.split(\" and \").map!(a => a.split(\" \")[0].to!long).array);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn37q2x8g.d(19): Error: basic type expected, not `[`\\n/tmp/tmpn37q2x8g.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpn37q2x8g.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpn37q2x8g.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn37q2x8g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_8kgpt30.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp_8kgpt30.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp_8kgpt30.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8kgpt30.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_hgtp36g.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp_hgtp36g.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp_hgtp36g.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_hgtp36g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[2]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc6gvh_po.d(19): Error: undefined identifier `split`\\n/tmp/tmpc6gvh_po.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpc6gvh_po.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpc6gvh_po.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" and \");\n    auto b = split(a[0], \" \");\n    auto c = split(a[1],\
    \ \" \");\n    return n - to!long(b[0]) - to!long(c[0]);\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpphk1ccu2.d(19): Error: undefined identifier `split`\\n/tmp/tmpphk1ccu2.d(20):\
    \ Error: undefined identifier `split`\\n/tmp/tmpphk1ccu2.d(21): Error: undefined\
    \ identifier `split`\\n/tmp/tmpphk1ccu2.d(22): Error: template instance `to!long`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpphk1ccu2.d(22): Error:\
    \ template instance `to!long` template `to` is not defined, did you mean No?\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpphk1ccu2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbbaawklc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpbbaawklc.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpbbaawklc.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbbaawklc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpke736k2y.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpke736k2y.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpke736k2y.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpke736k2y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = s.split(\" \");\n    auto apple = to!long(fruit[0]);\n    auto orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7h21u7w.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmps7h21u7w.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmps7h21u7w.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7h21u7w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [apples, oranges] = split(s, \" and \");\n    apples = apples.strip().split()[0].to!long();\n\
    \    oranges = oranges.strip().split()[0].to!long();\n    return n - apples -\
    \ oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxx0lhjb7.d(19): Error: basic type expected, not `[`\\n/tmp/tmpxx0lhjb7.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpxx0lhjb7.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpxx0lhjb7.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxx0lhjb7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto result = split(s, \" \");\n    long apples = to!long(result[0]);\n\
    \    long oranges = to!long(result[2]);\n    return n - apples - oranges;\n}\n\
    unittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4n_7s7ct.d(20): Error: undefined identifier `split`\\n/tmp/tmp4n_7s7ct.d(21):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp4n_7s7ct.d(22): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp4n_7s7ct.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [a, o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\n\
    unittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptnal1dwc.d(19): Error: basic type expected, not `[`\\n/tmp/tmptnal1dwc.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmptnal1dwc.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmptnal1dwc.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnal1dwc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp32zpkygr.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp32zpkygr.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp32zpkygr.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp32zpkygr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8toy1k3.d(19): Error: undefined identifier `split`\\n/tmp/tmpf8toy1k3.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpf8toy1k3.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpf8toy1k3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = split(s, \" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp95uodqdm.d(19): Error: undefined identifier `split`\\n/tmp/tmp95uodqdm.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp95uodqdm.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp95uodqdm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [a, o] = tuple(s.split(\" \").map!(to!long).array);\n    return n - a - o;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7y1aie_9.d(19): Error: basic type expected, not `[`\\n/tmp/tmp7y1aie_9.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp7y1aie_9.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp7y1aie_9.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7y1aie_9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto a = split(s, \" \");\n    return n - to!long(a[0]) - to!long(a[2]);\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmzsqe4a7.d(20): Error: undefined identifier `split`\\n/tmp/tmpmzsqe4a7.d(21):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpmzsqe4a7.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpmzsqe4a7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzoz0g53f.d(19): Error: undefined identifier `split`\\n/tmp/tmpzoz0g53f.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpzoz0g53f.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpzoz0g53f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = split(s, \" \");\n    auto apples = to!long(arr[0]);\n    auto oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6s7pixvi.d(19): Error: undefined identifier `split`\\n/tmp/tmp6s7pixvi.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp6s7pixvi.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp6s7pixvi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    long a = to!long(x[0]);\n    long o = to!long(x[2]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgfa7mqi7.d(19): Error: undefined identifier `split`\\n/tmp/tmpgfa7mqi7.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpgfa7mqi7.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpgfa7mqi7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = s.split(\" \").map!(to!long).array;\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3g_h2hjf.d(19): Error: basic type expected, not `[`\\n/tmp/tmp3g_h2hjf.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp3g_h2hjf.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp3g_h2hjf.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3g_h2hjf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw1930i5q.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpw1930i5q.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpw1930i5q.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw1930i5q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s);\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[2]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5drqy_mn.d(19): Error: undefined identifier `split`\\n/tmp/tmp5drqy_mn.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp5drqy_mn.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp5drqy_mn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apples = to!long(fruit[0]);\n    long oranges\
    \ = to!long(fruit[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpey2o8e2j.d(19): Error: undefined identifier `split`\\n/tmp/tmpey2o8e2j.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpey2o8e2j.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpey2o8e2j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = s.split(\" \");\n    long apple = to!long(fruit[0]);\n    long orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_e6640l.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp4_e6640l.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4_e6640l.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4_e6640l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2duo03gb.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp2duo03gb.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp2duo03gb.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2duo03gb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpviaszt7r.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpviaszt7r.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpviaszt7r.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpviaszt7r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ parts = split(s, \" \");\n    long apples = to!long(parts[0]);\n    long oranges\
    \ = to!long(parts[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n   \
    \ alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl195kz2j.d(19): Error: undefined identifier `split`\\n/tmp/tmpl195kz2j.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpl195kz2j.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpl195kz2j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4por1j7f.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp4por1j7f.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4por1j7f.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4por1j7f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz5_c7wap.d(19): Error: undefined identifier `split`\\n/tmp/tmpz5_c7wap.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpz5_c7wap.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpz5_c7wap.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mango = 0;\n    string[] words\
    \ = split(s, \" \");\n    apples = to!long(words[0]);\n    oranges = to!long(words[2]);\n\
    \    mango = n - apples - oranges;\n    return mango;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprlakp1zl.d(22): Error: undefined identifier `split`\\n/tmp/tmprlakp1zl.d(23):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmprlakp1zl.d(24): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprlakp1zl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = to!long(s.split(\" \")[0]);\n    long oranges = to!long(s.split(\"\
    \ \")[3]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate\
    \ = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L)\
    \ == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n  \
    \  assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuk9yk7on.d(19): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\n/tmp/tmpuk9yk7on.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk9yk7on.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    auto num_apples = to!long(fruit[0]);\n    auto\
    \ num_oranges = to!long(fruit[2]);\n    return n - num_apples - num_oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpou8rtbpk.d(19): Error: undefined identifier `split`\\n/tmp/tmpou8rtbpk.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpou8rtbpk.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpou8rtbpk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" and \").map!(to!long).array);\n    return n - a - o;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg62kenkm.d(19): Error: basic type expected, not `[`\\n/tmp/tmpg62kenkm.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpg62kenkm.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpg62kenkm.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg62kenkm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" \").map!(to!long));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9y8sb0r_.d(19): Error: basic type expected, not `[`\\n/tmp/tmp9y8sb0r_.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp9y8sb0r_.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp9y8sb0r_.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9y8sb0r_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpteu4a3_o.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpteu4a3_o.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpteu4a3_o.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpteu4a3_o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzw38te12.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpzw38te12.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpzw38te12.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzw38te12.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[2]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxnyvj0hl.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpxnyvj0hl.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpxnyvj0hl.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxnyvj0hl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    auto b = a[0].to!long;\n    auto c = a[2].to!long;\n\
    \    return n - b - c;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9fauj11d.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9fauj11d.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtring7_.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprtring7_.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmprtring7_.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprtring7_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpus63pn2z.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpus63pn2z.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpus63pn2z.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpus63pn2z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoflicmqc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpoflicmqc.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpoflicmqc.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoflicmqc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpltulbflu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpltulbflu.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpltulbflu.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltulbflu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit_count = s.split(\" \");\n    long apples = to!long(fruit_count[0]);\n\
    \    long oranges = to!long(fruit_count[2]);\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp481_h26f.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp481_h26f.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp481_h26f.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp481_h26f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = split(s, \" \");\n    long apples = to!long(result[0]);\n    long oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf1jdiysi.d(19): Error: undefined identifier `split`\\n/tmp/tmpf1jdiysi.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpf1jdiysi.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpf1jdiysi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = split(s, \" \");\n    auto num_apples = to!long(a[0]);\n    auto num_oranges\
    \ = to!long(a[3]);\n    return n - num_apples - num_oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfqru7x9b.d(19): Error: undefined identifier `split`\\n/tmp/tmpfqru7x9b.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpfqru7x9b.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpfqru7x9b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpepakec.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjpepakec.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjpepakec.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpepakec.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[2]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8bn3ocex.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp8bn3ocex.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp8bn3ocex.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8bn3ocex.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo_2z4oqd.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpo_2z4oqd.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpo_2z4oqd.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo_2z4oqd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpc7x3rd.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvpc7x3rd.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvpc7x3rd.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpc7x3rd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    auto a = to!long(arr[0]);\n    auto o = to!long(arr[2]);\n\
    \    return n - a - o;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzmqgclwc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpzmqgclwc.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpzmqgclwc.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmqgclwc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn13r6yu7.d(19): Error: basic type expected, not `[`\\n/tmp/tmpn13r6yu7.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpn13r6yu7.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpn13r6yu7.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn13r6yu7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzxv5ex1y.d(19): Error: undefined identifier `split`\\n/tmp/tmpzxv5ex1y.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpzxv5ex1y.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpzxv5ex1y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsmxufuck.d(19): Error: undefined identifier `split`\\n/tmp/tmpsmxufuck.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpsmxufuck.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpsmxufuck.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ words = split(s);\n    long num_apples = to!long(words[0]);\n    long num_oranges\
    \ = to!long(words[2]);\n    return n - num_apples - num_oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5p_my41g.d(19): Error: undefined identifier `split`\\n/tmp/tmp5p_my41g.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp5p_my41g.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp5p_my41g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,o]\
    \ = split(s,\" and \");\n    a = split(a,\" \")[0];\n    o = split(o,\" \")[0];\n\
    \    return n - to!long(a) - to!long(o);\n}\nunittest\n{\n    alias candidate\
    \ = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L)\
    \ == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n  \
    \  assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8ys7pm3s.d(19): Error: basic type expected, not `[`\\n/tmp/tmp8ys7pm3s.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp8ys7pm3s.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp8ys7pm3s.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ys7pm3s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    auto apple = to!long(fruit[0]);\n    auto orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxb020p1x.d(19): Error: undefined identifier `split`\\n/tmp/tmpxb020p1x.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpxb020p1x.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpxb020p1x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(map!(to!long)(split(s, \" \")));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl5cws_l4.d(19): Error: basic type expected, not `[`\\n/tmp/tmpl5cws_l4.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpl5cws_l4.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpl5cws_l4.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5cws_l4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplih8ojnl.d(19): Error: undefined identifier `split`\\n/tmp/tmplih8ojnl.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmplih8ojnl.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmplih8ojnl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdqciapc_.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpdqciapc_.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpdqciapc_.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdqciapc_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s,\" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdz_dml3n.d(19): Error: undefined identifier `split`\\n/tmp/tmpdz_dml3n.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpdz_dml3n.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdz_dml3n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    return n - to!long(a[0]) - to!long(a[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpae1d7ge6.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpae1d7ge6.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpae1d7ge6.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpae1d7ge6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpndm5bw1w.d(19): Error: undefined identifier `split`\\n/tmp/tmpndm5bw1w.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpndm5bw1w.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpndm5bw1w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ parts = split(s, \" and \");\n    long apples = to!long(parts[0]);\n    long\
    \ oranges = to!long(parts[1]);\n    return n - apples - oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp48wjh677.d(19): Error: undefined identifier `split`\\n/tmp/tmp48wjh677.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp48wjh677.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp48wjh677.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    auto b = a[0].to!long;\n    auto c = a[2].to!long;\n\
    \    return n - b - c;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3odlivnw.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3odlivnw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9zo9hdd5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp9zo9hdd5.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp9zo9hdd5.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zo9hdd5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ t = split(s, \" \");\n    return n - to!long(t[0]) - to!long(t[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfqxvsuhs.d(19): Error: undefined identifier `split`\\n/tmp/tmpfqxvsuhs.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ t?\\n/tmp/tmpfqxvsuhs.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean t?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpfqxvsuhs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfw2qmqov.d(19): Error: undefined identifier `split`\\n/tmp/tmpfw2qmqov.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpfw2qmqov.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpfw2qmqov.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoh5fym4g.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpoh5fym4g.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpoh5fym4g.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh5fym4g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = to!long(s.split(\" \")[0]);\n    long oranges = to!long(s.split(\"\
    \ \")[3]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate\
    \ = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L)\
    \ == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n  \
    \  assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptv79vhlt.d(19): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\n/tmp/tmptv79vhlt.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptv79vhlt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit_count = s.split(\" \");\n    auto apples = to!long(fruit_count[0]);\n\
    \    auto oranges = to!long(fruit_count[2]);\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5f1j7sxq.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp5f1j7sxq.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp5f1j7sxq.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5f1j7sxq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit = split(s, \" \");\n    long apple = to!long(fruit[0]);\n    long orange\
    \ = to!long(fruit[2]);\n    return n - apple - orange;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyhwzz263.d(19): Error: undefined identifier `split`\\n/tmp/tmpyhwzz263.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpyhwzz263.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpyhwzz263.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ parts = split(s, \" \");\n    return n - to!long(parts[0]) - to!long(parts[3]);\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7qdp1vwl.d(19): Error: undefined identifier `split`\\n/tmp/tmp7qdp1vwl.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp7qdp1vwl.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp7qdp1vwl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    string[] words = split(s);\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"apples\")\n        {\n           \
    \ apples = to!long(words[0]);\n        }\n        else if(word == \"oranges\"\
    )\n        {\n            oranges = to!long(words[2]);\n        }\n    }\n   \
    \ return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz6kddqad.d(21): Error: undefined identifier `split`\\n/tmp/tmpz6kddqad.d(26):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpz6kddqad.d(30): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpz6kddqad.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,o]\
    \ = s.split(\" and \").map!(to!long).tupleof;\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxyh9vuxq.d(19): Error: basic type expected, not `[`\\n/tmp/tmpxyh9vuxq.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpxyh9vuxq.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpxyh9vuxq.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxyh9vuxq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = split(s, \" \");\n    long apples = to!long(result[0]);\n    long oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2k_sgs14.d(19): Error: undefined identifier `split`\\n/tmp/tmp2k_sgs14.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp2k_sgs14.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp2k_sgs14.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" and \").map!(to!long));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppnrwv0wn.d(19): Error: basic type expected, not `[`\\n/tmp/tmppnrwv0wn.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmppnrwv0wn.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmppnrwv0wn.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppnrwv0wn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long num_apples = to!long(a[0]);\n    long num_oranges\
    \ = to!long(a[3]);\n    return n - num_apples - num_oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoh0szdt0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpoh0szdt0.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpoh0szdt0.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh0szdt0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,\
    \ o] = tuple(s.split(\" \").map!(to!long));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0vae6tj.d(19): Error: basic type expected, not `[`\\n/tmp/tmpg0vae6tj.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmpg0vae6tj.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmpg0vae6tj.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0vae6tj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = to!long(s.split(\" \")[0]);\n    long oranges = to!long(s.split(\"\
    \ \")[3]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate\
    \ = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L)\
    \ == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n  \
    \  assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc0c725a4.d(19): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\n/tmp/tmpc0c725a4.d(20): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0c725a4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = s.split(\" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjve3k731.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjve3k731.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjve3k731.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjve3k731.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp17r9_tz5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp17r9_tz5.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp17r9_tz5.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp17r9_tz5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    long apples = 0;\n    long oranges = 0;\n    string[] words =\
    \ s.split(\" \");\n    foreach(string word; words)\n    {\n        if(word ==\
    \ \"apples\")\n        {\n            apples = to!long(words[words.indexOf(word)\
    \ - 1]);\n        }\n        else if(word == \"oranges\")\n        {\n       \
    \     oranges = to!long(words[words.indexOf(word) - 1]);\n        }\n    }\n \
    \   return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk1uf49gw.d(22): Error: no property `split` for type `string`\\\
    n/tmp/tmpk1uf49gw.d(27): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpk1uf49gw.d(31): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk1uf49gw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = s.split(\" \");\n    long apples = to!long(result[0]);\n    long oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq8cnvi10.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpq8cnvi10.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpq8cnvi10.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8cnvi10.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    string[] words\
    \ = s.split(\" \");\n    foreach(string word; words)\n    {\n        if(word ==\
    \ \"apples\")\n        {\n            apples = to!long(words[words.length - 2]);\n\
    \        }\n        else if(word == \"oranges\")\n        {\n            oranges\
    \ = to!long(words[words.length - 2]);\n        }\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxycpkf6_.d(22): Error: no property `split` for type `string`\\\
    n/tmp/tmpxycpkf6_.d(27): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpxycpkf6_.d(31): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxycpkf6_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [a, o] = tuple(s.split(\" \").map!(to!long));\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5wuzp9lo.d(19): Error: basic type expected, not `[`\\n/tmp/tmp5wuzp9lo.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp5wuzp9lo.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp5wuzp9lo.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5wuzp9lo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    long\
    \ apples = 0;\n    long oranges = 0;\n    string[] words = s.split(\" \");\n \
    \   foreach(string word; words)\n    {\n        if(word == \"apples\")\n     \
    \   {\n            apples = to!long(words[words.indexOf(word) - 1]);\n       \
    \ }\n        else if(word == \"oranges\")\n        {\n            oranges = to!long(words[words.indexOf(word)\
    \ - 1]);\n        }\n    }\n    return n - apples - oranges;\n}\nunittest\n{\n\
    \    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphrunali4.d(21): Error: no property `split` for type `string`\\\
    n/tmp/tmphrunali4.d(26): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmphrunali4.d(30): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphrunali4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = split(s, \" \");\n    return n - to!long(x[0]) - to!long(x[3]);\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprx3x03eh.d(19): Error: undefined identifier `split`\\n/tmp/tmprx3x03eh.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmprx3x03eh.d(20): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprx3x03eh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = split(s, \" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqwgrpy00.d(19): Error: undefined identifier `split`\\n/tmp/tmpqwgrpy00.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpqwgrpy00.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpqwgrpy00.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ temp = s.split(\" \");\n    long apples = to!long(temp[0]);\n    long oranges\
    \ = to!long(temp[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7d9jvri0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp7d9jvri0.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp7d9jvri0.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d9jvri0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv5fp9c9c.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpv5fp9c9c.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpv5fp9c9c.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5fp9c9c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto a = s.split(\" \");\n    long apples = to!long(a[0]);\n\
    \    long oranges = to!long(a[2]);\n    return n - apples - oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5he8euh9.d(20): Error: no property `split` for type `string`\\\
    n/tmp/tmp5he8euh9.d(21): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp5he8euh9.d(22): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5he8euh9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto a = split(s, \" \");\n    long apples = to!long(a[0]);\n\
    \    long oranges = to!long(a[2]);\n    return n - apples - oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoanaav_f.d(20): Error: undefined identifier `split`\\n/tmp/tmpoanaav_f.d(21):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpoanaav_f.d(22): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpoanaav_f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruit_count = split(s, \" \");\n    long apples = to!long(fruit_count[0]);\n\
    \    long oranges = to!long(fruit_count[2]);\n    return n - apples - oranges;\n\
    }\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"\
    5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6\
    \ oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3q530vfr.d(19): Error: undefined identifier `split`\\n/tmp/tmp3q530vfr.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp3q530vfr.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp3q530vfr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ x = s.split(\" \");\n    auto y = x[0].to!long;\n    auto z = x[2].to!long;\n\
    \    return n - y - z;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpzphykc.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpzphykc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ result = split(s, \" \");\n    long apples = to!long(result[0]);\n    long oranges\
    \ = to!long(result[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkg0ucuq8.d(19): Error: undefined identifier `split`\\n/tmp/tmpkg0ucuq8.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpkg0ucuq8.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpkg0ucuq8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    // your\
    \ code here\n    auto a = s.split(\" \");\n    long apples = to!long(a[0]);\n\
    \    long oranges = to!long(a[2]);\n    return n - apples - oranges;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwk58h2ef.d(20): Error: no property `split` for type `string`\\\
    n/tmp/tmpwk58h2ef.d(21): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpwk58h2ef.d(22): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk58h2ef.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ [a, o] = split(s, \" and \");\n    a = split(a, \" \")[0];\n    o = split(o,\
    \ \" \")[0];\n    return n - to!long(a) - to!long(o);\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8czvdp9i.d(19): Error: basic type expected, not `[`\\n/tmp/tmp8czvdp9i.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp8czvdp9i.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp8czvdp9i.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8czvdp9i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ nums = s.split(\" \");\n    auto apples = nums[0].to!long;\n    auto oranges\
    \ = nums[2].to!long;\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp20xsq18e.d(19): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp20xsq18e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto[a,o]\
    \ = tuple(s.split(\" \").map!(to!long).array);\n    return n - a - o;\n}\nunittest\n\
    {\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples\
    \ and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp51t4wt2e.d(19): Error: basic type expected, not `[`\\n/tmp/tmp51t4wt2e.d(19):\
    \ Error: found `,` when expecting `]`\\n/tmp/tmp51t4wt2e.d(19): Error: semicolon\
    \ expected, not `]`\\n/tmp/tmp51t4wt2e.d(19): Error: found `]` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51t4wt2e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = s.split(\" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzyvddz4d.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpzyvddz4d.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpzyvddz4d.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzyvddz4d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ words = split(s);\n    long apples = to!long(words[0]);\n    long oranges =\
    \ to!long(words[3]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpii_w3a93.d(19): Error: undefined identifier `split`\\n/tmp/tmpii_w3a93.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpii_w3a93.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpii_w3a93.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ a = s.split(\" \");\n    long apples = to!long(a[0]);\n    long oranges = to!long(a[3]);\n\
    \    return n - apples - oranges;\n}\nunittest\n{\n    alias candidate = fruit_distribution;\n\
    \n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"\
    5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1\
    \ oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L)\
    \ == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n \
    \   assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"\
    1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcdvaghz0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpcdvaghz0.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcdvaghz0.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcdvaghz0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ res = split(s, \" \");\n    long apples = to!long(res[0]);\n    long oranges\
    \ = to!long(res[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq08d7bj1.d(19): Error: undefined identifier `split`\\n/tmp/tmpq08d7bj1.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpq08d7bj1.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpq08d7bj1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ fruits = split(s, \" \");\n    long apples = to!long(fruits[0]);\n    long oranges\
    \ = to!long(fruits[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n  \
    \  alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and\
    \ 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\",\
    \ 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n\
    \    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and\
    \ 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\"\
    , 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4cfeey7i.d(19): Error: undefined identifier `split`\\n/tmp/tmp4cfeey7i.d(20):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp4cfeey7i.d(21): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp4cfeey7i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    In this task, you will\
    \ be given a string that represents a number of apples and oranges \n    that\
    \ are distributed in a basket of fruit this basket contains \n    apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n  \
    \  the oranges and apples and an integer that represent the total number of the\
    \ fruits \n    in the basket return the number of the mango fruits in the basket.\n\
    \    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19\
    \ - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 -\
    \ 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 -\
    \ 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
    \ - 1 = 19\n    \n*/\nlong fruit_distribution(string s, long n) \n{\n    auto\
    \ arr = s.split(\" \");\n    long apples = to!long(arr[0]);\n    long oranges\
    \ = to!long(arr[2]);\n    return n - apples - oranges;\n}\nunittest\n{\n    alias\
    \ candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\"\
    , 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n\
    \    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"\
    1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\"\
    , 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n\
    \    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstk4qutb.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpstk4qutb.d(20): Error: template instance `to!long` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpstk4qutb.d(21): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstk4qutb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

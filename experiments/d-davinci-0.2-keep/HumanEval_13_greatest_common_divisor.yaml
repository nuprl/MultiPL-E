name: HumanEval_13_greatest_common_divisor
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor\
  \ of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>>\
  \ greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
  \ a, long b) \n"
tests: "unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
  \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
  \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
completions: ["{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0) \n    {\n        return b;\n    }\n    if (b == 0) \n    {\n        return\
    \ a;\n    }\n    if (a == b) \n    {\n        return a;\n    }\n    if (a > b)\
    \ \n    {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 == 0) && (b % 2\
    \ == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a / 2, b);\n\
    \    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}", "{\n    if (a == 0)\n        return b;\n    if (b ==\
    \ 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    else if (b == 0)\n        return a;\n    else\n \
    \       return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n    \
    \    return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1) == 0 && (b\
    \ & 1) == 0)\n        return 2 * greatest_common_divisor(a >> 1, b >> 1);\n  \
    \  if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 == 0) && (b % 2\
    \ == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a / 2, b);\n\
    \    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if\
    \ (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0) {\n        if ((b & 1) ==\
    \ 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else return\
    \ greatest_common_divisor(a >> 1, b);\n    }\n    if ((b & 1) == 0) return greatest_common_divisor(a,\
    \ b >> 1);\n    if (a > b) return greatest_common_divisor((a - b) >> 1, b);\n\
    \    return greatest_common_divisor((b - a) >> 1, a);\n}", "{\n    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1)\
    \ == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return\
    \ a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0)\n        return\
    \ ((b & 1) == 0) ?\n            greatest_common_divisor(a >> 1, b >> 1) << 1 :\n\
    \            greatest_common_divisor(a >> 1, b);\n    else\n        return ((b\
    \ & 1) == 0) ?\n            greatest_common_divisor(a, b >> 1) :\n           \
    \ greatest_common_divisor(b, abs(a - b));\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    else if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0) return b;\n    if\
    \ (b == 0) return a;\n    if (a == b) return a;\n    if (a == 1 || b == 1) return\
    \ 1;\n    if ((a & 1) == 0)\n    {\n        if ((b & 1) == 0)\n            return\
    \ 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else\n            return\
    \ greatest_common_divisor(a >> 1, b);\n    }\n    else if ((b & 1) == 0)\n   \
    \     return greatest_common_divisor(a, b >> 1);\n    else if (a > b)\n      \
    \  return greatest_common_divisor((a - b) >> 1, b);\n    else\n        return\
    \ greatest_common_divisor((b - a) >> 1, a);\n}", "{\n    if (a == 0)\n       \
    \ return b;\n    else if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b,\
    \ a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}", "{\n    if (a == 0)\n        return b;\n    if (b ==\
    \ 0)\n        return a;\n    if (a == b)\n        return a;\n    if (a == 1 ||\
    \ b == 1)\n        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return\
    \ 2 * greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1)\
    \ != 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) !=\
    \ 0 && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n   \
    \ return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a ==\
    \ 0) return b;\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0) {\n  \
    \      if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n\
    \        else return greatest_common_divisor(a >> 1, b);\n    }\n    if ((b &\
    \ 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b) return greatest_common_divisor((a\
    \ - b) >> 1, b);\n    return greatest_common_divisor((b - a) >> 1, a);\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n\
    \ Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n    \n*/\n\
    long least_common_multiple_list(long[] a) \n{\n    long lcm = a[0];\n    foreach\
    \ (i; 1 .. a.length)\n        lcm = least_common_multiple(lcm, a[i]);\n    return\
    \ lcm;\n}\n/*\n Return a greatest common divisor of a list of integers\n    >>>\
    \ greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n    \n*/\nlong greatest_common_divisor_list(long[] a) \n{\n   \
    \ long gcd = a[0];\n    foreach (i; 1 .. a.length)\n        gcd = greatest_common_divisor",
  "{\n    while (a != b) \n    {\n        if (a > b) \n        {\n            a =\
    \ a - b;\n        } \n        else \n        {\n            b = b - a;\n     \
    \   }\n    }\n    return a;\n}", "{\n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    else if (b == 0)\n        return a;\n    else\n \
    \       return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n    \
    \    return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 == 0) && (b\
    \ % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n    if\
    \ ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a / 2,\
    \ b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    else\n        return greatest_common_divisor(b %\
    \ a, a);\n}", "{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0) {\n  \
    \      if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n\
    \        else return greatest_common_divisor(a >> 1, b);\n    }\n    if ((b &\
    \ 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b) return greatest_common_divisor((a\
    \ - b) >> 1, b);\n    return greatest_common_divisor((b - a) >> 1, a);\n}", "{\n\
    \    if (a < b) \n    {\n        return greatest_common_divisor(b, a);\n    }\n\
    \    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n    \
    \    return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1) == 0 && (b\
    \ & 1) == 0)\n        return 2 * greatest_common_divisor(a >> 1, b >> 1);\n  \
    \  if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n\
    \        return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n  \
    \  if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n \
    \   else\n        return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n\
    \        return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a %\
    \ 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2,\
    \ b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else if (a > b)\n        return greatest_common_divisor(a % b, b);\n    else\n\
    \        return greatest_common_divisor(a, b % a);\n}", "{\n    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a == 1 ||\
    \ b == 1) return 1;\n    if ((a & 1) == 0) {\n        if ((b & 1) == 0) {\n  \
    \          return 2 * greatest_common_divisor(a >> 1, b >> 1);\n        } else\
    \ {\n            return greatest_common_divisor(a >> 1, b);\n        }\n    }\
    \ else if ((b & 1) == 0) {\n        return greatest_common_divisor(a, b >> 1);\n\
    \    } else if (a > b) {\n        return greatest_common_divisor((a - b) >> 1,\
    \ b);\n    } else {\n        return greatest_common_divisor((b - a) >> 1, a);\n\
    \    }\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return\
    \ 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) \n    {\n        return b;\n    }\n    if (b == 0) \n    {\n\
    \        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}",
  "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n   \
    \ if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) return b;\n    if (b == 0) return a;\n    long c;\n    while\
    \ (b != 0) {\n        c = a % b;\n        a = b;\n        b = c;\n    }\n    return\
    \ a;\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return\
    \ 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    while (b != 0) \n    {\n   \
    \     long t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}",
  "{\n    if (a < b)\n        swap(a, b);\n    while (b != 0) \n    {\n        long\
    \ t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}", "{\n \
    \   if (a == 0) \n        return b;\n    else if (b == 0) \n        return a;\n\
    \    else \n        return greatest_common_divisor(b, a % b);\n}", "{\n    if\
    \ (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n \
    \   if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0) {\n        if ((b &\
    \ 1) == 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else return\
    \ greatest_common_divisor(a >> 1, b);\n    }\n    if ((b & 1) == 0) return greatest_common_divisor(a,\
    \ b >> 1);\n    if (a > b) return greatest_common_divisor((a - b) >> 1, b);\n\
    \    return greatest_common_divisor((b - a) >> 1, a);\n}", "{\n    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1)\
    \ == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n       \
    \ return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a\
    \ < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n     \
    \   return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (b\
    \ == 0) \n        return a;\n    else \n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n    else\n\
    \        return greatest_common_divisor(a, b % a);\n}\n/*\n Return a least common\
    \ multiple of two integers a and b\n    >>> least_common_multiple(3, 5)\n    15\n\
    \    >>> least_common_multiple(25, 15)\n    75\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a", "{\n    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if\
    \ (a > b)\n        return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n\
    \        return a;\n    if (a > b)\n        return greatest_common_divisor(a -\
    \ b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a < b)\
    \ \n    {\n        return greatest_common_divisor(b, a);\n    }\n    if (b ==\
    \ 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) \n    {\n        return b;\n    }\n    if (b\
    \ == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) \n        return b;\n    if (b == 0) \n   \
    \     return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) \n        return\
    \ 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 !=\
    \ 0)) \n        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0)\
    \ && (b % 2 == 0)) \n        return greatest_common_divisor(a, b / 2);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n\
    \        return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a %\
    \ 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2,\
    \ b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\n/*\n Return a least common multiple of\
    \ two integers a and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(in\
    \ long[] list) \n{\n    long result = 1;\n    foreach (i; list)\n        result\
    \ = least_common_multiple(result, i);\n    return result;\n}\n/*\n Return a least\
    \ common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n   ", "{\n    if (a < b)\n \
    \       return greatest_common_divisor(b, a);\n    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n       \
    \ return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n \
    \       return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n\
    \        return a;\n    if (a > b)\n        return greatest_common_divisor(a -\
    \ b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    else if (b == 0)\n        return a;\n    else\n \
    \       return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n    \
    \    return b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 ==\
    \ 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n\
    \    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n\
    \        return a;\n    else if (a > b)\n        return greatest_common_divisor(a\
    \ % b, b);\n    else\n        return greatest_common_divisor(a, b % a);\n}", "{\n\
    \    if (a == 0)\n        return b;\n    return greatest_common_divisor(b % a,\
    \ a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (b == 0)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }", "{\n    long c;\n    while (a != 0) {\n        c = a; a = b%a;  b = c;\n \
    \   }\n    return b;\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b,\
    \ a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n       \
    \ return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n \
    \       return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a < 0)\n\
    \        a = -a;\n    if (b < 0)\n        b = -b;\n    while (a != b)\n    {\n\
    \        if (a > b)\n            a -= b;\n        else\n            b -= a;\n\
    \    }\n    return a;\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b,\
    \ a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n\
    \        return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b ==\
    \ 1)\n        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return\
    \ 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 !=\
    \ 0))\n        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0)\
    \ && (b % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a == 1 ||\
    \ b == 1) return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else if (a == b)\n        return a;\n    else if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\n/*\n Return a least common multiple of two integers a and b\n  \
    \  >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ (a * b) / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common_multiple(lcm, a[i]);\n    return lcm;\n}\n/*\n Return a least common\
    \ multiple of a list of integers\n    >>> least_common_multiple_list([3, 5])\n\
    \    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common_multiple(lcm, a[i]);\n    return lcm;\n}\n/*\n Return a least common\
    \ multiple of a list of integers\n    >>> least_common_multiple_list([3, 5])\n\
    \    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n   \
    \     return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}", "{\n    if (a == 0)\n        return b;\n    else if (b\
    \ == 0)\n        return a;\n    else if (a == b)\n        return a;\n    else\
    \ if (a > b)\n        return greatest_common_divisor(a - b, b);\n    else\n  \
    \      return greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n  \
    \      return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n      \
    \  return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}\n/*\n Return a least common\
    \ multiple of two integers a and b\n    >>> least_common_multiple(3, 5)\n    15\n\
    \    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return (a * b) / greatest_common_divisor(a, b);\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (item; list)\n        result = least_common_multiple(result, item);\n    return\
    \ result;\n}\n/*\n Return a least common multiple of a list of integers\n    >>>\
    \ least_common_multiple_of_list([3, 5])\n    15\n    >>> least_common_multiple_of_list([25,\
    \ 15])\n    75\n*/\nlong least_common_multiple_of_list(long[] list) \n{\n    long\
    \ result = 1;\n    foreach (item; list)\n        result = least_common_multiple(result,\
    \ item);\n    return result;\n}\n/*\n Return a least common multiple of a list\
    \ of integers\n    >>> least_common_multiple_of_list([3, 5])\n    15\n    >>>\
    \ least_common_multiple_of_list([25, 15])\n    75\n*/\nlong least_common_multiple_of_list(long[]\
    \ list) \n{\n    long result = 1;\n    foreach (item; list)\n        result =\
    \ least_common_multiple(result, item);\n    return result;\n}\n/*\n Return a least",
  "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n   \
    \ if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n/*\n Return a least\
    \ common multiple of two integers a and b\n    >>> least_common_multiple(3, 5)\n\
    \    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] a) \n{\n    long result = a[0];\n    foreach\
    \ (long i; a)\n        result = least_common_multiple(result, i);\n    return\
    \ result;\n}\n/*\n Return a greatest common divisor of a list of integers\n  \
    \  >>> greatest_common_divisor_of_list([3, 5])\n    1\n    >>> greatest_common_divisor_of_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_of_list(long[] a) \n{\n    long\
    \ result = a[0];\n    foreach (long i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a list of prime numbers less than n\n\
    \    >>> prime_numbers(10)\n    [2, 3, 5, 7]\n*/\nlong[] prime_numbers(long n)\
    \ \n{\n    long[] result = [];\n    for (long i = 2; i < n; i++) \n    {\n   \
    \     bool is_prime = true;\n        for (long j = 2; j < i; j++) \n        {",
  "{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b ==\
    \ 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n\
    \    if (a == 0)\n    {\n        return b;\n    }\n    if (b == 0)\n    {\n  \
    \      return a;\n    }\n    if (a == b)\n    {\n        return a;\n    }\n  \
    \  if (a > b)\n    {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    else\n    {\n        return greatest_common_divisor(a, b - a);\n    }\n}\n\
    /*\n Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = 1;\n    foreach\
    \ (i; a)\n    {\n        result = least_common_multiple(result, i);\n    }\n \
    \   return result;\n}\n/*\n Return a greatest common divisor of a list of integers\n\
    \    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; a)\n    {\n        result = greatest_common_divisor(result,\
    \ i);\n    }\n    return result;\n}\n/*\n Return a list of prime numbers less\
    \ than n\n    >>> primes(10)\n    [2, 3, 5, 7]\n*/\nlong[] primes(long n) \n{\n\
    \    long[] result;\n    bool[] sieve = new bool[n];\n    foreach (i; 0 .. n)",
  "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n   \
    \ if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n\
    \        return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a %\
    \ 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2,\
    \ b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n\
    \ Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = a[0];\n    for (int\
    \ i = 1; i < a.length; i++)\n        result = least_common_multiple(result, a[i]);\n\
    \    return result;\n}\n/*\n Return a least common multiple of a list of integers\n\
    \    >>> least_common_multiple_list([3, 5])\n    15\n    >>> least_common_multiple_list([25,\
    \ 15])\n    75\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result\
    \ = a[0];\n    for (int i = 1; i < a.length; i++)\n        result = least_common_multiple(result,\
    \ a[i]);\n    return result;\n}", "{\n    if (a == 0)\n        return b;\n   \
    \ if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if (a\
    \ > b)\n        return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    if (a == 0) \n        return b;\n    if (b == 0) \n   \
    \     return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) \n        return\
    \ 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 !=\
    \ 0)) \n        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0)\
    \ && (b % 2 == 0)) \n        return greatest_common_divisor(a, b / 2);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 ==\
    \ 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n\
    \    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if\
    \ (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0)\n        return ((b & 1)\
    \ == 0) ?\n            2 * greatest_common_divisor(a >> 1, b >> 1) :\n       \
    \     greatest_common_divisor(a >> 1, b);\n    else\n        return ((b & 1) ==\
    \ 0) ?\n            greatest_common_divisor(a, b >> 1) :\n            greatest_common_divisor(b,\
    \ abs(a - b));\n}", "{\n    if (a == 0) \n        return b;\n    else if (b ==\
    \ 0) \n        return a;\n    else \n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}", "{\n    while (b != 0) \n    {\n        long t = b;\n        b = a\
    \ % b;\n        a = t;\n    }\n    return a;\n}", "{\n    if (a == 0) \n    {\n\
    \        return b;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n\
    \    if (a == b) \n    {\n        return a;\n    }\n    if (a > b) \n    {\n \
    \       return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    long c;\n    while (a != 0) {\n        c = a; a = b%a;\
    \  b = c;\n    }\n    return b;\n}", "{\n    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if\
    \ (a > b)\n        return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n   \
    \ return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n       \
    \ return b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n\
    \    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = a[0];\n    for (int\
    \ i = 1; i < a.length; i++)\n        result = least_common_multiple(result, a[i]);\n\
    \    return result;\n}\n/*\n Return a greatest common divisor of a list of integers\n\
    \    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    for (int i = 1; i < a.length; i++)\n        result = greatest_common_divisor(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    for (int i = 1; i < a.length; i++)\n        result = greatest",
  "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n   \
    \ if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b,\
    \ a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0)\n        return b;\n    else if (b == 0)\n        return a;\n    else\n\
    \        return greatest_common_divisor(b, a % b);\n}", "{\n    if (a < b)\n \
    \       return greatest_common_divisor(b, a);\n    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 ==\
    \ 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n\
    \    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return\
    \ a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\
    \ return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b\
    \ % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) &&\
    \ (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}", "{\n    if (a == 0) \n        return b;\n    else if\
    \ (b == 0) \n        return a;\n    else \n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 == 0) && (b % 2\
    \ == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a / 2, b);\n\
    \    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n\
    \ Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = 1;\n    foreach\
    \ (i; a)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_list([3,\
    \ 5])\n    1\n    >>> greatest_common_divisor_list([25, 15])\n    5\n*/\nlong\
    \ greatest_common_divisor_list(long[] a) \n{\n    long result = a[0];\n    foreach\
    \ (i; a)\n        result = greatest_common_divisor(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a", "{\n    if (a == 0) return b;\n\
    \    if (b == 0) return a;\n    if (a == b) return a;\n    if (a == 1 || b ==\
    \ 1) return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 ==\
    \ 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n\
    \    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) \n        return b;\n    if (b == 0) \n        return a;\n  \
    \  if (a == b) \n        return a;\n    if (a == 1 || b == 1) \n        return\
    \ 1;\n    if ((a & 1) == 0) \n    {\n        if ((b & 1) == 0) \n            return\
    \ 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else \n            return\
    \ greatest_common_divisor(a >> 1, b);\n    }\n    else \n    {\n        if ((b\
    \ & 1) == 0) \n            return greatest_common_divisor(a, b >> 1);\n      \
    \  else \n            return greatest_common_divisor(abs(a - b), min(a, b));\n\
    \    }\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a\
    \ == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0)\n\
    \        return ((b & 1) == 0) ?\n            greatest_common_divisor(a >> 1,\
    \ b >> 1) << 1 :\n            greatest_common_divisor(a >> 1, b);\n    else\n\
    \        return ((b & 1) == 0) ?\n            greatest_common_divisor(a, b >>\
    \ 1) :\n            greatest_common_divisor(b, abs(a - b));\n}", "{\n    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n       \
    \ return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n \
    \       return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n\
    \ Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b)\n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor([3,\
    \ 5, 7])\n    1\n    >>> greatest_common_divisor([25, 15, 5])\n    5\n*/\nlong\
    \ greatest_common_divisor(in long[] a)\n{\n    if (a.length == 0)\n        return\
    \ 0;\n    if (a.length == 1)\n        return a[0];\n    long gcd = greatest_common_divisor(a[0],\
    \ a[1]);\n    for (size_t i = 2; i < a.length; i++)\n        gcd = greatest_common_divisor(gcd,\
    \ a[i]);\n    return gcd;\n}\n/*\n Return a least common multiple of a list of\
    \ integers\n    >>> least_common_multiple([3, 5, 7])\n    105\n    >>> least_common_multiple([25,\
    \ 15, 5])\n    75\n*/\nlong least_common_multiple(in", "{\n    if (a == 0)\n \
    \       return b;\n    else if (b == 0)\n        return a;\n    else\n       \
    \ return greatest_common_divisor(b, a % b);\n}", "{\n    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1) ==\
    \ 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a >> 1, b >>\
    \ 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    long c;\n    while (a != 0) {\n        c = a; a = b%a;  b = c;\n    }\n \
    \   return b;\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n \
    \       return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n   \
    \ if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a\
    \ == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n   \
    \ if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a\
    \ >> 1, b);\n    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a < b) \n    {\n        return greatest_common_divisor(b, a);\n    }\n\
    \    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }", "{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n        return\
    \ a;\n    else if (a == b)\n        return a;\n    else if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) return ((b & 1) == 0) ? greatest_common_divisor(a >> 1, b >> 1) << 1 : greatest_common_divisor(a\
    \ >> 1, b);\n    else return ((b & 1) == 0) ? greatest_common_divisor(a, b >>\
    \ 1) : greatest_common_divisor(b, abs(a - b));\n}", "{\n    if (a < b)\n     \
    \   return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n\
    \    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n    \
    \    return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);\n}", "{\n    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a == 1 || b == 1)\n        return 1;\n    if ((a & 1) == 0 && (b & 1)\
    \ == 0)\n        return 2 * greatest_common_divisor(a >> 1, b >> 1);\n    if ((a\
    \ & 1) == 0 && (b & 1) != 0)\n        return greatest_common_divisor(a >> 1, b);\n\
    \    if ((a & 1) != 0 && (b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return\
    \ a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0)\n    {\n    \
    \    if ((b & 1) == 0)\n            return 2 * greatest_common_divisor(a >> 1,\
    \ b >> 1);\n        else\n            return greatest_common_divisor(a >> 1, b);\n\
    \    }\n    else\n    {\n        if ((b & 1) == 0)\n            return greatest_common_divisor(a,\
    \ b >> 1);\n        else\n            return greatest_common_divisor(abs(a - b),\
    \ min(a, b));\n    }\n}", "{\n    if (a == 0)\n        return b;\n    if (b ==\
    \ 0)\n        return a;\n    if (a == b)\n        return a;\n    if (a > b)\n\
    \        return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}", "{\n    if (a < b)\n        return greatest_common_divisor(b,\
    \ a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) \n        return b;\n    if (b == 0) \n   \
    \     return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if\
    \ (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a ==\
    \ b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a ==\
    \ 0)\n        return b;\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n        return (b & 1) == 0 ? greatest_common_divisor(a >> 1, b >> 1) <<\
    \ 1 : greatest_common_divisor(a >> 1, b);\n    else\n        return (b & 1) ==\
    \ 0 ? greatest_common_divisor(a, b >> 1) : greatest_common_divisor(b, a > b ?\
    \ a - b : b - a);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n\
    \        return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n  \
    \  if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0) \n        return b;\n    if (b == 0) \n        return a;\n  \
    \  if (a == b) \n        return a;\n    if (a == 1 || b == 1) \n        return\
    \ 1;\n    if ((a & 1) == 0) \n    {\n        if ((b & 1) == 0) \n            return\
    \ 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else \n            return\
    \ greatest_common_divisor(a >> 1, b);\n    }\n    else \n    {\n        if ((b\
    \ & 1) == 0) \n            return greatest_common_divisor(a, b >> 1);\n      \
    \  else \n            return greatest_common_divisor(abs(a - b), min(a, b));\n\
    \    }\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a - b,\
    \ b);\n    return greatest_common_divisor(a, b - a);\n}", "{\n    if (a == 0)\
    \ return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a ==\
    \ 1 || b == 1) return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_", "{\n    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a == 1 || b == 1)\n        return 1;\n    if ((a % 2 == 0) && (b % 2\
    \ == 0))\n        return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0))\n        return greatest_common_divisor(a / 2, b);\n\
    \    if ((a % 2 != 0) && (b % 2 == 0))\n        return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (b ==\
    \ 0) \n        return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n\
    \    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}", "{\n    if (a == 0) return b;\n    if\
    \ (b == 0) return a;\n    if (a == b) return a;\n    if (a == 1 || b == 1) return\
    \ 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}", "{\n\
    \    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}", "{\n    if (a == 0)\n        return b;\n    if (b == 0)\n     \
    \   return a;\n    return greatest_common_divisor(b, a % b);\n}", "{\n    if (a\
    \ == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if\
    \ (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0) return (b & 1) == 0 ? greatest_common_divisor(a\
    \ >> 1, b >> 1) << 1 : greatest_common_divisor(a >> 1, b);\n    else return (b\
    \ & 1) == 0 ? greatest_common_divisor(a, b >> 1) : greatest_common_divisor(b,\
    \ abs(a - b));\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_66_digitSum
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv3yew28_.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3yew28_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuvx9yq_i.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuvx9yq_i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0tfehw41.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0tfehw41.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl__lz9t5.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl__lz9t5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnvku_20w.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvku_20w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            result += c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(immutable\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_nzo_gls.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_nzo_gls.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0qkfxyec.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qkfxyec.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwdqsor31.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdqsor31.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9v3uqnps.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9v3uqnps.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph7p4v7qx.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph7p4v7qx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_7mbwix.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_7mbwix.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppoy1a687.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppoy1a687.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ygj_nqo.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ygj_nqo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3o2on5bf.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o2on5bf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxuejf9no.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxuejf9no.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxiox8z95.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxiox8z95.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzyfh30bf.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzyfh30bf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm58yl689.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm58yl689.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2lxrv8qo.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lxrv8qo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdo8yeetr.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdo8yeetr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp6e3ge99.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp6e3ge99.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    return s.filter!(a => a.isUpper).sum!(a\
    \ => a.to!long);\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdgvzksea.d(19): Error: no property `filter` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdgvzksea.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsri1rpqd.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsri1rpqd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuj3nclu6.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuj3nclu6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgzfsd68.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxgzfsd68.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi9l6flc3.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi9l6flc3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvu_2485k.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvu_2485k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    return s.filter!(c => c.isUpper).map!(c\
    \ => c.to!long).sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyynl_7wm.d(19): Error: no property `filter` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyynl_7wm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpocf6ncwo.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpocf6ncwo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp59fdqu3h.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59fdqu3h.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9kngsdjq.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kngsdjq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk2az3v2v.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk2az3v2v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpianmn4zw.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpianmn4zw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            result += c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvyox1lm6.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyox1lm6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9mkngx6g.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mkngx6g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw8a14f28.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw8a14f28.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfvfds0mc.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvfds0mc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqtm__1ga.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtm__1ga.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo5lu4f16.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo5lu4f16.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd6lnm6hs.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd6lnm6hs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4zjqi1f5.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4zjqi1f5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkxt7_syb.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkxt7_syb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp232gn_34.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp232gn_34.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6h4lqzgd.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6h4lqzgd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpopxdtgak.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopxdtgak.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp29zh_tgy.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29zh_tgy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplufd4y_s.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplufd4y_s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeo2ixehi.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo2ixehi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph8dc_por.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph8dc_por.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbhqwrv7y.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhqwrv7y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpohayweis.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpohayweis.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphybzv9ll.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphybzv9ll.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqz7guntc.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqz7guntc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1jan4k3o.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1jan4k3o.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtveagw_.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprtveagw_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0mgbjth1.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0mgbjth1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqqp4hkql.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqqp4hkql.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmyq9n3l.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmyq9n3l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ck1cg1m.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ck1cg1m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpauimrdli.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpauimrdli.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1wicoi3s.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1wicoi3s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_10y65sh.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_10y65sh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1_f7xs0x.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1_f7xs0x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkj5zp3uv.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkj5zp3uv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpse45iems.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpse45iems.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprqi3cpes.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprqi3cpes.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn9h4tljj.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn9h4tljj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp32_xp7gj.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp32_xp7gj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmt0vuq8s.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmt0vuq8s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnt8zodo5.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnt8zodo5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgcnmdhur.d(22): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgcnmdhur.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnpwqy3cu.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnpwqy3cu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl1n50qui.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1n50qui.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdek49drw.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdek49drw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp06uovcoh.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp06uovcoh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp453e_23f.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp453e_23f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdgjezbpf.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdgjezbpf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv47t9hqz.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv47t9hqz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0xdgadur.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0xdgadur.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgj_r5580.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgj_r5580.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(inout\
    \ c; s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_doz6g6.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_doz6g6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu5xr0knr.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu5xr0knr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpamqulcdd.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpamqulcdd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6x5hlqag.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6x5hlqag.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps5m3i5be.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5m3i5be.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd4u51isk.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4u51isk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe0ua2ivj.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe0ua2ivj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdbkdomhv.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdbkdomhv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplzeg6ukh.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplzeg6ukh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7s6vsa9l.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7s6vsa9l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqq6kmbpv.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq6kmbpv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqzzfzla_.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqzzfzla_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpguu25hea.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpguu25hea.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppczemu1f.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppczemu1f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2md2dcg.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2md2dcg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbtq8qpzj.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbtq8qpzj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdu68hgk4.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu68hgk4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu1vcftte.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu1vcftte.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp55_6xma2.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp55_6xma2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

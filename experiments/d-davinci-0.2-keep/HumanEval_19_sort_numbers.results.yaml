name: HumanEval_19_sort_numbers
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ewhj6gr.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp7ewhj6gr.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp7ewhj6gr.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp7ewhj6gr.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ewhj6gr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    nums_int.sort;\n    foreach(int i, int num; nums_int)\n    {\n   \
    \     nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdq6rkklj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdq6rkklj.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpdq6rkklj.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpdq6rkklj.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpdq6rkklj.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpdq6rkklj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_to33wpu.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp_to33wpu.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp_to33wpu.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp_to33wpu.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_to33wpu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    import std.algorithm : sort;\n    import std.array : array;\n    import\
    \ std.conv : to;\n    import std.range : iota;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4trecq6z.d(64): Error: `;` expected\\n/tmp/tmp4trecq6z.d(74):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4trecq6z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp70rvc528.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp70rvc528.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp70rvc528.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp70rvc528.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmp70rvc528.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp70rvc528.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp2uhbsx0.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpp2uhbsx0.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpp2uhbsx0.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpp2uhbsx0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp2uhbsx0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlhst5l7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvlhst5l7.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpvlhst5l7.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpvlhst5l7.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpvlhst5l7.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvlhst5l7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9v_gepme.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9v_gepme.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp9v_gepme.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp9v_gepme.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp9v_gepme.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9v_gepme.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqsxfr0k9.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpqsxfr0k9.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpqsxfr0k9.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpqsxfr0k9.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpqsxfr0k9.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpqsxfr0k9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoo3pri3i.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpoo3pri3i.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpoo3pri3i.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpoo3pri3i.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoo3pri3i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    nums_int.sort;\n    string[] nums_sorted = new string[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_sorted[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfeqvehoo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfeqvehoo.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpfeqvehoo.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpfeqvehoo.d(23): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpfeqvehoo.d(25): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpfeqvehoo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_ph3stt.d(86): Error: found `unittest` instead of statement\\\
    n/tmp/tmpm_ph3stt.d(96): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpm_ph3stt.d(96): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpm_ph3stt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    nums_int.sort();\n    foreach(int i, int num; nums_int)\n    {\n \
    \       nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl5hv2htq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpl5hv2htq.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpl5hv2htq.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpl5hv2htq.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpl5hv2htq.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpl5hv2htq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp5h28i4w.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp5h28i4w.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpp5h28i4w.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpp5h28i4w.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpp5h28i4w.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp5h28i4w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    // TODO: Implement me\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_q2by5f7.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp_q2by5f7.d(18): Error: undefined identifier `num_to_int`\\n/tmp/tmp_q2by5f7.d(20):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp_q2by5f7.d(23):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmp_q2by5f7.d(25): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_q2by5f7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm9norw28.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpm9norw28.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpm9norw28.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpm9norw28.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfoa92o69.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfoa92o69.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpfoa92o69.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpfoa92o69.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpfoa92o69.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfoa92o69.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort;\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxs0uclrx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxs0uclrx.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpxs0uclrx.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpxs0uclrx.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpxs0uclrx.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpxs0uclrx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4uv55r7t.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4uv55r7t.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4uv55r7t.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4uv55r7t.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4uv55r7t.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4uv55r7t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort;\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpibh9cjgi.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpibh9cjgi.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpibh9cjgi.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpibh9cjgi.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpibh9cjgi.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpibh9cjgi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn6qp4j6n.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpn6qp4j6n.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpn6qp4j6n.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn6qp4j6n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf37c9vgx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpf37c9vgx.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpf37c9vgx.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpf37c9vgx.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpf37c9vgx.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf37c9vgx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] numeral = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    int[] nums = [];\n\
    \    foreach(string num; numbers.split(\" \"))\n    {\n        int index = numeral.indexOf(num);\n\
    \        nums ~= index;\n    }\n    nums.sort;\n    string result = \"\";\n  \
    \  foreach(int num; nums)\n    {\n        result ~= numeral[num] ~ \" \";\n  \
    \  }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_cx0azsg.d(15): Error: no property `split` for type `string`\\\
    n/tmp/tmp_cx0azsg.d(20): Error: no property `sort` for type `int[]`\\n/tmp/tmp_cx0azsg.d(26):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_cx0azsg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    nums_int.sort();\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums[i] = int_to_num(nums_int[i]);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp1w2kccy.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp1w2kccy.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpp1w2kccy.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpp1w2kccy.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpp1w2kccy.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpp1w2kccy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk5fg_nhc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpk5fg_nhc.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpk5fg_nhc.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpk5fg_nhc.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpk5fg_nhc.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk5fg_nhc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxbmv56n0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxbmv56n0.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpxbmv56n0.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpxbmv56n0.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpxbmv56n0.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxbmv56n0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(n; numbers.split)\n    {\n        switch(n)\n\
    \        {\n            case \"zero\": nums ~= 0; break;\n            case \"\
    one\": nums ~= 1; break;\n            case \"two\": nums ~= 2; break;\n      \
    \      case \"three\": nums ~= 3; break;\n            case \"four\": nums ~= 4;\
    \ break;\n            case \"five\": nums ~= 5; break;\n            case \"six\"\
    : nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n         \
    \   case \"eight\": nums ~= 8; break;\n            case \"nine\": nums ~= 9; break;\n\
    \        }\n    }\n    nums.sort;\n    string[] nums_str;\n    foreach(n; nums)\n\
    \    {\n        switch(n)\n        {\n            case 0: nums_str ~= \"zero\"\
    ; break;\n            case 1: nums_str ~= \"one\"; break;\n            case 2:\
    \ nums_str ~= \"two\"; break;\n            case 3: nums_str ~= \"three\"; break;\n\
    \            case 4: nums_str ~= \"four\"; break;\n            case 5: nums_str\
    \ ~= \"five\"; break;\n            case 6: nums_str ~= \"six\"; break;\n     \
    \       case 7: nums_str ~= \"seven\"; break;\n            case 8: nums_str ~=\
    \ \"eight\"; break;\n            case 9: nums_str ~= \"nine\"; break;\n      \
    \  }\n    }\n    return nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwnw5fr_m.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpwnw5fr_m.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmpwnw5fr_m.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpwnw5fr_m.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpwnw5fr_m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb17u82z8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpb17u82z8.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpb17u82z8.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb17u82z8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp3aj0r8z.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp3aj0r8z.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpp3aj0r8z.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpp3aj0r8z.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpp3aj0r8z.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpp3aj0r8z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk8z26gq6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpk8z26gq6.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpk8z26gq6.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpk8z26gq6.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk8z26gq6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = sort(nums);\n\
    \    return join(nums_sorted, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqu0hdozq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpqu0hdozq.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpqu0hdozq.d(15): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpqu0hdozq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string[] nums_str = new string[nums.length];\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums_str[i] = to!string(num);\n    }\n    return\
    \ join(nums_str, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo_2y1nh8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpo_2y1nh8.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpo_2y1nh8.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpo_2y1nh8.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpo_2y1nh8.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo_2y1nh8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort!(a, b => numeralToInt(a) < numeralToInt(b));\n    return\
    \ nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgffcc18g.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpgffcc18g.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpgffcc18g.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgffcc18g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqs8i_mj3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpqs8i_mj3.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpqs8i_mj3.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpqs8i_mj3.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpqs8i_mj3.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpqs8i_mj3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjrfr_eoh.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjrfr_eoh.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjrfr_eoh.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpjrfr_eoh.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpjrfr_eoh.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrfr_eoh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv37ex_ws.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpv37ex_ws.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpv37ex_ws.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpv37ex_ws.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpv37ex_ws.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv37ex_ws.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split;\n    int[] num_ints = nums.map!(a =>\
    \ to!int(a)).array;\n    num_ints.sort;\n    return num_ints.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8okf170m.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp8okf170m.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmp8okf170m.d(15):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp8okf170m.d(16): Error:\
    \ no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8okf170m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_ksg0zli.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_ksg0zli.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp_ksg0zli.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_ksg0zli.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    string result = \"\";\n    foreach(num; nums_int)\n \
    \   {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxa3ktz9v.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxa3ktz9v.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpxa3ktz9v.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpxa3ktz9v.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpxa3ktz9v.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxa3ktz9v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        num_ints[i] = num_to_int(num);\n\
    \    }\n    sort(num_ints);\n    foreach(int i, int num; num_ints)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4_vywtj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpw4_vywtj.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpw4_vywtj.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpw4_vywtj.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpw4_vywtj.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpw4_vywtj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv278r_u1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpv278r_u1.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpv278r_u1.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpv278r_u1.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv278r_u1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    for (int i = 0; i\
    \ < nums_int.length; i++)\n    {\n        result ~= int_to_num(nums_int[i]);\n\
    \        if (i != nums_int.length - 1)\n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd0it9aaq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpd0it9aaq.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpd0it9aaq.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpd0it9aaq.d(23):\
    \ Error: undefined identifier `int_to_num`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpd0it9aaq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1u5wovxo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1u5wovxo.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp1u5wovxo.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1u5wovxo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort();\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpemgbfmoc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpemgbfmoc.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpemgbfmoc.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpemgbfmoc.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpemgbfmoc.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpemgbfmoc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2 = new string[nums.length];\n\
    \    int[] nums3 = new int[nums.length];\n    int[] nums4 = new int[nums.length];\n\
    \    int[] nums5 = new int[nums.length];\n    int[] nums6 = new int[nums.length];\n\
    \    int[] nums7 = new int[nums.length];\n    int[] nums8 = new int[nums.length];\n\
    \    int[] nums9 = new int[nums.length];\n    int[] nums10 = new int[nums.length];\n\
    \    int[] nums11 = new int[nums.length];\n    int[] nums12 = new int[nums.length];\n\
    \    int[] nums13 = new int[nums.length];\n    int[] nums14 = new int[nums.length];\n\
    \    int[] nums15 = new int[nums.length];\n    int[] nums16 = new int[nums.length];\n\
    \    int[] nums17 = new int[nums.length];\n    int[] nums18 = new int[nums.length];\n\
    \    int[] nums19 = new int[nums.length];\n    int[] nums20 = new int[nums.length];\n\
    \    int[] nums21 = new int[nums.length];\n    int[] nums22 = new int[nums.length];\n\
    \    int[] nums23 = new int[nums.length];\n    int[] nums24 = new int[nums.length];\n\
    \    int[] nums25 = new int[nums.length];\n    int[] nums26 = new int[nums.length];\n\
    \    int[] nums27 = new int[nums.length];\n    int[] nums28 = new int[nums.length];\n\
    \    int[] nums29 = new int[nums.length];\n    int[] nums30 = new int[nums.length];\n\
    \    int[] nums31 = new int[nums.length];\n    int[] nums32 = new int[nums.length];\n\
    \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzltk0waw.d(46): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzltk0waw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr0qpjlpz.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpr0qpjlpz.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpr0qpjlpz.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpr0qpjlpz.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr0qpjlpz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd2_921sp.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpd2_921sp.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpd2_921sp.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpd2_921sp.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd2_921sp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort;\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpouli9768.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpouli9768.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpouli9768.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpouli9768.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpouli9768.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpouli9768.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcop3jh5c.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpcop3jh5c.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpcop3jh5c.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpcop3jh5c.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcop3jh5c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcofootru.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcofootru.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpcofootru.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpcofootru.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpcofootru.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcofootru.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeaae2m4c.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpeaae2m4c.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpeaae2m4c.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpeaae2m4c.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpeaae2m4c.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpeaae2m4c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp1zsoi5_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp1zsoi5_.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpp1zsoi5_.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpp1zsoi5_.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpp1zsoi5_.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp1zsoi5_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcvmgznut.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpcvmgznut.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpcvmgznut.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpcvmgznut.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvmgznut.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums) {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n\
    \    string[] nums_str = new string[nums.length];\n    foreach(i, num; nums_int)\
    \ {\n        nums_str[i] = to!string(num);\n    }\n    return join(nums_str, \"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcnc0bay3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcnc0bay3.d(16): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcnc0bay3.d(18): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpcnc0bay3.d(21): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpcnc0bay3.d(23):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnc0bay3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpacgr1mv4.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpacgr1mv4.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpacgr1mv4.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpacgr1mv4.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacgr1mv4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp96f2boda.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp96f2boda.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp96f2boda.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp96f2boda.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp96f2boda.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp96f2boda.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj8a8wj63.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpj8a8wj63.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpj8a8wj63.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpj8a8wj63.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpj8a8wj63.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj8a8wj63.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = split(numbers);\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn08wwngy.d(13): Error: undefined identifier `split`\\n/tmp/tmpn08wwngy.d(17):\
    \ Error: template instance `to!int` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpn08wwngy.d(19): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\n/tmp/tmpn08wwngy.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn08wwngy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = numeral_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_numeral(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6dpgjnai.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp6dpgjnai.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmp6dpgjnai.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp6dpgjnai.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmp6dpgjnai.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6dpgjnai.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptmysv_0u.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmptmysv_0u.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmptmysv_0u.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmptmysv_0u.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmptmysv_0u.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptmysv_0u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split;\n    int[] num_ints = nums.map!(a =>\
    \ to!int(a)).array;\n    num_ints.sort;\n    nums = num_ints.map!(a => to!string(a)).array;\n\
    \    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqfx73lpp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpqfx73lpp.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpqfx73lpp.d(15):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpqfx73lpp.d(16): Error:\
    \ no property `map` for type `int[]`\\n/tmp/tmpqfx73lpp.d(17): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpqfx73lpp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(immutable word; numbers.split(\" \"))\n  \
    \  {\n        switch(word)\n        {\n            case \"zero\": nums ~= 0; break;\n\
    \            case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string result;\n\
    \    foreach(immutable num; nums)\n    {\n        switch(num)\n        {\n   \
    \         case 0: result ~= \"zero \"; break;\n            case 1: result ~= \"\
    one \"; break;\n            case 2: result ~= \"two \"; break;\n            case\
    \ 3: result ~= \"three \"; break;\n            case 4: result ~= \"four \"; break;\n\
    \            case 5: result ~= \"five \"; break;\n            case 6: result ~=\
    \ \"six \"; break;\n            case 7: result ~= \"seven \"; break;\n       \
    \     case 8: result ~= \"eight \"; break;\n            case 9: result ~= \"nine\
    \ \"; break;\n        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbfm8do6k.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpbfm8do6k.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmpbfm8do6k.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpbfm8do6k.d(48): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpbfm8do6k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2 = nums.dup;\n\
    \    nums2.sort;\n    string result = \"\";\n    foreach(string num; nums)\n \
    \   {\n        foreach(string num2; nums2)\n        {\n            if(num == num2)\n\
    \            {\n                result ~= num2 ~ \" \";\n                break;\n\
    \            }\n        }\n    }\n    return result.stripRight;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp16nfgrfl.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp16nfgrfl.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp16nfgrfl.d(28):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp16nfgrfl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.idup;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpapboiejj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpapboiejj.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpapboiejj.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpapboiejj.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpapboiejj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb5lfvwud.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpb5lfvwud.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpb5lfvwud.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpb5lfvwud.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb5lfvwud.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    nums_int.sort;\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(int i, int num; nums_int)\n    {\n        nums_str[i] = to!string(num);\n\
    \    }\n    return nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpif7khkjq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpif7khkjq.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpif7khkjq.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpif7khkjq.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpif7khkjq.d(25): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpif7khkjq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzur2g6tx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpzur2g6tx.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpzur2g6tx.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzur2g6tx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcudcvwcm.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcudcvwcm.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcudcvwcm.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpcudcvwcm.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpcudcvwcm.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpcudcvwcm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) => numeralToInt(a)\
    \ < numeralToInt(b));\n    return nums.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyuhu9tzg.d(13): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhu9tzg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpboj8837p.d(86): Error: found `unittest` instead of statement\\\
    n/tmp/tmpboj8837p.d(96): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpboj8837p.d(96): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpboj8837p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbpngm5yb.d(86): Error: found `unittest` instead of statement\\\
    n/tmp/tmpbpngm5yb.d(96): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpbpngm5yb.d(96): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbpngm5yb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = numeral_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_numeral(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpir08yqo7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpir08yqo7.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmpir08yqo7.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpir08yqo7.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmpir08yqo7.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpir08yqo7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, n; nums)\n    {\n        nums_int[i] = to!int(n);\n    }\n   \
    \ sort(nums_int);\n    string result = \"\";\n    foreach(n; nums_int)\n    {\n\
    \        result ~= to!string(n) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpai7dj7h9.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpai7dj7h9.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpai7dj7h9.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpai7dj7h9.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpai7dj7h9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = numbers.split(\" \").map!(a => to!int(a)).array;\n   \
    \ sort(nums);\n    return nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpybjjg5bi.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpybjjg5bi.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpybjjg5bi.d(15): Error: no property `map` for type `int[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpybjjg5bi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmkvsrq_5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmkvsrq_5.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpmkvsrq_5.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmkvsrq_5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbgt5mijl.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpbgt5mijl.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpbgt5mijl.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpbgt5mijl.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpbgt5mijl.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbgt5mijl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.sort;\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_qe0kap1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_qe0kap1.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmp_qe0kap1.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_qe0kap1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0fo2jm8q.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp0fo2jm8q.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp0fo2jm8q.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmp0fo2jm8q.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmp0fo2jm8q.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp0fo2jm8q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdbd3c_3w.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdbd3c_3w.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpdbd3c_3w.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpdbd3c_3w.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpdbd3c_3w.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdbd3c_3w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int num; nums_int)\n\
    \    {\n        result ~= num.to!string ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpipo2_bbj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpipo2_bbj.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpipo2_bbj.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpipo2_bbj.d(23): Error: no property\
    \ `to` for type `int`\\n/tmp/tmpipo2_bbj.d(25): Error: no property `trimRight`\
    \ for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipo2_bbj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    // Split the string into an array of strings\n    string[] nums = numbers.split(\"\
    \ \");\n    // Create an array of ints to store the numbers\n    int[] num_ints\
    \ = new int[nums.length];\n    // Loop through the array of strings and convert\
    \ each string to an int\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = num_to_int(num);\n    }\n    // Sort the array of ints\n    num_ints.sort;\n\
    \    // Loop through the array of ints and convert each int to a string\n    foreach(i,\
    \ num; num_ints)\n    {\n        nums[i] = int_to_num(num);\n    }\n    // Join\
    \ the array of strings into a single string\n    return nums.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqsuwnn_9.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpqsuwnn_9.d(20): Error: undefined identifier `num_to_int`\\n/tmp/tmpqsuwnn_9.d(23):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpqsuwnn_9.d(27): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpqsuwnn_9.d(30): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpqsuwnn_9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = new int[numbers.length];\n    int i = 0;\n    foreach(word;\
    \ numbers.split)\n    {\n        switch(word)\n        {\n            case \"\
    zero\": nums[i] = 0; break;\n            case \"one\": nums[i] = 1; break;\n \
    \           case \"two\": nums[i] = 2; break;\n            case \"three\": nums[i]\
    \ = 3; break;\n            case \"four\": nums[i] = 4; break;\n            case\
    \ \"five\": nums[i] = 5; break;\n            case \"six\": nums[i] = 6; break;\n\
    \            case \"seven\": nums[i] = 7; break;\n            case \"eight\":\
    \ nums[i] = 8; break;\n            case \"nine\": nums[i] = 9; break;\n      \
    \  }\n        i++;\n    }\n    nums.sort;\n    string result = \"\";\n    foreach(num;\
    \ nums)\n    {\n        switch(num)\n        {\n            case 0: result ~=\
    \ \"zero \"; break;\n            case 1: result ~= \"one \"; break;\n        \
    \    case 2: result ~= \"two \"; break;\n            case 3: result ~= \"three\
    \ \"; break;\n            case 4: result ~= \"four \"; break;\n            case\
    \ 5: result ~= \"five \"; break;\n            case 6: result ~= \"six \"; break;\n\
    \            case 7: result ~= \"seven \"; break;\n            case 8: result\
    \ ~= \"eight \"; break;\n            case 9: result ~= \"nine \"; break;\n   \
    \     }\n    }\n    return result.trimRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpskr3pxqp.d(15): Error: no property `split` for type `string`\\\
    n/tmp/tmpskr3pxqp.d(32): Error: no property `sort` for type `int[]`\\n/tmp/tmpskr3pxqp.d(36):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpskr3pxqp.d(50): Error: no property\
    \ `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpskr3pxqp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1hn_1jqd.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1hn_1jqd.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp1hn_1jqd.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp1hn_1jqd.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1hn_1jqd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string s; nums)\n    {\n        nums_int[i] = to!int(s);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int s; nums_int)\n    {\n    \
    \    nums[i] = to!string(s);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp82wrj74q.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp82wrj74q.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp82wrj74q.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp82wrj74q.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp82wrj74q.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82wrj74q.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpokl5cu25.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpokl5cu25.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpokl5cu25.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpokl5cu25.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxq1i9xi5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxq1i9xi5.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpxq1i9xi5.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxq1i9xi5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmt9jm5hz.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmt9jm5hz.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpmt9jm5hz.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpmt9jm5hz.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpmt9jm5hz.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmt9jm5hz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn8lpjz6j.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpn8lpjz6j.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpn8lpjz6j.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpn8lpjz6j.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpn8lpjz6j.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn8lpjz6j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpez79ur1k.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpez79ur1k.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpez79ur1k.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpez79ur1k.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpez79ur1k.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpez79ur1k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3sit00m5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp3sit00m5.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3sit00m5.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp3sit00m5.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp3sit00m5.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3sit00m5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptnel8iee.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmptnel8iee.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmptnel8iee.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmptnel8iee.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmptnel8iee.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnel8iee.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n\
    \    }\n    nums_int.sort();\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums[i] = to!string(nums_int[i]);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptf6m1_xn.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmptf6m1_xn.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmptf6m1_xn.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmptf6m1_xn.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmptf6m1_xn.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmptf6m1_xn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaz3_ski7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpaz3_ski7.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpaz3_ski7.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpaz3_ski7.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpaz3_ski7.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpaz3_ski7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort();\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_i3yvsy_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_i3yvsy_.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp_i3yvsy_.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp_i3yvsy_.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp_i3yvsy_.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp_i3yvsy_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = numbers.split(\" \").map!(a => to!int(a)).sort();\n  \
    \  return nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpijg29lz5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpijg29lz5.d(14): Error: no property `map` for type `int[]`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpijg29lz5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb08ppi2l.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpb08ppi2l.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpb08ppi2l.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpb08ppi2l.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpb08ppi2l.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb08ppi2l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n        nums ~=\
    \ to!int(n);\n    }\n    nums.sort;\n    return nums.map!(to!string).join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpixdbeb07.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpixdbeb07.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmpixdbeb07.d(19):\
    \ Error: no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpixdbeb07.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    return nums_int.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpos1tnl7l.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpos1tnl7l.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpos1tnl7l.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpos1tnl7l.d(20): Error: no property\
    \ `join` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\",\
    \ \"/tmp/tmpos1tnl7l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    string result = nums_sorted.join(\" \");\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp74hnzifo.d(21): Error: cannot implicitly convert expression `sort(nums)`\
    \ of type `SortedRange!(string[], \"a < b\")` to `string[]`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74hnzifo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp32j_iq5h.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp32j_iq5h.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp32j_iq5h.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp32j_iq5h.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp32j_iq5h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = numeral_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_numeral(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu4qtctfx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpu4qtctfx.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmpu4qtctfx.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpu4qtctfx.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmpu4qtctfx.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4qtctfx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort();\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg9fpgtcb.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpg9fpgtcb.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpg9fpgtcb.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpg9fpgtcb.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpg9fpgtcb.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpg9fpgtcb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7urkw9ng.d(86): Error: found `unittest` instead of statement\\\
    n/tmp/tmp7urkw9ng.d(96): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmp7urkw9ng.d(96): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7urkw9ng.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    nums_int.sort();\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums[i] = int_to_num(nums_int[i]);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_1wenhc5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_1wenhc5.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp_1wenhc5.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp_1wenhc5.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmp_1wenhc5.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp_1wenhc5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split;\n    int[] nums_int = nums.map!(a =>\
    \ to!int(a)).array;\n    sort(nums_int);\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqkvoxtio.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpqkvoxtio.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpqkvoxtio.d(15):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpqkvoxtio.d(16):\
    \ Error: no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpqkvoxtio.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpks8iiz9s.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpks8iiz9s.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpks8iiz9s.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpks8iiz9s.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpks8iiz9s.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpks8iiz9s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmitx1xqa.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmitx1xqa.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpmitx1xqa.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpmitx1xqa.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpmitx1xqa.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmitx1xqa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums ~=\
    \ 0;\n                break;\n            case \"one\":\n                nums\
    \ ~= 1;\n                break;\n            case \"two\":\n                nums\
    \ ~= 2;\n                break;\n            case \"three\":\n               \
    \ nums ~= 3;\n                break;\n            case \"four\":\n           \
    \     nums ~= 4;\n                break;\n            case \"five\":\n       \
    \         nums ~= 5;\n                break;\n            case \"six\":\n    \
    \            nums ~= 6;\n                break;\n            case \"seven\":\n\
    \                nums ~= 7;\n                break;\n            case \"eight\"\
    :\n                nums ~= 8;\n                break;\n            case \"nine\"\
    :\n                nums ~= 9;\n                break;\n        }\n    }\n    nums.sort;\n\
    \    string result;\n    foreach(num; nums)\n    {\n        switch(num)\n    \
    \    {\n            case 0:\n                result ~= \"zero \";\n          \
    \      break;\n            case 1:\n                result ~= \"one \";\n    \
    \            break;\n            case 2:\n                result ~= \"two \";\n\
    \                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result.strip;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg7wiv25f.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpg7wiv25f.d(50): Error: no property `sort` for type `int[]`\\n/tmp/tmpg7wiv25f.d(54):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpg7wiv25f.d(88): Error: no property\
    \ `strip` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpg7wiv25f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort!(a, b => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp76e8mbpw.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp76e8mbpw.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp76e8mbpw.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp76e8mbpw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxx4s7146.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpxx4s7146.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpxx4s7146.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpxx4s7146.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxx4s7146.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(i, num; numbers.split())\n    {\n        nums\
    \ ~= to!int(num);\n    }\n    nums.sort;\n    string result;\n    foreach(num;\
    \ nums)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trimRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd5qwoz0j.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpd5qwoz0j.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmpd5qwoz0j.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpd5qwoz0j.d(24): Error: no property `trimRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd5qwoz0j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd_npojtq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpd_npojtq.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpd_npojtq.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpd_npojtq.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpd_npojtq.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpd_npojtq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.range;\n    import std.stdio;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1muffndj.d(78): Error: identifier expected following `import`\\\
    n/tmp/tmp1muffndj.d(78): Error: `;` expected\\n/tmp/tmp1muffndj.d(88): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1muffndj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsll_i5s0.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpsll_i5s0.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpsll_i5s0.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpsll_i5s0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsll_i5s0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    nums_int.sort();\n    foreach(int i, int num; nums_int)\n    {\n \
    \       nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2w3m361o.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp2w3m361o.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp2w3m361o.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmp2w3m361o.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmp2w3m361o.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2w3m361o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpisikpfpg.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpisikpfpg.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpisikpfpg.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpisikpfpg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = split(numbers);\n    foreach(i, ref num; nums)\n  \
    \  {\n        switch(num)\n        {\n            case \"zero\":\n           \
    \     num = \"0\";\n                break;\n            case \"one\":\n      \
    \          num = \"1\";\n                break;\n            case \"two\":\n \
    \               num = \"2\";\n                break;\n            case \"three\"\
    :\n                num = \"3\";\n                break;\n            case \"four\"\
    :\n                num = \"4\";\n                break;\n            case \"five\"\
    :\n                num = \"5\";\n                break;\n            case \"six\"\
    :\n                num = \"6\";\n                break;\n            case \"seven\"\
    :\n                num = \"7\";\n                break;\n            case \"eight\"\
    :\n                num = \"8\";\n                break;\n            case \"nine\"\
    :\n                num = \"9\";\n                break;\n        }\n    }\n  \
    \  sort(nums);\n    foreach(i, ref num; nums)\n    {\n        switch(num)\n  \
    \      {\n            case \"0\":\n                num = \"zero\";\n         \
    \       break;\n            case \"1\":\n                num = \"one\";\n    \
    \            break;\n            case \"2\":\n                num = \"two\";\n\
    \                break;\n            case \"3\":\n                num = \"three\"\
    ;\n                break;\n            case \"4\":\n                num = \"four\"\
    ;\n                break;\n            case \"5\":\n                num = \"five\"\
    ;\n                break;\n            case \"6\":\n                num = \"six\"\
    ;\n                break;\n            case \"7\":\n                num = \"seven\"\
    ;\n                break;\n            case \"8\":\n                num = \"eight\"\
    ;\n                break;\n            case \"9\":\n                num = \"nine\"\
    ;\n                break;\n        }\n    }\n    return join(nums, \" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3u9lkoe6.d(13): Error: undefined identifier `split`\\n/tmp/tmp3u9lkoe6.d(16):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp3u9lkoe6.d(50): Error: undefined\
    \ identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp3u9lkoe6.d(53): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp3u9lkoe6.d(87): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3u9lkoe6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(num; numbers.split(\" \"))\n    {\n      \
    \  nums ~= to!int(num);\n    }\n    nums.sort;\n    string result;\n    foreach(num;\
    \ nums)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4o5kkjof.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp4o5kkjof.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmp4o5kkjof.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp4o5kkjof.d(24): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4o5kkjof.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq52eoive.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpq52eoive.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpq52eoive.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpq52eoive.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpq52eoive.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq52eoive.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcjiokgvu.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcjiokgvu.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcjiokgvu.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpcjiokgvu.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpcjiokgvu.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcjiokgvu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2xowuvyp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp2xowuvyp.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp2xowuvyp.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp2xowuvyp.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp2xowuvyp.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2xowuvyp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        switch (nums[i])\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        switch (nums_int[i])\n   \
    \     {\n            case 0:\n                nums[i] = \"zero\";\n          \
    \      break;\n            case 1:\n                nums[i] = \"one\";\n     \
    \           break;\n            case 2:\n                nums[i] = \"two\";\n\
    \                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsxcqo22c.d(83): Error: found `unittest` instead of statement\\\
    n/tmp/tmpsxcqo22c.d(93): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpsxcqo22c.d(93): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpsxcqo22c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] numberals = numbers.split();\n    int[] nums = new int[numberals.length];\n\
    \    foreach(i, numeral; numberals)\n    {\n        nums[i] = numeral_to_int(numeral);\n\
    \    }\n    sort(nums);\n    foreach(i, num; nums)\n    {\n        numberals[i]\
    \ = int_to_numeral(num);\n    }\n    return numberals.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4rjph4ck.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4rjph4ck.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmp4rjph4ck.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp4rjph4ck.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmp4rjph4ck.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp4rjph4ck.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = numeral_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_numeral(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu7coyhf_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpu7coyhf_.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmpu7coyhf_.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpu7coyhf_.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmpu7coyhf_.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7coyhf_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach (int i; nums_int)\n\
    \    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxyf764k0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxyf764k0.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpxyf764k0.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpxyf764k0.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpxyf764k0.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxyf764k0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy5899w80.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpy5899w80.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpy5899w80.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpy5899w80.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpy5899w80.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5899w80.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = numbers.split(\" \").map!(a => to!int(a)).sort;\n    return\
    \ nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgcb7n0do.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpgcb7n0do.d(14): Error: no property `map` for type `int[]`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgcb7n0do.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6juowrer.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp6juowrer.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp6juowrer.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp6juowrer.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmp6juowrer.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp6juowrer.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string nums_str = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        nums_str ~= to!string(num) ~ \" \";\n    }\n    return nums_str.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe1w61ium.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpe1w61ium.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpe1w61ium.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpe1w61ium.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpe1w61ium.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpe1w61ium.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    nums_int.sort;\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums[i] = int_to_num(nums_int[i]);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjjzsfyxl.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjjzsfyxl.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpjjzsfyxl.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpjjzsfyxl.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpjjzsfyxl.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpjjzsfyxl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprq_74apb.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprq_74apb.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmprq_74apb.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprq_74apb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpde2ccujc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpde2ccujc.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpde2ccujc.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpde2ccujc.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpde2ccujc.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpde2ccujc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuruyj0ej.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpuruyj0ej.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpuruyj0ej.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpuruyj0ej.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpuruyj0ej.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuruyj0ej.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx9aossyg.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpx9aossyg.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpx9aossyg.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpx9aossyg.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx9aossyg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num.to!string ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvfowgb1n.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvfowgb1n.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvfowgb1n.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpvfowgb1n.d(23): Error: no property\
    \ `to` for type `int`\\n/tmp/tmpvfowgb1n.d(25): Error: no property `trim` for\
    \ type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvfowgb1n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt_icihbq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpt_icihbq.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpt_icihbq.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpt_icihbq.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpt_icihbq.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpt_icihbq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpofxlavsh.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpofxlavsh.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpofxlavsh.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpofxlavsh.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofxlavsh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    auto nums = split(numbers);\n    sort(nums);\n    return join(nums);\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprq7gsf6f.d(13): Error: undefined identifier `split`\\n/tmp/tmprq7gsf6f.d(14):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmprq7gsf6f.d(15):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprq7gsf6f.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3dby000o.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp3dby000o.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3dby000o.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp3dby000o.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp3dby000o.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3dby000o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpql4vbw1b.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpql4vbw1b.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpql4vbw1b.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpql4vbw1b.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpql4vbw1b.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpql4vbw1b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsqily2q7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpsqily2q7.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpsqily2q7.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpsqily2q7.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpsqily2q7.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsqily2q7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_z4rr1kj.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp_z4rr1kj.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp_z4rr1kj.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp_z4rr1kj.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_z4rr1kj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptm8jk2yz.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmptm8jk2yz.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmptm8jk2yz.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmptm8jk2yz.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmptm8jk2yz.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmptm8jk2yz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        switch(num)\n        {\n\
    \            case \"zero\":\n                nums_int[i] = 0;\n              \
    \  break;\n            case \"one\":\n                nums_int[i] = 1;\n     \
    \           break;\n            case \"two\":\n                nums_int[i] = 2;\n\
    \                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] =\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ddwt17j.d(85): Error: expression expected, not `unittest`\\\
    n/tmp/tmp7ddwt17j.d(86): Error: found `{` when expecting `;` following statement\\\
    n/tmp/tmp7ddwt17j.d(95): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmp7ddwt17j.d(95): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7ddwt17j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv4ao0wgd.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpv4ao0wgd.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpv4ao0wgd.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv4ao0wgd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnkt8mo2t.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpnkt8mo2t.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpnkt8mo2t.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpnkt8mo2t.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpnkt8mo2t.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnkt8mo2t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= int_to_num(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpohw79a6n.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpohw79a6n.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpohw79a6n.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpohw79a6n.d(23):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpohw79a6n.d(25): Error: no\
    \ property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpohw79a6n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = nums.map!(a\
    \ => to!int(a));\n    nums_int.sort;\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiwt99fge.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpiwt99fge.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpiwt99fge.d(15):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpiwt99fge.d(16): Error:\
    \ no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpiwt99fge.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqopncfn.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmphqopncfn.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmphqopncfn.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphqopncfn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuyaiv0nq.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpuyaiv0nq.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpuyaiv0nq.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpuyaiv0nq.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuyaiv0nq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy5fekmmm.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpy5fekmmm.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpy5fekmmm.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpy5fekmmm.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpy5fekmmm.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpy5fekmmm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6clx3lzx.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp6clx3lzx.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp6clx3lzx.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp6clx3lzx.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6clx3lzx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxz8x1_pl.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpxz8x1_pl.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpxz8x1_pl.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpxz8x1_pl.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxz8x1_pl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdq2gb_zd.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdq2gb_zd.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpdq2gb_zd.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpdq2gb_zd.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpdq2gb_zd.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdq2gb_zd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl2nulxn6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpl2nulxn6.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpl2nulxn6.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpl2nulxn6.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpl2nulxn6.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl2nulxn6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] numeral_list = numbers.split();\n    int[] num_list = new\
    \ int[numeral_list.length];\n    foreach(i, numeral; numeral_list)\n    {\n  \
    \      num_list[i] = numeral_to_int(numeral);\n    }\n    sort(num_list);\n  \
    \  foreach(i, num; num_list)\n    {\n        numeral_list[i] = int_to_numeral(num);\n\
    \    }\n    return join(numeral_list, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplb5vqtgp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmplb5vqtgp.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmplb5vqtgp.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmplb5vqtgp.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmplb5vqtgp.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplb5vqtgp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string ret = \"\";\n    foreach(num; nums_int)\n   \
    \ {\n        ret ~= to!string(num) ~ \" \";\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1wytxe03.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1wytxe03.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp1wytxe03.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp1wytxe03.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1wytxe03.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7lalge9o.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp7lalge9o.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp7lalge9o.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp7lalge9o.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmp7lalge9o.d(25): Error:\
    \ no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7lalge9o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_rp9w8t.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4_rp9w8t.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4_rp9w8t.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4_rp9w8t.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4_rp9w8t.d(24):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4_rp9w8t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    // TODO: implement this function\n    //return \"\";\n    string[]\
    \ nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n \
    \   foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort();\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcf70u97_.d(15): Error: no property `split` for type `string`\\\
    n/tmp/tmpcf70u97_.d(19): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcf70u97_.d(21): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpcf70u97_.d(25): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcf70u97_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2 = nums.dup;\n\
    \    nums2.sort!((a, b) => a.compare(b));\n    return nums2.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpauwwzhaq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpauwwzhaq.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpauwwzhaq.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpauwwzhaq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj_y7rtej.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpj_y7rtej.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpj_y7rtej.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpj_y7rtej.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj_y7rtej.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr26ktp6w.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpr26ktp6w.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpr26ktp6w.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpr26ktp6w.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr26ktp6w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvtpi2slo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvtpi2slo.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvtpi2slo.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpvtpi2slo.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpvtpi2slo.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvtpi2slo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfh3z38v8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfh3z38v8.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpfh3z38v8.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpfh3z38v8.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpfh3z38v8.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfh3z38v8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(string num; numbers.split(\" \"))\n    {\n\
    \        nums ~= numeralToInt(num);\n    }\n    sort(nums);\n    string result;\n\
    \    foreach(int num; nums)\n    {\n        result ~= intToNumeral(num) ~ \" \"\
    ;\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi84ixlo5.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpi84ixlo5.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpi84ixlo5.d(22): Error: undefined identifier `intToNumeral`\\\
    n/tmp/tmpi84ixlo5.d(24): Error: no property `stripRight` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi84ixlo5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq_9gb8ua.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpq_9gb8ua.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpq_9gb8ua.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpq_9gb8ua.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpq_9gb8ua.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpq_9gb8ua.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        switch (nums[i])\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        switch (nums_int[i])\n   \
    \     {\n            case 0:\n                nums[i] = \"zero\";\n          \
    \      break;\n            case 1:\n                nums[i] = \"one\";\n     \
    \           break;\n            case 2:\n                nums[i] = \"two\";\n\
    \                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi74joon7.d(83): Error: found `unittest` instead of statement\\\
    n/tmp/tmpi74joon7.d(93): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpi74joon7.d(93): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpi74joon7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = sort(nums);\n\
    \    return join(nums_sorted, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa0kashke.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpa0kashke.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpa0kashke.d(15): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpa0kashke.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplm4rj55n.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmplm4rj55n.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmplm4rj55n.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmplm4rj55n.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmplm4rj55n.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplm4rj55n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoh6o014o.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpoh6o014o.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpoh6o014o.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpoh6o014o.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh6o014o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4y9ask2.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpa4y9ask2.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpa4y9ask2.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpa4y9ask2.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpa4y9ask2.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpa4y9ask2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int i, int\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4rbcdhp9.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4rbcdhp9.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4rbcdhp9.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4rbcdhp9.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4rbcdhp9.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4rbcdhp9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    nums_int.sort;\n    foreach(int i, int num; nums_int)\n    {\n   \
    \     nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjw8avxbx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjw8avxbx.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpjw8avxbx.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpjw8avxbx.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpjw8avxbx.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpjw8avxbx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        switch (nums[i])\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string[]\
    \ nums_str = new string[nums.length];\n    for (int i = 0; i < nums.length; i++)\n\
    \    {\n        switch (nums_int[i])\n        {\n            case 0:\n       \
    \         nums_str[i] = \"zero\";\n                break;\n            case 1:\n\
    \                nums_str[i] = \"one\";\n                break;\n            case\
    \ 2:\n                nums_str[i] = \"two\";\n                break;\n       \
    \     case 3:\n                nums_str[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums_str[i] = \"four\";\n              \
    \  break;\n            case 5:\n                nums_str[i] = \"five\";\n    \
    \            break;\n            case 6:\n                nums_str[i] = \"six\"\
    ;\n                break;\n            case 7:\n\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuqnwcvd8.d(80): Error: found `unittest` instead of statement\\\
    n/tmp/tmpuqnwcvd8.d(90): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpuqnwcvd8.d(90): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpuqnwcvd8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] num_ints = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        num_ints[i] = to!int(num);\n    }\n\
    \    sort(num_ints);\n    string[] num_strings = new string[num_ints.length];\n\
    \    foreach(i, num; num_ints)\n    {\n        num_strings[i] = to!string(num);\n\
    \    }\n    return join(num_strings, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1fjvmdij.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1fjvmdij.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp1fjvmdij.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp1fjvmdij.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp1fjvmdij.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1fjvmdij.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9hyakyr.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpv9hyakyr.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpv9hyakyr.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpv9hyakyr.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpv9hyakyr.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv9hyakyr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    auto nums = numbers.split(\" \");\n    auto nums_int = nums.map!(a\
    \ => to!int(a)).array;\n    nums_int.sort;\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprnoarmh2.d(13): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnoarmh2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppraur_dw.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmppraur_dw.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmppraur_dw.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmppraur_dw.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmppraur_dw.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppraur_dw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = numeralToInt(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = intToNumeral(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4kcmtfz1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4kcmtfz1.d(17): Error: undefined identifier `numeralToInt`\\n/tmp/tmp4kcmtfz1.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp4kcmtfz1.d(22):\
    \ Error: undefined identifier `intToNumeral`\\n/tmp/tmp4kcmtfz1.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp4kcmtfz1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(num; numbers.split(\" \"))\n    {\n      \
    \  nums ~= to!int(num);\n    }\n    nums.sort;\n    string result;\n    foreach(num;\
    \ nums)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp282uvon.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpp282uvon.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmpp282uvon.d(22):\
    \ Error: incompatible types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpp282uvon.d(24):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp282uvon.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwuyaw78t.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwuyaw78t.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpwuyaw78t.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpwuyaw78t.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpwuyaw78t.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwuyaw78t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n  \
    \  }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwc7g012i.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwc7g012i.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpwc7g012i.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpwc7g012i.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpwc7g012i.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwc7g012i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                num_ints[i] = 0;\n                break;\n\
    \            case \"one\":\n                num_ints[i] = 1;\n               \
    \ break;\n            case \"two\":\n                num_ints[i] = 2;\n      \
    \          break;\n            case \"three\":\n                num_ints[i] =\
    \ 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    foreach(i,\
    \ num; num_ints)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n                break;\n\
    \        }\n    }\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjmqbms25.d(89): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmqbms25.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach (int i; nums_int)\n\
    \    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpocd0d4yr.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpocd0d4yr.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpocd0d4yr.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpocd0d4yr.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpocd0d4yr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    import std.algorithm : sort;\n    import std.array : array;\n    import\
    \ std.conv : to;\n    import std.range : iota;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.traits : isIntegral;\n    import\
    \ std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2zviiok1.d(61): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2zviiok1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                nums_int[i] = 0;\n                break;\n\
    \            case \"one\":\n                nums_int[i] = 1;\n               \
    \ break;\n            case \"two\":\n                nums_int[i] = 2;\n      \
    \          break;\n            case \"three\":\n                nums_int[i] =\
    \ 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp69jjtc_j.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp69jjtc_j.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp69jjtc_j.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp69jjtc_j.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69jjtc_j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] ints = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\":\n                ints[i] = 0;\n                break;\n    \
    \        case \"one\":\n                ints[i] = 1;\n                break;\n\
    \            case \"two\":\n                ints[i] = 2;\n                break;\n\
    \            case \"three\":\n                ints[i] = 3;\n                break;\n\
    \            case \"four\":\n                ints[i] = 4;\n                break;\n\
    \            case \"five\":\n                ints[i] = 5;\n                break;\n\
    \            case \"six\":\n                ints[i] = 6;\n                break;\n\
    \            case \"seven\":\n                ints[i] = 7;\n                break;\n\
    \            case \"eight\":\n                ints[i] = 8;\n                break;\n\
    \            case \"nine\":\n                ints[i] = 9;\n                break;\n\
    \        }\n    }\n    ints.sort();\n    foreach(i, num; ints)\n    {\n      \
    \  switch(num)\n        {\n            case 0:\n                nums[i] = \"zero\"\
    ;\n                break;\n            case 1:\n                nums[i] = \"one\"\
    ;\n                break;\n            case 2:\n                nums[i] = \"two\"\
    ;\n                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\n                nums[i] = \"nine\"\
    ;\n                break;\n        }\n    }\n    return nums.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp04bstifp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp04bstifp.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp04bstifp.d(51):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp04bstifp.d(54): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp04bstifp.d(88): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp04bstifp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoubhtnn5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpoubhtnn5.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpoubhtnn5.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpoubhtnn5.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpoubhtnn5.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpoubhtnn5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprqmcdh1k.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprqmcdh1k.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmprqmcdh1k.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmprqmcdh1k.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmprqmcdh1k.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmprqmcdh1k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n\
    \    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6u93cizv.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp6u93cizv.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp6u93cizv.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6u93cizv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        num_ints[i] = num_to_int(num);\n\
    \    }\n    sort(num_ints);\n    foreach(int i, int num; num_ints)\n    {\n  \
    \      nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9tp7g7mt.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9tp7g7mt.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp9tp7g7mt.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp9tp7g7mt.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmp9tp7g7mt.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9tp7g7mt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    import std.algorithm.sorting : sort;\n    import std.conv : to;\n \
    \   import std.array : array;\n    import std.range : iota;\n    import std.range\
    \ : map;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsu9ypybb.d(60): Error: `;` expected\\n/tmp/tmpsu9ypybb.d(70):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu9ypybb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string[] nums_str = new string[nums.length];\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums_str[i] = to!string(num);\n    }\n    return\
    \ join(nums_str, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprla6cwkw.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprla6cwkw.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmprla6cwkw.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmprla6cwkw.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmprla6cwkw.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprla6cwkw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums;\n    foreach(string num; numbers.split(\" \"))\n    {\n\
    \        nums ~= to!int(num);\n    }\n    sort(nums);\n    string result;\n  \
    \  foreach(int num; nums)\n    {\n        result ~= to!string(num) ~ \" \";\n\
    \    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi1l6i_2t.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpi1l6i_2t.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpi1l6i_2t.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpi1l6i_2t.d(24): Error: no property\
    \ `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpi1l6i_2t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmzgmgh7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpbmzgmgh7.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpbmzgmgh7.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpbmzgmgh7.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpbmzgmgh7.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbmzgmgh7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    nums = new string[nums_int.length];\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz564xy6b.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpz564xy6b.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpz564xy6b.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpz564xy6b.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpz564xy6b.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz564xy6b.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = numbers.split(\" \").map!(a => to!int(a));\n    sort(nums);\n\
    \    return nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc6gckrkc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpc6gckrkc.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpc6gckrkc.d(15): Error: no property `map` for type `int[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc6gckrkc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    int[] nums = numbers.split(\" \").map!(a => to!int(a)).sort;\n    return\
    \ nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_rfr9p6i.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_rfr9p6i.d(14): Error: no property `map` for type `int[]`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rfr9p6i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \n*/\nstring sort_numbers(string numbers)\
    \ \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    std.algorithm.sort(nums_int);\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        nums_str[i] = to!string(num);\n\
    \    }\n    return join(nums_str, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmssbkjs7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmssbkjs7.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpmssbkjs7.d(19): Error: undefined identifier\
    \ `algorithm` in package `std`\\n/tmp/tmpmssbkjs7.d(23): Error: template instance\
    \ `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpmssbkjs7.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmssbkjs7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

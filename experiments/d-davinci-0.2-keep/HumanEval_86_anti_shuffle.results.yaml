name: HumanEval_86_anti_shuffle
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted = \"\";\n        foreach(char c; word)\n\
    \        {\n            sorted ~= c;\n        }\n        sorted.sort();\n    \
    \    result ~= sorted ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr798wbq0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpr798wbq0.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpr798wbq0.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr798wbq0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted_word = sort(word);\n        result ~= sorted_word;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz9p6xb0g.d(19): Error: undefined identifier `split`\\n/tmp/tmpz9p6xb0g.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9p6xb0g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string[] sortedWords = new string[words.length];\n   \
    \ foreach(i, word; words)\n    {\n        sortedWords[i] = word.sort;\n    }\n\
    \    return sortedWords.join(\" \");\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprz51z0jo.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprz51z0jo.d(23): Error: no property `sort` for type `string`\\n/tmp/tmprz51z0jo.d(25):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprz51z0jo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted_word = sort(word);\n        result ~= sorted_word;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqgv1q_wj.d(19): Error: undefined identifier `split`\\n/tmp/tmpqgv1q_wj.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgv1q_wj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string temp = \"\";\n        foreach(char c; word)\n        {\n\
    \            temp ~= c;\n        }\n        temp.sort();\n        result ~= temp\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5xqmi8_8.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp5xqmi8_8.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5xqmi8_8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = \"\";\n        foreach(char c; word)\n      \
    \  {\n            sortedWord ~= c;\n        }\n        sort(sortedWord);\n   \
    \     result ~= sortedWord;\n        result ~= \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpapgg2099.d(19): Error: undefined identifier `split`\\n/tmp/tmpapgg2099.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpapgg2099.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n\
    \        {\n            sortedWord ~= c;\n        }\n        sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb3v86qm5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpb3v86qm5.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3v86qm5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string[] chars = word.split;\n        chars.sort;\n        result ~=\
    \ chars.join;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp39z_yc32.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp39z_yc32.d(23): Error: no property `split` for type `string`\\n/tmp/tmp39z_yc32.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmp39z_yc32.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmp39z_yc32.d(28): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp39z_yc32.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ua9l8qq.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp7ua9l8qq.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmp7ua9l8qq.d(28): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ua9l8qq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiyvu07sc.d(19): Error: undefined identifier `split`\\n/tmp/tmpiyvu07sc.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyvu07sc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ot50i7v.d(19): Error: undefined identifier `split`\\n/tmp/tmp6ot50i7v.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6ot50i7v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n\
    \        {\n            sortedWord ~= c;\n        }\n        sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2f891di4.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp2f891di4.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp2f891di4.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2f891di4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted_word = sort(word);\n        result ~= sorted_word;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpha7y97bp.d(19): Error: undefined identifier `split`\\n/tmp/tmpha7y97bp.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpha7y97bp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        result ~= word.sort.idup;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr1huq1uw.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpr1huq1uw.d(23): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr1huq1uw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(char c; word)\n       \
    \ {\n            sorted ~= c;\n        }\n        sorted.sort;\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result.strip;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxgx5qzf.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpdxgx5qzf.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpdxgx5qzf.d(32):\
    \ Error: no property `strip` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdxgx5qzf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(char c; word)\n       \
    \ {\n            sorted ~= c;\n        }\n        sorted.sort();\n        result\
    \ ~= sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n \
    \   alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps0h9pldu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmps0h9pldu.d(28): Error: no property `sort` for type `string`\\n/tmp/tmps0h9pldu.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmps0h9pldu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string[] chars = word.split;\n        chars.sort;\n        result ~=\
    \ chars.join;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprs0s2k4y.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprs0s2k4y.d(23): Error: no property `split` for type `string`\\n/tmp/tmprs0s2k4y.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmprs0s2k4y.d(25): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmprs0s2k4y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        result ~= sort(word);\n        result ~= \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmply0auxah.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmply0auxah.d(23): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmply0auxah.d(26): Error: no property `trim` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmply0auxah.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sortedWord = word.sort;\n        result ~= sortedWord;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n \
    \   assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzvk1mro6.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpzvk1mro6.d(23): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvk1mro6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        char[] chars = word.dup;\n        sort(chars);\n        result ~= chars;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8tmgpd_j.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp8tmgpd_j.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tmgpd_j.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8_m0p6uj.d(19): Error: undefined identifier `split`\\n/tmp/tmp8_m0p6uj.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmp8_m0p6uj.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp8_m0p6uj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkjmaoks7.d(19): Error: undefined identifier `split`\\n/tmp/tmpkjmaoks7.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkjmaoks7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7fbivnp7.d(19): Error: undefined identifier `split`\\n/tmp/tmp7fbivnp7.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7fbivnp7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2vtsshy3.d(19): Error: undefined identifier `split`\\n/tmp/tmp2vtsshy3.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vtsshy3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdv0q79i5.d(19): Error: undefined identifier `split`\\n/tmp/tmpdv0q79i5.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdv0q79i5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = sort(word);\n        result ~= sorted;\n     \
    \   result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc_c7gk1u.d(19): Error: undefined identifier `split`\\n/tmp/tmpc_c7gk1u.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc_c7gk1u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted_word = sort(word);\n        result ~= sorted_word;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqx1a3j_t.d(19): Error: undefined identifier `split`\\n/tmp/tmpqx1a3j_t.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqx1a3j_t.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(w; words)\n\
    \    {\n        string word = w.idup;\n        sort(word);\n        result ~=\
    \ word ~ \" \";\n    }\n    return result.idup;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp2h6f1cj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpp2h6f1cj.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp2h6f1cj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = word.dup;\n        sort(sortedWord);\n   \
    \     result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_hfkbbr.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpg_hfkbbr.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpg_hfkbbr.d(27): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_hfkbbr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkks2yz4x.d(19): Error: undefined identifier `split`\\n/tmp/tmpkks2yz4x.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpkks2yz4x.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpkks2yz4x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpva3lkvyr.d(19): Error: undefined identifier `split`\\n/tmp/tmpva3lkvyr.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpva3lkvyr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted_word = word.dup;\n        sort(sorted_word);\n\
    \        result ~= sorted_word ~ \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpos1sjdtp.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpos1sjdtp.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpos1sjdtp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy0v86r6k.d(19): Error: undefined identifier `split`\\n/tmp/tmpy0v86r6k.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy0v86r6k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(sorted, c);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdlcyk456.d(19): Error: undefined identifier `split`\\n/tmp/tmpdlcyk456.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdlcyk456.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7nmkfxtn.d(19): Error: undefined identifier `split`\\n/tmp/tmp7nmkfxtn.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7nmkfxtn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqmk_rxly.d(19): Error: undefined identifier `split`\\n/tmp/tmpqmk_rxly.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpqmk_rxly.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpqmk_rxly.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string temp = \"\";\n        foreach(char c; word)\n        {\n\
    \            temp ~= c;\n        }\n        temp.sort();\n        result ~= temp\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2u244_e.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpu2u244_e.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpu2u244_e.d(31):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu2u244_e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string[] result;\n    foreach(word; words)\n    {\n  \
    \      string[] chars = word.split;\n        chars.sort;\n        result ~= chars.join;\n\
    \    }\n    return result.join(\" \");\n}\nunittest\n{\n    alias candidate =\
    \ anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjgaee8vc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjgaee8vc.d(23): Error: no property `split` for type `string`\\n/tmp/tmpjgaee8vc.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmpjgaee8vc.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmpjgaee8vc.d(27): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpjgaee8vc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_xp_v42e.d(19): Error: undefined identifier `split`\\n/tmp/tmp_xp_v42e.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmp_xp_v42e.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp_xp_v42e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqhheafz2.d(19): Error: undefined identifier `split`\\n/tmp/tmpqhheafz2.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpqhheafz2.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpqhheafz2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sorted = word.sort;\n        result ~= sorted;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkp066261.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpkp066261.d(23): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkp066261.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string[] chars = split(word);\n        sort(chars);\n        result\
    \ ~= join(chars);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe6s_9dma.d(19): Error: undefined identifier `split`\\n/tmp/tmpe6s_9dma.d(23):\
    \ Error: undefined identifier `split`\\n/tmp/tmpe6s_9dma.d(24): Error: undefined\
    \ identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpe6s_9dma.d(25): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe6s_9dma.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf9zhzkay.d(19): Error: undefined identifier `split`\\n/tmp/tmpf9zhzkay.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9zhzkay.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sortedWord = \"\";\n        foreach(c; word)\n        {\n    \
    \        sortedWord ~= c;\n        }\n        sortedWord.sort;\n        result\
    \ ~= sortedWord;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiu_epvgj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpiu_epvgj.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu_epvgj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        char[] chars = word.dup;\n        sort(chars);\n        result ~= chars;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeh3rw_us.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpeh3rw_us.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeh3rw_us.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string\
    \ result;\n    string[] words = split(s);\n    foreach(string word; words)\n \
    \   {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpklwf5jds.d(20): Error: undefined identifier `split`\\n/tmp/tmpklwf5jds.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklwf5jds.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = sort(word);\n        result ~= sorted;\n     \
    \   result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6i9nfah1.d(19): Error: undefined identifier `split`\\n/tmp/tmp6i9nfah1.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6i9nfah1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv7g_xb_r.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpv7g_xb_r.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7g_xb_r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lu5i7rw.d(19): Error: undefined identifier `split`\\n/tmp/tmp8lu5i7rw.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lu5i7rw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = word.sort();\n        result ~= sortedWord\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlr7maxr.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvlr7maxr.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpvlr7maxr.d(26):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvlr7maxr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string[] result;\n    foreach(word; words)\n    {\n \
    \       result ~= sort(word);\n    }\n    return join(result);\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsxonpb1a.d(19): Error: undefined identifier `split`\\n/tmp/tmpsxonpb1a.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpsxonpb1a.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsxonpb1a.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbn0drftv.d(19): Error: undefined identifier `split`\\n/tmp/tmpbn0drftv.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn0drftv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(char c; word)\n        {\n\
    \            sorted ~= c;\n        }\n        sorted = sort(sorted);\n       \
    \ result ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplll81kvk.d(19): Error: undefined identifier `split`\\n/tmp/tmplll81kvk.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplll81kvk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = sort(word);\n        result ~= sortedWord\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmqgohezv.d(19): Error: undefined identifier `split`\\n/tmp/tmpmqgohezv.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmqgohezv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted ~ \" \"\
    ;\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate =\
    \ anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg00kxqbl.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpg00kxqbl.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpg00kxqbl.d(26):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpg00kxqbl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n\
    \        {\n            sortedWord ~= c;\n        }\n        sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstkema8d.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpstkema8d.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpstkema8d.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpstkema8d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sorted = word.dup;\n        sort(sorted);\n        result\
    \ ~= sorted;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplx6pjtjo.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmplx6pjtjo.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplx6pjtjo.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj0nl4pxp.d(19): Error: undefined identifier `split`\\n/tmp/tmpj0nl4pxp.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj0nl4pxp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string[] new_words;\n    foreach(word; words)\n\
    \    {\n        new_words ~= sort(word);\n    }\n    return join(new_words, \"\
    \ \");\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpejlfmz.d(19): Error: undefined identifier `split`\\n/tmp/tmpjpejlfmz.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpjpejlfmz.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpejlfmz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        result ~= anti_shuffle_word(word) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5a_mgru2.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp5a_mgru2.d(23): Error: undefined identifier `anti_shuffle_word`\\n/tmp/tmp5a_mgru2.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5a_mgru2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj8ft9kgf.d(19): Error: undefined identifier `split`\\n/tmp/tmpj8ft9kgf.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj8ft9kgf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkulv2fbg.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpkulv2fbg.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpkulv2fbg.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkulv2fbg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo124t5iu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpo124t5iu.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpo124t5iu.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo124t5iu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = word.dup;\n        sort(sortedWord);\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfs8b69eh.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpfs8b69eh.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpfs8b69eh.d(27): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfs8b69eh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    //\
    \ Write your code here\n    string[] words = s.split(\" \");\n    string result\
    \ = \"\";\n    foreach(string word; words)\n    {\n        string sorted = \"\"\
    ;\n        foreach(char c; word)\n        {\n            sorted ~= c;\n      \
    \  }\n        sorted.sort();\n        result ~= sorted ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9zx_2vua.d(20): Error: no property `split` for type `string`\\\
    n/tmp/tmp9zx_2vua.d(29): Error: no property `sort` for type `string`\\n/tmp/tmp9zx_2vua.d(32):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9zx_2vua.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sort(sorted);\n        result ~= sorted;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp54xhjn48.d(19): Error: undefined identifier `split`\\n/tmp/tmp54xhjn48.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp54xhjn48.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sorted = sorted.sort();\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdrchs0hn.d(19): Error: undefined identifier `split`\\n/tmp/tmpdrchs0hn.d(28):\
    \ Error: no property `sort` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdrchs0hn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string[] chars = split(word);\n        sort(chars);\n        result\
    \ ~= join(chars);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7i54bnuu.d(19): Error: undefined identifier `split`\\n/tmp/tmp7i54bnuu.d(23):\
    \ Error: undefined identifier `split`\\n/tmp/tmp7i54bnuu.d(24): Error: undefined\
    \ identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp7i54bnuu.d(25): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7i54bnuu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83rv2efl.d(19): Error: undefined identifier `split`\\n/tmp/tmp83rv2efl.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83rv2efl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted_word = word.sort();\n        result ~= sorted_word\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6kp8i3ng.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp6kp8i3ng.d(23): Error: no property `sort` for type `string`\\n/tmp/tmp6kp8i3ng.d(26):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6kp8i3ng.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdib448pf.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpdib448pf.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpdib448pf.d(31):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdib448pf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppc7_tjro.d(19): Error: undefined identifier `split`\\n/tmp/tmppc7_tjro.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmppc7_tjro.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmppc7_tjro.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = to!(char[])(word);\n        sort(chars);\n    \
    \    result ~= to!string(chars);\n        result ~= \" \";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpytto1d28.d(19): Error: undefined identifier `split`\\n/tmp/tmpytto1d28.d(23):\
    \ Error: template instance `to!(char[])` template `to` is not defined, did you\
    \ mean No?\\n/tmp/tmpytto1d28.d(24): Error: undefined identifier `sort`, did you\
    \ mean function `sqrt`?\\n/tmp/tmpytto1d28.d(25): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpytto1d28.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sort(sorted);\n        result ~= sorted;\n\
    \        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbisxlcbp.d(19): Error: undefined identifier `split`\\n/tmp/tmpbisxlcbp.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbisxlcbp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvkqkw84p.d(19): Error: undefined identifier `split`\\n/tmp/tmpvkqkw84p.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvkqkw84p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string[] sortedWords = new string[words.length];\n\
    \    foreach(int i, string word; words)\n    {\n        sortedWords[i] = sort(word);\n\
    \    }\n    return join(sortedWords, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7jj90lk.d(19): Error: undefined identifier `split`\\n/tmp/tmps7jj90lk.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmps7jj90lk.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7jj90lk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string new_word = \"\";\n        foreach(char; word)\n        {\n   \
    \         new_word ~= char;\n        }\n        new_word = new_word.sort;\n  \
    \      result ~= new_word ~ \" \";\n    }\n    return result.stripRight;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpirunzn1x.d(24): Error: no identifier for declarator `char`\\\
    n/tmp/tmpirunzn1x.d(26): Error: found `;` when expecting `.` following char\\\
    n/tmp/tmpirunzn1x.d(27): Error: found `}` when expecting identifier following\
    \ `char`.\\n/tmp/tmpirunzn1x.d(28): Error: found `new_word` when expecting `;`\
    \ following statement\\n/tmp/tmpirunzn1x.d(28): Error: found `=` instead of statement\\\
    n/tmp/tmpirunzn1x.d(33): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpirunzn1x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        result ~= anti_shuffle_word(word) ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlg1ikwx.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvlg1ikwx.d(23): Error: undefined identifier `anti_shuffle_word`\\n/tmp/tmpvlg1ikwx.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvlg1ikwx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= min(word);\n            word = word.replaceFirst(min(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdj5fn2r4.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpdj5fn2r4.d(26): Error: undefined identifier `min`, did you mean function\
    \ `main`?\\n/tmp/tmpdj5fn2r4.d(27): Error: no property `replaceFirst` for type\
    \ `string`\\n/tmp/tmpdj5fn2r4.d(31): Error: no property `stripRight` for type\
    \ `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdj5fn2r4.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = to!(char[])(word);\n        sort(chars);\n    \
    \    result ~= to!string(chars);\n        result ~= \" \";\n    }\n    return\
    \ result.idup;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpswamczhy.d(19): Error: undefined identifier `split`\\n/tmp/tmpswamczhy.d(23):\
    \ Error: template instance `to!(char[])` template `to` is not defined, did you\
    \ mean No?\\n/tmp/tmpswamczhy.d(24): Error: undefined identifier `sort`, did you\
    \ mean function `sqrt`?\\n/tmp/tmpswamczhy.d(25): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpswamczhy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg1741c21.d(19): Error: undefined identifier `split`\\n/tmp/tmpg1741c21.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpg1741c21.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpg1741c21.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(char c; word)\n       \
    \ {\n            sorted ~= c;\n        }\n        sorted.sort();\n        result\
    \ ~= sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n \
    \   alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_965mxp2.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp_965mxp2.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp_965mxp2.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_965mxp2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string temp = \"\";\n        foreach(c; word)\n        {\n   \
    \         temp ~= c;\n        }\n        temp.sort();\n        result ~= temp\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph60cjlre.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmph60cjlre.d(28): Error: no property `sort` for type `string`\\n/tmp/tmph60cjlre.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmph60cjlre.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps5dn265y.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmps5dn265y.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmps5dn265y.d(28): Error: no property `trimRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5dn265y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.dup;\n        sort(sorted);\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwomo8gvc.d(19): Error: undefined identifier `split`\\n/tmp/tmpwomo8gvc.d(24):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwomo8gvc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(char c; word)\n        {\n\
    \            sorted ~= c;\n        }\n        sorted = sort(sorted);\n       \
    \ result ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoqyw7j7b.d(19): Error: undefined identifier `split`\\n/tmp/tmpoqyw7j7b.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqyw7j7b.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sorted = sort(sorted);\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpihcb9m1a.d(19): Error: undefined identifier `split`\\n/tmp/tmpihcb9m1a.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihcb9m1a.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        result ~= word.sort();\n        result ~= \" \";\n  \
    \  }\n    return result.chomp();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy57kwus0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpy57kwus0.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpy57kwus0.d(26):\
    \ Error: no property `chomp` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpy57kwus0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppjbnwlxw.d(19): Error: undefined identifier `split`\\n/tmp/tmppjbnwlxw.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppjbnwlxw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = \"\";\n        foreach(c; word)\n        {\n\
    \            sortedWord ~= c;\n        }\n        sortedWord.sort();\n       \
    \ result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcf1ask0j.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpcf1ask0j.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpcf1ask0j.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcf1ask0j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpinbls5n8.d(19): Error: undefined identifier `split`\\n/tmp/tmpinbls5n8.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpinbls5n8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm4ifzf9l.d(19): Error: undefined identifier `split`\\n/tmp/tmpm4ifzf9l.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4ifzf9l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp81b_s5qd.d(19): Error: undefined identifier `split`\\n/tmp/tmp81b_s5qd.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmp81b_s5qd.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp81b_s5qd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n  \
    \  alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n\
    \    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgk4kijmz.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpgk4kijmz.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpgk4kijmz.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgk4kijmz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_5yfdn5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpm_5yfdn5.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpm_5yfdn5.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpm_5yfdn5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkr87gx38.d(19): Error: undefined identifier `split`\\n/tmp/tmpkr87gx38.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkr87gx38.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted = \"\";\n        foreach(char c; word)\n\
    \        {\n            sorted ~= c;\n        }\n        sorted.sort();\n    \
    \    result ~= sorted ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkb4i77ki.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpkb4i77ki.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpkb4i77ki.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkb4i77ki.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaphre8h5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpaphre8h5.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaphre8h5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw_rikxq5.d(19): Error: undefined identifier `split`\\n/tmp/tmpw_rikxq5.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_rikxq5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = \"\";\n        foreach(c; word)\n        {\n\
    \            sortedWord ~= c;\n        }\n        sortedWord.sort();\n       \
    \ result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvt5aurr4.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvt5aurr4.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpvt5aurr4.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvt5aurr4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1p76_rfc.d(19): Error: undefined identifier `split`\\n/tmp/tmp1p76_rfc.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1p76_rfc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmvrccfsr.d(19): Error: undefined identifier `split`\\n/tmp/tmpmvrccfsr.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvrccfsr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcknax270.d(19): Error: undefined identifier `split`\\n/tmp/tmpcknax270.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcknax270.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa6fnajeg.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpa6fnajeg.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa6fnajeg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpljc6j4so.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpljc6j4so.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljc6j4so.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted;\n    \
    \    result ~= \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpatixk9wc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpatixk9wc.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpatixk9wc.d(27):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpatixk9wc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string[] sortedWords = new string[words.length];\n   \
    \ foreach(i, word; words)\n    {\n        string[] chars = word.split;\n     \
    \   sort(chars);\n        sortedWords[i] = chars.join;\n    }\n    return sortedWords.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpelzukwzl.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpelzukwzl.d(23): Error: no property `split` for type `string`\\n/tmp/tmpelzukwzl.d(24):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpelzukwzl.d(25):\
    \ Error: no property `join` for type `string[]`\\n/tmp/tmpelzukwzl.d(27): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpelzukwzl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = sort(word);\n        result ~= sorted;\n     \
    \   result ~= \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp51p02v2_.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp51p02v2_.d(23): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmp51p02v2_.d(27): Error: no property `trimRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51p02v2_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string[] result;\n    foreach(word; words)\n  \
    \  {\n        string[] chars = word.split(\"\");\n        chars.sort();\n    \
    \    result ~= chars.join(\"\");\n    }\n    return result.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgvrbr2ag.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpgvrbr2ag.d(23): Error: no property `split` for type `string`\\n/tmp/tmpgvrbr2ag.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmpgvrbr2ag.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmpgvrbr2ag.d(27): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpgvrbr2ag.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string[] result = new string[words.length];\n \
    \   foreach(i, word; words)\n    {\n        string[] chars = word.split(\"\");\n\
    \        chars.sort();\n        result[i] = chars.join(\"\");\n    }\n    return\
    \ result.join(\" \");\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp11krmggl.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp11krmggl.d(23): Error: no property `split` for type `string`\\n/tmp/tmp11krmggl.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmp11krmggl.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmp11krmggl.d(27): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp11krmggl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = \"\";\n        foreach(c; word)\n        {\n\
    \            sortedWord ~= c;\n        }\n        sortedWord = sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3h8cqg5o.d(19): Error: undefined identifier `split`\\n/tmp/tmp3h8cqg5o.d(28):\
    \ Error: no property `sort` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3h8cqg5o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(char c; word)\n        {\n\
    \            sorted ~= c;\n        }\n        sorted = sort(sorted);\n       \
    \ result ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hgw7yt8.d(19): Error: undefined identifier `split`\\n/tmp/tmp7hgw7yt8.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hgw7yt8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sort(sorted);\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_co5tpd5.d(19): Error: undefined identifier `split`\\n/tmp/tmp_co5tpd5.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_co5tpd5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.dup;\n        sort(sorted.begin, sorted.end);\n\
    \        result ~= sorted;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjn69nl2b.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpjn69nl2b.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpjn69nl2b.d(28): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjn69nl2b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sortedWord = sort!((a, b) => a < b)(word);\n        result\
    \ ~= sortedWord;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmwxme9_5.d(19): Error: undefined identifier `split`\\n/tmp/tmpmwxme9_5.d(23):\
    \ Error: template instance `sort!((a, b) => a < b)` template `sort` is not defined,\
    \ did you mean sqrt?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwxme9_5.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa58r82g3.d(19): Error: undefined identifier `split`\\n/tmp/tmpa58r82g3.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa58r82g3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsifmbhyp.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpsifmbhyp.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpsifmbhyp.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpsifmbhyp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        result ~= anti_shuffle_word(word) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9xht56fo.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp9xht56fo.d(23): Error: undefined identifier `anti_shuffle_word`\\n/tmp/tmp9xht56fo.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9xht56fo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n   \
    \     {\n            sortedWord ~= minElement(word);\n            word = word.replace(minElement(word),\
    \ \"\");\n        }\n        result ~= sortedWord ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbb616w3m.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpbb616w3m.d(26): Error: undefined identifier `minElement`\\n/tmp/tmpbb616w3m.d(27):\
    \ Error: no property `replace` for type `string`\\n/tmp/tmpbb616w3m.d(31): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbb616w3m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sorted = sort(sorted);\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7cli1ttw.d(19): Error: undefined identifier `split`\\n/tmp/tmp7cli1ttw.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cli1ttw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = to!(char[])(word);\n        sort(chars);\n    \
    \    result ~= to!string(chars);\n        result ~= \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplklp8enm.d(19): Error: undefined identifier `split`\\n/tmp/tmplklp8enm.d(23):\
    \ Error: template instance `to!(char[])` template `to` is not defined, did you\
    \ mean No?\\n/tmp/tmplklp8enm.d(24): Error: undefined identifier `sort`, did you\
    \ mean function `sqrt`?\\n/tmp/tmplklp8enm.d(25): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmplklp8enm.d(28): Error:\
    \ no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplklp8enm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars.idup;\n        result ~= \" \";\n    }\n    return result.idup[0..$-1];\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsg9pbfdt.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpsg9pbfdt.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsg9pbfdt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8h0y7dc.d(19): Error: undefined identifier `split`\\n/tmp/tmpf8h0y7dc.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpf8h0y7dc.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpf8h0y7dc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmple4uz_gq.d(19): Error: undefined identifier `split`\\n/tmp/tmple4uz_gq.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmple4uz_gq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbnca5b2q.d(19): Error: undefined identifier `split`\\n/tmp/tmpbnca5b2q.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnca5b2q.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted;\n    \
    \    result ~= \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpelip236w.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpelip236w.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpelip236w.d(27):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpelip236w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sortedWord = sort(word);\n        result ~= sortedWord;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n \
    \   assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpizopjsvz.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpizopjsvz.d(23): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizopjsvz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        result ~= sort(word);\n        result ~= \" \";\n   \
    \ }\n    return result.stripRight();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpixe81n2b.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpixe81n2b.d(23): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpixe81n2b.d(26): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixe81n2b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string[] chars = word.split;\n        chars.sort;\n        result ~=\
    \ chars.join;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoh3gdfc_.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpoh3gdfc_.d(23): Error: no property `split` for type `string`\\n/tmp/tmpoh3gdfc_.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmpoh3gdfc_.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmpoh3gdfc_.d(28): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpoh3gdfc_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted_word = \"\";\n        foreach(c; word)\n       \
    \ {\n            sorted_word ~= c;\n        }\n        sorted_word.sort();\n \
    \       result ~= sorted_word ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpngymhexj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpngymhexj.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpngymhexj.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpngymhexj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        result ~= word.sort;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsoapdf0k.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpsoapdf0k.d(23): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsoapdf0k.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted;\n    \
    \    result ~= \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb5bwbwnu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpb5bwbwnu.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpb5bwbwnu.d(27):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb5bwbwnu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoph84kca.d(19): Error: undefined identifier `split`\\n/tmp/tmpoph84kca.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoph84kca.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted_word = \"\";\n        foreach(char c; word)\n\
    \        {\n            sorted_word ~= c;\n        }\n        sorted_word.sort();\n\
    \        result ~= sorted_word ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvxtiyhzl.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpvxtiyhzl.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpvxtiyhzl.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvxtiyhzl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted = word.dup;\n        sort(sorted.begin,\
    \ sorted.end);\n        result ~= sorted;\n        result ~= \" \";\n    }\n \
    \   return result.idup;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqiqy29gg.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpqiqy29gg.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqiqy29gg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= c;\n        }\n        sorted = sort(sorted);\n        result\
    \ ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdmmf6psd.d(19): Error: undefined identifier `split`\\n/tmp/tmpdmmf6psd.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdmmf6psd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp614hqgid.d(19): Error: undefined identifier `split`\\n/tmp/tmp614hqgid.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmp614hqgid.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp614hqgid.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = sort(word);\n        result ~= sortedWord\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyi6x9w23.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpyi6x9w23.d(23): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpyi6x9w23.d(26): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyi6x9w23.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        result ~= anti_shuffle_word(word) ~ \" \";\n    }\n \
    \   return result.idup.chomp;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr90awsfg.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpr90awsfg.d(23): Error: undefined identifier `anti_shuffle_word`\\n/tmp/tmpr90awsfg.d(25):\
    \ Error: no property `chomp` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr90awsfg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string new_word = \"\";\n        foreach(char c; word)\n     \
    \   {\n            new_word ~= c;\n        }\n        new_word.sort();\n     \
    \   result ~= new_word ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv8ys57au.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpv8ys57au.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv8ys57au.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sorted = \"\";\n        foreach(c; word)\n        {\n        \
    \    sorted ~= c;\n        }\n        sorted.sort;\n        result ~= sorted;\n\
    \        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy6mhpe51.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpy6mhpe51.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy6mhpe51.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string[] sorted_words = new string[words.length];\n  \
    \  foreach(i, word; words)\n    {\n        string sorted_word = word.dup;\n  \
    \      sorted_word.sort;\n        sorted_words[i] = sorted_word;\n    }\n    return\
    \ sorted_words.join;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0bnhurka.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp0bnhurka.d(24): Error: no property `sort` for type `string`\\n/tmp/tmp0bnhurka.d(27):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0bnhurka.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbndxna9v.d(19): Error: undefined identifier `split`\\n/tmp/tmpbndxna9v.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbndxna9v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string[] sorted_words = new string[words.length];\n \
    \   foreach(i, word; words)\n    {\n        sorted_words[i] = sort(word);\n  \
    \  }\n    return join(sorted_words);\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3kdfy2w7.d(19): Error: undefined identifier `split`\\n/tmp/tmp3kdfy2w7.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp3kdfy2w7.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3kdfy2w7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n   \
    \     {\n            sortedWord ~= c;\n        }\n        sortedWord = sort(sortedWord);\n\
    \        result ~= sortedWord;\n        result ~= \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmehykyvr.d(19): Error: undefined identifier `split`\\n/tmp/tmpmehykyvr.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmehykyvr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcke33vn2.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpcke33vn2.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpcke33vn2.d(28): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcke33vn2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_4d9ytl.d(19): Error: undefined identifier `split`\\n/tmp/tmps_4d9ytl.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_4d9ytl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string temp = \"\";\n        foreach(c; word)\n        {\n   \
    \         temp ~= c;\n        }\n        temp.sort();\n        result ~= temp\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkcg5aoo6.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpkcg5aoo6.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpkcg5aoo6.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkcg5aoo6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpywb8p6sj.d(19): Error: undefined identifier `split`\\n/tmp/tmpywb8p6sj.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpywb8p6sj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(c, sorted);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpip0bqpbd.d(19): Error: undefined identifier `split`\\n/tmp/tmpip0bqpbd.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip0bqpbd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = word.dup;\n        sort(sorted);\n        result\
    \ ~= sorted;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkaz3kwbs.d(19): Error: undefined identifier `split`\\n/tmp/tmpkaz3kwbs.d(24):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkaz3kwbs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi0h1liwt.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpi0h1liwt.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi0h1liwt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sorted_word = \"\";\n        foreach(c; word)\n        {\n   \
    \         sorted_word ~= min(c, sorted_word);\n        }\n        result ~= sorted_word;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptuz6_yf7.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmptuz6_yf7.d(26): Error: undefined identifier `min`, did you mean function\
    \ `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuz6_yf7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprw4uuzyu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprw4uuzyu.d(28): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw4uuzyu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        std.algorithm.sort(chars);\n\
    \        result ~= chars;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj2ns67ut.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpj2ns67ut.d(24): Error: undefined identifier `algorithm` in package `std`\\\
    n/tmp/tmpj2ns67ut.d(28): Error: no property `stripRight` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj2ns67ut.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr_zfug_g.d(19): Error: undefined identifier `split`\\n/tmp/tmpr_zfug_g.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr_zfug_g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        char[] chars = word.dup;\n        std.algorithm.sort(chars);\n      \
    \  result ~= chars;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprdl5mycj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmprdl5mycj.d(24): Error: undefined identifier `algorithm` in package `std`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprdl5mycj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted = sort(sorted);\n        result\
    \ ~= sorted ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2csaau49.d(19): Error: undefined identifier `split`\\n/tmp/tmp2csaau49.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2csaau49.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sorted = word.sort;\n        result ~= sorted;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n \
    \   assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpewoh26im.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpewoh26im.d(23): Error: no property `sort` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpewoh26im.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string newWord = \"\";\n        foreach(char c; word)\n        {\n\
    \            newWord ~= c;\n        }\n        newWord = sort(newWord);\n    \
    \    result ~= newWord ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7xc1pm4b.d(19): Error: undefined identifier `split`\\n/tmp/tmp7xc1pm4b.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7xc1pm4b.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi2waocrf.d(19): Error: undefined identifier `split`\\n/tmp/tmpi2waocrf.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpi2waocrf.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpi2waocrf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted_word = \"\";\n        foreach(c; word)\n       \
    \ {\n            sorted_word ~= c;\n        }\n        sorted_word.sort();\n \
    \       result ~= sorted_word ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0gmfj1u7.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp0gmfj1u7.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp0gmfj1u7.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0gmfj1u7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    auto\
    \ words = split(s);\n    string result;\n    foreach(word; words)\n    {\n   \
    \     string sorted = word.sort();\n        result ~= sorted;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9y5tv254.d(19): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9y5tv254.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp07juwnih.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp07juwnih.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp07juwnih.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp07juwnih.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted ~ \" \"\
    ;\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias candidate\
    \ = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdfp9e7m5.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpdfp9e7m5.d(23): Error: no property `sort` for type `string`\\n/tmp/tmpdfp9e7m5.d(26):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdfp9e7m5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp742c0bqf.d(19): Error: undefined identifier `split`\\n/tmp/tmp742c0bqf.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp742c0bqf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjym3ys45.d(19): Error: undefined identifier `split`\\n/tmp/tmpjym3ys45.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmpjym3ys45.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpjym3ys45.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6rvpulle.d(19): Error: undefined identifier `split`\\n/tmp/tmp6rvpulle.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rvpulle.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(char c; word)\n       \
    \ {\n            sorted ~= c;\n        }\n        sorted = sort(sorted);\n   \
    \     result ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyfdoqu58.d(19): Error: undefined identifier `split`\\n/tmp/tmpyfdoqu58.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyfdoqu58.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    foreach(i, word; words)\n    {\n        words[i]\
    \ = word.sort();\n    }\n    return words.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplyvg8x5z.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmplyvg8x5z.d(22): Error: no property `sort` for type `string`\\n/tmp/tmplyvg8x5z.d(24):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplyvg8x5z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s, \" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        result ~= sort(word);\n        result ~= \" \";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk_pl3rre.d(19): Error: undefined identifier `split`\\n/tmp/tmpk_pl3rre.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pl3rre.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string[] chars = word.split(\"\");\n        chars.sort();\n  \
    \      result ~= chars.join(\"\");\n        result ~= \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n\
    \    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp24ukwo8l.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp24ukwo8l.d(23): Error: no property `split` for type `string`\\n/tmp/tmp24ukwo8l.d(24):\
    \ Error: no property `sort` for type `string[]`\\n/tmp/tmp24ukwo8l.d(25): Error:\
    \ no property `join` for type `string[]`\\n/tmp/tmp24ukwo8l.d(28): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp24ukwo8l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string[] sortedWords = new string[words.length];\n  \
    \  foreach(i, word; words)\n    {\n        sortedWords[i] = sort(word);\n    }\n\
    \    return join(sortedWords);\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxwee3spu.d(19): Error: undefined identifier `split`\\n/tmp/tmpxwee3spu.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpxwee3spu.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwee3spu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdzb08iql.d(19): Error: undefined identifier `split`\\n/tmp/tmpdzb08iql.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdzb08iql.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp3dcnkl5.d(19): Error: undefined identifier `split`\\n/tmp/tmpp3dcnkl5.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3dcnkl5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string new_word = \"\";\n        foreach(c; word)\n        {\n\
    \            new_word ~= c;\n        }\n        new_word = sort(new_word);\n \
    \       result ~= new_word ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp622er4qv.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp622er4qv.d(28): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp622er4qv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string[] result = new string[words.length];\n \
    \   foreach(i, word; words)\n    {\n        result[i] = word.sort();\n    }\n\
    \    return result.join(\" \");\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp45tocehu.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp45tocehu.d(23): Error: no property `sort` for type `string`\\n/tmp/tmp45tocehu.d(25):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp45tocehu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5g72ivlo.d(19): Error: undefined identifier `split`\\n/tmp/tmp5g72ivlo.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5g72ivlo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw0jmo_ee.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpw0jmo_ee.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpw0jmo_ee.d(28): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0jmo_ee.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= min(sorted, c);\n        }\n        result ~= sorted;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkh3o_sft.d(19): Error: undefined identifier `split`\\n/tmp/tmpkh3o_sft.d(26):\
    \ Error: undefined identifier `min`, did you mean function `main`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkh3o_sft.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(char c; word)\n        {\n\
    \            sorted ~= c;\n        }\n        sorted = sort(sorted);\n       \
    \ result ~= sorted;\n        result ~= \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4enwwt7i.d(19): Error: undefined identifier `split`\\n/tmp/tmp4enwwt7i.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4enwwt7i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = word.sort();\n        result ~= sorted;\n    \
    \    result ~= \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp71o1wy8i.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp71o1wy8i.d(23): Error: no property `sort` for type `string`\\n/tmp/tmp71o1wy8i.d(27):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp71o1wy8i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptatau6nj.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmptatau6nj.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptatau6nj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = \"\";\n        foreach(char c; word)\n      \
    \  {\n            sortedWord ~= c;\n        }\n        sort(sortedWord);\n   \
    \     result ~= sortedWord;\n        result ~= \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprym22g38.d(19): Error: undefined identifier `split`\\n/tmp/tmprym22g38.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprym22g38.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sortedWord = word.dup;\n        sort(sortedWord);\n   \
    \     result ~= sortedWord ~ \" \";\n    }\n    return result.trimRight();\n}\n\
    unittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\"\
    ) == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz7c4ighf.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpz7c4ighf.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpz7c4ighf.d(27): Error: no property `trimRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7c4ighf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        result ~= sort(word);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph0l8pkoa.d(19): Error: undefined identifier `split`\\n/tmp/tmph0l8pkoa.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0l8pkoa.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias\
    \ candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"\
    hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n  \
    \  assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4qc6wdc.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpw4qc6wdc.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpw4qc6wdc.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpw4qc6wdc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        char[] chars = word.dup;\n        sort(chars);\n        result\
    \ ~= chars;\n        result ~= \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl1_9_wp0.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpl1_9_wp0.d(24): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpl1_9_wp0.d(28): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1_9_wp0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n\
    \        {\n            sortedWord ~= c;\n        }\n        sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5gr8yeqg.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp5gr8yeqg.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp5gr8yeqg.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5gr8yeqg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpayrfjxdj.d(19): Error: undefined identifier `split`\\n/tmp/tmpayrfjxdj.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpayrfjxdj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(string word;\
    \ words)\n    {\n        string sorted = \"\";\n        foreach(char c; word)\n\
    \        {\n            sorted ~= c;\n        }\n        sorted.sort();\n    \
    \    result ~= sorted ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpute8hvq4.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpute8hvq4.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpute8hvq4.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpute8hvq4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(string word; words)\n\
    \    {\n        string sorted_word = \"\";\n        foreach(char c; word)\n  \
    \      {\n            sorted_word ~= c;\n        }\n        sorted_word = sort(sorted_word);\n\
    \        result ~= sorted_word ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiqjs3_f6.d(19): Error: undefined identifier `split`\\n/tmp/tmpiqjs3_f6.d(28):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiqjs3_f6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = sort(word);\n        result ~= sorted;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n  \
    \  assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"\
    ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfl5fani9.d(19): Error: undefined identifier `split`\\n/tmp/tmpfl5fani9.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfl5fani9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split(\" \");\n    string result = \"\";\n    foreach(word; words)\n\
    \    {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n \
    \           sorted ~= c;\n        }\n        sorted.sort();\n        result ~=\
    \ sorted ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n  \
    \  alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n\
    \    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5cn0yl2r.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmp5cn0yl2r.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp5cn0yl2r.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5cn0yl2r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sorted = \"\";\n        foreach(c; word)\n        {\n    \
    \        sorted ~= minElement(word);\n            word = replace(word, minElement(word),\
    \ \"\");\n        }\n        result ~= sorted ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphkqbc21m.d(19): Error: undefined identifier `split`\\n/tmp/tmphkqbc21m.d(26):\
    \ Error: undefined identifier `minElement`\\n/tmp/tmphkqbc21m.d(27): Error: undefined\
    \ identifier `replace`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmphkqbc21m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqz4acc_l.d(19): Error: undefined identifier `split`\\n/tmp/tmpqz4acc_l.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqz4acc_l.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        char[] chars = to!(char[])(word);\n        sort(chars);\n       \
    \ result ~= to!string(chars);\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n\
    \    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiqtkbb10.d(19): Error: undefined identifier `split`\\n/tmp/tmpiqtkbb10.d(23):\
    \ Error: template instance `to!(char[])` template `to` is not defined, did you\
    \ mean No?\\n/tmp/tmpiqtkbb10.d(24): Error: undefined identifier `sort`, did you\
    \ mean function `sqrt`?\\n/tmp/tmpiqtkbb10.d(25): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiqtkbb10.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string\
    \ result = \"\";\n    string[] words = s.split(\" \");\n    foreach(word; words)\n\
    \    {\n        string sortedWord = \"\";\n        foreach(char c; word)\n   \
    \     {\n            sortedWord ~= c;\n        }\n        sortedWord.sort();\n\
    \        result ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"\
    Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"\
    number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5neslqz1.d(20): Error: no property `split` for type `string`\\\
    n/tmp/tmp5neslqz1.d(28): Error: no property `sort` for type `string`\\n/tmp/tmp5neslqz1.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5neslqz1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = split(s);\n    string result = \"\";\n    foreach(word; words)\n   \
    \ {\n        string sortedWord = sort(word);\n        result ~= sortedWord;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = anti_shuffle;\n\
    \n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") ==\
    \ \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"\
    abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    );\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is\
    \ Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0s0zeg97.d(19): Error: undefined identifier `split`\\n/tmp/tmp0s0zeg97.d(23):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s0zeg97.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that\
    \ takes a string and returns an ordered version of it.\n    Ordered version of\
    \ string, is a string where all words (separated by space)\n    are replaced by\
    \ a new word where all the characters arranged in\n    ascending order based on\
    \ ascii value.\n    Note: You should keep the order of words and blank spaces\
    \ in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n\
    \    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!')\
    \ returns 'Hello !!!Wdlor'\n    \n*/\nstring anti_shuffle(string s) \n{\n    string[]\
    \ words = s.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n\
    \        string sortedWord = \"\";\n        foreach(char c; word)\n        {\n\
    \            sortedWord ~= c;\n        }\n        sortedWord.sort;\n        result\
    \ ~= sortedWord ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n\
    {\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\"\
    );\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\"\
    ) == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmwi_coqz.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpmwi_coqz.d(28): Error: no property `sort` for type `string`\\n/tmp/tmpmwi_coqz.d(31):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmwi_coqz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_27_flip_case
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase\
  \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
  \    'hELLO'\n    \n*/\nstring flip_case(string string) \n"
tests: "unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
  ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    foreach(char c; string) \n    {\n\
    \        if (c.isUpper) \n        {\n            result ~= c.toLower;\n      \
    \  } \n        else if (c.isLower) \n        {\n            result ~= c.toUpper;\n\
    \        } \n        else \n        {\n            result ~= c;\n        }\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isLower(c))\n            result ~= toUpper(c);\n        else\
    \ if(isUpper(c))\n            result ~= toLower(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string) \n    {\n        if(isUpper(c)) \n    \
    \    {\n            result ~= toLower(c);\n        }\n        else \n        {\n\
    \            result ~= toUpper(c);\n        }\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if (c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else\n         \
    \   result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n   \
    \ }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else\n           \
    \ result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string result =\
    \ \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n        \
    \    result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n  \
    \      {\n            result ~= toLower(c);\n        } \n        else if(isLower(c))\
    \ \n        {\n            result ~= toUpper(c);\n        } \n        else \n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string) \n    {\n        if(isUpper(c)) \n        {\n   \
    \         result ~= toLower(c);\n        } \n        else if(isLower(c)) \n  \
    \      {\n            result ~= toUpper(c);\n        } \n        else \n     \
    \   {\n            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n\
    \    Given a string, return a new string with the reversed order of characters.\n\
    \    >>> reverse('apple')\n    'elppa'\n*/\nstring reverse(string string) \n{\n\
    \    string result = \"\";\n    foreach(char c; string) \n    {\n        result\
    \ = c ~ result;\n    }\n    return result;\n}\n/*\n    Given a string, return\
    \ a new string with the order of characters reversed.\n    >>> reverse_words('I\
    \ am home')\n    'home am I'\n*/\nstring reverse_words(string string) \n{\n  \
    \  string result = \"\";\n    foreach(string word; string.split) \n    {\n   \
    \     result = word ~ \" \" ~ result;\n    }\n    return result.stripRight;\n\
    }\n/*\n    Given a string, return a new string with the reversed order of characters\
    \ in each word.\n    >>> reverse_each_word('Hello there')\n    'olleH ereht'\n\
    */\nstring reverse_each_word(string string) \n{\n    string result = \"\";\n \
    \   foreach(string word; string.split) \n    {\n        result ~= reverse(word)\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\n/*\n    Given a string, return\
    \ a new string with the order of characters in each word reversed.\n    >>> reverse_each_word('Hello\
    \ there')\n    'olleH ereht'\n*/\nstring reverse_each_word(string string) \n{\n\
    \    string result = \"\";\n    foreach(string word; string.split) \n    {\n \
    \       result ~= reverse(word) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\n/*\n    Given a", "{\n    string result = \"\";\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \     result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if (isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\n/*\n  \
    \  For a given string, return the number of vowels.\n    >>> count_vowels('Hello')\n\
    \    2\n*/", "{\n    string result;\n    foreach(char c; string)\n    {\n    \
    \    if(c.isUpper)\n            result ~= c.toLower;\n        else\n         \
    \   result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if (c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if (c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else\n         \
    \   result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if (c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string flipped = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n        {\n            flipped ~=\
    \ toLower(c);\n        }\n        else if(isLower(c))\n        {\n           \
    \ flipped ~= toUpper(c);\n        }\n        else\n        {\n            flipped\
    \ ~= c;\n        }\n    }\n    return flipped;\n}", "{\n    string result = \"\
    \";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n   \
    \         result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\
    \ \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n\
    \        } \n        else \n        {\n            result ~= toUpper(c);\n   \
    \     }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \     result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n\
    \        {\n            result ~= toLower(c);\n        } \n        else \n   \
    \     {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        result ~= isUpper(c) ? toLower(c) : toUpper(c);\n  \
    \  }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else if(isLower(c)) \n        {\n         \
    \   result ~= toUpper(c);\n        } \n        else \n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}", "{\n    string result;\n  \
    \  foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isLower(c))\n            result ~= toUpper(c);\n        else if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if (isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(ch; string)\
    \ \n    {\n        if(isUpper(ch)) \n        {\n            result ~= toLower(ch);\n\
    \        }\n        else \n        {\n            result ~= toUpper(ch);\n   \
    \     }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n            {\n                result\
    \ ~= toLower(c);\n            }\n            else\n            {\n           \
    \     result ~= toUpper(c);\n            }\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string) \n    {\n        result ~= (c.isUpper\
    \ ? toLower(c) : toUpper(c));\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string with the first and last characters swapped.\n\
    \    >>> swap_first_last('Hello')\n    'oellH'\n*/\nstring swap_first_last(string\
    \ string) \n{\n    return string[$-1..$-1] ~ string[1..$-2] ~ string[0..0];\n\
    }\n/*\n Given a string, return a new string with the first and last characters\
    \ swapped.\n    >>> swap_first_last('Hello')\n    'oellH'\n*/\nstring swap_first_last(string\
    \ string) \n{\n    return string[$-1..$-1] ~ string[1..$-2] ~ string[0..0];\n\
    }\n/*\n Given a string, return a new string with the first and last characters\
    \ swapped.\n    >>> swap_first_last('Hello')\n    'oellH'\n*/\nstring swap_first_last(string\
    \ string) \n{\n    return string[$-1..$-1] ~ string[1..$-2] ~ string[0..0];\n\
    }\n/*\n Given a string, return a new string with the first and last characters\
    \ swapped.\n    >>> swap_first_last('Hello')\n    'oellH'\n*/\nstring swap_first_last(string\
    \ string) \n{\n    return string[$-1..$-1] ~ string[1..$-2] ~ string[0..0];\n\
    }\n/*\n Given a string, return a new string with the first and last characters\
    \ swapped.\n    >>> swap_first_last('Hello')\n    'oellH'\n*/\nstring swap_first_last(string\
    \ string) \n{\n    return string[$-1..$-1] ~ string[1..$-2] ~ string[0..0];\n\
    }\n/*\n Given a string, return a new string", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else if(isLower(c))\
    \ \n        {\n            result ~= toUpper(c);\n        } \n        else \n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n\
    \        {\n            result ~= c.toLower;\n        } \n        else \n    \
    \    {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if (c.isUpper)\n           \
    \ result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n\
    \    return result;\n}", "{\n    string result;\n    foreach(c; string)\n    {\n\
    \        if(c.isUpper)\n            result ~= c.toLower;\n        else\n     \
    \       result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n     \
    \   {\n            result ~= c.toLower;\n        } \n        else if(c.isLower)\
    \ \n        {\n            result ~= c.toUpper;\n        } \n        else \n \
    \       {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    /*\n    For a given string, return a new string with the characters reversed.\n\
    \    >>> reverse_string('Hello')\n    'olleH'\n*/\nstring reverse_string(string\
    \ string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n\
    \        result = c ~ result;\n    }\n    return result;\n}\n/*\n    For a given\
    \ string, return a new string with the characters in alphabetical order.\n   \
    \ >>> alphabetize_string('Hello')\n    'HellO'\n*/\nstring alphabetize_string(string\
    \ string) \n{\n    string result = \"\";\n    string[] chars = string.dup;\n \
    \   std.algorithm.sort(chars);\n    foreach(char c; chars) \n    {\n        result\
    \ ~= c;\n    }\n    return result;\n}\n/*\n    For a given string, return a new\
    \ string with the characters in reverse alphabetical order.\n    >>> reverse_alphabetize_string('Hello')\n\
    \    'olleH'\n*/\nstring reverse_alphabetize_string(string string) \n{\n    string\
    \ result = \"\";\n    string[] chars = string.dup;\n    std.algorithm.sort(chars);\n\
    \    foreach(char c; chars) \n    {\n        result = c ~ result;\n    }\n   \
    \ return result;\n}\n/*\n    For a given string, return a new string with the\
    \ characters shifted by a given number.\n    >>> shift_string('Hello', 2)\n  \
    \  'Jgnnq'\n*/\nstring shift_string(string string, int shift) \n{\n    string\
    \ result = \"\";\n    foreach(char c; string) \n    {\n        int", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n\
    \        if(isUpper(c))\n            result ~= toLower(c);\n        else\n   \
    \         result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string)\n    {\n        if (c.isUpper)\n\
    \            result ~= c.toLower;\n        else if (c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\
    \ \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n\
    \        } \n        else \n        {\n            result ~= toUpper(c);\n   \
    \     }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else if(isLower(c)) \n        {\n         \
    \   result ~= toUpper(c);\n        } \n        else \n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}", "{\n    string result;\n  \
    \  foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(c; string)\n    {\n       \
    \ if(isUpper(c))\n            result ~= toLower(c);\n        else\n          \
    \  result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\n/*\n    Given a string, return a new string with the reversed order of characters.\n\
    \    >>> reverse_string('hello')\n    'olleh'\n*/\nstring reverse_string(string\
    \ string)\n{\n    string result = \"\";\n    foreach(c; string)\n    {\n     \
    \   result = c ~ result;\n    }\n    return result;\n}\n/*\n    Given an integer,\
    \ return an integer that is the reverse ordering of numbers.\n    >>> reverse_int(123)\n\
    \    321\n    >>> reverse_int(-123)\n    -321\n    >>> reverse_int(120)\n    21\n\
    */", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string) \n    {\n        if(isUpper(c)) \n        {\n   \
    \         result ~= toLower(c);\n        } \n        else if(isLower(c)) \n  \
    \      {\n            result ~= toUpper(c);\n        } \n        else \n     \
    \   {\n            result ~= c;\n        }\n    }\n    return result;\n}", "{\n\
    \    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n \
    \           result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string) \n    {\n        if (c.isUpper) \n        {\n   \
    \         result ~= c.toLower;\n        } \n        else \n        {\n       \
    \     result ~= c.toUpper;\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(ch;\
    \ string)\n    {\n        if(isUpper(ch))\n        {\n            result ~= toLower(ch);\n\
    \        }\n        else\n        {\n            result ~= toUpper(ch);\n    \
    \    }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n            {\n                result\
    \ ~= toUpper(c);\n            }\n            else\n            {\n           \
    \     result ~= toLower(c);\n            }\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(c; string)\n    {\n       \
    \ if(isUpper(c))\n            result ~= toLower(c);\n        else\n          \
    \  result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n   \
    \ }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if (isLower(c))\n            result ~= toUpper(c);\n        else\n         \
    \   result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n   \
    \ }\n    return result;\n}", "{\n    string flipped = \"\";\n    foreach(i, c;\
    \ string) \n    {\n        if(c.isUpper) \n        {\n            flipped ~= c.toLower;\n\
    \        } \n        else \n        {\n            flipped ~= c.toUpper;\n   \
    \     }\n    }\n    return flipped;\n}", "{\n    string flipped_string = \"\"\
    ;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n        {\n    \
    \        flipped_string ~= c.toLower;\n        }\n        else if(c.isLower)\n\
    \        {\n            flipped_string ~= c.toUpper;\n        }\n        else\n\
    \        {\n            flipped_string ~= c;\n        }\n    }\n    return flipped_string;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\
    \ \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n\
    \        } \n        else if(isLower(c)) \n        {\n            result ~= toUpper(c);\n\
    \        } \n        else \n        {\n            result ~= c;\n        }\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\
    \ \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n\
    \        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n\
    \        } \n        else \n        {\n            result ~= c;\n        }\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(char c; string)\n    {\n  \
    \      if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper)\
    \ \n        {\n            result ~= c.toLower;\n        } \n        else \n \
    \       {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper())\n\
    \            result ~= c.toLower();\n        else\n            result ~= c.toUpper();\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        result ~= isUpper(c) ? toLower(c) : toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n  \
    \  {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n            {\n                result\
    \ ~= toUpper(c);\n            }\n            else\n            {\n           \
    \     result ~= toLower(c);\n            }\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if (c.isLower)\n            result ~= c.toUpper;\n        else\n           \
    \ result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n \
    \       else if (c.isLower)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n     \
    \   if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n\
    \        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n\
    \        {\n            result ~= c.toLower;\n        }\n        else \n     \
    \   {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~=\
    \ c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~=\
    \ c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n  \
    \  {\n        if (isalpha(c))\n        {\n            if (isupper(c))\n      \
    \      {\n                result ~= tolower(c);\n            }\n            else\n\
    \            {\n                result ~= toupper(c);\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \     result ~= c.toLower;\n        else if(c.isLower)\n            result ~=\
    \ c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~=\
    \ c.toLower;\n        }\n        else \n        {\n            result ~= c.toUpper;\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string\
    \ with the characters in reverse order.\n    >>> reverse('Hello')\n    'olleH'\n\
    */\nstring reverse(string string) \n{\n    string result;\n    foreach(char c;\
    \ string) \n    {\n        result = c ~ result;\n    }\n    return result;\n}\n\
    /*\n Given a string, return a new string with the characters in reverse order.\n\
    \    >>> reverse('Hello')\n    'olleH'\n*/\nstring reverse2(string string) \n\
    {\n    string result;\n    foreach_reverse(char c; string) \n    {\n        result\
    \ ~= c;\n    }\n    return result;\n}\n/*\n Given a string, return a new string\
    \ with the characters in reverse order.\n    >>> reverse('Hello')\n    'olleH'\n\
    */\nstring reverse3(string string) \n{\n    string result;\n    foreach(char c;\
    \ string) \n    {\n        result = c ~ result;\n    }\n    return result;\n}\n\
    /*\n Given a string, return a new string with the characters in reverse order.\n\
    \    >>> reverse('Hello')\n    'olleH'\n*/\nstring reverse4(string string) \n\
    {\n    string result;\n    foreach_reverse(char c; string) \n    {\n        result\
    \ ~= c;\n    }\n    return result;\n}\n/*\n Given a string, return a new string\
    \ with the characters in reverse order.\n    >>> reverse('Hello')\n    'olleH'\n\
    */\nstring reverse5(string string) \n{\n    string result;\n    foreach(char c;\
    \ string) \n    {\n        result = c ~ result;\n    }\n    return result;\n}\n\
    /*\n Given a string, return a new string with the characters in reverse order.\n\
    \    >>> reverse", "{\n    string result = \"\";\n    foreach(char c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n     \
    \       result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\
    \ \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n\
    \        } \n        else \n        {\n            result ~= c.toUpper;\n    \
    \    }\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

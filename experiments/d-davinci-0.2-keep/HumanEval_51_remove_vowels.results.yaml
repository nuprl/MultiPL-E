name: HumanEval_51_remove_vowels
language: humaneval_to_dlang.py
results:
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(!isVowel(c))\n        {\n           \
    \ result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpysx5a16m.d(22): Error: undefined identifier `isVowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpysx5a16m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            continue;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            continue;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text) \n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U') \n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text) \n    {\n        if(!isVowel(c)) \n        {\n         \
    \   result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp523oysc3.d(22): Error: undefined identifier `isVowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp523oysc3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    string result = \"\";\n    foreach(char c; text)\n    {\n        if(vowels.find(c)\
    \ == -1)\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5fwwjsmc.d(23): Error: no property `find` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5fwwjsmc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    string result = \"\";\n    foreach(char c; text)\n    {\n        if(vowels.find(c)\
    \ == -1)\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkux3x3bl.d(23): Error: no property `find` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkux3x3bl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    /*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprh3ina3d.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprh3ina3d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            continue;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text) \n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(!isVowel(c))\n        {\n           \
    \ result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5kz45_5i.d(22): Error: undefined identifier `isVowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5kz45_5i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpplby1uto.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpplby1uto.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text) \n    {\n        if(c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < text.length; i++)\n\
    \    {\n        if (vowels.find(text[i]) == -1)\n        {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ecqk6bz.d(23): Error: no property `find` for type `string`\\\
    n/tmp/tmp2ecqk6bz.d(25): Error: slice `result` is not mutable\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ecqk6bz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(!isVowel(c))\n        {\n           \
    \ result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66401jtg.d(22): Error: undefined identifier `isVowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66401jtg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            continue;\n        }\n        result ~= c;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2o_h1iup.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2o_h1iup.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text) \n    {\n        if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i]\
    \ != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n\
    \        {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5lgbphs3.d(24): Error: slice `result` is not mutable\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5lgbphs3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i]\
    \ != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n\
    \        {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyha3mr7e.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyha3mr7e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i]\
    \ != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n\
    \        {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl27h04w9.d(24): Error: slice `result` is not mutable\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl27h04w9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            continue;\n        }\n        result ~= c;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i]\
    \ != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n\
    \        {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppb8ssewn.d(24): Error: slice `result` is not mutable\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppb8ssewn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    string result = \"\";\n    foreach(char c; text)\n    {\n        if(vowels.find(c)\
    \ == -1)\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb693mfse.d(23): Error: no property `find` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb693mfse.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text) \n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U') \n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0fyo12hn.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0fyo12hn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(!isVowel(c))\n        {\n           \
    \ result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv2m_uxv9.d(22): Error: undefined identifier `isVowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2m_uxv9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

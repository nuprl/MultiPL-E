name: HumanEval_13_greatest_common_divisor
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n    {\n        return b;\n    }\n    if (b\
    \ == 0) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a > b) \n    {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdm0vvopf.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdm0vvopf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfgwm99a2.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfgwm99a2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpszxxj03k.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszxxj03k.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpupqaq90c.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpupqaq90c.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcjximl6j.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcjximl6j.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprgmlx6kf.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprgmlx6kf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp43doelx2.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43doelx2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n        return ((b & 1) == 0) ?\n            greatest_common_divisor(a >>\
    \ 1, b >> 1) << 1 :\n            greatest_common_divisor(a >> 1, b);\n    else\n\
    \        return ((b & 1) == 0) ?\n            greatest_common_divisor(a, b >>\
    \ 1) :\n            greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n    {\n        if ((b & 1) == 0)\n            return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n        else\n            return greatest_common_divisor(a >>\
    \ 1, b);\n    }\n    else if ((b & 1) == 0)\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    else if (a > b)\n        return greatest_common_divisor((a - b)\
    \ >> 1, b);\n    else\n        return greatest_common_divisor((b - a) >> 1, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwhdysxdm.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhdysxdm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp42_rpkcb.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42_rpkcb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\n/*\n Return a least common multiple of two integers a\
    \ and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n    \n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n    \n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common_multiple(lcm, a[i]);\n    return lcm;\n}\n/*\n Return a greatest\
    \ common divisor of a list of integers\n    >>> greatest_common_divisor_list([3,\
    \ 5])\n    1\n    >>> greatest_common_divisor_list([25, 15])\n    5\n    \n*/\n\
    long greatest_common_divisor_list(long[] a) \n{\n    long gcd = a[0];\n    foreach\
    \ (i; 1 .. a.length)\n        gcd = greatest_common_divisor\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6q3_ptyl.d(69): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmp6q3_ptyl.d(78): Error: found `End of File` when expecting\
    \ `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp6q3_ptyl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (a != b) \n    {\n        if (a > b) \n        {\n\
    \            a = a - b;\n        } \n        else \n        {\n            b =\
    \ b - a;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpznkryyyl.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpznkryyyl.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpitz1gg2m.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpitz1gg2m.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodgsfo07.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodgsfo07.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else\n        return\
    \ greatest_common_divisor(b % a, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0zji9iu7.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0zji9iu7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprb0pb0y6.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprb0pb0y6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzchnspk6.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzchnspk6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8re21opq.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8re21opq.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else if (a > b)\n        return greatest_common_divisor(a\
    \ % b, b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) {\n            return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n        } else {\n            return greatest_common_divisor(a\
    \ >> 1, b);\n        }\n    } else if ((b & 1) == 0) {\n        return greatest_common_divisor(a,\
    \ b >> 1);\n    } else if (a > b) {\n        return greatest_common_divisor((a\
    \ - b) >> 1, b);\n    } else {\n        return greatest_common_divisor((b - a)\
    \ >> 1, a);\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe_es3i3o.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_es3i3o.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n    {\n        return b;\n    }\n    if (b\
    \ == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptytwenby.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptytwenby.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    long\
    \ c;\n    while (b != 0) {\n        c = a % b;\n        a = b;\n        b = c;\n\
    \    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo1xkpdbf.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo1xkpdbf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        swap(a, b);\n    while (b != 0) \n \
    \   {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcdcwq38w.d(14): Error: undefined identifier `swap`, did you mean\
    \ template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable,\
    \ Targets))`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcdcwq38w.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    else if (b == 0) \n\
    \        return a;\n    else \n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpazpsh_86.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpazpsh_86.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp828vwth0.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp828vwth0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0) \n        return a;\n    else \n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n\
    \    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n    \n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long res = 1;\n    foreach\
    \ (x; a)\n        res = least_common_multiple(res, x);\n    return res;\n}\n/*\n\
    \ Return a least common multiple of a\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxue47djw.d(79): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxue47djw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n    {\n        return b;\n    }\n    if (b\
    \ == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    if (b == 0) \n    \
    \    return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) \n        return\
    \ 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 !=\
    \ 0)) \n        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0)\
    \ && (b % 2 == 0)) \n        return greatest_common_divisor(a, b / 2);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgjqh0nng.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjqh0nng.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7754k_3n.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7754k_3n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\n/*\n Return a least common multiple of\
    \ two integers a and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(in\
    \ long[] list) \n{\n    long result = 1;\n    foreach (i; list)\n        result\
    \ = least_common_multiple(result, i);\n    return result;\n}\n/*\n Return a least\
    \ common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(in long[] list) \n{\n   \nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa__4te7h.d(81): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa__4te7h.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vdgi9bw.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8vdgi9bw.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp50mzfnhy.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp50mzfnhy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpisfwbae_.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpisfwbae_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else if (a > b)\n        return greatest_common_divisor(a\
    \ % b, b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a; a = b%a; \
    \ b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz2rajk7q.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz2rajk7q.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a < 0)\n        a = -a;\n    if (b < 0)\n        b = -b;\n\
    \    while (a != b)\n    {\n        if (a > b)\n            a -= b;\n        else\n\
    \            b -= a;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b\
    \ >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n    }\n   \
    \ if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if (a > b)\
    \ return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2j13ijl9.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2j13ijl9.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpttmr9q7w.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttmr9q7w.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else if (a == b)\n        return a;\n    else if (a > b)\n\
    \        return greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\n/*\n Return a least common multiple of two integers a and b\n  \
    \  >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ (a * b) / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common_multiple(lcm, a[i]);\n    return lcm;\n}\n/*\n Return a least common\
    \ multiple of a list of integers\n    >>> least_common_multiple_list([3, 5])\n\
    \    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common_multiple(lcm, a[i]);\n    return lcm;\n}\n/*\n Return a least common\
    \ multiple of a list of integers\n    >>> least_common_multiple_list([3, 5])\n\
    \    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = a[0];\n    foreach (i; 1 .. a.length)\n        lcm =\
    \ least_common\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpngqom5pw.d(75): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmpngqom5pw.d(84): Error: found `End of File` when expecting\
    \ `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpngqom5pw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe7itbqs9.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe7itbqs9.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else if (a == b)\n        return a;\n    else if (a > b)\n\
    \        return greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25, 15)\n\
    \    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return (a * b)\
    \ / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_of_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong least_common_multiple_of_list(long[]\
    \ list) \n{\n    long result = 1;\n    foreach (item; list)\n        result =\
    \ least_common_multiple(result, item);\n    return result;\n}\n/*\n Return a least\
    \ common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (item; list)\n        result = least_common_multiple(result, item);\n    return\
    \ result;\n}\n/*\n Return a least common multiple of a list of integers\n    >>>\
    \ least_common_multiple_of_list([3, 5])\n    15\n    >>> least_common_multiple_of_list([25,\
    \ 15])\n    75\n*/\nlong least_common_multiple_of_list(long[] list) \n{\n    long\
    \ result = 1;\n    foreach (item; list)\n        result = least_common_multiple(result,\
    \ item);\n    return result;\n}\n/*\n Return a least\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpibn0pyl5.d(76): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpibn0pyl5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25, 15)\n\
    \    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return a * b\
    \ / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_of_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong least_common_multiple_of_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_of_list([3, 5])\n    1\n    >>>\
    \ greatest_common_divisor_of_list([25, 15])\n    5\n*/\nlong greatest_common_divisor_of_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a list of prime numbers less than n\n\
    \    >>> prime_numbers(10)\n    [2, 3, 5, 7]\n*/\nlong[] prime_numbers(long n)\
    \ \n{\n    long[] result = [];\n    for (long i = 2; i < n; i++) \n    {\n   \
    \     bool is_prime = true;\n        for (long j = 2; j < i; j++) \n        {\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe4bdjpi1.d(75): Error: found `unittest` instead of statement\\\
    n/tmp/tmpe4bdjpi1.d(84): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpe4bdjpi1.d(84): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpe4bdjpi1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n    {\n        return b;\n    }\n    if (b\
    \ == 0)\n    {\n        return a;\n    }\n    if (a == b)\n    {\n        return\
    \ a;\n    }\n    if (a > b)\n    {\n        return greatest_common_divisor(a -\
    \ b, b);\n    }\n    else\n    {\n        return greatest_common_divisor(a, b\
    \ - a);\n    }\n}\n/*\n Return a least common multiple of two integers a and b\n\
    \    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long result = 1;\n    foreach (i; a)\n    {\n        result = least_common_multiple(result,\
    \ i);\n    }\n    return result;\n}\n/*\n Return a greatest common divisor of\
    \ a list of integers\n    >>> greatest_common_divisor_list([3, 5])\n    1\n  \
    \  >>> greatest_common_divisor_list([25, 15])\n    5\n*/\nlong greatest_common_divisor_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (i; a)\n    {\n        result =\
    \ greatest_common_divisor(result, i);\n    }\n    return result;\n}\n/*\n Return\
    \ a list of prime numbers less than n\n    >>> primes(10)\n    [2, 3, 5, 7]\n\
    */\nlong[] primes(long n) \n{\n    long[] result;\n    bool[] sieve = new bool[n];\n\
    \    foreach (i; 0 .. n)\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpywdcopr4.d(87): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpywdcopr4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\n/*\n Return a least common multiple of two integers a\
    \ and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long result = a[0];\n    for (int i = 1; i < a.length; i++)\n  \
    \      result = least_common_multiple(result, a[i]);\n    return result;\n}\n\
    /*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = a[0];\n    for (int\
    \ i = 1; i < a.length; i++)\n        result = least_common_multiple(result, a[i]);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3hzv5nnv.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3hzv5nnv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    if (b == 0) \n    \
    \    return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0)) \n        return\
    \ 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 !=\
    \ 0)) \n        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0)\
    \ && (b % 2 == 0)) \n        return greatest_common_divisor(a, b / 2);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpm0fg7s.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpm0fg7s.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuekh9za8.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuekh9za8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n        return ((b & 1) == 0) ?\n            2 * greatest_common_divisor(a\
    \ >> 1, b >> 1) :\n            greatest_common_divisor(a >> 1, b);\n    else\n\
    \        return ((b & 1) == 0) ?\n            greatest_common_divisor(a, b >>\
    \ 1) :\n            greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    else if (b == 0) \n\
    \        return a;\n    else \n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n    {\n        return b;\n    }\n    if (b\
    \ == 0) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a > b) \n    {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a; a = b%a; \
    \ b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n\
    \    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_list(long[] a) \n{\n    long result = a[0];\n    for (int\
    \ i = 1; i < a.length; i++)\n        result = least_common_multiple(result, a[i]);\n\
    \    return result;\n}\n/*\n Return a greatest common divisor of a list of integers\n\
    \    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    for (int i = 1; i < a.length; i++)\n        result = greatest_common_divisor(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    for (int i = 1; i < a.length; i++)\n        result = greatest\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp952pky0n.d(73): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmp952pky0n.d(82): Error: found `End of File` when expecting\
    \ `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp952pky0n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp9hncl77.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9hncl77.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp70bf45vj.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp70bf45vj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    else if (b == 0) \n\
    \        return a;\n    else \n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\n/*\n Return a least common multiple of two integers a\
    \ and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3, 5])\n    15\n\
    \    >>> least_common_multiple_list([25, 15])\n    75\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long result = 1;\n    foreach (i; a)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3, 5])\n    1\n    >>> greatest_common_divisor_list([25,\
    \ 15])\n    5\n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcyerbmwq.d(68): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcyerbmwq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfsfh_zge.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfsfh_zge.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr6bbzl2h.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr6bbzl2h.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    if (b == 0) \n    \
    \    return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a & 1) == 0) \n    {\n        if ((b & 1) == 0)\
    \ \n            return 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else\
    \ \n            return greatest_common_divisor(a >> 1, b);\n    }\n    else \n\
    \    {\n        if ((b & 1) == 0) \n            return greatest_common_divisor(a,\
    \ b >> 1);\n        else \n            return greatest_common_divisor(abs(a -\
    \ b), min(a, b));\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsld8m9_g.d(33): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsld8m9_g.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n        return ((b & 1) == 0) ?\n            greatest_common_divisor(a >>\
    \ 1, b >> 1) << 1 :\n            greatest_common_divisor(a >> 1, b);\n    else\n\
    \        return ((b & 1) == 0) ?\n            greatest_common_divisor(a, b >>\
    \ 1) :\n            greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\n/*\n Return a least common multiple of two integers a\
    \ and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n*/\nlong least_common_multiple(long a, long b)\n{\n    return a\
    \ * b / greatest_common_divisor(a, b);\n}\n/*\n Return a greatest common divisor\
    \ of a list of integers\n    >>> greatest_common_divisor([3, 5, 7])\n    1\n \
    \   >>> greatest_common_divisor([25, 15, 5])\n    5\n*/\nlong greatest_common_divisor(in\
    \ long[] a)\n{\n    if (a.length == 0)\n        return 0;\n    if (a.length ==\
    \ 1)\n        return a[0];\n    long gcd = greatest_common_divisor(a[0], a[1]);\n\
    \    for (size_t i = 2; i < a.length; i++)\n        gcd = greatest_common_divisor(gcd,\
    \ a[i]);\n    return gcd;\n}\n/*\n Return a least common multiple of a list of\
    \ integers\n    >>> least_common_multiple([3, 5, 7])\n    105\n    >>> least_common_multiple([25,\
    \ 15, 5])\n    75\n*/\nlong least_common_multiple(in\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptnh5e90_.d(66): Error: basic type expected, not `unittest`\\\
    n/tmp/tmptnh5e90_.d(66): Error: found `unittest` when expecting `)`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnh5e90_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpakrh3y8a.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakrh3y8a.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_oj3nz7r.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_oj3nz7r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a; a = b%a; \
    \ b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwdyg9fz6.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdyg9fz6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else if (a == b)\n        return a;\n    else if (a > b)\n\
    \        return greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) return ((b & 1) == 0) ? greatest_common_divisor(a >> 1, b >> 1) << 1 : greatest_common_divisor(a\
    \ >> 1, b);\n    else return ((b & 1) == 0) ? greatest_common_divisor(a, b >>\
    \ 1) : greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0 && (b & 1) == 0)\n        return 2 *\
    \ greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1) == 0 && (b & 1) !=\
    \ 0)\n        return greatest_common_divisor(a >> 1, b);\n    if ((a & 1) != 0\
    \ && (b & 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpauykwkwy.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpauykwkwy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n    {\n        if ((b & 1) == 0)\n            return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n        else\n            return greatest_common_divisor(a >>\
    \ 1, b);\n    }\n    else\n    {\n        if ((b & 1) == 0)\n            return\
    \ greatest_common_divisor(a, b >> 1);\n        else\n            return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8s9ntyyp.d(29): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8s9ntyyp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv5m_pw56.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5m_pw56.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    if (b == 0) \n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0)\n        return (b & 1) == 0 ? greatest_common_divisor(a >> 1, b >> 1) <<\
    \ 1 : greatest_common_divisor(a >> 1, b);\n    else\n        return (b & 1) ==\
    \ 0 ? greatest_common_divisor(a, b >> 1) : greatest_common_divisor(b, a > b ?\
    \ a - b : b - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbc25yt6s.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbc25yt6s.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) \n        return b;\n    if (b == 0) \n    \
    \    return a;\n    if (a == b) \n        return a;\n    if (a == 1 || b == 1)\
    \ \n        return 1;\n    if ((a & 1) == 0) \n    {\n        if ((b & 1) == 0)\
    \ \n            return 2 * greatest_common_divisor(a >> 1, b >> 1);\n        else\
    \ \n            return greatest_common_divisor(a >> 1, b);\n    }\n    else \n\
    \    {\n        if ((b & 1) == 0) \n            return greatest_common_divisor(a,\
    \ b >> 1);\n        else \n            return greatest_common_divisor(abs(a -\
    \ b), min(a, b));\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd57yb90g.d(33): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd57yb90g.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqwfl24t.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgqwfl24t.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\n/*\n Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_of_list([25, 15])\n    75\n*/\nlong\
    \ least_common_multiple_of_list(long[] list) \n{\n    long result = 1;\n    foreach\
    \ (i; list)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3,\
    \ 5])\n    15\n    >>> least_common_multiple_\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpow7t4b7a.d(73): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpow7t4b7a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\n        return 2 *\
    \ greatest_common_divisor(a / 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 != 0))\n\
    \        return greatest_common_divisor(a / 2, b);\n    if ((a % 2 != 0) && (b\
    \ % 2 == 0))\n        return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppunwpdo2.d(27): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppunwpdo2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a\
    \ % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 != 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 != 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvdxzeio4.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvdxzeio4.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) ==\
    \ 0) return (b & 1) == 0 ? greatest_common_divisor(a >> 1, b >> 1) << 1 : greatest_common_divisor(a\
    \ >> 1, b);\n    else return (b & 1) == 0 ? greatest_common_divisor(a, b >> 1)\
    \ : greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

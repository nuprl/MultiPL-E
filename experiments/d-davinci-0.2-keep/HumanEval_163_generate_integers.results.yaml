name: HumanEval_163_generate_integers
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9stetcyp.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp9stetcyp.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp9stetcyp.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xe1d8c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        for (long i = a; i <= b; i += 2)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    else\n    {\n        for (long i = a\
    \ + 1; i <= b; i += 2)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_vqljftn.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmp_vqljftn.__unittest_L39_C1()\
    \ [0x427f84]\\n??:? void tmp_vqljftn.__modtest() [0x428174]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce27]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcba]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430805]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430791]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc91]\\n??:? runModuleUnitTests [0x42cbfd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x428187]\\\
    n??:? __libc_start_main [0x1ca82554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else \n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (int i = 0; i < result.length; i++) \n        {\n\
    \            result[i] = a + 2 * i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzrdbooqq.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpzrdbooqq.__unittest_L31_C1()\
    \ [0x427f48]\\n??:? void tmpzrdbooqq.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b302]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43058d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430519]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d9]\\n??:? runModuleUnitTests [0x42c245]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428878]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ff]\\n??:? _d_run_main [0x42876a]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x300f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4y95m84s.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp4y95m84s.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp4y95m84s.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x4de6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph991py31.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmph991py31.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmph991py31.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xaed3e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8tfx5oav.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp8tfx5oav.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp8tfx5oav.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xdefe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxfx5mx89.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxfx5mx89.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfoih2z5w.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpfoih2z5w.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpfoih2z5w.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xa621c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzbu7sfso.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpzbu7sfso.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpzbu7sfso.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x9bddb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\
    \ \n        {\n            result[i] = b + i * 2;\n        }\n    } \n    else\
    \ \n    {\n        result = new long[(b - a) / 2 + 1];\n        for (long i =\
    \ 0; i < result.length; i++) \n        {\n            result[i] = a + i * 2;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8f0wndf8.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmp8f0wndf8.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmp8f0wndf8.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x53fc8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc0q6yrn5.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpc0q6yrn5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4qgbtrse.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4qgbtrse.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4qgbtrse.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxakr9jkl.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxakr9jkl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = [];\n   \
    \     foreach (i; a..b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqdtb0bpz.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpqdtb0bpz.__unittest_L34_C1()\
    \ [0x42804c]\\n??:? void tmpqdtb0bpz.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x15a29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b) \n    {\n        long temp = a;\n        a =\
    \ b;\n        b = temp;\n    }\n    long[] result = new long[0];\n    for (long\
    \ i = a; i <= b; i++) \n    {\n        if (i % 2 == 0) \n        {\n         \
    \   result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpypunuqj8.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpypunuqj8.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmpypunuqj8.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0xf9d21554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6xp138_j.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6xp138_j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (long i = 0; i < result.length; i++)\n    {\n        result[i] = a + i\
    \ * 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ht820jr.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp8ht820jr.__unittest_L29_C1()\
    \ [0x427f34]\\n??:? void tmp8ht820jr.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43057d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a2c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430509]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c9]\\n??:? runModuleUnitTests [0x42c235]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428868]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ef]\\n??:? _d_run_main [0x42875a]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0xdb372554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5al4zqsd.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp5al4zqsd.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5al4zqsd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach(i;\
    \ a..b)\n    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpczgr4ug9.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpczgr4ug9.__unittest_L32_C1()\
    \ [0x428030]\\n??:? void tmpczgr4ug9.__modtest() [0x428134]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x428147]\\\
    n??:? __libc_start_main [0x926b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4riv2avy.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp4riv2avy.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp4riv2avy.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x48dd2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83r75dy3.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp83r75dy3.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp83r75dy3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsttrvg_k.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpsttrvg_k.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpsttrvg_k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu1up07c5.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpu1up07c5.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpu1up07c5.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xd9dae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long start = min(a, b);\n    long\
    \ end = max(a, b);\n    for (long i = start; i <= end; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplie_gef3.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmplie_gef3.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmplie_gef3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long min = min(a, b);\n    long max = max(a, b);\n    long[]\
    \ result = new long[];\n    for (long i = min; i <= max; i++)\n    {\n       \
    \ if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3pgi40xx.d(16): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp3pgi40xx.d(17): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\n/tmp/tmp3pgi40xx.d(18): Error: new can only\
    \ create structs, dynamic arrays or class objects, not `long[]`\\'s\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pgi40xx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6vxj4h2z.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmp6vxj4h2z.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmp6vxj4h2z.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x4ccce554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgm4o0adm.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpgm4o0adm.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpgm4o0adm.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x121dd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        result ~= a;\n        a++;\n    }\n    for (a; a < b;\
    \ a += 2)\n    {\n        result ~= a;\n    }\n    if (b % 2 == 0)\n    {\n  \
    \      result ~= b;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx0le6jry.d(28): Error: `a` has no effect\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx0le6jry.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        long temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2 != 0)\n      \
    \  a++;\n    if (b % 2 != 0)\n        b--;\n    if (a > b)\n        return result;\n\
    \    result = new long[(b - a) / 2 + 1];\n    for (long i = 0; i < result.length;\
    \ i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg5lb02p6.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283fd]\\n??:? void tmpg5lb02p6.__unittest_L36_C1()\
    \ [0x427f90]\\n??:? void tmpg5lb02p6.__modtest() [0x428180]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4b7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b34a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430561]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b321]\\n??:? runModuleUnitTests [0x42c28d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428847]\\n??:? _d_run_main [0x4287b2]\\n??:? main [0x428193]\\\
    n??:? __libc_start_main [0xe44b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz3ep93k7.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpz3ep93k7.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmpz3ep93k7.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x95b00554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = b + i * 2;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + i * 2;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd3ovfcuu.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpd3ovfcuu.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmpd3ovfcuu.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x7c18554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnm_9r34g.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpnm_9r34g.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpnm_9r34g.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x50648554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b) \n    {\n \
    \       long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++) \n    {\n        if (i % 2 == 0) \n        {\n         \
    \   result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiaih473k.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpiaih473k.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpiaih473k.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xfd391554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx3y1dpe6.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpx3y1dpe6.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpx3y1dpe6.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x3ac75554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpztmx4jd4.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpztmx4jd4.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpztmx4jd4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = b + i * 2;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + i * 2;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwwootcr3.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpwwootcr3.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmpwwootcr3.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x7836554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (long i = 0; i < result.length; i++)\n    {\n        result[i] = a + i\
    \ * 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe2a2xij2.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpe2a2xij2.__unittest_L29_C1()\
    \ [0x427f34]\\n??:? void tmpe2a2xij2.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43057d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a2c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430509]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c9]\\n??:? runModuleUnitTests [0x42c235]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428868]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ef]\\n??:? _d_run_main [0x42875a]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0x3ee4b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpft2vj_cu.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpft2vj_cu.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpft2vj_cu.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x958b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5w7m1l9a.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp5w7m1l9a.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp5w7m1l9a.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x97d5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuhcao35n.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpuhcao35n.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmpuhcao35n.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0xf7edb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    if (min % 2 != 0)\n        min++;\n    if (max\
    \ % 2 != 0)\n        max--;\n    if (min > max)\n        return result;\n    result\
    \ = new long[(max - min) / 2 + 1];\n    for (long i = 0; i < result.length; i++)\n\
    \        result[i] = min + i * 2;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpli9srghl.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpli9srghl.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpli9srghl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] evens = new long[0];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ evens ~= i;\n        }\n    }\n    return evens;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgxdxojh7.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpgxdxojh7.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpgxdxojh7.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x1dc3d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1h4s_6bs.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp1h4s_6bs.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp1h4s_6bs.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x96cb3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ generate_integers(b, a);\n    } \n    else \n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        long i = 0;\n        foreach (long x; a.iota.step(2).takeWhile!(x\
    \ => x <= b)) \n        {\n            result[i++] = x;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0j9t53ko.d(25): Error: no property `iota` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0j9t53ko.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzwnmu04g.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpzwnmu04g.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpzwnmu04g.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xf2b8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp17k964o5.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp17k964o5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprxubpw0b.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmprxubpw0b.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmprxubpw0b.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0xac181554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ud7pasb.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3ud7pasb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpicnhh7mw.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpicnhh7mw.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpicnhh7mw.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x95ec8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else if (a % 2 == 0)\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n\
    \            e = a + i * 2;\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2];\n        foreach (i, ref e; result)\n        {\n  \
    \          e = a + i * 2 + 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprtiwuryy.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmprtiwuryy.__unittest_L39_C1()\
    \ [0x427fb4]\\n??:? void tmprtiwuryy.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x419d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        result ~= a;\n        a++;\n    }\n    else\n    {\n \
    \       a++;\n    }\n    if (b % 2 == 0)\n    {\n        result ~= b;\n      \
    \  b--;\n    }\n    else\n    {\n        b--;\n    }\n    for (long i = a; i <=\
    \ b; i += 2)\n    {\n        result ~= i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzq35xcuu.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpzq35xcuu.__unittest_L47_C1()\
    \ [0x427fbc]\\n??:? void tmpzq35xcuu.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce5f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcf2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43083d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cec]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307c9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bcc9]\\n??:? runModuleUnitTests [0x42cc35]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42887c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428803]\\n??:? _d_run_main [0x42876e]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0x9d91554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph_1juqvs.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmph_1juqvs.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmph_1juqvs.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x153f6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8fnkyj1q.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp8fnkyj1q.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp8fnkyj1q.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x70187554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    auto result = new long[];\n    if (a > b)\n    {\n     \
    \   auto temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach (i;\
    \ a..b+1)\n    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphocut8eh.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphocut8eh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp99wcd640.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp99wcd640.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp99wcd640.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xb227a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_8z98qg9.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp_8z98qg9.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmp_8z98qg9.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x1c205554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ != 0)\n        a++;\n    for (long i = a; i <= b; i += 2)\n        result ~=\
    \ i;\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9h_resq1.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9h_resq1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkx0ntlb_.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpkx0ntlb_.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkx0ntlb_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long start = a;\n    long\
    \ end = b;\n    if (a > b)\n    {\n        start = b;\n        end = a;\n    }\n\
    \    for (long i = start; i <= end; i++)\n    {\n        if (i % 2 == 0)\n   \
    \     {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp08m0_t9h.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp08m0_t9h.__unittest_L33_C1()\
    \ [0x427f40]\\n??:? void tmp08m0_t9h.__modtest() [0x428130]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cddf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc72]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307bd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c6c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430749]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc49]\\n??:? runModuleUnitTests [0x42cbb5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x428143]\\\
    n??:? __libc_start_main [0xe5861554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv0aqn8fu.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpv0aqn8fu.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpv0aqn8fu.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xf4bbe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8gaql0z1.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp8gaql0z1.d(17): Error: undefined\
    \ identifier `min`, did you mean function `main`?\\n/tmp/tmp8gaql0z1.d(18): Error:\
    \ undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8gaql0z1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv3qdk6dq.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpv3qdk6dq.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpv3qdk6dq.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xd3fa4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbo2dnhl2.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpbo2dnhl2.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpbo2dnhl2.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xc987b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        long i = 0;\n        foreach (long x; iota(b,\
    \ a + 1))\n        {\n            if (x % 2 == 0)\n            {\n           \
    \     result[i] = x;\n                i++;\n            }\n        }\n    }\n\
    \    else\n    {\n        result = new long[(b - a) / 2 + 1];\n        long i\
    \ = 0;\n        foreach (long x; iota(a, b + 1))\n        {\n            if (x\
    \ % 2 == 0)\n            {\n                result[i] = x;\n                i++;\n\
    \            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7heg2eel.d(21): Error: undefined identifier `iota`\\n/tmp/tmp7heg2eel.d(34):\
    \ Error: undefined identifier `iota`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7heg2eel.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        long temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2 == 0)\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + i * 2;\n        }\n    }\n    else\n\
    \    {\n        result = new long[(b - a) / 2];\n        for (long i = 0; i <\
    \ result.length; i++)\n        {\n            result[i] = a + i * 2 + 1;\n   \
    \     }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5r6qebgi.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmp5r6qebgi.__unittest_L41_C1()\
    \ [0x427fdc]\\n??:? void tmp5r6qebgi.__modtest() [0x4281cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c507]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b39a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430625]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b371]\\n??:? runModuleUnitTests [0x42c2dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428910]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428897]\\n??:? _d_run_main [0x428802]\\n??:? main [0x4281df]\\\
    n??:? __libc_start_main [0x1b4cf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzx7nqvnn.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpzx7nqvnn.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpzx7nqvnn.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xbc357554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach(i; a..b+1)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjpozqa7u.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283bd]\\n??:? void tmpjpozqa7u.__unittest_L32_C1()\
    \ [0x427f4c]\\n??:? void tmpjpozqa7u.__modtest() [0x42813c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430679]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430605]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbfd]\\n??:? runModuleUnitTests [0x42cb69]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42880c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428793]\\n??:? _d_run_main [0x4286fe]\\n??:? main [0x42814f]\\\
    n??:? __libc_start_main [0x927da554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] res = new long[];\n    if (a > b)\n    {\n      \
    \  long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            res\
    \ ~= i;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf28sfnb3.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpf28sfnb3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        long i = 0;\n        for (long j = b; j\
    \ <= a; j += 2)\n        {\n            result[i] = j;\n            i++;\n   \
    \     }\n    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        long i = 0;\n        for (long j = a; j <= b; j += 2)\n        {\n  \
    \          result[i] = j;\n            i++;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2dkmg4be.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmp2dkmg4be.__unittest_L39_C1()\
    \ [0x427fbc]\\n??:? void tmp2dkmg4be.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4e7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b37a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430605]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430591]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b351]\\n??:? runModuleUnitTests [0x42c2bd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288f0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428877]\\n??:? _d_run_main [0x4287e2]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0xc932e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b) \n    {\n \
    \       long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a %\
    \ 2 != 0) \n    {\n        a++;\n    }\n    if (b % 2 != 0) \n    {\n        b--;\n\
    \    }\n    if (a > b) \n    {\n        return result;\n    }\n    result = new\
    \ long[(b - a) / 2 + 1];\n    for (long i = 0; i < result.length; i++) \n    {\n\
    \        result[i] = a + 2 * i;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvt4cggw8.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428415]\\n??:? void tmpvt4cggw8.__unittest_L42_C1()\
    \ [0x427fa4]\\n??:? void tmpvt4cggw8.__modtest() [0x428194]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4cf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b362]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a9c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430579]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b339]\\n??:? runModuleUnitTests [0x42c2a5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288d8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42885f]\\n??:? _d_run_main [0x4287ca]\\n??:? main [0x4281a7]\\\
    n??:? __libc_start_main [0xd1659554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_9umrws8.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp_9umrws8.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp_9umrws8.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xe778a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    auto result = [];\n    if (a > b)\n    {\n        auto temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    for (auto i = a; i <= b;\
    \ i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0h0s1d4b.d(27): Error: cannot append type `long` to type `void[]`\\\
    n/tmp/tmp0h0s1d4b.d(30): Error: cannot implicitly convert expression `result`\
    \ of type `void[]` to `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp0h0s1d4b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmprzyukg.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpmprzyukg.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpmprzyukg.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xc7692554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq8732vyw.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpq8732vyw.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpq8732vyw.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x7afd3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a < b)\n    {\n        result =\
    \ new long[(b - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = a + 2 * i;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(a - b) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = b + 2 * i;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpusz63byr.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpusz63byr.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmpusz63byr.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x44364554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp26p0jau.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpp26p0jau.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpp26p0jau.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xbd6e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe1owdwel.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpe1owdwel.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpe1owdwel.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0xgb4f_a.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp0xgb4f_a.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp0xgb4f_a.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x65abd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        result ~= a;\n        a += 2;\n    }\n    else\n    {\n\
    \        a += 1;\n    }\n    for (long i = a; i <= b; i += 2)\n    {\n       \
    \ result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp94ex8sw2.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283dd]\\n??:? void tmp94ex8sw2.__unittest_L38_C1()\
    \ [0x427f70]\\n??:? void tmp94ex8sw2.__modtest() [0x428160]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce0f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bca2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c9c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430779]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc79]\\n??:? runModuleUnitTests [0x42cbe5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42882c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287b3]\\n??:? _d_run_main [0x42871e]\\n??:? main [0x428173]\\\
    n??:? __libc_start_main [0xca5ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = b; i <= a; i += 2)\n     \
    \   {\n            result ~= i;\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        for (long i = a; i <= b; i += 2)\n   \
    \     {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg9_45t4r.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42840d]\\n??:? void tmpg9_45t4r.__unittest_L35_C1()\
    \ [0x427f9c]\\n??:? void tmpg9_45t4r.__modtest() [0x42818c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce3f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcd2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43081d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ccc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307a9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bca9]\\n??:? runModuleUnitTests [0x42cc15]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42885c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e3]\\n??:? _d_run_main [0x42874e]\\n??:? main [0x42819f]\\\
    n??:? __libc_start_main [0x46004554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl8cdci62.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpl8cdci62.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpl8cdci62.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj8fly259.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpj8fly259.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmpj8fly259.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x1a6a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaf4b6puo.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpaf4b6puo.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpaf4b6puo.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xb8a89554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8lozm66y.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp8lozm66y.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp8lozm66y.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x194df554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt6_kmfz6.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpt6_kmfz6.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpt6_kmfz6.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x23c7e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1b2vb0pc.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1b2vb0pc.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1b2vb0pc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (long i = 0; i < result.length; i++)\n    {\n        result[i] = a + i\
    \ * 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnjg2ijic.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpnjg2ijic.__unittest_L29_C1()\
    \ [0x427f34]\\n??:? void tmpnjg2ijic.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43057d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a2c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430509]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c9]\\n??:? runModuleUnitTests [0x42c235]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428868]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ef]\\n??:? _d_run_main [0x42875a]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0xd8a9a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7lnuwrad.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp7lnuwrad.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp7lnuwrad.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xc3925554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        long i = 0;\n        foreach (long n; a.iota)\n\
    \        {\n            if (n % 2 == 0)\n            {\n                result[i]\
    \ = n;\n                i++;\n            }\n        }\n    }\n    else\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        long i = 0;\n        foreach\
    \ (long n; a.iota)\n        {\n            if (n % 2 == 0)\n            {\n  \
    \              result[i] = n;\n                i++;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjew8kuwl.d(21): Error: no property `iota` for type `long`\\n/tmp/tmpjew8kuwl.d(34):\
    \ Error: no property `iota` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjew8kuwl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppcmhphj_.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppcmhphj_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_k922laj.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp_k922laj.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp_k922laj.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x498bb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else \n    {\n        result = new long[0];\n\
    \        foreach (i; a..b+1) \n        {\n            if (i % 2 == 0) \n     \
    \       {\n                result ~= i;\n            }\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpntfqtnj0.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpntfqtnj0.__unittest_L34_C1()\
    \ [0x427f5c]\\n??:? void tmpntfqtnj0.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc92]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430769]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc69]\\n??:? runModuleUnitTests [0x42cbd5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0x182bd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8jzjsy9l.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp8jzjsy9l.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp8jzjsy9l.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xcbe54554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        auto temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result;\n    foreach (i; a..b+1)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwc8bgmi_.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpwc8bgmi_.__unittest_L32_C1()\
    \ [0x427f34]\\n??:? void tmpwc8bgmi_.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430661]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b10]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbe5]\\n??:? runModuleUnitTests [0x42cb51]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0x318fb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    for (long i\
    \ = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp908x7p5v.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp908x7p5v.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp908x7p5v.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x9e4c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        foreach (i; 0 .. result.length)\n      \
    \  {\n            result[i] = a - 2 * i;\n        }\n    }\n    else\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        foreach (i; 0 .. result.length)\n\
    \        {\n            result[i] = a + 2 * i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbmge01q3.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpbmge01q3.__unittest_L35_C1()\
    \ [0x427fbc]\\n??:? void tmpbmge01q3.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4e7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b37a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430605]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430591]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b351]\\n??:? runModuleUnitTests [0x42c2bd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288f0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428877]\\n??:? _d_run_main [0x4287e2]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0xdc6f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = b; i <= a; i += 2)\n     \
    \   {\n            result ~= i;\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        for (long i = a; i <= b; i += 2)\n   \
    \     {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1pke8900.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42840d]\\n??:? void tmp1pke8900.__unittest_L35_C1()\
    \ [0x427f9c]\\n??:? void tmp1pke8900.__modtest() [0x42818c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce3f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcd2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43081d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ccc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307a9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bca9]\\n??:? runModuleUnitTests [0x42cc15]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42885c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e3]\\n??:? _d_run_main [0x42874e]\\n??:? main [0x42819f]\\\
    n??:? __libc_start_main [0x86709554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    // your code here\n    long[] result = new long[0];\n  \
    \  if(a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    if(a % 2 == 0)\n    {\n        result ~= a;\n        a += 2;\n   \
    \ }\n    else\n    {\n        a += 1;\n    }\n    while(a <= b)\n    {\n     \
    \   result ~= a;\n        a += 2;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcg6zul_9.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283d5]\\n??:? void tmpcg6zul_9.__unittest_L40_C1()\
    \ [0x427f68]\\n??:? void tmpcg6zul_9.__modtest() [0x428158]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307e5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430771]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc71]\\n??:? runModuleUnitTests [0x42cbdd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428824]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ab]\\n??:? _d_run_main [0x428716]\\n??:? main [0x42816b]\\\
    n??:? __libc_start_main [0x1dc0f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (long i = 0; i < result.length; i++)\n    {\n        result[i] = a + 2\
    \ * i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptyl75usf.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmptyl75usf.__unittest_L29_C1()\
    \ [0x427f34]\\n??:? void tmptyl75usf.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43057d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a2c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430509]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c9]\\n??:? runModuleUnitTests [0x42c235]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428868]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ef]\\n??:? _d_run_main [0x42875a]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0xcd14554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbp0rv0kv.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbp0rv0kv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    if (min % 2 != 0)\n        min += 1;\n    if (max\
    \ % 2 != 0)\n        max -= 1;\n    if (min > max)\n        return result;\n \
    \   result = new long[(max - min) / 2 + 1];\n    for (long i = 0; i < result.length;\
    \ i++)\n        result[i] = min + i * 2;\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpptby1pzr.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpptby1pzr.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpptby1pzr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsufizdyq.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpsufizdyq.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpsufizdyq.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x3e655554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp46oqhx0z.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp46oqhx0z.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp46oqhx0z.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x7a122554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyq1u06ji.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpyq1u06ji.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpyq1u06ji.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x10cd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    auto result = new long[];\n    if (a > b)\n    {\n     \
    \   auto temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach (i;\
    \ a..b+1)\n    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgz0uzby.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxgz0uzby.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] res = new long[0];\n    long min = min(a, b);\n \
    \   long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res ~= i;\n        }\n    }\n   \
    \ return res;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n  \
    \  assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz9ji5kj0.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpz9ji5kj0.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpz9ji5kj0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp01bq_6or.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp01bq_6or.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp92zry_7y.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp92zry_7y.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp92zry_7y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi36kjuhc.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpi36kjuhc.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpi36kjuhc.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xe0334554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpatwygiw0.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpatwygiw0.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpatwygiw0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8tv625q8.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp8tv625q8.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp8tv625q8.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x9a9f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpevcof5z6.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpevcof5z6.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpevcof5z6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3cegrpx2.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp3cegrpx2.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp3cegrpx2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_d16sjv9.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp_d16sjv9.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp_d16sjv9.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xab90a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b) \n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach (i; a..b+1)\
    \ \n    {\n        if (i % 2 == 0) \n        {\n            result ~= i;\n   \
    \     }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp3mdrue0.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283bd]\\n??:? void tmpp3mdrue0.__unittest_L32_C1()\
    \ [0x427f4c]\\n??:? void tmpp3mdrue0.__modtest() [0x42813c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430679]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430605]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbfd]\\n??:? runModuleUnitTests [0x42cb69]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42880c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428793]\\n??:? _d_run_main [0x4286fe]\\n??:? main [0x42814f]\\\
    n??:? __libc_start_main [0xfe78554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (int i = 0; i < result.length; i++)\n    {\n        result[i] = a + i *\
    \ 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6fd2ygt_.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmp6fd2ygt_.__unittest_L29_C1()\
    \ [0x427f30]\\n??:? void tmp6fd2ygt_.__modtest() [0x428120]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c457]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ea]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430575]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a24]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430501]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c1]\\n??:? runModuleUnitTests [0x42c22d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x428133]\\\
    n??:? __libc_start_main [0xb7679554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph5ixcmtv.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmph5ixcmtv.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmph5ixcmtv.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x1da51554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(int)((b - a) / 2) + 1];\n\
    \    for (int i = 0; i < result.length; i++)\n    {\n        result[i] = a + i\
    \ * 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0to9z2i0.d(22): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0to9z2i0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe5i5odoq.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpe5i5odoq.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpe5i5odoq.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x626b6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        result ~= a;\n        a += 2;\n    }\n    else\n    {\n\
    \        a += 1;\n    }\n    while (a < b)\n    {\n        result ~= a;\n    \
    \    a += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwqzidgtf.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283d5]\\n??:? void tmpwqzidgtf.__unittest_L39_C1()\
    \ [0x428054]\\n??:? void tmpwqzidgtf.__modtest() [0x428158]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307e5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430771]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc71]\\n??:? runModuleUnitTests [0x42cbdd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428824]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ab]\\n??:? _d_run_main [0x428716]\\n??:? main [0x42816b]\\\
    n??:? __libc_start_main [0x254fe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long c = a;\n        a = b;\n        b = c;\n    }\n    for (long i = a;\
    \ i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphqum1oqy.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmphqum1oqy.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmphqum1oqy.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xa49bd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3bsijjin.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp3bsijjin.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp3bsijjin.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x25ab6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = b + i * 2;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + i * 2;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6mh6b5h7.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmp6mh6b5h7.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmp6mh6b5h7.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x4590d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv4a2sv7b.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpv4a2sv7b.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpv4a2sv7b.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x728c0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx6a6nj6q.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx6a6nj6q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ generate_integers(b, a);\n    } \n    else \n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result) \n        {\n           \
    \ e = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvhl31njs.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpvhl31njs.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmpvhl31njs.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x51fb1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[0];\n\
    \        foreach (i; a..b)\n        {\n            if (i % 2 == 0)\n         \
    \   {\n                result ~= i;\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptpz6xg60.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmptpz6xg60.__unittest_L34_C1()\
    \ [0x428044]\\n??:? void tmptpz6xg60.__modtest() [0x428148]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc8a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430761]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc61]\\n??:? runModuleUnitTests [0x42cbcd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428814]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42879b]\\n??:? _d_run_main [0x428706]\\n??:? main [0x42815b]\\\
    n??:? __libc_start_main [0x3257a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    auto result = new long[];\n    if (a > b)\n    {\n     \
    \   auto temp = a;\n        a = b;\n        b = temp;\n    }\n    foreach (i;\
    \ a..b+1)\n    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr7ukidle.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpr7ukidle.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_u3n7h4l.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp_u3n7h4l.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp_u3n7h4l.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x51f94554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = b + i * 2;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + i * 2;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu89xtkqb.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpu89xtkqb.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmpu89xtkqb.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x3180c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b) {\n       \
    \ long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    for (long i = a;\
    \ i <= b; i++) {\n        if (i % 2 == 0) {\n            result ~= i;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpttzayplx.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpttzayplx.__unittest_L29_C1()\
    \ [0x427f38]\\n??:? void tmpttzayplx.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x7900f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9efu0429.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9efu0429.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsyzvjpmj.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpsyzvjpmj.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpsyzvjpmj.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xdc640554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4l3jhnuk.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp4l3jhnuk.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp4l3jhnuk.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x8a750554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long c = a;\n        a = b;\n        b = c;\n    }\n    for (long i = a;\
    \ i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph3_fauh5.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmph3_fauh5.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmph3_fauh5.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x7858f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo1tajqah.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpo1tajqah.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpo1tajqah.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xdee20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1c2x87a8.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1c2x87a8.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1c2x87a8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcl4quxtr.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpcl4quxtr.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpcl4quxtr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + 2 * i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp69yhnxvg.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp69yhnxvg.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmp69yhnxvg.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xac8ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcng9kj_2.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpcng9kj_2.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpcng9kj_2.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x56a33554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    for (long i\
    \ = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1fs1jg32.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp1fs1jg32.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp1fs1jg32.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x4da55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long start = min(a, b);\n    long\
    \ end = max(a, b);\n    foreach(i; start..end)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4xcy2l7p.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4xcy2l7p.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4xcy2l7p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long min = min(a, b);\n    long\
    \ max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphw7nxztl.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmphw7nxztl.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmphw7nxztl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplco7wu1r.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmplco7wu1r.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmplco7wu1r.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x69519554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa_09wgnf.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpa_09wgnf.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpa_09wgnf.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x21140554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3k1dd59z.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp3k1dd59z.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp3k1dd59z.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xd64ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        foreach (i; 0 .. result.length)\n      \
    \  {\n            result[i] = a - 2 * i;\n        }\n    }\n    else\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        foreach (i; 0 .. result.length)\n\
    \        {\n            result[i] = a + 2 * i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_e05wc_y.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmp_e05wc_y.__unittest_L35_C1()\
    \ [0x427fbc]\\n??:? void tmp_e05wc_y.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4e7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b37a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430605]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430591]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b351]\\n??:? runModuleUnitTests [0x42c2bd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288f0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428877]\\n??:? _d_run_main [0x4287e2]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0x4b9d5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpujr9g5fu.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpujr9g5fu.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpujr9g5fu.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x8bcff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvdni0ef5.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpvdni0ef5.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpvdni0ef5.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xd5ec0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7r8j782o.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp7r8j782o.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmp7r8j782o.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x4aa8c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2pf_4y8o.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2pf_4y8o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        foreach (i; 0 .. result.length)\n      \
    \  {\n            result[i] = b + i * 2;\n        }\n    }\n    else\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        foreach (i; 0 .. result.length)\n\
    \        {\n            result[i] = a + i * 2;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu83qrhoy.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpu83qrhoy.__unittest_L35_C1()\
    \ [0x427fbc]\\n??:? void tmpu83qrhoy.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4e7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b37a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430605]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430591]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b351]\\n??:? runModuleUnitTests [0x42c2bd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288f0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428877]\\n??:? _d_run_main [0x4287e2]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0xc4910554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        long temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    foreach (i; a..b)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7c9tvdy2.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp7c9tvdy2.__unittest_L32_C1()\
    \ [0x428020]\\n??:? void tmp7c9tvdy2.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430661]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b10]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbe5]\\n??:? runModuleUnitTests [0x42cb51]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0x60a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b) \n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++) \n    {\n        if (i % 2 == 0) \n        {\n         \
    \   result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphjez2spk.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphjez2spk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmcamr8ob.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpmcamr8ob.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpmcamr8ob.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x59166554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfthx75ef.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpfthx75ef.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpfthx75ef.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x9a888554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzfo_d5m.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgzfo_d5m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxghdlvco.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpxghdlvco.d(17): Error: undefined\
    \ identifier `min`, did you mean function `main`?\\n/tmp/tmpxghdlvco.d(18): Error:\
    \ undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxghdlvco.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = b; i <= a; i += 2)\n     \
    \   {\n            result ~= i;\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        for (long i = a; i <= b; i += 2)\n   \
    \     {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa6bxi1r7.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42840d]\\n??:? void tmpa6bxi1r7.__unittest_L35_C1()\
    \ [0x427f9c]\\n??:? void tmpa6bxi1r7.__modtest() [0x42818c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce3f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcd2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43081d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ccc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307a9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bca9]\\n??:? runModuleUnitTests [0x42cc15]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42885c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e3]\\n??:? _d_run_main [0x42874e]\\n??:? main [0x42819f]\\\
    n??:? __libc_start_main [0xe612b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpst6uh2yx.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmpst6uh2yx.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmpst6uh2yx.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xdb856554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqfgogebt.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpqfgogebt.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpqfgogebt.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x2c5fa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl2lyme9a.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpl2lyme9a.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmpl2lyme9a.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0xafd87554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbcvu03qx.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpbcvu03qx.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpbcvu03qx.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x22aaa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9tavlsv.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpv9tavlsv.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpv9tavlsv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    long start = min(a, b);\n    long\
    \ end = max(a, b);\n    foreach(i; start..end)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4vj01hbl.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4vj01hbl.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4vj01hbl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp68lcymri.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp68lcymri.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp68lcymri.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xc256c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        long i = 0;\n        foreach (long n; a..b)\n      \
    \  {\n            if (n % 2 == 0)\n            {\n                result[i] =\
    \ n;\n                i++;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe1020a6m.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmpe1020a6m.__unittest_L36_C1()\
    \ [0x427f7c]\\n??:? void tmpe1020a6m.__modtest() [0x42816c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4a7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b33a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430551]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b311]\\n??:? runModuleUnitTests [0x42c27d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288b0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428837]\\n??:? _d_run_main [0x4287a2]\\n??:? main [0x42817f]\\\
    n??:? __libc_start_main [0xb8334554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2jzhyr0v.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp2jzhyr0v.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp2jzhyr0v.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x8db74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1yi6cdn0.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp1yi6cdn0.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp1yi6cdn0.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0x45a99554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        for (long i = a; i <= b; i += 2)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    else\n    {\n        for (long i = a\
    \ + 1; i <= b; i += 2)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpubfrmo6p.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmpubfrmo6p.__unittest_L39_C1()\
    \ [0x427f84]\\n??:? void tmpubfrmo6p.__modtest() [0x428174]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce27]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcba]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430805]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430791]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc91]\\n??:? runModuleUnitTests [0x42cbfd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x428187]\\\
    n??:? __libc_start_main [0x5f8db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b) \n    {\n \
    \       long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++) \n    {\n        if (i % 2 == 0) \n        {\n         \
    \   result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp86orwg3f.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp86orwg3f.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp86orwg3f.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xea755554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    foreach(i; min..max)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmmgwsmy_.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpmmgwsmy_.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpmmgwsmy_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  for (int i = 0; i < result.length; i++)\n    {\n        result[i] = a + i *\
    \ 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpho8liyw7.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpho8liyw7.__unittest_L29_C1()\
    \ [0x427f30]\\n??:? void tmpho8liyw7.__modtest() [0x428120]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c457]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ea]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430575]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a24]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430501]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c1]\\n??:? runModuleUnitTests [0x42c22d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x428133]\\\
    n??:? __libc_start_main [0xeafae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = b; i <= a; i += 2)\n     \
    \   {\n            result ~= i;\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        for (long i = a; i <= b; i += 2)\n   \
    \     {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4izh1rce.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42840d]\\n??:? void tmp4izh1rce.__unittest_L35_C1()\
    \ [0x427f9c]\\n??:? void tmp4izh1rce.__modtest() [0x42818c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce3f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcd2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43081d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ccc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307a9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bca9]\\n??:? runModuleUnitTests [0x42cc15]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42885c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e3]\\n??:? _d_run_main [0x42874e]\\n??:? main [0x42819f]\\\
    n??:? __libc_start_main [0xb05b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmpd1n5o8.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpmpd1n5o8.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpmpd1n5o8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long start = min(a, b);\n\
    \    long end = max(a, b);\n    foreach(i; start..end)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1p7r6ziu.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1p7r6ziu.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1p7r6ziu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4nqdpdq1.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4nqdpdq1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3dvgzcf7.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3dvgzcf7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a == b)\n    {\n \
    \       if (a % 2 == 0)\n        {\n            result ~= a;\n        }\n    }\n\
    \    else if (a < b)\n    {\n        for (long i = a; i <= b; i++)\n        {\n\
    \            if (i % 2 == 0)\n            {\n                result ~= i;\n  \
    \          }\n        }\n    }\n    else\n    {\n        for (long i = b; i <=\
    \ a; i++)\n        {\n            if (i % 2 == 0)\n            {\n           \
    \     result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplsh7_m77.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmplsh7_m77.__unittest_L46_C1()\
    \ [0x427fe0]\\n??:? void tmplsh7_m77.__modtest() [0x4281d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce7f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bd12]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43085d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430d0c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307e9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bce9]\\n??:? runModuleUnitTests [0x42cc55]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42889c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428823]\\n??:? _d_run_main [0x42878e]\\n??:? main [0x4281e3]\\\
    n??:? __libc_start_main [0x12e34554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    long min = min(a, b);\n\
    \    long max = max(a, b);\n    for (long i = min; i <= max; i++)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprqy6th0k.d(17): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmprqy6th0k.d(18): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmprqy6th0k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp54a5cl91.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp54a5cl91.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp54a5cl91.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xb7e7a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpttddgvq0.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpttddgvq0.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmpttddgvq0.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xf0b1b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a-b)/2];\n        for (long i = b; i <= a; i += 2)\n        {\n  \
    \          result ~= i;\n        }\n    }\n    else\n    {\n        result = new\
    \ long[(b-a)/2];\n        for (long i = a; i <= b; i += 2)\n        {\n      \
    \      result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt5ye8g_1.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428405]\\n??:? void tmpt5ye8g_1.__unittest_L35_C1()\
    \ [0x427f98]\\n??:? void tmpt5ye8g_1.__modtest() [0x428188]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce37]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcca]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430815]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307a1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bca1]\\n??:? runModuleUnitTests [0x42cc0d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428854]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287db]\\n??:? _d_run_main [0x428746]\\n??:? main [0x42819b]\\\
    n??:? __libc_start_main [0x48f44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = [];\n    if (a > b)\n    {\n        long\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long i = a; i\
    \ <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp91cjil8r.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ad]\\n??:? void tmp91cjil8r.__unittest_L32_C1()\
    \ [0x427f3c]\\n??:? void tmp91cjil8r.__modtest() [0x42812c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430669]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b18]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbed]\\n??:? runModuleUnitTests [0x42cb59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428783]\\n??:? _d_run_main [0x4286ee]\\n??:? main [0x42813f]\\\
    n??:? __libc_start_main [0xeac47554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeoxmyr_a.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpeoxmyr_a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % 2\
    \ == 0)\n    {\n        result ~= a;\n        a += 2;\n    }\n    else\n    {\n\
    \        a += 1;\n    }\n    while (a < b)\n    {\n        result ~= a;\n    \
    \    a += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp51nuogul.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283d5]\\n??:? void tmp51nuogul.__unittest_L39_C1()\
    \ [0x428054]\\n??:? void tmp51nuogul.__modtest() [0x428158]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307e5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430771]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc71]\\n??:? runModuleUnitTests [0x42cbdd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428824]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ab]\\n??:? _d_run_main [0x428716]\\n??:? main [0x42816b]\\\
    n??:? __libc_start_main [0xbec59554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc3hwfjc7.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpc3hwfjc7.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpc3hwfjc7.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xb9f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzrxy01mj.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzrxy01mj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = b + 2 * i;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + 2 * i;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplhv1i4r5.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmplhv1i4r5.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmplhv1i4r5.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x3d2c4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n\
    \        {\n            result[i] = a - 2 * i;\n        }\n    }\n    else\n \
    \   {\n        result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i\
    \ < result.length; i++)\n        {\n            result[i] = a + 2 * i;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaofnmr3t.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpaofnmr3t.__unittest_L35_C1()\
    \ [0x427fb4]\\n??:? void tmpaofnmr3t.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x63317554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b) \n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else \n    {\n        result = [];\n  \
    \      foreach (i; a..b) \n        {\n            if (i % 2 == 0) \n         \
    \   {\n                result ~= i;\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbpeu7mqf.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpbpeu7mqf.__unittest_L34_C1()\
    \ [0x42804c]\\n??:? void tmpbpeu7mqf.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x34fc2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ generate_integers(b, a);\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        long i = 0;\n        foreach (n; iota(a, b + 1))\n \
    \       {\n            if (n % 2 == 0)\n            {\n                result[i]\
    \ = n;\n                i++;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3_nxer4.d(25): Error: undefined identifier `iota`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj3_nxer4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7kjhufs7.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp7kjhufs7.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp7kjhufs7.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xbea4b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[0];\n    for (long i =\
    \ a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1alw00xz.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmp1alw00xz.__unittest_L32_C1()\
    \ [0x427f28]\\n??:? void tmp1alw00xz.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x90773554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    long[] result = new long[(b - a) / 2 + 1];\n  \
    \  long index = 0;\n    for (long i = a; i <= b; i += 2)\n    {\n        result[index]\
    \ = i;\n        index++;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp78d8eihi.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp78d8eihi.__unittest_L31_C1()\
    \ [0x427f38]\\n??:? void tmp78d8eihi.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43057d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a2c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430509]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c9]\\n??:? runModuleUnitTests [0x42c235]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428868]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287ef]\\n??:? _d_run_main [0x42875a]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xa7614554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result;\n    if (a > b)\n    {\n        result =\
    \ new long[(a - b) / 2 + 1];\n        long i = 0;\n        while (a >= b)\n  \
    \      {\n            if (a % 2 == 0)\n            {\n                result[i]\
    \ = a;\n                i++;\n            }\n            a--;\n        }\n   \
    \ }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n        long\
    \ i = 0;\n        while (a <= b)\n        {\n            if (a % 2 == 0)\n   \
    \         {\n                result[i] = a;\n                i++;\n          \
    \  }\n            a++;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbktuvos_.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428445]\\n??:? void tmpbktuvos_.__unittest_L47_C1()\
    \ [0x427fd8]\\n??:? void tmpbktuvos_.__modtest() [0x4281c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4ff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b392]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43061d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430acc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305a9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b369]\\n??:? runModuleUnitTests [0x42c2d5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428908]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42888f]\\n??:? _d_run_main [0x4287fa]\\n??:? main [0x4281db]\\\
    n??:? __libc_start_main [0xf0e76554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[];\n    if (a > b)\n    {\n   \
    \     long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8o269wwk.d(16): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8o269wwk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a == b)\n    {\n \
    \       if (a % 2 == 0)\n        {\n            result ~= a;\n        }\n    }\n\
    \    else if (a < b)\n    {\n        for (long i = a; i <= b; i++)\n        {\n\
    \            if (i % 2 == 0)\n            {\n                result ~= i;\n  \
    \          }\n        }\n    }\n    else\n    {\n        for (long i = b; i <=\
    \ a; i++)\n        {\n            if (i % 2 == 0)\n            {\n           \
    \     result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgr745eac.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmpgr745eac.__unittest_L46_C1()\
    \ [0x427fe0]\\n??:? void tmpgr745eac.__modtest() [0x4281d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce7f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bd12]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43085d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430d0c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307e9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bce9]\\n??:? runModuleUnitTests [0x42cc55]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42889c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428823]\\n??:? _d_run_main [0x42878e]\\n??:? main [0x4281e3]\\\
    n??:? __libc_start_main [0xf438c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3qvhkqi_.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp3qvhkqi_.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmp3qvhkqi_.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x32ca3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8,\
    \ 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []\n    \n*/\nlong[] generate_integers(long\
    \ a, long b) \n{\n    long[] result = new long[0];\n    if (a > b)\n    {\n  \
    \      long temp = a;\n        a = b;\n        b = temp;\n    }\n    for (long\
    \ i = a; i <= b; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpslp2c2xv.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpslp2c2xv.__unittest_L32_C1()\
    \ [0x427f38]\\n??:? void tmpslp2c2xv.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xaf463554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

name: HumanEval_92_any_int
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int) && (x + y == z || x + z == y || y + z == x);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphoyq1e45.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmphoyq1e45.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmphoyq1e45.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xb4c21554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  return true;\n    }\n    else\n    {\n        return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx98oa1k1.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpx98oa1k1.__unittest_L33_C1()\
    \ [0x427ae0]\\n??:? void tmpx98oa1k1.__modtest() [0x427c58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c6b]\\\
    n??:? __libc_start_main [0x2293e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbthxp27o.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpbthxp27o.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpbthxp27o.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xac00a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiqlgdl89.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpiqlgdl89.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpiqlgdl89.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x28f46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyb_x2ft9.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpyb_x2ft9.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpyb_x2ft9.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xf0be9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm18b68zq.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpm18b68zq.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpm18b68zq.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7882b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp203s4u3v.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp203s4u3v.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmp203s4u3v.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0x7cffb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_cohv0am.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_cohv0am.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp_cohv0am.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd1779554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnk5hskmo.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpnk5hskmo.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmpnk5hskmo.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0x965d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if(is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int))\n    {\n        if(x == y + z || y == x + z\
    \ || z == x + y)\n        {\n            result = true;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5sron_2k.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp5sron_2k.__unittest_L34_C1()\
    \ [0x427a38]\\n??:? void tmp5sron_2k.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4b7de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7gup4k0e.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7gup4k0e.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp7gup4k0e.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xee92a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  if(x.isInteger() && y.isInteger() && z.isInteger())\n        {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq2wa1ofh.d(26): Error: no property `isInteger` for type `float`\\\
    n/tmp/tmpq2wa1ofh.d(26): Error: no property `isInteger` for type `float`\\n/tmp/tmpq2wa1ofh.d(26):\
    \ Error: no property `isInteger` for type `float`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpq2wa1ofh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppw2u5gej.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppw2u5gej.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmppw2u5gej.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe3ba0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjtqojgcu.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpjtqojgcu.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpjtqojgcu.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xafef0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpizplek_f.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpizplek_f.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpizplek_f.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x15adb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaj7z5eoz.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpaj7z5eoz.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmpaj7z5eoz.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x52baa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if(is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int))\n    {\n        if(x == sum - y - z || y ==\
    \ sum - x - z || z == sum - x - y)\n        {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsq431qqz.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpsq431qqz.__unittest_L34_C1()\
    \ [0x427a40]\\n??:? void tmpsq431qqz.__modtest() [0x427c1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c2f]\\\
    n??:? __libc_start_main [0x1fc11554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxaggekas.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpxaggekas.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpxaggekas.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe1d19554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if (x == sum - x - y || y == sum\
    \ - x - z || z == sum - x - y)\n    {\n        return true;\n    }\n    else\n\
    \    {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn56xz_i8.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpn56xz_i8.__unittest_L34_C1()\
    \ [0x427ad6]\\n??:? void tmpn56xz_i8.__modtest() [0x427c80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aab6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbd5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa8d]\\n??:? runModuleUnitTests [0x42b9f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42834c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282d3]\\n??:? _d_run_main [0x42823e]\\n??:? main [0x427c93]\\\
    n??:? __libc_start_main [0xb2089554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1qc3ig1g.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp1qc3ig1g.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp1qc3ig1g.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == (y + z) || y == (x + z) || z == (x + y)) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr9dfqtt_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpr9dfqtt_.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpr9dfqtt_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x525d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkeu_365g.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpkeu_365g.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpkeu_365g.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4338a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwjqbf36q.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpwjqbf36q.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpwjqbf36q.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4dc46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1cl3pz5m.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp1cl3pz5m.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp1cl3pz5m.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xc64e2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int))\n    {\n        if (x == y + z || y == x +\
    \ z || z == x + y)\n        {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvzl2aqgw.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpvzl2aqgw.__unittest_L34_C1()\
    \ [0x427a38]\\n??:? void tmpvzl2aqgw.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x87a40554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp45o2gyvi.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp45o2gyvi.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp45o2gyvi.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x789c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && x.isInteger\
    \ && y.isInteger && z.isInteger;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_3dd2qp9.d(24): Error: no property `isInteger` for type `float`\\\
    n/tmp/tmp_3dd2qp9.d(24): Error: no property `isInteger` for type `float`\\n/tmp/tmp_3dd2qp9.d(24):\
    \ Error: no property `isInteger` for type `float`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_3dd2qp9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbcd85yge.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpbcd85yge.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpbcd85yge.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x30f24554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppaezys4a.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppaezys4a.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmppaezys4a.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe7925554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppue272o4.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppue272o4.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmppue272o4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x95d1e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvlsoagun.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpvlsoagun.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmpvlsoagun.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x68f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6jfeurp6.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp6jfeurp6.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmp6jfeurp6.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xe902554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpct5votzs.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpct5votzs.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpct5votzs.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x58bf6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp891f9lqc.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp891f9lqc.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp891f9lqc.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x2fd56554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5n6m2gfy.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp5n6m2gfy.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp5n6m2gfy.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x5d4a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdcxtwon8.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpdcxtwon8.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpdcxtwon8.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x49278554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z) || (y == x + z) || (z == x + y);\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5kjb2ydq.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmp5kjb2ydq.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmp5kjb2ydq.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x82f77554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsb_l8wn_.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpsb_l8wn_.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpsb_l8wn_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x549fb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp36xmbfge.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp36xmbfge.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp36xmbfge.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x14bb2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    //return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n    return (x ==\
    \ y + z || y == x + z || z == x + y) && (is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4l822y5s.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp4l822y5s.__unittest_L27_C1()\
    \ [0x427a44]\\n??:? void tmp4l822y5s.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xab6a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjo1ii7ak.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpjo1ii7ak.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpjo1ii7ak.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x33f94554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvi7uwa3r.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpvi7uwa3r.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpvi7uwa3r.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xfdb69554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2140jrr3.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp2140jrr3.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp2140jrr3.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd665554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3mnuqmn9.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3mnuqmn9.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp3mnuqmn9.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x552da554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpntn5ri27.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpntn5ri27.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpntn5ri27.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe31d1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3npzug3j.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3npzug3j.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmp3npzug3j.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x740e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (x.isInteger\
    \ && y.isInteger && z.isInteger);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpllszxt5e.d(24): Error: no property `isInteger` for type `float`\\\
    n/tmp/tmpllszxt5e.d(24): Error: no property `isInteger` for type `float`\\n/tmp/tmpllszxt5e.d(24):\
    \ Error: no property `isInteger` for type `float`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpllszxt5e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (isInteger(x) && isInteger(y) && isInteger(z))\n    {\n\
    \        if (x == y + z || y == x + z || z == x + y)\n        {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr6n92c9d.d(24): Error: undefined identifier `isInteger`\\n/tmp/tmpr6n92c9d.d(24):\
    \ Error: undefined identifier `isInteger`\\n/tmp/tmpr6n92c9d.d(24): Error: undefined\
    \ identifier `isInteger`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpr6n92c9d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe32aq8x1.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpe32aq8x1.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpe32aq8x1.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x26718554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0t2_k7ms.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp0t2_k7ms.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp0t2_k7ms.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x38aaa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp6do3yac.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpp6do3yac.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpp6do3yac.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7c74e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr2y0scuv.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpr2y0scuv.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpr2y0scuv.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9c349554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9_25y7e4.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp9_25y7e4.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmp9_25y7e4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x586d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl8p4xj3_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpl8p4xj3_.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpl8p4xj3_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x1c111554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3e2b2g84.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3e2b2g84.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp3e2b2g84.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x21da8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl6jc8e6c.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpl6jc8e6c.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpl6jc8e6c.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x584ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpogweastb.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpogweastb.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpogweastb.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x67170554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp78srryh.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpp78srryh.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpp78srryh.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x8f685554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphhvc4amn.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmphhvc4amn.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmphhvc4amn.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x65cba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvvi7lwo4.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpvvi7lwo4.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpvvi7lwo4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7492b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz4e65khh.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpz4e65khh.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpz4e65khh.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7695d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqekrg86k.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpqekrg86k.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpqekrg86k.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x6d18554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphj0z89fc.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmphj0z89fc.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmphj0z89fc.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x34fa0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1k18r6el.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp1k18r6el.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp1k18r6el.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x18064554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwdqc5pyb.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpwdqc5pyb.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpwdqc5pyb.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xea460554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y + z || y == x + z || z == x + y)\n    {\n     \
    \   if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgknb39ww.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpgknb39ww.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmpgknb39ww.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x9a17a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd84rf21p.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpd84rf21p.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpd84rf21p.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x49af4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7lvoimm3.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7lvoimm3.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp7lvoimm3.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9f24f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv9f74bwz.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpv9f74bwz.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmpv9f74bwz.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xf405d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbxqs98bd.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpbxqs98bd.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpbxqs98bd.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x80a5a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5elu65sf.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp5elu65sf.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp5elu65sf.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x3b36d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2v6l_dpm.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmp2v6l_dpm.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmp2v6l_dpm.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x86a2c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppjya8m4v.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppjya8m4v.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmppjya8m4v.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4f98a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy0zxzbjj.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpy0zxzbjj.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpy0zxzbjj.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xc198e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp39kbn4r6.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp39kbn4r6.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp39kbn4r6.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa5998554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8u2o1gr0.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8u2o1gr0.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp8u2o1gr0.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd5680554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeecm85wf.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpeecm85wf.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpeecm85wf.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x1eb6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(x == y + z || y == x + z || z == x + y)\n    {\n      \
    \  if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbcjb39jf.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpbcjb39jf.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmpbcjb39jf.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0xd3491554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3n2k4mbx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3n2k4mbx.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp3n2k4mbx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x396b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(isInteger(x) && isInteger(y) && isInteger(z))\n    {\n\
    \        if(x == y + z || y == x + z || z == x + y)\n        {\n            return\
    \ true;\n        }\n        else\n        {\n            return false;\n     \
    \   }\n    }\n    else\n    {\n        return false;\n    }\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj2735gwi.d(24): Error: undefined identifier `isInteger`\\n/tmp/tmpj2735gwi.d(24):\
    \ Error: undefined identifier `isInteger`\\n/tmp/tmpj2735gwi.d(24): Error: undefined\
    \ identifier `isInteger`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpj2735gwi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3beq3a7v.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3beq3a7v.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp3beq3a7v.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x3d885554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfr5w3kf2.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpfr5w3kf2.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpfr5w3kf2.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa6c96554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplehex3b8.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmplehex3b8.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmplehex3b8.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x724b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp192im5s_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp192im5s_.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp192im5s_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x85853554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpewt0v6eo.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpewt0v6eo.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpewt0v6eo.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xc2bad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7kt30zrg.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7kt30zrg.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmp7kt30zrg.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7dbaf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvo23ae2g.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpvo23ae2g.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpvo23ae2g.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x581dc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnio72p1w.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpnio72p1w.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpnio72p1w.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x46255554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf_lmkf9k.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpf_lmkf9k.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpf_lmkf9k.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x3b96a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpup3t3oig.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpup3t3oig.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpup3t3oig.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x8bea0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2rn8t83r.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp2rn8t83r.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp2rn8t83r.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa2bd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj0y0x6kr.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpj0y0x6kr.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpj0y0x6kr.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd41554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpld94ohpj.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpld94ohpj.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpld94ohpj.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4c364554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxfi43ohy.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpxfi43ohy.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpxfi43ohy.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x866b9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuf269uby.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpuf269uby.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpuf269uby.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xee6d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc7cvnj_2.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpc7cvnj_2.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpc7cvnj_2.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xeb957554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9z2zgeh3.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp9z2zgeh3.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp9z2zgeh3.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x60eec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxw22pv29.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpxw22pv29.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpxw22pv29.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x1391d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsxg45hxf.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpsxg45hxf.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpsxg45hxf.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7951a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1y6327hh.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp1y6327hh.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp1y6327hh.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xdde2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_ugnq8jn.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_ugnq8jn.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp_ugnq8jn.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9be69554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph5bz2gs6.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmph5bz2gs6.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmph5bz2gs6.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7a78b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpylbm3szf.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpylbm3szf.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpylbm3szf.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x8020f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z) || (y == x + z) || (z == x + y);\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprwmi8fia.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmprwmi8fia.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmprwmi8fia.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x9a6e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x + y == z || x + z == y || y + z == x) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpptdi36gp.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpptdi36gp.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpptdi36gp.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x6fe0f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp30zmc9_w.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp30zmc9_w.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp30zmc9_w.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x52eb0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_vyejx46.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_vyejx46.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp_vyejx46.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd677e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy2n33u6q.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpy2n33u6q.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpy2n33u6q.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x543a1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppmia8d7k.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppmia8d7k.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmppmia8d7k.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x250a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnq0hepsv.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpnq0hepsv.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpnq0hepsv.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x28476554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgl25ab0w.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpgl25ab0w.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpgl25ab0w.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe2650554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp145czeuw.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp145czeuw.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp145czeuw.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd4bd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph5h421lh.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmph5h421lh.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmph5h421lh.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x69b8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3vo8m6vu.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3vo8m6vu.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp3vo8m6vu.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa1118554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4rmtdkdr.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp4rmtdkdr.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp4rmtdkdr.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x97812554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsdzkh2bw.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpsdzkh2bw.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpsdzkh2bw.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x18d14554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x)) && is(typeof(y)) && is(typeof(z)))\n    {\n\
    \        if(x == y + z || y == x + z || z == x + y)\n        {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj4kv8wlc.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpj4kv8wlc.__unittest_L33_C1()\
    \ [0x427ae0]\\n??:? void tmpj4kv8wlc.__modtest() [0x427c58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c6b]\\\
    n??:? __libc_start_main [0x7d7fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpguzubges.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpguzubges.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpguzubges.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xbd16d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsaupfkw7.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpsaupfkw7.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpsaupfkw7.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xb8c5f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9z50xpya.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp9z50xpya.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp9z50xpya.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe702d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8azusdrx.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8azusdrx.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp8azusdrx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x691d1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr4thfrv4.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpr4thfrv4.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpr4thfrv4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xcbdbd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi4kz2qv5.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpi4kz2qv5.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpi4kz2qv5.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xf6804554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_cxyj5fx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_cxyj5fx.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp_cxyj5fx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9bfc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeclg5xax.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpeclg5xax.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpeclg5xax.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x46fa1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6dz2bu5q.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp6dz2bu5q.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp6dz2bu5q.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x636c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi92j6c2r.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpi92j6c2r.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpi92j6c2r.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd7eed554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return is(typeof(x)) && is(typeof(y)) && is(typeof(z)) &&\
    \ (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpquqoyr0g.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpquqoyr0g.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmpquqoyr0g.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0xb8d0e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr9afm1gz.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpr9afm1gz.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpr9afm1gz.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x3eb70554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y + z || y == x + z || z == x + y)\n    {\n     \
    \   if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z) == int))\n\
    \        {\n            return true;\n        }\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdy9v9c1a.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpdy9v9c1a.__unittest_L33_C1()\
    \ [0x427a78]\\n??:? void tmpdy9v9c1a.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0xc485a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuejed5cn.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpuejed5cn.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpuejed5cn.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x24d23554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0g3isg8z.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp0g3isg8z.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp0g3isg8z.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xb3952554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqgkscylz.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpqgkscylz.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpqgkscylz.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9dfb5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8_t_lcun.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8_t_lcun.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp8_t_lcun.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x61d29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp15yasd0p.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp15yasd0p.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp15yasd0p.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x16e09554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg4x9t0o_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpg4x9t0o_.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpg4x9t0o_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xbde54554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwigrrwll.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpwigrrwll.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpwigrrwll.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe476a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z) || (y == x + z) || (z == x + y);\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpec0dshzm.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpec0dshzm.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmpec0dshzm.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x1a690554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if(is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int))\n    {\n        if(x == sum - y - z || y ==\
    \ sum - x - z || z == sum - x - y)\n        {\n            return true;\n    \
    \    }\n        else\n        {\n            return false;\n        }\n    }\n\
    \    else\n    {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph3tv02ni.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmph3tv02ni.__unittest_L41_C1()\
    \ [0x427a40]\\n??:? void tmph3tv02ni.__modtest() [0x427c1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c2f]\\\
    n??:? __libc_start_main [0x5bc2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfu3ivg4d.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpfu3ivg4d.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpfu3ivg4d.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xcdb84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3j_1r9ce.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3j_1r9ce.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp3j_1r9ce.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x65cbe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpku6ueu3s.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpku6ueu3s.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpku6ueu3s.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x38e57554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprd49_f3j.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmprd49_f3j.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmprd49_f3j.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0x35b7a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5uv7vco8.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp5uv7vco8.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp5uv7vco8.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x76b78554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt85a1ap3.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpt85a1ap3.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpt85a1ap3.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4baa4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfktw2oko.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpfktw2oko.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpfktw2oko.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4d94554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm1b5h8xs.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpm1b5h8xs.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpm1b5h8xs.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd1a78554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqsch849l.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpqsch849l.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpqsch849l.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x8749554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7plnzlfq.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7plnzlfq.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp7plnzlfq.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe35a7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2wk1mvq4.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp2wk1mvq4.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp2wk1mvq4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x64531554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl8aozkhe.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpl8aozkhe.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpl8aozkhe.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xec354554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdj69w4b7.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpdj69w4b7.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpdj69w4b7.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x2506b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2rgdt3_g.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp2rgdt3_g.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmp2rgdt3_g.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xdb2da554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7kstvx96.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7kstvx96.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp7kstvx96.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x9fc38554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z) || (y == x + z) || (z == x + y);\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvokb79_t.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpvokb79_t.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmpvokb79_t.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0xe2c1e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp04_487sx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp04_487sx.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp04_487sx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa5c28554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgsvk7orb.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpgsvk7orb.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmpgsvk7orb.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xc699a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo4abtbvu.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpo4abtbvu.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpo4abtbvu.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x987a6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprz2uafgl.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmprz2uafgl.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmprz2uafgl.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xa2837554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return is(typeof(x + y + z) == int);\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4o4e0dlo.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp4o4e0dlo.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp4o4e0dlo.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x42c59554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        return (x == y + z) || (y == x + z) || (z == x + y);\n\
    \    }\n    else\n    {\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfqu9036w.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpfqu9036w.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpfqu9036w.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x763c3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcqh10prh.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpcqh10prh.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpcqh10prh.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xcab41554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyh9w5s5a.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpyh9w5s5a.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpyh9w5s5a.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x50042554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo0bar9b3.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpo0bar9b3.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpo0bar9b3.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x74df0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzf3v6b19.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpzf3v6b19.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpzf3v6b19.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x3fc8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx5s826wd.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpx5s826wd.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpx5s826wd.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x63659554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkjvkurps.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpkjvkurps.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpkjvkurps.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x34aa6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn8a8um2p.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpn8a8um2p.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpn8a8um2p.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd5b62554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoub_69nw.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpoub_69nw.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmpoub_69nw.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xfe65f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkzsn6yqq.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpkzsn6yqq.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpkzsn6yqq.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x84bf1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4z1zzhdp.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp4z1zzhdp.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp4z1zzhdp.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x1f1b3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp953crrx4.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp953crrx4.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp953crrx4.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x784fe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4wwod5xx.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp4wwod5xx.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp4wwod5xx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x80379554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuhr_neah.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpuhr_neah.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpuhr_neah.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x7b57d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoens60ey.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpoens60ey.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpoens60ey.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x76f2e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppgrd8szb.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmppgrd8szb.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmppgrd8szb.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xddd35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n     \
    \   {\n            return true;\n        }\n        else\n        {\n        \
    \    return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgj73brqz.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpgj73brqz.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpgj73brqz.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xf4b6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptc2_ll3h.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmptc2_ll3h.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmptc2_ll3h.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x6e4e6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphpwcljp8.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmphpwcljp8.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmphpwcljp8.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4c503554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg0qi8phi.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpg0qi8phi.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpg0qi8phi.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xc692e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplgmso7sz.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmplgmso7sz.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmplgmso7sz.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x20ca5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z) || (y == x + z) || (z == x + y);\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp442v0kd_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmp442v0kd_.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmp442v0kd_.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0xf89d4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8wyev97x.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8wyev97x.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp8wyev97x.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x473ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp191z4c2c.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp191z4c2c.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp191z4c2c.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x16c1d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_xyjd4xy.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_xyjd4xy.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp_xyjd4xy.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4a3d4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbr8n7zzs.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpbr8n7zzs.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpbr8n7zzs.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd8631554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2ksp4ayt.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp2ksp4ayt.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmp2ksp4ayt.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe0dd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuc0smttv.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpuc0smttv.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpuc0smttv.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x33e08554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmposylfckx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmposylfckx.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmposylfckx.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xdf08b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd89_ur6g.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpd89_ur6g.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpd89_ur6g.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x97837554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprxccz_g1.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmprxccz_g1.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmprxccz_g1.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x77c68554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp90p4nwwt.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp90p4nwwt.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp90p4nwwt.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xee344554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk2g282au.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpk2g282au.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpk2g282au.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x4d139554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_de3obps.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp_de3obps.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp_de3obps.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xaca2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg2wqui9h.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpg2wqui9h.__unittest_L33_C1()\
    \ [0x427a38]\\n??:? void tmpg2wqui9h.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xe0f53554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_6ihzx_i.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp_6ihzx_i.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmp_6ihzx_i.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0x576d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2d21p48m.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp2d21p48m.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp2d21p48m.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x78922554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if(is(typeof(x) == int) && is(typeof(y)\
    \ == int) && is(typeof(z) == int))\n    {\n        if(x == sum - y - z || y ==\
    \ sum - x - z || z == sum - x - y)\n        {\n            return true;\n    \
    \    }\n        else\n        {\n            return false;\n        }\n    }\n\
    \    else\n    {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6s0dw7q1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp6s0dw7q1.__unittest_L41_C1()\
    \ [0x427a40]\\n??:? void tmp6s0dw7q1.__modtest() [0x427c1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c2f]\\\
    n??:? __libc_start_main [0x95665554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int);\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpucrah9lg.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpucrah9lg.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmpucrah9lg.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xd849f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if(is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int))\n    {\n        if(x == y + z || y == x + z || z == x + y)\n      \
    \  {\n            return true;\n        }\n        else\n        {\n         \
    \   return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpifqyeik5.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpifqyeik5.__unittest_L40_C1()\
    \ [0x427a38]\\n??:? void tmpifqyeik5.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x632d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

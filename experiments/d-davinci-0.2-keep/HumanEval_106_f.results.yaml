name: HumanEval_106_f
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy04fvj13.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpy04fvj13.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpy04fvj13.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2o42o70q.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp2o42o70q.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp2o42o70q.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x29f77554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwzqx98kw.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpwzqx98kw.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwzqx98kw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmperg7gmje.d(20): Error: undefined identifier `factorial`\\n/tmp/tmperg7gmje.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmperg7gmje.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpji43ksiz.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpji43ksiz.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpji43ksiz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] ret = new long[n];\n    for(long i = 0; i < n; i++)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            ret[i] = factorial(i);\n        }\n\
    \        else\n        {\n            ret[i] = sum(i);\n        }\n    }\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyfve3avj.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpyfve3avj.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyfve3avj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx0bbxsxx.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpx0bbxsxx.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpx0bbxsxx.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x27d7b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqr9g068v.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpqr9g068v.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqr9g068v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv_jfzogj.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_jfzogj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ixa6nt4.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ixa6nt4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjnmm2w0f.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpjnmm2w0f.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjnmm2w0f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] arr = new long[n];\n    for(long i = 0; i < n; i++)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            arr[i] = factorial(i);\n        }\n\
    \        else\n        {\n            arr[i] = sum(i);\n        }\n    }\n   \
    \ return arr;\n}\nlong factorial(long n)\n{\n    long fact = 1;\n    for(long\
    \ i = 1; i <= n; i++)\n    {\n        fact *= i;\n    }\n    return fact;\n}\n\
    long sum(long n)\n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n   \
    \ {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_3f423f6.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp_3f423f6.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp_3f423f6.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x127d7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpufc8le49.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpufc8le49.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpufc8le49.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk6y1xgc4.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpk6y1xgc4.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpk6y1xgc4.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xe4879554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps2wr7e1u.d(20): Error: undefined identifier `factorial`\\n/tmp/tmps2wr7e1u.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps2wr7e1u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqst94199.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpqst94199.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqst94199.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] list = new long[n];\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    if(i % 2 == 0)\n        {\n            list[i] = factorial(i);\n        }\n\
    \        else\n        {\n            list[i] = sum(i);\n        }\n    }\n  \
    \  return list;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph93rpi7j.d(20): Error: undefined identifier `factorial`\\n/tmp/tmph93rpi7j.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmph93rpi7j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnatdnk8s.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpnatdnk8s.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnatdnk8s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp070y95nh.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp070y95nh.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp070y95nh.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x5947d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdvi4k1et.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpdvi4k1et.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdvi4k1et.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2yq72_fr.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp2yq72_fr.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp2yq72_fr.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xc9da1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9wxz1ogc.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp9wxz1ogc.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9wxz1ogc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi58ppxun.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpi58ppxun.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpi58ppxun.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_v7o728a.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp_v7o728a.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_v7o728a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfqj3o9xz.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpfqj3o9xz.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpfqj3o9xz.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xf4b8d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nlong factorial(long n) \n{\n    long result\
    \ = 1;\n    for (long i = 1; i <= n; i++) \n    {\n        result *= i;\n    }\n\
    \    return result;\n}\nlong sum(long n) \n{\n    long result = 0;\n    for (long\
    \ i = 1; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L,\
    \ 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n\
    \    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsm0mp8ia.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpsm0mp8ia.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpsm0mp8ia.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x81332554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83t9b8gr.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp83t9b8gr.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp83t9b8gr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp57eetc3k.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp57eetc3k.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp57eetc3k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res[i] = factorial(i);\n        }\n\
    \        else\n        {\n            res[i] = sum(i);\n        }\n    }\n   \
    \ return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1zwc5puf.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp1zwc5puf.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1zwc5puf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8i4s3tic.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp8i4s3tic.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8i4s3tic.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpofm0dyfw.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpofm0dyfw.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpofm0dyfw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppp4ha8nx.d(20): Error: undefined identifier `factorial`\\n/tmp/tmppp4ha8nx.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppp4ha8nx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1p8h4p5h.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp1p8h4p5h.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp1p8h4p5h.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x6c3cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpffnosm_v.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpffnosm_v.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpffnosm_v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqi6n7psx.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpqi6n7psx.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqi6n7psx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyniqyptk.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpyniqyptk.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyniqyptk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5qxyguq4.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp5qxyguq4.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5qxyguq4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpya26hpa7.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpya26hpa7.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpya26hpa7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] arr = new long[n];\n    for(long i = 0; i < n; i++)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            arr[i] = factorial(i);\n        }\n\
    \        else\n        {\n            arr[i] = sum(i);\n        }\n    }\n   \
    \ return arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgm8cvnz_.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpgm8cvnz_.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgm8cvnz_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplwxk6y9t.d(20): Error: undefined identifier `factorial`\\n/tmp/tmplwxk6y9t.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplwxk6y9t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptb8lrcic.d(20): Error: undefined identifier `factorial`\\n/tmp/tmptb8lrcic.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptb8lrcic.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2evqo6mx.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp2evqo6mx.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp2evqo6mx.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xaf238554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkceo38i1.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpkceo38i1.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkceo38i1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyef5t2rb.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpyef5t2rb.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpyef5t2rb.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xe89d4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_p1j0i71.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp_p1j0i71.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_p1j0i71.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res[i] = factorial(i);\n        }\n\
    \        else\n        {\n            res[i] = sum(i);\n        }\n    }\n   \
    \ return res;\n}\nlong factorial(long n)\n{\n    long res = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        res *= i;\n    }\n    return res;\n}\nlong\
    \ sum(long n)\n{\n    long res = 0;\n    for (long i = 1; i <= n; i++)\n    {\n\
    \        res += i;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0p9kqt9n.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp0p9kqt9n.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp0p9kqt9n.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xe9385554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxwye0z73.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpxwye0z73.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpxwye0z73.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x59edf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nlong factorial(long n) \n{\n    long result\
    \ = 1;\n    for (long i = 1; i <= n; i++) \n    {\n        result *= i;\n    }\n\
    \    return result;\n}\nlong sum(long n) \n{\n    long result = 0;\n    for (long\
    \ i = 1; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L,\
    \ 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n\
    \    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4h__frlm.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp4h__frlm.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp4h__frlm.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xd06ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5lezk1mp.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5lezk1mp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7hknoj0f.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp7hknoj0f.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp7hknoj0f.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xb81fa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdu4vbjz7.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpdu4vbjz7.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpdu4vbjz7.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x5c512554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzs31_e2i.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpzs31_e2i.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzs31_e2i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg_liojd2.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpg_liojd2.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpg_liojd2.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xd61c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbuate_l.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpfbuate_l.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfbuate_l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptn18589o.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmptn18589o.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmptn18589o.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x5a7b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdc7ycij8.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpdc7ycij8.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpdc7ycij8.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xad345554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzvf836p6.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvf836p6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_a3dlwgs.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp_a3dlwgs.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_a3dlwgs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf0ahpls4.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpf0ahpls4.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpf0ahpls4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeeh3hb21.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpeeh3hb21.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpeeh3hb21.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x404e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp911ldk0k.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp911ldk0k.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp911ldk0k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp_w42c3i.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpp_w42c3i.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp_w42c3i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpraln7l4e.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpraln7l4e.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpraln7l4e.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x8e17f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc4evyxx6.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpc4evyxx6.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpc4evyxx6.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x50418554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmj0nbig3.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpmj0nbig3.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpmj0nbig3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdlfonpi4.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpdlfonpi4.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpdlfonpi4.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x260d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmo0ayty.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpbmo0ayty.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbmo0ayty.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n    {\n  \
    \      if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n   \
    \     }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaa28lck8.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpaa28lck8.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaa28lck8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsvsachcn.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpsvsachcn.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpsvsachcn.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xef3b2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp0i0rte2.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpp0i0rte2.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp0i0rte2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6hwgbm2a.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp6hwgbm2a.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6hwgbm2a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if (i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpowpwtkxe.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpowpwtkxe.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwfbswsbz.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpwfbswsbz.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpwfbswsbz.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x16201554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0a6dl_4b.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0a6dl_4b.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0a6dl_4b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res[i] = factorial(i);\n        }\n\
    \        else\n        {\n            res[i] = sum(i);\n        }\n    }\n   \
    \ return res;\n}\nlong factorial(long n)\n{\n    long res = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        res *= i;\n    }\n    return res;\n}\nlong\
    \ sum(long n)\n{\n    long res = 0;\n    for (long i = 1; i <= n; i++)\n    {\n\
    \        res += i;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc0harufc.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpc0harufc.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpc0harufc.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xbda85554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res[i] = factorial(i);\n        }\n\
    \        else\n        {\n            res[i] = sum(i);\n        }\n    }\n   \
    \ return res;\n}\nlong factorial(long n)\n{\n    long res = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        res *= i;\n    }\n    return res;\n}\nlong\
    \ sum(long n)\n{\n    long res = 0;\n    for (long i = 1; i <= n; i++)\n    {\n\
    \        res += i;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1hhriy2f.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp1hhriy2f.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp1hhriy2f.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x466a8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_m8jnjx.d(20): Error: undefined identifier `factorial`\\n/tmp/tmps_m8jnjx.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps_m8jnjx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5e4d2q6a.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp5e4d2q6a.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp5e4d2q6a.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xf7ea1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiffuizpq.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpiffuizpq.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpiffuizpq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwnb2o9gy.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpwnb2o9gy.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwnb2o9gy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0hvk5dvq.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp0hvk5dvq.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp0hvk5dvq.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x92731554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl7z2j7mc.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpl7z2j7mc.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpl7z2j7mc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7nhzsrw.d(20): Error: undefined identifier `factorial`\\n/tmp/tmps7nhzsrw.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps7nhzsrw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpun6qvkii.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpun6qvkii.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpun6qvkii.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x6f70e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprofaryxa.d(20): Error: undefined identifier `factorial`\\n/tmp/tmprofaryxa.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmprofaryxa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7dotgjk7.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp7dotgjk7.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7dotgjk7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8sxqed9b.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp8sxqed9b.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8sxqed9b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeqal88l8.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpeqal88l8.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpeqal88l8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzckka4fo.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpzckka4fo.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzckka4fo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg12f636d.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpg12f636d.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg12f636d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5c3kppx.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpq5c3kppx.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpq5c3kppx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm9sqtphv.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpm9sqtphv.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm9sqtphv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx7i1k_46.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpx7i1k_46.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx7i1k_46.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgvmw93k8.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpgvmw93k8.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpgvmw93k8.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x390e7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp37357341.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp37357341.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp37357341.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ueqhoj3.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp7ueqhoj3.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7ueqhoj3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjipdnhtc.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpjipdnhtc.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpjipdnhtc.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xae23b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 1..n)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result[i - 1] = factorial(i);\n        }\n \
    \       else\n        {\n            result[i - 1] = i * (i + 1) / 2;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_3kmgl2j.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3kmgl2j.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppqx4bx1o.d(20): Error: undefined identifier `factorial`\\n/tmp/tmppqx4bx1o.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppqx4bx1o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_c2cndka.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_c2cndka.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd8opw0t2.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd8opw0t2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_vmtpr_q.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp_vmtpr_q.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp_vmtpr_q.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xeefca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbjmj_ve8.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpbjmj_ve8.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbjmj_ve8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2yasm9ln.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp2yasm9ln.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp2yasm9ln.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x72a20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo4uo6_o6.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpo4uo6_o6.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpo4uo6_o6.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xa9e1a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuojfjge_.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpuojfjge_.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuojfjge_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(1 .. i);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa2zb5u7z.d(24): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa2zb5u7z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7d7peiwd.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d7peiwd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_fdv8kj.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpg_fdv8kj.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg_fdv8kj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplm4jpt51.d(20): Error: undefined identifier `factorial`\\n/tmp/tmplm4jpt51.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplm4jpt51.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi8gqjzv6.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpi8gqjzv6.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpi8gqjzv6.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x99547554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb29iu8gc.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpb29iu8gc.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpb29iu8gc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbf1so3yd.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpbf1so3yd.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbf1so3yd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1a97z2g2.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp1a97z2g2.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp1a97z2g2.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xb13a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxguokhuj.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpxguokhuj.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxguokhuj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnpwuyio6.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpnpwuyio6.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnpwuyio6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj17500ug.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpj17500ug.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj17500ug.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4j39fvcp.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp4j39fvcp.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp4j39fvcp.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x963f1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpui1dltrc.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpui1dltrc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(i);\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv83rxfev.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpv83rxfev.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpv83rxfev.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6x9891vf.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp6x9891vf.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6x9891vf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx6owvz_y.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpx6owvz_y.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpx6owvz_y.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x87303554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1zh90v_s.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp1zh90v_s.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1zh90v_s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(0 .. i);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ckol4s0.d(24): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ckol4s0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgsty9wd.d(20): Error: undefined identifier `factorial`\\n/tmp/tmppgsty9wd.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppgsty9wd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq9g4uwsh.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9g4uwsh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpghmtm8f8.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmtm8f8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpppi95wi3.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpppi95wi3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvf_a0wlr.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpvf_a0wlr.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvf_a0wlr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfu706bha.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpfu706bha.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpfu706bha.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x240cc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmzbeyd8u.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpmzbeyd8u.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpmzbeyd8u.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x3b5cd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(1 .. i);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps5owmn0s.d(24): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5owmn0s.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(i);\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0g_a70yw.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0g_a70yw.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0g_a70yw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfe3b6l3a.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpfe3b6l3a.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfe3b6l3a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjrcdkd_t.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrcdkd_t.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnwccqrds.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnwccqrds.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjz7gw9u4.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpjz7gw9u4.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjz7gw9u4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaocl5ixx.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpaocl5ixx.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpaocl5ixx.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xcf079554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuwnq_6iz.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpuwnq_6iz.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuwnq_6iz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8kg892b6.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp8kg892b6.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8kg892b6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq7s26wbg.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpq7s26wbg.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpq7s26wbg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsd9pza9r.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpsd9pza9r.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsd9pza9r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4hr72jns.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4hr72jns.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxujkdwz2.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpxujkdwz2.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpxujkdwz2.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x6c596554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(1 .. i);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps48cojcl.d(24): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps48cojcl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxqtgcjut.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpxqtgcjut.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpxqtgcjut.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x347c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfviu439x.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpfviu439x.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfviu439x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa0z0gfi0.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpa0z0gfi0.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpa0z0gfi0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nlong factorial(long n) \n{\n    long result\
    \ = 1;\n    for (long i = 1; i <= n; i++) \n    {\n        result *= i;\n    }\n\
    \    return result;\n}\nlong sum(long n) \n{\n    long result = 0;\n    for (long\
    \ i = 1; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L,\
    \ 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n\
    \    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn732_9yc.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpn732_9yc.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpn732_9yc.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xec430554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = i.factorial;\n        }\n    \
    \    else\n        {\n            result[i] = i.sum;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4cvw86f.d(20): Error: no property `factorial` for type `long`\\\
    n/tmp/tmpb4cvw86f.d(24): Error: no property `sum` for type `long`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4cvw86f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjukijrh5.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpjukijrh5.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjukijrh5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyqgqdc51.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpyqgqdc51.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyqgqdc51.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp5z_l_mn.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpp5z_l_mn.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp5z_l_mn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdeaah_zu.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpdeaah_zu.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpdeaah_zu.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x8a51a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8fvemrmg.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp8fvemrmg.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8fvemrmg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = sum(1 .. i);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpur3u9nmd.d(24): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpur3u9nmd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_8dvuyd.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp4_8dvuyd.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4_8dvuyd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv_odedix.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpv_odedix.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpv_odedix.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xbd4ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5aw5g7wq.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp5aw5g7wq.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5aw5g7wq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 1..n)\n    {\n        if(i%2\
    \ == 0)\n        {\n            result[i-1] = factorial(i);\n        }\n     \
    \   else\n        {\n            result[i-1] = i*(i+1)/2;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqqra9h9.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqqra9h9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkwgq891w.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwgq891w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0sx548hw.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0sx548hw.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0sx548hw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppwui_xt2.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmppwui_xt2.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmppwui_xt2.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x75e06554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsv94xy_4.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpsv94xy_4.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsv94xy_4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp60ul6ssd.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp60ul6ssd.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp60ul6ssd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjy984h2o.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpjy984h2o.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjy984h2o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkzseh3r0.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpkzseh3r0.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpkzseh3r0.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xa986554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph3jyk9mg.d(20): Error: undefined identifier `factorial`\\n/tmp/tmph3jyk9mg.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmph3jyk9mg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj74jv05r.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpj74jv05r.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj74jv05r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0_l2aap8.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_l2aap8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n    {\n  \
    \      if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n   \
    \     }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1d7tfwc_.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp1d7tfwc_.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1d7tfwc_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7ppo4k4c.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp7ppo4k4c.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp7ppo4k4c.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x1f75a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi2vwampx.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpi2vwampx.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpi2vwampx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp22pld0n2.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp22pld0n2.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp22pld0n2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj625xjt6.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpj625xjt6.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj625xjt6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvy5w80g4.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvy5w80g4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n\
    \        if (i % 2 == 0) \n        {\n            result[i] = factorial(i);\n\
    \        } \n        else \n        {\n            result[i] = sum(i);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0tl7hqj2.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0tl7hqj2.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0tl7hqj2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0e2fnof.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpg0e2fnof.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg0e2fnof.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            long factorial = 1;\n        \
    \    for (long j = 1; j <= i; j++)\n            {\n                factorial *=\
    \ j;\n            }\n            result[i] = factorial;\n        }\n        else\n\
    \        {\n            result[i] = (i * (i + 1)) / 2;\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp_wrq0o9.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428405]\\n??:? void tmpp_wrq0o9.__unittest_L34_C1()\
    \ [0x427f83]\\n??:? void tmpp_wrq0o9.__modtest() [0x428184]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4bf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b352]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430569]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b329]\\n??:? runModuleUnitTests [0x42c295]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288c8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42884f]\\n??:? _d_run_main [0x4287ba]\\n??:? main [0x428197]\\\
    n??:? __libc_start_main [0x8bcd0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0lt9o1mm.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0lt9o1mm.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0lt9o1mm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppa2i1frt.d(20): Error: undefined identifier `factorial`\\n/tmp/tmppa2i1frt.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppa2i1frt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmsjbcr4z.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpmsjbcr4z.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpmsjbcr4z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxxnmbdr9.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpxxnmbdr9.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpxxnmbdr9.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x22a22554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ove3r6i.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp9ove3r6i.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp9ove3r6i.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xfdead554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp56zxlm52.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmp56zxlm52.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmp56zxlm52.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0xa9ce5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(1, i);\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyu35hilg.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpyu35hilg.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyu35hilg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphyohkuiw.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmphyohkuiw.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmphyohkuiw.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x62ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv48k9pzd.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpv48k9pzd.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpv48k9pzd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsvas3_1_.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpsvas3_1_.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsvas3_1_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp61ixihb1.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp61ixihb1.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp61ixihb1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8u1w2ucc.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp8u1w2ucc.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8u1w2ucc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            res[i] = factorial(i);\n        }\n\
    \        else\n        {\n            res[i] = sum(i);\n        }\n    }\n   \
    \ return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qi3qpat.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp1qi3qpat.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1qi3qpat.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp14o0dg85.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp14o0dg85.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp14o0dg85.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2c60mgwv.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp2c60mgwv.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2c60mgwv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ee0t_8j.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp0ee0t_8j.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0ee0t_8j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcoiu4m17.d(20): Error: undefined identifier `factorial`\\n/tmp/tmpcoiu4m17.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcoiu4m17.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7fmjcp5f.d(20): Error: undefined identifier `factorial`\\n/tmp/tmp7fmjcp5f.d(24):\
    \ Error: undefined identifier `sum`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7fmjcp5f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    auto result = new long[](n);\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = factorial(i);\n        }\n   \
    \     else\n        {\n            result[i] = i * (i + 1) / 2;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L)\
    \ == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L,\
    \ 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) ==\
    \ [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5tds2yvi.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tds2yvi.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = factorial(i);\n  \
    \      }\n        else\n        {\n            result[i] = sum(i);\n        }\n\
    \    }\n    return result;\n}\nlong factorial(long n)\n{\n    long result = 1;\n\
    \    for (long i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n    return\
    \ result;\n}\nlong sum(long n)\n{\n    long result = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n    {\n        result += i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n\
    \    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L)\
    \ == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa25yghxr.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284b5]\\n??:? void tmpa25yghxr.__unittest_L47_C1()\
    \ [0x428037]\\n??:? void tmpa25yghxr.__modtest() [0x428238]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c56f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43068d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b3c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430619]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d9]\\n??:? runModuleUnitTests [0x42c345]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428978]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288ff]\\n??:? _d_run_main [0x42886a]\\n??:? main [0x42824b]\\\
    n??:? __libc_start_main [0x6493e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Implement the function f\
    \ that takes n as a parameter,\n    and returns a list of size n, such that the\
    \ value of the element at index i is the factorial of i if i is even\n    or the\
    \ sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \n*/\nlong[] f(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach(i; 1..n)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result[i - 1] = factorial(i);\n        }\n \
    \       else\n        {\n            result[i - 1] = i * (i + 1) / 2;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n\
    \    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L)\
    \ == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n\
    \    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdeb7egqi.d(20): Error: undefined identifier `factorial`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdeb7egqi.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

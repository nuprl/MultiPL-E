name: HumanEval_130_tri
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\nEveryone knows Fibonacci sequence,\
  \ it was studied deeply by mathematicians in \n    the last couple centuries. However,\
  \ what people don't know is Tribonacci sequence.\n    Tribonacci sequence is defined\
  \ by the recurrence:\n    tri(1) = 3\n    tri(n) = 1 + n / 2, if n is even.\n  \
  \  tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    For example:\n\
  \    tri(2) = 1 + (2 / 2) = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n\
  \           = 2 + 3 + 3 = 8 \n    You are given a non-negative integer number n,\
  \ you have to a return a list of the \n    first n + 1 numbers of the Tribonacci\
  \ sequence.\n    Examples:\n    tri(3) = [1, 3, 2, 8]\n    \n*/\nlong[] tri(long\
  \ n) \n"
tests: "unittest\n{\n    alias candidate = tri;\n\n    assert(candidate(3L) == [1L,\
  \ 3L, 2L, 8L]);\n    assert(candidate(4L) == [1L, 3L, 2L, 8L, 3L]);\n    assert(candidate(5L)\
  \ == [1L, 3L, 2L, 8L, 3L, 15L]);\n    assert(candidate(6L) == [1L, 3L, 2L, 8L, 3L,\
  \ 15L, 4L]);\n    assert(candidate(7L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L]);\n\
  \    assert(candidate(8L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L]);\n    assert(candidate(9L)\
  \ == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L, 35L]);\n    assert(candidate(20L) ==\
  \ [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L, 35L, 6L, 48L, 7L, 63L, 8L, 80L, 9L, 99L,\
  \ 10L, 120L, 11L]);\n    assert(candidate(0L) == [1L]);\n    assert(candidate(1L)\
  \ == [1L, 3L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result = new long[(int)n+1];\n    result[0] = 1;\n  \
    \  result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n\
    \        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n     \
    \   }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    if(n == 0)\n        return result;\n\
    \    result[0] = 1;\n    if(n == 1)\n        return result;\n    result[1] = 3;\n\
    \    if(n == 2)\n        return result;\n    result[2] = 2;\n    if(n == 3)\n\
    \        return result;\n    for(int i = 3; i < n; i++)\n    {\n        if(i %\
    \ 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n            result[i]\
    \ = result[i-1] + result[i-2] + result[i+1];\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1] = 3;\n   \
    \ result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 ==\
    \ 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i - 1] + result[i - 2] + result[i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n        \
    \    result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n  \
    \  {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ res = new long[n + 1];\n    res[0] = 1;\n    res[1] = 3;\n    res[2] = 2;\n\
    \    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n\
    \            res[i] = 1 + i / 2;\n        }\n        else\n        {\n       \
    \     res[i] = res[i - 1] + res[i - 2] + res[i + 1];\n        }\n    }\n    return\
    \ res;\n}", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n      \
    \  return result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n\
    \    result[1] = 3;\n    if (n == 2)\n        return result;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \        result[i] = 1 + i / 2;\n        else\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n}", "{\n \
    \   long[] result = new long[n + 1];\n    result[0] = 1;\n    if (n > 0)\n   \
    \ {\n        result[1] = 3;\n        if (n > 1)\n        {\n            result[2]\
    \ = 2;\n            if (n > 2)\n            {\n                for (long i = 3;\
    \ i <= n; i++)\n                {\n                    if (i % 2 == 0)\n     \
    \               {\n                        result[i] = 1 + i / 2;\n          \
    \          }\n                    else\n                    {\n              \
    \          result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n      \
    \              }\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[(int)n+1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n  \
    \  {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n        return\
    \ result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1]\
    \ = 3;\n    if (n == 2)\n        return result;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] =\
    \ 1 + i / 2;\n        else\n            result[i] = result[i - 1] + result[i -\
    \ 2] + result[i + 1];\n    }\n    return result;\n}", "{\n    long[] result =\
    \ new long[n + 1];\n    result[0] = 1;\n    if (n > 0)\n    {\n        result[1]\
    \ = 3;\n        if (n > 1)\n        {\n            result[2] = 2;\n          \
    \  for (long i = 3; i <= n; i++)\n            {\n                if (i % 2 ==\
    \ 0)\n                {\n                    result[i] = 1 + i / 2;\n        \
    \        }\n                else\n                {\n                    result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n                }\n      \
    \      }\n        }\n    }\n    return result;\n}", "{\n    if (n == 0)\n    \
    \    return [];\n    if (n == 1)\n        return [1];\n    if (n == 2)\n     \
    \   return [1, 3];\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    if (n ==\
    \ 0) return result;\n    result[0] = 1;\n    if (n == 1) return result;\n    result[1]\
    \ = 3;\n    if (n == 2) return result;\n    result[2] = 2;\n    for (long i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + (i / 2);\n        }\n \
    \       else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] res\
    \ = new long[n+1];\n    res[0] = 1;\n    res[1] = 3;\n    res[2] = 2;\n    for(long\
    \ i = 3; i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            res[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            res[i] = res[i-1]\
    \ + res[i-2] + res[i+1];\n        }\n    }\n    return res;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[(int)n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[(int)n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n   \
    \     {\n            result[i] = 1 + i / 2;\n        }\n        else\n       \
    \ {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i - 1] + result[i - 2] + result[i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i - 1] + result[i - 2] + result[i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    if (n == 0)\n        return result;\n    result[0] = 1;\n    if (n\
    \ == 1)\n        return result;\n    result[1] = 3;\n    if (n == 2)\n       \
    \ return result;\n    result[2] = 2;\n    if (n == 3)\n        return result;\n\
    \    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n         \
    \   result[(int)i] = 1 + i / 2;\n        else\n            result[(int)i] = result[(int)i\
    \ - 1] + result[(int)i - 2] + result[(int)i + 1];\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n        return\
    \ result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1]\
    \ = 3;\n    if (n == 2)\n        return result;\n    result[2] = 2;\n    if (n\
    \ == 3)\n        return result;\n    for (long i = 3; i <= n; i++)\n    {\n  \
    \      if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n   \
    \         result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n\
    \    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n        {\n\
    \            result[i] = 1 + i / 2;\n        }\n        else\n        {\n    \
    \        result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n   \
    \ }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] arr = new long[n + 1];\n    arr[0] = 1;\n    arr[1] = 3;\n\
    \    arr[2] = 2;\n    for (long i = 3; i < n + 1; i++)\n    {\n        if (i %\
    \ 2 == 0)\n        {\n            arr[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            arr[i] = arr[i - 1] + arr[i - 2] + arr[i + 1];\n     \
    \   }\n    }\n    return arr;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n       \
    \ if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    if(n == 0)\n\
    \        return result[0..1];\n    if(n == 1)\n        return result[0..2];\n\
    \    if(n == 2)\n        return result[0..3];\n    for(int i = 3; i <= n; i++)\n\
    \    {\n        if(i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n    }\n   \
    \ return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(long i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i < n + 1; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1] = 3;\n   \
    \ result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 ==\
    \ 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i - 1] + result[i - 2] + result[i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    if (n == 0) \n    {\n        return result;\n\
    \    }\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++) \n    {\n        if (i % 2 == 0) \n        {\n         \
    \   result[i] = 1 + i / 2;\n        }\n        else \n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n  \
    \  {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    if(n == 0)\n        return result;\n    result[0]\
    \ = 1;\n    if(n == 1)\n        return result;\n    result[1] = 3;\n    if(n ==\
    \ 2)\n        return result;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n\
    \    {\n        if(i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n    }\n   \
    \ return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0] =\
    \ 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] arr = new long[n+1];\n \
    \   arr[0] = 1;\n    arr[1] = 3;\n    arr[2] = 2;\n    for(int i = 3; i < n+1;\
    \ i++)\n    {\n        if(i % 2 == 0)\n        {\n            arr[i] = 1 + i /\
    \ 2;\n        }\n        else\n        {\n            arr[i] = arr[i-1] + arr[i-2]\
    \ + arr[i+1];\n        }\n    }\n    return arr;\n}", "{\n    long[] result =\
    \ new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n\
    \    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n        {\n\
    \            result[i] = 1 + i / 2;\n        }\n        else\n        {\n    \
    \        result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n   \
    \ }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + (i / 2);\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n        \
    \    result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n  \
    \  result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n\
    \        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n     \
    \   }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n+1];\n    if(n == 0)\n        return result;\n\
    \    result[0] = 1;\n    if(n == 1)\n        return result;\n    result[1] = 3;\n\
    \    if(n == 2)\n        return result;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n            result[i] = 1 + i /\
    \ 2;\n        else\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n   \
    \ result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3;\
    \ i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n        return\
    \ result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1]\
    \ = 3;\n    if (n == 2)\n        return result;\n    result[2] = 2;\n    if (n\
    \ == 3)\n        return result;\n    for (long i = 3; i <= n; i++)\n    {\n  \
    \      if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n   \
    \         result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i < n+1; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i < n+1; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + (i / 2);\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n\
    \        {\n            result[i] = 1 + i / 2;\n        }\n        else\n    \
    \    {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ arr = new long[n + 1];\n    arr[0] = 1;\n    arr[1] = 3;\n    arr[2] = 2;\n\
    \    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n       \
    \ {\n            arr[i] = 1 + i / 2;\n        }\n        else\n        {\n   \
    \         arr[i] = arr[i - 1] + arr[i - 2] + arr[i + 1];\n        }\n    }\n \
    \   return arr;\n}", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n   \
    \ {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n \
    \       }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    if (n == 0)\
    \ \n        return new long[0];\n    if (n == 1) \n        return new long[] {\
    \ 1 };\n    if (n == 2) \n        return new long[] { 1, 3 };\n    if (n == 3)\
    \ \n        return new long[] { 1, 3, 2, 8 };\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    result[3]\
    \ = 8;\n    for (long i = 4; i <= n; i++) \n    {\n        if (i % 2 == 0) \n\
    \            result[i] = 1 + i / 2;\n        else \n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n}", "{\n \
    \   long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i\
    \ % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n      \
    \  else\n        {\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new\
    \ long[(int)n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n\
    \    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n       \
    \ {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n      \
    \  else\n        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n   \
    \     return result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n\
    \    result[1] = 3;\n    if (n == 2)\n        return result;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \        result[i] = 1 + i / 2;\n        else\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n}", "{\n \
    \   long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i - 1] + result[i - 2] + result[i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n  \
    \  {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for(int i = 3; i <= n; i++)\n    {\n        if(i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n   \
    \ result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3;\
    \ i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    if (n == 0)\n        return\
    \ result;\n    result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1]\
    \ = 3;\n    if (n == 2)\n        return result;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] =\
    \ 1 + i / 2;\n        else\n            result[i] = result[i - 1] + result[i -\
    \ 2] + result[i + 1];\n    }\n    return result;\n}", "{\n    long[] result =\
    \ new long[n+1];\n    if(n == 0)\n        return result;\n    result[0] = 1;\n\
    \    if(n == 1)\n        return result;\n    result[1] = 3;\n    if(n == 2)\n\
    \        return result;\n    result[2] = 2;\n    if(n == 3)\n        return result;\n\
    \    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n           \
    \ result[i] = 1 + i / 2;\n        else\n            result[i] = result[i-1] +\
    \ result[i-2] + result[i+1];\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] =\
    \ 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n ==\
    \ 2)\n        return result;\n    result[2] = 2;\n    for (long i = 3; i <= n;\
    \ i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n \
    \       else\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] =\
    \ 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n ==\
    \ 2)\n        return result;\n    result[2] = 2;\n    for (long i = 3; i <= n;\
    \ i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n \
    \       else\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    if (n == 0)\n        return result;\n    result[0] = 1;\n    if (n == 1)\n\
    \        return result;\n    result[1] = 3;\n    if (n == 2)\n        return result;\n\
    \    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(long i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(long i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1] = 3;\n   \
    \ result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i %\
    \ 2 == 0)\n        {\n            result[i] = 1 + (i / 2);\n        }\n      \
    \  else\n        {\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new\
    \ long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] = 1;\n\
    \    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n == 2)\n\
    \        return result;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1;\
    \ i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 +\
    \ i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n        \
    \    result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n  \
    \  {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \      {\n            result[i] = 1 + i / 2;\n        }\n        else\n      \
    \  {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[(int)n + 1];\n    result[0] =\
    \ 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (long i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n\
    \        {\n            result[i] = 1 + i / 2;\n        }\n        else\n    \
    \    {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[(int)i] = 1 + i / 2;\n        }\n        else\n        {\n          \
    \  result[(int)i] = result[(int)i - 1] + result[(int)i - 2] + result[(int)i +\
    \ 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n  \
    \  result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n\
    \        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n     \
    \   }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i < n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n\
    \    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n        {\n\
    \            result[i] = 1 + i / 2;\n        }\n        else\n        {\n    \
    \        result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n   \
    \ }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n    if\
    \ (n == 0)\n        return result;\n    result[0] = 1;\n    if (n == 1)\n    \
    \    return result;\n    result[1] = 3;\n    if (n == 2)\n        return result;\n\
    \    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n\
    \    for(int i = 3; i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n \
    \           result[i] = 1 + i / 2;\n        }\n        else\n        {\n     \
    \       result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n\
    \        {\n            result[i] = 1 + i / 2;\n        }\n        else\n    \
    \    {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    if (n == 0)\n        return result;\n    result[0] = 1;\n    if (n\
    \ == 1)\n        return result;\n    result[1] = 3;\n    if (n == 2)\n       \
    \ return result;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n\
    \        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n \
    \           result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[(int)n + 1];\n    if (n == 0)\n        return result;\n  \
    \  result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n\
    \    if (n == 2)\n        return result;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 +\
    \ i / 2;\n        else\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n    }\n    return result;\n}", "{\n    if (n == 0) return\
    \ new long[0];\n    if (n == 1) return new long[]{1};\n    if (n == 2) return\
    \ new long[]{1, 3};\n    long[] arr = new long[n + 1];\n    arr[0] = 1;\n    arr[1]\
    \ = 3;\n    arr[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            arr[i] = 1 + i / 2;\n        }\n      \
    \  else\n        {\n            arr[i] = arr[i - 1] + arr[i - 2] + arr[i + 1];\n\
    \        }\n    }\n    return arr;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    if (n == 0)\n        return result;\n    result[0] = 1;\n    if (n == 1)\n\
    \        return result;\n    result[1] = 3;\n    if (n == 2)\n        return result;\n\
    \    result[2] = 2;\n    if (n == 3)\n        return result;\n    for (long i\
    \ = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1\
    \ + i / 2;\n        else\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n    }\n    return result;\n}", "{\n    long[] result = new\
    \ long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] = 1;\n\
    \    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n == 2)\n\
    \        return result;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[n + 1];\n    if (n ==\
    \ 0)\n        return result;\n    result[0] = 1;\n    if (n == 1)\n        return\
    \ result;\n    result[1] = 3;\n    if (n == 2)\n        return result;\n    result[2]\
    \ = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n  \
    \          result[i] = 1 + i / 2;\n        else\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n}", "{\n \
    \   long[] result = new long[n + 1];\n    if (n == 0)\n        return result;\n\
    \    result[0] = 1;\n    if (n == 1)\n        return result;\n    result[1] =\
    \ 3;\n    if (n == 2)\n        return result;\n    result[2] = 2;\n    if (n ==\
    \ 3)\n        return result;\n    for (int i = 3; i < n + 1; i++)\n    {\n   \
    \     if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n    \
    \        result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n \
    \   return result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + (i / 2);\n        }\n        else\n      \
    \  {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n     \
    \   }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[(int)n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] =\
    \ 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n ==\
    \ 2)\n        return result;\n    result[2] = 2;\n    if (n == 3)\n        return\
    \ result;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n\
    \            result[i] = 1 + i / 2;\n        else\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n}", "{\n \
    \   long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n        if (i\
    \ % 2 == 0)\n        {\n            result[i] = 1 + (i / 2);\n        }\n    \
    \    else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n+1];\n    if(n == 0)\n    {\n        return result;\n    }\n   \
    \ result[0] = 1;\n    if(n == 1)\n    {\n        return result;\n    }\n    result[1]\
    \ = 3;\n    if(n == 2)\n    {\n        return result;\n    }\n    result[2] =\
    \ 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n      \
    \  {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n   \
    \ result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3;\
    \ i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n       \
    \ if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n+1];\n    if(n == 0)\n        return result;\n\
    \    result[0] = 1;\n    if(n == 1)\n        return result;\n    result[1] = 3;\n\
    \    if(n == 2)\n        return result;\n    result[2] = 2;\n    if(n == 3)\n\
    \        return result;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i\
    \ % 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n            result[i]\
    \ = result[i-1] + result[i-2] + result[i+1];\n    }\n    return result;\n}", "{\n\
    \    long[] fib = new long[(int)n + 1];\n    fib[0] = 1;\n    fib[1] = 3;\n  \
    \  fib[2] = 2;\n    for(int i = 3; i < n + 1; i++)\n    {\n        if(i % 2 ==\
    \ 0)\n        {\n            fib[i] = 1 + i / 2;\n        }\n        else\n  \
    \      {\n            fib[i] = fib[i - 1] + fib[i - 2] + fib[i + 1];\n       \
    \ }\n    }\n    return fib;\n}", "{\n    long[] result = new long[n + 1];\n  \
    \  result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3;\
    \ i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n      \
    \  else\n        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0]\
    \ = 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n\
    \ == 2)\n        return result;\n    result[2] = 2;\n    for (int i = 3; i <=\
    \ n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n\
    \        else\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    if (n >\
    \ 0)\n    {\n        result[1] = 3;\n        if (n > 1)\n        {\n         \
    \   result[2] = 2;\n            if (n > 2)\n            {\n                for\
    \ (long i = 3; i <= n; i++)\n                {\n                    if (i % 2\
    \ == 0)\n                    {\n                        result[i] = 1 + i / 2;\n\
    \                    }\n                    else\n                    {\n    \
    \                    result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + result[i-2]\
    \ + result[i+1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0] =\
    \ 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n ==\
    \ 2)\n        return result;\n    result[2] = 2;\n    for (long i = 3; i <= n;\
    \ i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n \
    \       else\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (long i =\
    \ 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n      \
    \  else\n        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int\
    \ i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n           \
    \ result[i] = 1 + i / 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n\
    \    result[1] = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n + 1];\n    if (n == 0)\n        return result;\n    result[0]\
    \ = 1;\n    if (n == 1)\n        return result;\n    result[1] = 3;\n    if (n\
    \ == 2)\n        return result;\n    result[2] = 2;\n    for (int i = 3; i <=\
    \ n; i++)\n    {\n        if (i % 2 == 0)\n            result[i] = 1 + i / 2;\n\
    \        else\n            result[i] = result[i - 1] + result[i - 2] + result[i\
    \ + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    if (n == 0)\n        return result;\n    result[0] = 1;\n    if (n == 1)\n\
    \        return result;\n    result[1] = 3;\n    if (n == 2)\n        return result;\n\
    \    result[2] = 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i %\
    \ 2 == 0)\n            result[i] = 1 + i / 2;\n        else\n            result[i]\
    \ = result[i - 1] + result[i - 2] + result[i + 1];\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n   \
    \     else\n        {\n            result[i] = result[i - 1] + result[i - 2] +\
    \ result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (long i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[n + 1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for (int i =\
    \ 3; i < n + 1; i++)\n    {\n        if (i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i\
    \ - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = new long[n + 1];\n    result[0] = 1;\n    result[1]\
    \ = 3;\n    result[2] = 2;\n    for (int i = 3; i < n + 1; i++)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n\
    \        else\n        {\n            result[i] = result[i - 1] + result[i - 2]\
    \ + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[n + 1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2] =\
    \ 2;\n    for (int i = 3; i <= n; i++)\n    {\n        if (i % 2 == 0)\n     \
    \   {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result = new long[(int)n\
    \ + 1];\n    if (n == 0) return result;\n    result[0] = 1;\n    if (n == 1) return\
    \ result;\n    result[1] = 3;\n    if (n == 2) return result;\n    result[2] =\
    \ 2;\n    if (n == 3) return result;\n    for (int i = 3; i <= n; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result[i] = 1 + i / 2;\n    \
    \    }\n        else\n        {\n            result[i] = result[i - 1] + result[i\
    \ - 2] + result[i + 1];\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n    result[2]\
    \ = 2;\n    for(int i = 3; i < n+1; i++)\n    {\n        if(i % 2 == 0)\n    \
    \    {\n            result[i] = 1 + i / 2;\n        }\n        else\n        {\n\
    \            result[i] = result[i-1] + result[i-2] + result[i+1];\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n    result[0]\
    \ = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3; i < n + 1;\
    \ i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i] = 1 +\
    \ i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(long i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = new long[n+1];\n\
    \    result[0] = 1;\n    result[1] = 3;\n    result[2] = 2;\n    for(int i = 3;\
    \ i <= n; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result[i]\
    \ = 1 + i / 2;\n        }\n        else\n        {\n            result[i] = result[i-1]\
    \ + result[i-2] + result[i+1];\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[n+1];\n    result[0] = 1;\n    result[1] = 3;\n\
    \    result[2] = 2;\n    for(int i = 3; i <= n; i++)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result[i] = 1 + i / 2;\n        }\n        else\n\
    \        {\n            result[i] = result[i-1] + result[i-2] + result[i+1];\n\
    \        }\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

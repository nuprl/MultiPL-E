name: HumanEval_44_change_base
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return true if x is\
    \ palindrome.\n    >>> is_palindrome(101)\n    true\n    >>> is_palindrome(123)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp03uk9c1n.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp03uk9c1n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n    long result =\
    \ 0;\n    while (x != 0) \n    {\n        x /= 10;\n        result++;\n    }\n\
    \    return result;\n}\n/*\n    return the number of digits of input number x.\n\
    \    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x != 0) \n    {\n\
    \        x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits of input number x.\n    >>> num_digits(0)\n    1\n    >>>\
    \ num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long result = 0;\n    while (x != 0) \n    {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits of input number\
    \ x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvnhqhyay.d(94): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvnhqhyay.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdbrxdw2e.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpdbrxdw2e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return true if the input\
    \ number x is a palindrome.\n    >>> is_palindrome(121)\n    true\n    >>> is_palindrome(1221)\n\
    \    true\n    >>> is_palindrome(1234)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpokvq17qr.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpokvq17qr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_fxidcog.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_fxidcog.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnrsk6a25.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnrsk6a25.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    Convert a string to\
    \ a number.\n    >>> string_to_number(\"123\")\n    123\n    >>> string_to_number(\"\
    0\")\n    0\n    >>> string_to_number(\"-123\")\n    -123\n    >>> string_to_number(\"\
    123.456\")\n    123.456\n    >>> string_to_number(\"-123.456\")\n    -123.456\n\
    */\nlong string_to_number(string s) \n{\n    long result = 0;\n    long sign =\
    \ 1;\n    if (s[0] == '-') \n    {\n        sign = -1;\n        s = s[1..$];\n\
    \    }\n    foreach (i, c; s) \n    {\n        if (c == '.') \n        {\n   \
    \         break;\n        }\n        result = result * 10 + c - '0';\n    }\n\
    \    return result * sign;\n}\n/*\n    Convert a string to a number.\n    >>>\
    \ string_to_number(\"123\")\n    123\n    >>> string_to_number(\"0\")\n    0\n\
    \    >>> string_to_number(\"-123\")\n    -123\n    >>> string_to_number(\"123.456\"\
    )\n    123.456\n    >>> string_to_number(\"-123.456\")\n    -123.456\n*/\ndouble\
    \ string_to_double(string s) \n{\n    double result = 0;\n    double sign = 1;\n\
    \    if (s[0] == '-') \n    {\n        sign = -1;\n        s = s[1..$];\n    }\n\
    \    int i = 0;\n    foreach (c; s) \n    {\n        if (c == '.') \n        {\n\
    \            break;\n        }\n        result = result * 10 + c - '0';\n    \
    \    i++;\n    }\n    double power = 1;\n    for (int j = i + 1; j < s\nunittest\n\
    {\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\"\
    );\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L)\
    \ == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2sn0e2b2.d(91): Error: found `unittest` when expecting `;` following\
    \ `for` condition\\n/tmp/tmp2sn0e2b2.d(108): Error: found `void` when expecting\
    \ `)`\\n/tmp/tmp2sn0e2b2.d(108): Error: found `{` when expecting `;` following\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2sn0e2b2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpccyxxh32.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpccyxxh32.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5oub7yvw.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5oub7yvw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk3grwmut.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpk3grwmut.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9mnxw5cb.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp9mnxw5cb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvv6gs8qg.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvv6gs8qg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9694de_k.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp9694de_k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return true if the number\
    \ is palindrome.\n    >>> is_palindrome(121)\n    true\n    >>> is_palindrome(123)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpui9dixho.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpui9dixho.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnm31yv9h.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnm31yv9h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdlsowglr.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpdlsowglr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n \
    \   1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n    >>> num_digits(10000)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n\
    \        result++;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n    >>> num_digits(10000)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n\
    \        result++;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n    >>> num_digits(10000)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n\
    \        result++;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n   \nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7mzpgm3n.d(100): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mzpgm3n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpreyt6yjr.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpreyt6yjr.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpreyt6yjr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\n    return true if x is a palindrome\
    \ number.\n    >>> is_palindrome(8)\n    false\n    >>> is_palindrome(7)\n   \
    \ true\n    >>> is_palindrome(11)\n    true\n*/\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8f0d_ne7.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp8f0d_ne7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\";\n \
    \   while (x > 0) \n    {\n        res = to!string(x % base) ~ res;\n        x\
    \ /= base;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppl9ydopw.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppl9ydopw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_hn38zq_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp_hn38zq_.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp_hn38zq_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqtqz5snh.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpqtqz5snh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvu4ci62a.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvu4ci62a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstwrfecp.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpstwrfecp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7y_ugtwq.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp7y_ugtwq.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7y_ugtwq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsiikqh08.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpsiikqh08.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpsiikqh08.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy12ttf0a.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpy12ttf0a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s;\n    while (x\
    \ > 0) \n    {\n        s ~= x % base;\n        x /= base;\n    }\n    return\
    \ s.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9819vepq.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmp9819vepq.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9819vepq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of input number x.\n    >>> number_of_digits(8)\n    1\n    >>> number_of_digits(10)\n\
    \    2\n    >>> number_of_digits(100)\n    3\n    >>> number_of_digits(1000)\n\
    \    4\n*/\nlong number_of_digits(long x) \n{\n    long result = 0;\n    while\
    \ (x > 0) {\n        x /= 10;\n        result++;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits of input number x.\n    >>> number_of_digits(8)\n\
    \    1\n    >>> number_of_digits(10)\n    2\n    >>> number_of_digits(100)\n \
    \   3\n    >>> number_of_digits(1000)\n    4\n*/\nlong number_of_digits(long x)\
    \ \n{\n    long result = 0;\n    while (x > 0) {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits of input number\
    \ x.\n    >>> number_of_digits(8)\n    1\n    >>> number_of_digits(10)\n    2\n\
    \    >>> number_of_digits(100)\n    3\n    >>> number_of_digits(1000)\n    4\n\
    */\nlong number_of_digits(long x) \n{\n    long result = 0;\n    while (x > 0)\
    \ {\n        x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n \
    \   return the number of digits of input number x.\n    >>> number_of_digits(8)\n\
    \    1\n    >>> number_of_digits(10)\n    2\n    >>> number_of_digits(100)\n \
    \   3\n    >>> number_of_digits(1000)\n    4\n*/\nlong\nunittest\n{\n    alias\
    \ candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm1qpn4jl.d(96): Error: no identifier for declarator `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm1qpn4jl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\nReturn the number of digits in\
    \ the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x > 0) {\n        result += 1;\n        x /= 10;\n\
    \    }\n    return result;\n}\n/*\nReturn the number of digits in the input number\
    \ x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n    >>> num_digits(12345)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n    while (x >\
    \ 0) {\n        result += 1;\n        x /= 10;\n    }\n    return result;\n}\n\
    /*\nReturn the number of digits in the input number x.\n    >>> num_digits(8)\n\
    \    1\n    >>> num_digits(123)\n    3\n    >>> num_digits(12345)\n    5\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x > 0) {\n     \
    \   result += 1;\n        x /= 10;\n    }\n    return result;\n}\n/*\nReturn the\
    \ number of digits in the input number x.\n    >>> num_digits(8)\n    1\n    >>>\
    \ num_digits(123)\n    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) {\n        result += 1;\n  \
    \      x /= 10;\n    }\n    return result;\n}\n/*\nReturn the number of digits\
    \ in the input number x.\n    >>> num_digits(8)\n    1\n    >>>\nunittest\n{\n\
    \    alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\"\
    );\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L)\
    \ == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe_oek63e.d(96): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_oek63e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppoide1bq.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppoide1bq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdvve6l9j.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpdvve6l9j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n  \
    \  return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaag7kw2b.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpaag7kw2b.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpaag7kw2b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpup3sju_3.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpup3sju_3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwq9x9gro.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpwq9x9gro.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfeqob6eg.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfeqob6eg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj8h14u7c.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpj8h14u7c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi6830cpk.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpi6830cpk.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpi6830cpk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsi44yuvn.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpsi44yuvn.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpsi44yuvn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n  \
    \  return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmvba966j.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpmvba966j.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvba966j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcjlbcn3_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpcjlbcn3_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi9_4f639.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpi9_4f639.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string ret = \"\";\n \
    \   while (x > 0) {\n        ret = to!string(x % base) ~ ret;\n        x /= base;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpamr5ex_i.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpamr5ex_i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphtzsbj4b.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmphtzsbj4b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp5r_s2it.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpp5r_s2it.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo09ve0xi.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpo09ve0xi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphgxggvp1.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmphgxggvp1.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmphgxggvp1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\nCheck if input number x\
    \ is a palindrome.\n    return true if x is a palindrome.\n    >>> is_palindrome(1221)\n\
    \    true\n    >>> is_palindrome(12)\n    false\n    >>> is_palindrome(1)\n  \
    \  true\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9s5gqjuz.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp9s5gqjuz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxpctqy16.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpxpctqy16.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_zzmifhk.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_zzmifhk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_2i70a_1.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_2i70a_1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpui1xq6u7.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpui1xq6u7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_ltr65a.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpg_ltr65a.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_ltr65a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the decimal representation of x.\n    >>> num_digits(0)\n    1\n \
    \   >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long result = 0;\n    while (x != 0) \n    {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits in the base\
    \ representation of x.\n    >>> num_digits_base(0, 2)\n    1\n    >>> num_digits_base(1,\
    \ 2)\n    1\n    >>> num_digits_base(10, 2)\n    4\n    >>> num_digits_base(100,\
    \ 2)\n    7\n    >>> num_digits_base(1000, 2)\n    10\n*/\nlong num_digits_base(long\
    \ x, long base) \n{\n    long result = 0;\n    while (x != 0) \n    {\n      \
    \  x /= base;\n        result++;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits in the base representation of x.\n    >>> num_digits_base(0,\
    \ 2)\n    1\n    >>> num_digits_base(1, 2)\n    1\n    >>> num_digits_base(10,\
    \ 2)\n    4\n    >>> num_digits_base(100, 2)\n    7\n    >>> num_digits_base(1000,\
    \ 2)\n    10\n*/\nlong num_digits_base(long x, long base) \n{\n    long result\
    \ = 0;\n    while (x != 0) \n    {\n        x /= base;\n        result++;\n  \
    \  }\n    return result;\n}\n\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp_xw5d0m.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpp_xw5d0m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmv63r59k.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpmv63r59k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpecujmd7w.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpecujmd7w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppicroyk9.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppicroyk9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqcjnijun.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpqcjnijun.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\n/*\n    return the number of digits in\
    \ a number.\n    >>> num_digits(8)\n    1\n    >>> num_digits(12)\n    2\n   \
    \ >>> num_digits(123)\n    3\n*/\nlong num_digits(long x) \n{\n    long result\
    \ = 0;\n    while (x > 0) \n    {\n        x /= 10;\n        result++;\n    }\n\
    \    return result;\n}\n/*\n    return the number of digits in a number.\n   \
    \ >>> num_digits(8)\n    1\n    >>> num_digits(12)\n    2\n    >>> num_digits(123)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n    while (x >\
    \ 0) \n    {\n        x /= 10;\n        result++;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits in a number.\n    >>> num_digits(8)\n \
    \   1\n    >>> num_digits(12)\n    2\n    >>> num_digits(123)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n  \
    \      x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits in a number.\n    >>> num_digits(8)\n    1\n    >>> num_digits(12)\n\
    \    2\n    >>> num_digits(123)\n    3\n*/\nlong num_digits(long x) \n{\n    long\
    \ result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits in a number.\n\
    \    >>> num_digits(8)\n    1\n    >>> num_digits\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9jp7hr5.d(101): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv9jp7hr5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzz3mcccu.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpzz3mcccu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ntyaqtk.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp9ntyaqtk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9zwmjzz1.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmp9zwmjzz1.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zwmjzz1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgibva1f_.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpgibva1f_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaxbbqx43.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpaxbbqx43.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4dj8r2nj.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp4dj8r2nj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzapi98jc.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpzapi98jc.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpzapi98jc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdmbwlcd9.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpdmbwlcd9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpel_9fx0_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpel_9fx0_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyei6zo6p.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpyei6zo6p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\nCheck if number x is palindrome.\n\
    \    return true if x is palindrome.\n    >>> is_palindrome(121)\n    true\n \
    \   >>> is_palindrome(123)\n    false\n    >>> is_palindrome(1)\n    true\n*/\n\
    unittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L)\
    \ == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpydlwtsny.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpydlwtsny.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0og17dfi.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp0og17dfi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x != 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\n/*\n    return true if the input number x is a palindrome.\n\
    \    >>> is_palindrome(12321)\n    true\n    >>> is_palindrome(12345)\n    false\n\
    \    >>> is_palindrome(1221)\n    true\n*/\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf3_zpgzs.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpf3_zpgzs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdrhihe1t.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpdrhihe1t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8egtjli.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpf8egtjli.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp61mir027.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp61mir027.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvgjg93z9.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvgjg93z9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n    long result =\
    \ 0;\n    while (x > 0) \n    {\n        x /= 10;\n        result++;\n    }\n\
    \    return result;\n}\n/*\n    return the number of digits in the input number\
    \ x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n\
    \        x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits in the input number x.\n    >>> num_digits(0)\n    1\n\
    \    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits in the input\
    \ number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>>\
    \ num_digits(10)\n    2\nunittest\n{\n    alias candidate = change_base;\n\n \
    \   assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\"\
    );\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgk8ywqn5.d(94): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgk8ywqn5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n  \
    \  return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppyr0qhvn.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmppyr0qhvn.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmppyr0qhvn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxjz7dlky.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpxjz7dlky.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp08pvf8e7.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp08pvf8e7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    long quotient = x;\n    long remainder = 0;\n    while (quotient > 0) {\n\
    \        remainder = quotient % base;\n        quotient = quotient / base;\n \
    \       result = to!string(remainder) ~ result;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L)\
    \ == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpas27y082.d(23): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpas27y082.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n  \
    \  return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpefagnsm9.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpefagnsm9.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpefagnsm9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvk2gtnro.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvk2gtnro.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3598zspi.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp3598zspi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptks7jssu.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmptks7jssu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpriz2qs3g.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpriz2qs3g.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpriz2qs3g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppch814i8.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppch814i8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvvahx6zr.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpvvahx6zr.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvvahx6zr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2lckdokm.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2lckdokm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq8dgmnp2.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpq8dgmnp2.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8dgmnp2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcehxkxvq.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpcehxkxvq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s;\n    while (x)\
    \ \n    {\n        s ~= to!string(x % base);\n        x /= base;\n    }\n    return\
    \ s.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3jo2ne1g.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp3jo2ne1g.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jo2ne1g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc85lf2bo.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc85lf2bo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa5xwif94.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpa5xwif94.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n    >>>\
    \ num_digits(0)\n    1\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n\
    \    while (x > 0) {\n        result++;\n        x /= 10;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits of x.\n    >>> num_digits(8)\n    1\n \
    \   >>> num_digits(123)\n    3\n    >>> num_digits(0)\n    1\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) {\n        result++;\n     \
    \   x /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n    >>>\
    \ num_digits(0)\n    1\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n\
    \    while (x > 0) {\n        result++;\n        x /= 10;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits of x.\n    >>> num_digits(8)\n    1\n \
    \   >>> num_digits(123)\n    3\n    >>> num_digits(0)\n    1\n*/\nlong num_digits(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) {\n        result++;\n     \
    \   x /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n    >>>\
    \ num_digits(0)\n   \nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpew4qbbob.d(96): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpew4qbbob.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp43yq9k0d.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp43yq9k0d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1gbp_ipc.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1gbp_ipc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw8k240fw.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpw8k240fw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcbooe04u.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpcbooe04u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n    long result =\
    \ 0;\n    while (x != 0) \n    {\n        result++;\n        x /= 10;\n    }\n\
    \    return result;\n}\n/*\n    return the number of digits in the input number\
    \ x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x != 0) \n    {\n\
    \        result++;\n        x /= 10;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits in the input number x.\n    >>> num_digits(0)\n    1\n\
    \    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long result = 0;\n    while (x != 0) \n    {\n        result++;\n        x /=\
    \ 10;\n    }\n    return result;\n}\n/*\n    return the number of digits in the\
    \ input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n\
    \    >>> num_digits(10)\n    2\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp7e2zkd_.d(94): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7e2zkd_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\";\n \
    \   while (x > 0) \n    {\n        res = to!string(x % base) ~ res;\n        x\
    \ /= base;\n    }\n    return res;\n}\n/*\n    return true if x is a palindrome.\n\
    \    >>> is_palindrome(121)\n    true\n    >>> is_palindrome(123)\n    false\n\
    \    >>> is_palindrome(1221)\n    true\n*/\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbv_kjioz.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpbv_kjioz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string ret = \"\";\n \
    \   while (x > 0) \n    {\n        ret = to!string(x % base) ~ ret;\n        x\
    \ /= base;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfzo3vk0h.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfzo3vk0h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2dy_ndm_.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2dy_ndm_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzhtl20hm.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpzhtl20hm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptavkdeie.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmptavkdeie.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp83iubi5.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpp83iubi5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnvvnexhl.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnvvnexhl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx2not4dj.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpx2not4dj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmtzmb37r.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpmtzmb37r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    Return the number of\
    \ digits of the input number x.\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1)\n\
    \    1\n    >>> number_of_digits(10)\n    2\n    >>> number_of_digits(100)\n \
    \   3\n    >>> number_of_digits(1000)\n    4\n*/\nlong number_of_digits(long x)\
    \ \n{\n    long result = 0;\n    while (x > 0) \n    {\n        result++;\n  \
    \      x /= 10;\n    }\n    return result;\n}\n/*\n    Return the number of digits\
    \ of the input number x.\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1)\n\
    \    1\n    >>> number_of_digits(10)\n    2\n    >>> number_of_digits(100)\n \
    \   3\n    >>> number_of_digits(1000)\n    4\n*/\nlong number_of_digits(long x)\
    \ \n{\n    long result = 0;\n    while (x > 0) \n    {\n        result++;\n  \
    \      x /= 10;\n    }\n    return result;\n}\n/*\n    Return the number of digits\
    \ of the input number x.\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1)\n\
    \    1\n    >>> number_of_digits(10)\n    2\n    >>> number_of_digits(100)\n \
    \   3\n    >>> number_of_digits(1000)\n    4\n*/\nlong number_of_digits(long x)\
    \ \n{\n    long result = 0;\n    while (x > 0) \n    {\n        result++;\n  \
    \      x /= 10;\n    }\n    return result;\n}\n/*\n    Return the number of digits\
    \ of the input number x.\n    >>>\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpklhn2_9d.d(94): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklhn2_9d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return true if input\
    \ number is palindrome.\n    >>> is_palindrome(121)\n    true\n    >>> is_palindrome(1221)\n\
    \    true\n    >>> is_palindrome(1234)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxej3m2o_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpxej3m2o_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp17s8w668.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp17s8w668.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp7woo9e6.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpp7woo9e6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) {\n        result = to!string(x % base) ~ result;\n        x /= base;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits of x in base.\n\
    \    >>> digits_in_base(8, 3)\n    2\n    >>> digits_in_base(8, 2)\n    4\n  \
    \  >>> digits_in_base(7, 2)\n    3\n*/\nlong digits_in_base(long x, long base)\
    \ \n{\n    long result = 0;\n    while (x != 0) {\n        result++;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of x in base.\n    >>> digits_in_base(8, 3)\n    2\n    >>> digits_in_base(8,\
    \ 2)\n    4\n    >>> digits_in_base(7, 2)\n    3\n*/\nlong digits_in_base(long\
    \ x, long base) \n{\n    long result = 0;\n    while (x != 0) {\n        result++;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> digits_in_base(8, 3)\n    2\n    >>> digits_in_base(8,\
    \ 2)\n    4\n    >>> digits_in_base(7, 2)\n    3\n*/\nlong digits_in_base(long\
    \ x, long base) \n{\n    long result = 0;\n    while (x != 0) {\n        result++;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> digits_in_base(8, 3)\n    2\n    >>> digits_in_base(8,\
    \ 2)\n    4\n    >>> digits_in_base(7, 2)\n    3\n*/\nlong digits_in_base(long\
    \ x, long base) \n{\n    long result = 0;\n    while (x != 0) {\n        result++;\n\
    \        x /= base;\n   \nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy111j503.d(94): Error: found `unittest` instead of statement\\\
    n/tmp/tmpy111j503.d(111): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy111j503.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3cnjrpl_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp3cnjrpl_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnp3aaok.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfnp3aaok.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpda88lw0b.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpda88lw0b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5k4evcz1.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5k4evcz1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp764vzjg4.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp764vzjg4.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp764vzjg4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp656fvy5v.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp656fvy5v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpclakpv8l.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpclakpv8l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl23dy137.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpl23dy137.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv7qp7z1v.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpv7qp7z1v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1x5rtxbz.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1x5rtxbz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string ret = \"\";\n \
    \   while (x > 0) {\n        ret = to!string(x % base) ~ ret;\n        x /= base;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp95etbfs8.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp95etbfs8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2x6fnjcc.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2x6fnjcc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprlqwqb0a.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmprlqwqb0a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplxpnzhvp.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmplxpnzhvp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqw2c8dv.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmpgqw2c8dv.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpgqw2c8dv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp8y6kr1m.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpp8y6kr1m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmrslspp0.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpmrslspp0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppt9blbbx.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmppt9blbbx.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmppt9blbbx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string ret = \"\";\n \
    \   while (x > 0) \n    {\n        ret = to!string(x % base) ~ ret;\n        x\
    \ /= base;\n    }\n    return ret;\n}\n/*\n    return the number of digits in\
    \ the binary representation of x.\n    >>> num_digits(8)\n    4\n    >>> num_digits(7)\n\
    \    3\n    >>> num_digits(0)\n    1\n*/\nlong num_digits(long x) \n{\n    long\
    \ ret = 0;\n    while (x > 0) \n    {\n        ret++;\n        x /= 2;\n    }\n\
    \    return ret;\n}\n/*\n    return the number of digits in the base representation\
    \ of x.\n    >>> num_digits(8, 3)\n    3\n    >>> num_digits(7, 2)\n    3\n  \
    \  >>> num_digits(0, 2)\n    1\n*/\nlong num_digits(long x, long base) \n{\n \
    \   long ret = 0;\n    while (x > 0) \n    {\n        ret++;\n        x /= base;\n\
    \    }\n    return ret;\n}\n/*\n    return the number of digits in the base representation\
    \ of x.\n    >>> num_digits(8, 3)\n    3\n    >>> num_digits(7, 2)\n    3\n  \
    \  >>> num_digits(0, 2)\n    1\n*/\nlong num_digits(long x, long base) \n{\n \
    \   long ret = 0;\n    while (x > 0) \n    {\n        ret++;\n        x /= base;\n\
    \    }\n    return ret;\n}\n/*\n    return the number of digits in the base representation\
    \ of x.\n    >>> num_digits(8, 3)\n    3\n    >>> num_digits(7, 2)\n    3\n  \
    \  >>> num_digits(0, 2)\n    1\n*/\nlong num_digits(long x, long base) \n{\n \
    \   long ret = 0;\n    while (x > 0) \n    {\n        ret++;\n        x /= base;\n\
    \   \nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpujjghlk1.d(99): Error: found `unittest` instead of statement\\\
    n/tmp/tmpujjghlk1.d(116): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpujjghlk1.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7d6qrg3l.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp7d6qrg3l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpurorqaiv.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpurorqaiv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppf81zf9_.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppf81zf9_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7pyu_c8b.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp7pyu_c8b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppo6t4f94.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppo6t4f94.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5fioftip.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5fioftip.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7p3ux6th.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp7p3ux6th.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\nCheck if input number x\
    \ is a palindrome.\n    return true if x is a palindrome, false otherwise.\n \
    \   >>> is_palindrome(8)\n    false\n    >>> is_palindrome(121)\n    true\n  \
    \  >>> is_palindrome(12321)\n    true\n*/\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfb0ei6lp.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfb0ei6lp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8o3sjm3r.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp8o3sjm3r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) {\n        result ~= to!string(x % base);\n        x /= base;\n    }\n\
    \    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lj8ngnx.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp8lj8ngnx.d(22): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lj8ngnx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    Check if the given\
    \ number is a palindrome.\n    >>> is_palindrome(1221)\n    true\n    >>> is_palindrome(1234)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9i1mvmp.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpd9i1mvmp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits in the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x != 0) \n    {\n        x /= 10;\n        result++;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits in the input\
    \ number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n  \
    \  >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n    long result\
    \ = 0;\n    while (x != 0) \n    {\n        x /= 10;\n        result++;\n    }\n\
    \    return result;\n}\n/*\n    return the number of digits in the input number\
    \ x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n    3\n    >>> num_digits(12345)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n    while (x !=\
    \ 0) \n    {\n        x /= 10;\n        result++;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits in the input number x.\n    >>> num_digits(8)\n\
    \    1\n    >>> num_digits(123)\n    3\n    >>> num_digits(12345)\n    5\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x != 0) \n    {\n\
    \        x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits in the input number x.\n    >>> num\nunittest\n{\n    alias\
    \ candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp57x90b0.d(101): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp57x90b0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of the input number x.\n    >>> number_of_digits(123)\n    3\n    >>>\
    \ number_of_digits(0)\n    1\n    >>> number_of_digits(1234)\n    4\n*/\nlong\
    \ number_of_digits(long x) \n{\n    long result = 0;\n    while (x > 0) \n   \
    \ {\n        x /= 10;\n        result++;\n    }\n    return result;\n}\n/*\n \
    \   return the number of digits of the input number x.\n    >>> number_of_digits(123)\n\
    \    3\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1234)\n \
    \   4\n*/\nlong number_of_digits(long x) \n{\n    long result = 0;\n    while\
    \ (x > 0) \n    {\n        x /= 10;\n        result++;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits of the input number x.\n    >>> number_of_digits(123)\n\
    \    3\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1234)\n \
    \   4\n*/\nlong number_of_digits(long x) \n{\n    long result = 0;\n    while\
    \ (x > 0) \n    {\n        x /= 10;\n        result++;\n    }\n    return result;\n\
    }\n/*\n    return the number of digits of the input number x.\n    >>> number_of_digits(123)\n\
    \    3\n    >>> number_of_digits(0)\n    1\n    >>> number_of_digits(1234)\n \
    \   4\n*/\nlong number_of_digits(long x) \n{\n    long result = 0;\n    while\
    \ (x > 0) \n    {\n        x /= 10;\n\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvbjx4nti.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmpvbjx4nti.d(115): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvbjx4nti.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x != 0) \n    {\n        result++;\n        x\
    \ /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x != 0) \n    {\n        result++;\n        x\
    \ /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x != 0) \n    {\n        result++;\n        x\
    \ /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_digits(8)\n    1\n    >>> num_digits(123)\n\
    \    3\n    >>> num_digits(12345)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  long result = 0;\n    while (x != 0) \n    {\n        result++;\n        x\
    \ /= 10;\n    }\n    return result;\n}\n/*\n    return the number of digits in\
    \ the input number x.\n    >>> num_dig\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpncgq7eth.d(101): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpncgq7eth.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\nCheck if a number is a palindrome.\n\
    \    >>> is_palindrome(123321)\n    true\n    >>> is_palindrome(12321)\n    true\n\
    \    >>> is_palindrome(123)\n    false\n*/\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5flh602b.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5flh602b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpckv5n6t3.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpckv5n6t3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string ret = \"\";\n \
    \   while (x > 0) \n    {\n        ret = to!string(x % base) ~ ret;\n        x\
    \ /= base;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeie70h4s.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpeie70h4s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0wl4bw20.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp0wl4bw20.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp98g6jea2.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp98g6jea2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= (x % base).to!string;\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\n/*\n    return the number of digits of\
    \ the input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n \
    \   1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n    >>> num_digits(10000)\n    5\n    >>> num_digits(100000)\n\
    \    6\n    >>> num_digits(1000000)\n    7\n    >>> num_digits(10000000)\n   \
    \ 8\n    >>> num_digits(100000000)\n    9\n    >>> num_digits(1000000000)\n  \
    \  10\n    >>> num_digits(10000000000)\n    11\n    >>> num_digits(100000000000)\n\
    \    12\n    >>> num_digits(1000000000000)\n    13\n    >>> num_digits(10000000000000)\n\
    \    14\n    >>> num_digits(100000000000000)\n    15\n    >>> num_digits(1000000000000000)\n\
    \    16\n    >>> num_digits(10000000000000000)\n    17\n    >>> num_digits(100000000000000000)\n\
    \    18\n    >>> num_digits(1000000000000000000)\n    19\n    >>> num_digits(10000000000000000000)\n\
    \    20\n    >>> num_digits(100000000000000000000)\n    21\n    >>> num_digits(1000000000000000000000)\n\
    \    22\n    >>> num_digits(10000000000000000000000)\n    23\n    >>> num_digits(100000000000000000000000)\n\
    \    24\n    >>> num_digits(1000000000000000000000000)\n    25\n    >>> num_digits(10000000000000000000000000)\n\
    \    26\n    >>> num_digits(100000000000000000000000000)\n    27\n    >>> num_digits(1000000000000000000000000000)\n\
    \    28\n    >>> num_digits(10000000000000000000000000000)\n    29\n    >>> num_digits\n\
    unittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L)\
    \ == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpussf4dso.d(25): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpussf4dso.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg1_91q9p.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpg1_91q9p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc1cv82mc.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc1cv82mc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmply984nrv.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmply984nrv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeimy96b6.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpeimy96b6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfz4cuw2d.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpfz4cuw2d.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpfz4cuw2d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7nedwfp9.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp7nedwfp9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjc8olkqi.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpjc8olkqi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qog2791.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1qog2791.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpppq3qfdv.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpppq3qfdv.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpppq3qfdv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n  \
    \  return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1dfjgetq.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmp1dfjgetq.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dfjgetq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphekuxbc8.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmphekuxbc8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of n.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n \
    \   >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n\
    \    4\n*/\nlong num_digits(long n) \n{\n    return to!string(n).length;\n}\n\
    /*\n    return the number of digits of n.\n    >>> num_digits(0)\n    1\n    >>>\
    \ num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long n) \n{\n   \
    \ return to!string(n).length;\n}\n/*\n    return the number of digits of n.\n\
    \    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long n) \n{\n    return to!string(n).length;\n}\n/*\n    return\
    \ the number of digits of n.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n\
    \    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>>\
    \ num_digits(1000)\n    4\n*/\nlong num_digits(long n) \n{\n    return to!string(n).length;\n\
    }\n/*\n    return the number of digits of n.\n    >>> num_digits(0)\n    1\n \
    \   >>> num_digits(1)\n    1\n\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6fqy9tf6.d(93): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fqy9tf6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8q84bhk1.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp8q84bhk1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ns5h8nl.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1ns5h8nl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\";\n \
    \   while (x > 0) \n    {\n        res = to!string(x % base) ~ res;\n        x\
    \ /= base;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8w25inxv.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp8w25inxv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= x % base;\n        x /= base;\n    }\n \
    \   return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0phu61ck.d(20): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmp0phu61ck.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp0phu61ck.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi6vo_y6c.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpi6vo_y6c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ed75kmu.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2ed75kmu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\n/*\n    return the number of digits of x.\n    >>> num_digits(0)\n\
    \    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long n = 0;\n    while (x > 0) {\n        n++;\n        x /= 10;\n    }\n  \
    \  return n;\n}\n/*\n    return the number of digits of x.\n    >>> num_digits(0)\n\
    \    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long n = 0;\n    while (x > 0) {\n        n++;\n        x /= 10;\n    }\n  \
    \  return n;\n}\n/*\n    return the number of digits of x.\n    >>> num_digits(0)\n\
    \    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long n = 0;\n    while (x > 0) {\n        n++;\n        x /= 10;\n    }\n  \
    \  return n;\n}\n/*\n    return the number of digits of x.\n    >>> num_digits(0)\n\
    \    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp09vdcga9.d(90): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09vdcga9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\n/*\n    return true if the number\
    \ is palindrome.\n    >>> is_palindrome(1001)\n    true\n    >>> is_palindrome(123)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxkn8wee2.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpxkn8wee2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\";\n \
    \   while (x > 0) \n    {\n        res = to!string(x % base) ~ res;\n        x\
    \ /= base;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpknr73iv2.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpknr73iv2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6vx3kbt5.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp6vx3kbt5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp96z39ze0.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp96z39ze0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyos5x68v.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpyos5x68v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8csgvdx4.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp8csgvdx4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res;\n    while\
    \ (x > 0) \n    {\n        res ~= (x % base).to!string;\n        x /= base;\n\
    \    }\n    return res.reverse;\n}\n/*\n    return true if x is a palindrome in\
    \ base.\n    >>> is_palindrome(8, 3)\n    true\n    >>> is_palindrome(8, 2)\n\
    \    false\n    >>> is_palindrome(7, 2)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7p_14qx1.d(20): Error: no property `to` for type `long`\\n/tmp/tmp7p_14qx1.d(23):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7p_14qx1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp47g7sijz.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp47g7sijz.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp47g7sijz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmm7frnl8.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpmm7frnl8.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpmm7frnl8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp07gk1k0q.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp07gk1k0q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5tallmia.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5tallmia.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83mhyspi.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp83mhyspi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\n    return true if x is\
    \ palindrome in base.\n    base numbers are less than 10.\n    >>> is_palindrome(8,\
    \ 3)\n    true\n    >>> is_palindrome(8, 2)\n    false\n    >>> is_palindrome(7,\
    \ 2)\n    true\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx7wr91an.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpx7wr91an.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\n/*\nReturn the number of digits\
    \ in the decimal representation of x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(4)\n\
    \    1\n    >>> num_digits(1234567890)\n    10\n*/\nlong num_digits(long x) \n\
    {\n    long result = 0;\n    while (x > 0) \n    {\n        x /= 10;\n       \
    \ result++;\n    }\n    return result;\n}\n/*\nReturn the number of digits in\
    \ the binary representation of x.\n    >>> num_digits_bin(0)\n    1\n    >>> num_digits_bin(4)\n\
    \    3\n    >>> num_digits_bin(1234567890)\n    31\n*/\nlong num_digits_bin(long\
    \ x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n        x /= 2;\n \
    \       result++;\n    }\n    return result;\n}\n/*\nReturn the number of digits\
    \ in the binary representation of x.\n    >>> num_digits_bin(0)\n    1\n    >>>\
    \ num_digits_bin(4)\n    3\n    >>> num_digits_bin(1234567890)\n    31\n*/\nlong\
    \ num_digits_bin(long x) \n{\n    long result = 0;\n    while (x > 0) \n    {\n\
    \        x /= 2;\n        result++;\n    }\n    return result;\n}\n/*\nReturn\
    \ the number of digits in the binary representation of x.\n    >>> num_digits_bin(0)\n\
    \    1\n    >>> num_digits_bin(4)\n    3\n    >>> num_digits_bin(1234567890)\n\
    \    31\n*/\nlong num_digits_bin(long x) \n{\n    long result = 0;\n    while\
    \ (x > 0) \n    {\n        x /= 2;\n\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyzn_v4x3.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmpyzn_v4x3.d(115): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzn_v4x3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) {\n        result = to!string(x % base) ~ result;\n       \
    \ x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjr1ttqmb.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpjr1ttqmb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_x65rvm9.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_x65rvm9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\n/*\n    return the number of digits\
    \ of input number x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(8)\n  \
    \  1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n\
    \    4\n*/\nlong num_digits(long x) \n{\n    long result = 0;\n    while (x !=\
    \ 0) {\n        result++;\n        x /= 10;\n    }\n    return result;\n}\n/*\n\
    \    return the number of digits of input number x.\n    >>> num_digits(0)\n \
    \   1\n    >>> num_digits(8)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long result = 0;\n    while (x != 0) {\n        result++;\n        x /= 10;\n\
    \    }\n    return result;\n}\n/*\n    return the number of digits of input number\
    \ x.\n    >>> num_digits(0)\n    1\n    >>> num_digits(8)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long x) \n{\n    long result = 0;\n    while (x != 0) {\n    \
    \    result++;\n        x /= 10;\n    }\n    return result;\n}\n/*\n    return\
    \ the number of digits of input number x.\n    >>> num_digits(0)\n    1\n    >>>\
    \ num_digits(8)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>>\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptbr8ttuq.d(90): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptbr8ttuq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x > 0) \n    {\n        result ~= to!string(x % base);\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl_3l4xvk.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpl_3l4xvk.d(23): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_3l4xvk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpye2g1lwm.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpye2g1lwm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2fmf6qgt.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp2fmf6qgt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu1j09diu.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpu1j09diu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\";\n \
    \   while (x > 0) \n    {\n        res = to!string(x % base) ~ res;\n        x\
    \ /= base;\n    }\n    return res;\n}\n/*\n    return the number of digits in\
    \ the input number.\n    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n   \
    \ 1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n\
    \    4\n*/\nlong num_digits(long x) \n{\n    long res = 0;\n    while (x > 0)\
    \ \n    {\n        res++;\n        x /= 10;\n    }\n    return res;\n}\n/*\n \
    \   return the number of digits in the input number.\n    >>> num_digits(0)\n\
    \    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num_digits(100)\n\
    \    3\n    >>> num_digits(1000)\n    4\n*/\nlong num_digits(long x) \n{\n   \
    \ long res = 0;\n    while (x > 0) \n    {\n        res++;\n        x /= 10;\n\
    \    }\n    return res;\n}\n/*\n    return the number of digits in the input number.\n\
    \    >>> num_digits(0)\n    1\n    >>> num_digits(1)\n    1\n    >>> num_digits(10)\n\
    \    2\n    >>> num_digits(100)\n    3\n    >>> num_digits(1000)\n    4\n*/\n\
    long num_digits(long x) \n{\n    long res = 0;\n    while (x > 0) \n    {\n  \
    \      res++;\n        x /= 10;\n    }\n    return res;\n}\n/*\n    return the\
    \ number of digits in the input number.\n    >>> num_digits(0)\n    1\n    >>>\
    \ num_digits(1)\n    1\n    >>> num_digits(10)\n    2\n    >>> num\nunittest\n\
    {\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\"\
    );\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L)\
    \ == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ayokw2l.d(94): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ayokw2l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x > 0) {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\n/*\n    return the number of digits of x in base.\n\
    \    >>> num_digits(8, 3)\n    2\n    >>> num_digits(8, 2)\n    4\n    >>> num_digits(7,\
    \ 2)\n    3\n*/\nlong num_digits(long x, long base) \n{\n    long n = 0;\n   \
    \ while (x > 0) {\n        n++;\n        x /= base;\n    }\n    return n;\n}\n\
    /*\n    return the number of digits of x in base.\n    >>> num_digits(8, 3)\n\
    \    2\n    >>> num_digits(8, 2)\n    4\n    >>> num_digits(7, 2)\n    3\n*/\n\
    long num_digits(long x, long base) \n{\n    long n = 0;\n    while (x > 0) {\n\
    \        n++;\n        x /= base;\n    }\n    return n;\n}\n/*\n    return the\
    \ number of digits of x in base.\n    >>> num_digits(8, 3)\n    2\n    >>> num_digits(8,\
    \ 2)\n    4\n    >>> num_digits(7, 2)\n    3\n*/\nlong num_digits(long x, long\
    \ base) \n{\n    long n = 0;\n    while (x > 0) {\n        n++;\n        x /=\
    \ base;\n    }\n    return n;\n}\n/*\n    return the number of digits of x in\
    \ base.\n    >>> num_digits(8, 3)\n    2\n    >>> num_digits(8, 2)\n    4\n  \
    \  >>> num_digits(7, 2)\n    3\n*/\nlong num_digits(long x, long base) \n{\n \
    \   long n = 0;\n    while (x > 0) {\n        n++;\n        x /= base;\n    }\n\
    \    return n;\n}\n/*\n    return the\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7cfjxlad.d(96): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cfjxlad.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result;\n    while\
    \ (x != 0) \n    {\n        result ~= (x % base).to!string;\n        x /= base;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3dogtnj.d(20): Error: no property `to` for type `long`\\n/tmp/tmpj3dogtnj.d(23):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpj3dogtnj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) {\n        result = to!string(x % base) ~ result;\n      \
    \  x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpia0hd1v_.d(19): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpia0hd1v_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x != 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ti_lgui.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp0ti_lgui.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string result = \"\";\n\
    \    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n \
    \       x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5wkkwm02.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5wkkwm02.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n   \
    \ >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \n*/\nstring change_base(long x, long base) \n{\n    string s = \"\";\n   \
    \ while (x != 0) \n    {\n        s = to!string(x % base) ~ s;\n        x /= base;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = change_base;\n\n\
    \    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi2y_a3w8.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpi2y_a3w8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_75_is_multiply_prime
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\nWrite a function that returns\
  \ true if the given number is the multiplication of 3 prime numbers\n    and false\
  \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30)\
  \ == True\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n"
tests: "unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
  \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n\
  \    assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n  \
  \  assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n   \
  \ assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n   \
  \ assert(candidate(1001L) == true);\n}\nvoid main(){}"
completions: ["{\n    bool is_multiply_prime = false;\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; 0..primes.length)\n    {\n        if(a % primes[i]\
    \ == 0)\n        {\n            is_multiply_prime = true;\n        }\n    }\n\
    \    return is_multiply_prime;\n}", "{\n    int i = 2;\n    int count = 0;\n \
    \   while (i <= a) \n    {\n        if (a % i == 0) \n        {\n            a\
    \ /= i;\n            count++;\n        } \n        else \n        {\n        \
    \    i++;\n        }\n    }\n    return count == 3;\n}", "{\n    int i = 2;\n\
    \    int j = 2;\n    int k = 2;\n    int count = 0;\n    while(i <= a)\n    {\n\
    \        if(a % i == 0)\n        {\n            while(j <= i)\n            {\n\
    \                if(i % j == 0)\n                {\n                    count++;\n\
    \                }\n                j++;\n            }\n            if(count\
    \ == 2)\n            {\n                while(k <= a)\n                {\n   \
    \                 if(a % k == 0)\n                    {\n                    \
    \    while(j <= k)\n                        {\n                            if(k\
    \ % j == 0)\n                            {\n                                count++;\n\
    \                            }\n                            j++;\n           \
    \             }\n                        if(count == 4)\n                    \
    \    {\n                            while(j <= a)\n                          \
    \  {\n                                if(a % j == 0)\n                       \
    \         {\n                                    count++;\n                  \
    \              }\n                                j++;\n                     \
    \       }\n                            if(count == 6)\n                      \
    \      {\n                                return true;\n                     \
    \       }\n                        }\n                    }\n                \
    \    k++;\n                }\n            }\n        }\n        i++;\n    }\n\
    \    return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <\
    \ 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0)\
    \ return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n \
    \           if (n % i == 0) return false;\n        }\n        return true;\n \
    \   }\n    if (a < 6) return false;\n    long i = 2;\n    while (i <= a)\n   \
    \ {\n        if (is_prime(i) && a % i == 0)\n        {\n            a /= i;\n\
    \            if (a == 1) return true;\n            i = 2;\n        }\n       \
    \ else\n        {\n            i++;\n        }\n    }\n    return false;\n}",
  "{\n    bool is_prime(long a)\n    {\n        if (a <= 1)\n            return false;\n\
    \        if (a == 2)\n            return true;\n        if (a % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(a); i += 2)\n     \
    \   {\n            if (a % i == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n    long i = 2;\n    long j = 2;\n    long k = 2;\n\
    \    while (i * j * k != a)\n    {\n        if (i * j * k > a)\n        {\n  \
    \          if (j == 2)\n            {\n                i++;\n                j\
    \ = 2;\n                k = 2;\n            }\n            else if (k == 2)\n\
    \            {\n                j++;\n                k = 2;\n            }\n\
    \            else\n            {\n                k++;\n            }\n      \
    \  }\n        else\n        {\n            if (k == 2)\n            {\n      \
    \          j++;\n                k = 2;\n            }\n            else\n   \
    \         {\n                k++;\n            }\n        }\n    }\n    if (is_prime(i)\
    \ && is_prime(j) && is_prime(k))\n        return true;\n    return false;\n}",
  "{\n    bool is_prime(long n)\n    {\n        if (n <= 1)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \       if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a <= 1)\n        return false;\n    if (a == 2)\n        return\
    \ true;\n    if (a % 2 == 0)\n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n        if (a % i == 0)\n            return is_prime(i) &&\
    \ is_prime(a / i);\n    return false;\n}", "{\n    int i = 2;\n    int j = 2;\n\
    \    int k = 2;\n    bool is_prime = true;\n    while (i < a)\n    {\n       \
    \ while (j < a)\n        {\n            while (k < a)\n            {\n       \
    \         if (i * j * k == a)\n                {\n                    return true;\n\
    \                }\n                k++;\n            }\n            j++;\n  \
    \      }\n        i++;\n    }\n    return false;\n}", "{\n    if(a < 2)\n    \
    \    return false;\n    if(a == 2)\n        return true;\n    if(a % 2 == 0)\n\
    \        return false;\n    for(long i = 3; i <= sqrt(a); i += 2)\n    {\n   \
    \     if(a % i == 0)\n            return false;\n    }\n    return true;\n}",
  "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}",
  "{\n    bool is_prime(long n)\n    {\n        if (n < 2)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \       if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a < 6)\n        return false;\n    for (long i = 2; i <= a / 3;\
    \ i++)\n        if (is_prime(i) && is_prime(a / i) && is_prime(a / (i * (a / i))))\n\
    \            return true;\n    return false;\n}", "{\n    static long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n\
    \        {\n            a /= i;\n            if(a == 1)\n                return\
    \ true;\n            else\n                return is_multiply_prime(a);\n    \
    \    }\n    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n \
    \       if (n <= 1) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        foreach (i; 2 .. n)\n        {\n       \
    \     if (n % i == 0) return false;\n        }\n        return true;\n    }\n\
    \    foreach (i; 2 .. a)\n    {\n        if (is_prime(i) && a % i == 0)\n    \
    \    {\n            long b = a / i;\n            foreach (j; 2 .. b)\n       \
    \     {\n                if (is_prime(j) && b % j == 0)\n                {\n \
    \                   long c = b / j;\n                    if (is_prime(c))\n  \
    \                  {\n                        return true;\n                 \
    \   }\n                }\n            }\n        }\n    }\n    return false;\n\
    }", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    long[] result = [];\n    foreach(i;\
    \ primes)\n    {\n        if(a % i == 0)\n        {\n            result ~= i;\n\
    \            a /= i;\n        }\n    }\n    return result.length == 3;\n}", "{\n\
    \    bool is_prime(long n)\n    {\n        if (n <= 1)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \       if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a == 1)\n        return false;\n    if (a == 2)\n        return\
    \ true;\n    if (a % 2 == 0)\n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n        if (a % i == 0)\n            if (is_prime(i) && is_prime(a\
    \ / i))\n                return true;\n    return false;\n}", "{\n    if (a <=\
    \ 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    long i = 3;\n    while (i <= sqrt(a))\n    {\n        if (a % i == 0) return\
    \ false;\n        i += 2;\n    }\n    return true;\n}", "{\n    long i = 2;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 2) return false;\n    if (a == 2) return\
    \ true;\n    if (a % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a);\
    \ i += 2)\n    {\n        if (a % i == 0)\n        {\n            if (is_prime(i)\
    \ && is_prime(a / i))\n            {\n                return true;\n         \
    \   }\n        }\n    }\n    return false;\n}", "{\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; 0..primes.length)\n    {\n        if(a % primes[i]\
    \ == 0)\n        {\n            a /= primes[i];\n            if(a == 1)\n    \
    \        {\n                return true;\n            }\n            i = 0;\n\
    \        }\n    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n\
    \        if (n < 2) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n\
    \        {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n    }\n    if (a < 2) return false;\n    if (a == 2) return true;\n \
    \   if (a % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n\
    \    {\n        if (a % i == 0)\n        {\n            if (is_prime(i) && is_prime(a\
    \ / i))\n            {\n                return true;\n            }\n        }\n\
    \    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 2;\n    long\
    \ k = 2;\n    long tmp = a;\n    bool is_prime = true;\n    bool is_multiply =\
    \ false;\n    while (i <= a)\n    {\n        if (a % i == 0)\n        {\n    \
    \        a = a / i;\n            while (j <= i)\n            {\n             \
    \   if (i % j == 0)\n                {\n                    is_prime = false;\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n            if (is_prime)\n            {\n                while (k <=\
    \ a)\n                {\n                    if (a % k == 0)\n               \
    \     {\n                        is_prime = false;\n                        break;\n\
    \                    }\n                    k++;\n                }\n        \
    \        if (is_prime)\n                {\n                    is_multiply = true;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     i++;\n    }\n    return is_multiply;\n}", "{\n    import std.math;\n   \
    \ import std.algorithm;\n    import std.range;\n    import std.typecons;\n   \
    \ import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.stdio;\n    import std.range;\n    import std.algorithm;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.array;\n    import std.conv;\n    import std.string;\n\
    \    import std.stdio;\n    import std.range;\n    import std.algorithm;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.algorithm;\n    import\
    \ std.range;\n    import std.typecons;\n    import std.array;\n    import std.conv;\n\
    \    import std.string;\n    import std.stdio;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.conv;\n    import std.string;\n    import std.stdio;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.typecons;\n    import std.math;\n \
    \   import std.algorithm;\n    import std.range;\n    import std.typecons;\n \
    \   import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.stdio;\n    import std.range;\n    import std.algorithm;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.array;\n    import std.conv;\n    import std.string;\n\
    \    import std.stdio;\n    import std.range;\n    import std.algorithm;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.algorithm;\n    import",
  "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n  \
    \      if(a % i == 0)\n        {\n            a /= i;\n        }\n    }\n    return\
    \ a == 1;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n < 2) return\
    \ false;\n        for (long i = 2; i < n; i++)\n        {\n            if (n %\
    \ i == 0) return false;\n        }\n        return true;\n    }\n    long i =\
    \ 2;\n    long count = 0;\n    while (i <= a)\n    {\n        if (a % i == 0 &&\
    \ is_prime(i))\n        {\n            a /= i;\n            count++;\n       \
    \ }\n        else\n        {\n            i++;\n        }\n    }\n    return count\
    \ == 3;\n}", "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n\
    \        return is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n        return\
    \ is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a\
    \ / 5);\n    return true;\n}", "{\n    bool is_prime(long n)\n    {\n        if\
    \ (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2\
    \ == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n      \
    \  {\n            if (n % i == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n    if (a <= 1) return false;\n    if (a == 2) return\
    \ true;\n    if (a % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a);\
    \ i += 2)\n    {\n        if (a % i == 0)\n        {\n            if (is_prime(i)\
    \ && is_prime(a / i))\n                return true;\n        }\n    }\n    return\
    \ false;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n < 2)\n     \
    \       return false;\n        for (long i = 2; i <= sqrt(n); i++)\n         \
    \   if (n % i == 0)\n                return false;\n        return true;\n   \
    \ }\n    if (a < 2)\n        return false;\n    for (long i = 2; i <= sqrt(a);\
    \ i++)\n        if (is_prime(i) && a % i == 0)\n            return is_multiply_prime(a\
    \ / i);\n    return true;\n}", "{\n    if (a == 1)\n        return false;\n  \
    \  if (a == 2)\n        return true;\n    if (a == 3)\n        return true;\n\
    \    if (a == 5)\n        return true;\n    if (a == 7)\n        return true;\n\
    \    if (a == 11)\n        return true;\n    if (a == 13)\n        return true;\n\
    \    if (a == 17)\n        return true;\n    if (a == 19)\n        return true;\n\
    \    if (a == 23)\n        return true;\n    if (a == 29)\n        return true;\n\
    \    if (a == 31)\n        return true;\n    if (a == 37)\n        return true;\n\
    \    if (a == 41)\n        return true;\n    if (a == 43)\n        return true;\n\
    \    if (a == 47)\n        return true;\n    if (a == 53)\n        return true;\n\
    \    if (a == 59)\n        return true;\n    if (a == 61)\n        return true;\n\
    \    if (a == 67)\n        return true;\n    if (a == 71)\n        return true;\n\
    \    if (a == 73)\n        return true;\n    if (a == 79)\n        return true;\n\
    \    if (a == 83)\n        return true;\n    if (a == 89)\n        return true;\n\
    \    if (a == 97)\n        return true;\n    return false;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n    if (a <= 1) return false;\n    if\
    \ (a == 2) return true;\n    if (a % 2 == 0) return false;\n    for (long i =\
    \ 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n        {\n      \
    \      if (is_prime(i) && is_prime(a / i))\n                return true;\n   \
    \     }\n    }\n    return false;\n}", "{\n    if (a < 6)\n        return false;\n\
    \    if (a % 2 == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3\
    \ == 0)\n        return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n     \
    \   return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    import std.algorithm\
    \ : all;\n    import std.range : iota;\n    import std.math : isPrime;\n    import\
    \ std.typecons : tuple;\n    import std.array : array;\n    import std.conv :\
    \ to;\n    import std.range : take;\n    import std.range : drop;\n    import\
    \ std.range : empty;\n    import std.range : front;\n    import std.range : back;\n\
    \    import std.range : zip;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   ",
  "{\n    int i = 2;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n\
    \    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n \
    \   int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo\
    \ = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n    int bbb = 0;\n\
    \    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n    int\
    \ ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk\
    \ = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n\
    \    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int\
    \ ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int", "{\n\
    \    bool result = false;\n    if (a == 1)\n        return false;\n    if (a ==\
    \ 2)\n        return true;\n    if (a == 3)\n        return true;\n    if (a ==\
    \ 5)\n        return true;\n    if (a == 7)\n        return true;\n    if (a ==\
    \ 11)\n        return true;\n    if (a == 13)\n        return true;\n    if (a\
    \ == 17)\n        return true;\n    if (a == 19)\n        return true;\n    if\
    \ (a == 23)\n        return true;\n    if (a == 29)\n        return true;\n  \
    \  if (a == 31)\n        return true;\n    if (a == 37)\n        return true;\n\
    \    if (a == 41)\n        return true;\n    if (a == 43)\n        return true;\n\
    \    if (a == 47)\n        return true;\n    if (a == 53)\n        return true;\n\
    \    if (a == 59)\n        return true;\n    if (a == 61)\n        return true;\n\
    \    if (a == 67)\n        return true;\n    if (a == 71)\n        return true;\n\
    \    if (a == 73)\n        return true;\n    if (a == 79)\n        return true;\n\
    \    if (a == 83)\n        return true;\n    if (a == 89)\n        return true;\n\
    \    if (a == 97)\n        return true;\n    if (a == 6)\n        return false;\n\
    \    if (a == 10)\n        return false;\n    if (a == 14)\n        return false;\n\
    \    if (a == 15)\n        return false;\n    if (a == 21)\n        return false;\n\
    \    if (a == 22)\n        return false;\n    if (a == 33)\n        return false;\n\
    \    if (a == 34)\n        return false;\n    if (a == 35)\n        return false;\n\
    \    if (a == 38)\n        return false;\n    if (a == 39)\n        return false;\n\
    \    if (a == 46)\n        return false;\n    if (a == 51)\n", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 6) return false;\n    if (a == 6) return\
    \ true;\n    if (a % 2 == 0)\n    {\n        if (is_prime(a / 2)) return true;\n\
    \        if (is_prime(a / 3)) return true;\n        if (is_prime(a / 5)) return\
    \ true;\n    }\n    if (a % 3 == 0)\n    {\n        if (is_prime(a / 3)) return\
    \ true;\n        if (is_prime(a / 5)) return true;\n    }\n    if (a % 5 == 0)\n\
    \    {\n        if (is_prime(a / 5)) return true;\n    }\n    return false;\n}",
  "{\n    int i = 2;\n    int count = 0;\n    while (i <= a) \n    {\n        if (a\
    \ % i == 0) \n        {\n            a /= i;\n            count++;\n        }\n\
    \        else\n            i++;\n    }\n    return count == 3;\n}", "{\n    if\
    \ (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}",
  "{\n    int count = 0;\n    for (int i = 2; i <= a; i++) \n    {\n        if (a\
    \ % i == 0) \n        {\n            count++;\n            a /= i;\n         \
    \   i--;\n        }\n    }\n    return count == 3;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    bool is_multiply_prime(long a)\n    {\n     \
    \   if (a == 1) return false;\n        if (a == 2) return true;\n        if (a\
    \ % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(a); i += 2)\n  \
    \      {\n            if (a % i == 0)\n            {\n                if (is_prime(i)\
    \ && is_prime(a / i)) return true;\n            }\n        }\n        return false;\n\
    \    }\n}", "{\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l\
    \ = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n \
    \   long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u\
    \ = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n \
    \   long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long\
    \ ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah =\
    \ 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n\
    \    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long\
    \ aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au =\
    \ 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n\
    \    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long\
    \ bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh =\
    \ 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n\
    \    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long\
    \ bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu =\
    \ 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n\
    \    long bz", "{\n    // your code here\n    if(a == 1)\n        return false;\n\
    \    if(a == 2)\n        return true;\n    if(a == 3)\n        return true;\n\
    \    if(a == 5)\n        return true;\n    if(a == 7)\n        return true;\n\
    \    if(a == 11)\n        return true;\n    if(a == 13)\n        return true;\n\
    \    if(a == 17)\n        return true;\n    if(a == 19)\n        return true;\n\
    \    if(a == 23)\n        return true;\n    if(a == 29)\n        return true;\n\
    \    if(a == 31)\n        return true;\n    if(a == 37)\n        return true;\n\
    \    if(a == 41)\n        return true;\n    if(a == 43)\n        return true;\n\
    \    if(a == 47)\n        return true;\n    if(a == 53)\n        return true;\n\
    \    if(a == 59)\n        return true;\n    if(a == 61)\n        return true;\n\
    \    if(a == 67)\n        return true;\n    if(a == 71)\n        return true;\n\
    \    if(a == 73)\n        return true;\n    if(a == 79)\n        return true;\n\
    \    if(a == 83)\n        return true;\n    if(a == 89)\n        return true;\n\
    \    if(a == 97)\n        return true;\n    if(a % 2 == 0)\n        return false;\n\
    \    if(a % 3 == 0)\n        return false;\n    if(a % 5 == 0)\n        return\
    \ false;\n    if(a % 7 == 0)\n        return false;\n    if(a % 11 == 0)\n   \
    \     return false;\n    if(a % 13 == 0)\n        return false;\n    if(a % 17\
    \ == 0)\n        return false;\n    if(a % 19 == 0)\n        return false;\n \
    \   if(a % 23 == 0)\n        return false;\n    if(a % 29 == 0)\n        return\
    \ false;\n    if(a % 31 == 0)\n        return false;\n", "{\n    if (a <= 1) return\
    \ false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n  \
    \  for (long i = 3; i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    int i = 2;\n    int count = 0;\n\
    \    while (i <= a)\n    {\n        if (a % i == 0)\n        {\n            a\
    \ /= i;\n            count++;\n        }\n        else\n        {\n          \
    \  i++;\n        }\n    }\n    return count == 3;\n}", "{\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n\
    \        {\n            a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n\
    \    import std.math;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.array;\n    import std.conv;\n    import std.string;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.functional;\n\
    \    import std.stdio;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.array;\n    import std.conv;\n    import std.string;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.functional;\n    import std.stdio;\n\
    \    import std.typecons;\n    import std.math;\n    import std.array;\n    import\
    \ std.conv;\n    import std.string;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.functional;\n    import std.stdio;\n    import std.typecons;\n\
    \    import std.math;\n    import std.array;\n    import std.conv;\n    import\
    \ std.string;\n    import std.range;\n    import std.algorithm;\n    import std.functional;\n\
    \    import std.stdio;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.array;\n    import std.conv;\n    import std.string;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.functional;\n    import std.stdio;\n\
    \    import std.typecons;\n    import std.math;\n    import std.array;\n    import\
    \ std.conv;\n    import std.string;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.functional;\n    import std.stdio;\n    import std.typecons;\n\
    \    import std.math;\n    import std.array;\n    import std.conv;\n    import\
    \ std.string;\n    import std.range;\n    import std.algorithm;\n    import std.functional;\n\
    \    import std.stdio;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.array;\n    import std.conv;\n    import std", "{\n    long i = 2;\n   \
    \ long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n =\
    \ 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n   \
    \ long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w =\
    \ 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n  \
    \  long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool result =\
    \ false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n \
    \   {\n        if(a % i == 0)\n        {\n            long b = a / i;\n      \
    \      foreach(j; primes)\n            {\n                if(b % j == 0)\n   \
    \             {\n                    long c = b / j;\n                    foreach(k;\
    \ primes)\n                    {\n                        if(c % k == 0)\n   \
    \                     {\n                            result = true;\n        \
    \                    break;\n                        }\n                    }\n\
    \                    break;\n                }\n            }\n            break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long i = 2;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n\
    \    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long\
    \ bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk =\
    \ 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n\
    \    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long\
    \ bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\
    \ 0;\n    long by = 0;\n    long bz", "{\n    bool is_prime(long n)\n    {\n \
    \       if (n < 2) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n\
    \        {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n    }\n    if (a < 2) return false;\n    if (a == 2) return true;\n \
    \   if (a % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n\
    \    {\n        if (a % i == 0)\n        {\n            if (is_prime(i) && is_prime(a\
    \ / i))\n            {\n                return true;\n            }\n        }\n\
    \    }\n    return false;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   int i = 0;\n    while (a > 1)\n    {\n        if (a % primes[i] == 0)\n  \
    \      {\n            a /= primes[i];\n        }\n        else\n        {\n  \
    \          i++;\n        }\n    }\n    return i == 3;\n}", "{\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    foreach(prime; primes)\n    {\n        if(a % prime\
    \ == 0)\n        {\n            a /= prime;\n        }\n    }\n    return a ==\
    \ 1;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long count\
    \ = 0;\n    long temp = a;\n    while(i <= temp)\n    {\n        if(temp % i ==\
    \ 0)\n        {\n            temp /= i;\n            count++;\n        }\n   \
    \     else\n        {\n            i++;\n        }\n    }\n    if(count == 3)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <= 1)\n      \
    \      return false;\n        else if (n <= 3)\n            return true;\n   \
    \     else if (n % 2 == 0 || n % 3 == 0)\n            return false;\n        long\
    \ i = 5;\n        while (i * i <= n)\n        {\n            if (n % i == 0 ||\
    \ n % (i + 2) == 0)\n                return false;\n            i = i + 6;\n \
    \       }\n        return true;\n    }\n    long i = 2;\n    long j = 2;\n   \
    \ long k = 2;\n    while (i * j * k != a)\n    {\n        if (i * j * k > a)\n\
    \        {\n            if (j * k > a)\n            {\n                if (k >\
    \ a)\n                    return false;\n                else\n              \
    \      k++;\n            }\n            else\n                j++;\n        }\n\
    \        else\n            i++;\n    }\n    return is_prime(i) && is_prime(j)\
    \ && is_prime(k);\n}", "{\n    bool result = false;\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(long prime; primes)\n    {\n        if(a % prime ==\
    \ 0)\n        {\n            result = true;\n            break;\n        }\n \
    \   }\n    return result;\n}", "{\n    if (a <= 0) return false;\n    if (a ==\
    \ 1) return true;\n    if (a == 2) return true;\n    if (a == 3) return true;\n\
    \    if (a == 5) return true;\n    if (a == 7) return true;\n    if (a == 11)\
    \ return true;\n    if (a == 13) return true;\n    if (a == 17) return true;\n\
    \    if (a == 19) return true;\n    if (a == 23) return true;\n    if (a == 29)\
    \ return true;\n    if (a == 31) return true;\n    if (a == 37) return true;\n\
    \    if (a == 41) return true;\n    if (a == 43) return true;\n    if (a == 47)\
    \ return true;\n    if (a == 53) return true;\n    if (a == 59) return true;\n\
    \    if (a == 61) return true;\n    if (a == 67) return true;\n    if (a == 71)\
    \ return true;\n    if (a == 73) return true;\n    if (a == 79) return true;\n\
    \    if (a == 83) return true;\n    if (a == 89) return true;\n    if (a == 97)\
    \ return true;\n    if (a == 6) return true;\n    if (a == 10) return true;\n\
    \    if (a == 14) return true;\n    if (a == 15) return true;\n    if (a == 21)\
    \ return true;\n    if (a == 22) return true;\n    if (a == 33) return true;\n\
    \    if (a == 34) return true;\n    if (a == 35) return true;\n    if (a == 38)\
    \ return true;\n    if (a == 39) return true;\n    if (a == 46) return true;\n\
    \    if (a == 51) return true;\n    if (a == 55) return true;\n    if (a == 57)\
    \ return true;\n    if (a == 58) return true;\n    if (a == 62) return true;\n\
    \    if (a == 65) return true;\n    if (a == 69) return true;\n    if (", "{\n\
    \    int i = 2;\n    while (i < a)\n    {\n        if (a % i == 0)\n        {\n\
    \            if (isPrime(i) && isPrime(a / i))\n            {\n              \
    \  return true;\n            }\n        }\n        i++;\n    }\n    return false;\n\
    }", "{\n    if (a < 6) return false;\n    long[] primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    foreach (i; 0 .. primes.length)\n    {\n        if (a % primes[i] == 0)\n\
    \        {\n            a /= primes[i];\n            if (a == 1) return true;\n\
    \            if (a % primes[i] == 0) return false;\n            i = -1;\n    \
    \    }\n    }\n    return false;\n}", "{\n    if (a < 6) return false;\n    if\
    \ (a % 2 == 0) return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0) return is_multiply_prime(a / 5);\n    for (int i\
    \ = 7; i < a; i += 2) {\n        if (a % i == 0) return false;\n    }\n    return\
    \ true;\n}", "{\n    long i, j, k;\n    for (i = 2; i <= a / 2; i++) \n    {\n\
    \        if (a % i == 0) \n        {\n            for (j = 2; j <= a / 2; j++)\
    \ \n            {\n                if (a % j == 0) \n                {\n     \
    \               for (k = 2; k <= a / 2; k++) \n                    {\n       \
    \                 if (a % k == 0) \n                        {\n              \
    \              if (a == i * j * k) \n                            {\n         \
    \                       return true;\n                            }\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n\
    \    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long\
    \ bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk =\
    \ 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n\
    \    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long\
    \ bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\
    \ 0;\n    long by = 0;\n    long bz", "{\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach(long i; primes)\n    {\n        if(a % i == 0)\n        {\n\
    \            a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n    bool is_prime(long\
    \ a)\n    {\n        if (a < 2)\n            return false;\n        for (long\
    \ i = 2; i < a; i++)\n            if (a % i == 0)\n                return false;\n\
    \        return true;\n    }\n    for (long i = 2; i < a; i++)\n        if (is_prime(i)\
    \ && a % i == 0)\n            for (long j = 2; j < a; j++)\n                if\
    \ (is_prime(j) && a % j == 0 && i * j < a)\n                    for (long k =\
    \ 2; k < a; k++)\n                        if (is_prime(k) && a % k == 0 && i *\
    \ j * k == a)\n                            return true;\n    return false;\n}",
  "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}",
  "{\n    int i = 2;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n\
    \    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n \
    \   int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo\
    \ = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n    int bbb = 0;\n\
    \    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n    int\
    \ ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk\
    \ = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n\
    \    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int\
    \ ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int", "{\n\
    \    int i = 2;\n    int count = 0;\n    while (i <= a)\n    {\n        if (a\
    \ % i == 0)\n        {\n            a /= i;\n            count++;\n        }\n\
    \        else\n        {\n            i++;\n        }\n    }\n    return count\
    \ == 3;\n}", "{\n    int i, j, k;\n    for (i = 2; i < a; i++)\n    {\n      \
    \  for (j = 2; j < a; j++)\n        {\n            for (k = 2; k < a; k++)\n \
    \           {\n                if (i * j * k == a)\n                {\n      \
    \              return true;\n                }\n            }\n        }\n   \
    \ }\n    return false;\n}", "{\n    if(a < 6)\n        return false;\n    if(a\
    \ == 6)\n        return true;\n    if(a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if(a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if(a\
    \ % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return false;\n}",
  "{\n    if (a == 1)\n        return false;\n    else if (a == 2)\n        return\
    \ true;\n    else if (a == 3)\n        return true;\n    else if (a == 5)\n  \
    \      return true;\n    else if (a == 7)\n        return true;\n    else if (a\
    \ == 11)\n        return true;\n    else if (a == 13)\n        return true;\n\
    \    else if (a == 17)\n        return true;\n    else if (a == 19)\n        return\
    \ true;\n    else if (a == 23)\n        return true;\n    else if (a == 29)\n\
    \        return true;\n    else if (a == 31)\n        return true;\n    else if\
    \ (a == 37)\n        return true;\n    else if (a == 41)\n        return true;\n\
    \    else if (a == 43)\n        return true;\n    else if (a == 47)\n        return\
    \ true;\n    else if (a == 53)\n        return true;\n    else if (a == 59)\n\
    \        return true;\n    else if (a == 61)\n        return true;\n    else if\
    \ (a == 67)\n        return true;\n    else if (a == 71)\n        return true;\n\
    \    else if (a == 73)\n        return true;\n    else if (a == 79)\n        return\
    \ true;\n    else if (a == 83)\n        return true;\n    else if (a == 89)\n\
    \        return true;\n    else if (a == 97)\n        return true;\n    else\n\
    \        return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n\
    \ <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 ==\
    \ 0) return false;\n        foreach (i; 2 .. (n / 2) + 1)\n        {\n       \
    \     if (n % i == 0)\n                return false;\n        }\n        return\
    \ true;\n    }\n    foreach (i; 2 .. a / 2 + 1)\n    {\n        if (is_prime(i)\
    \ && a % i == 0)\n        {\n            foreach (j; 2 .. a / 2 + 1)\n       \
    \     {\n                if (is_prime(j) && a % j == 0 && i * j == a)\n      \
    \          {\n                    foreach (k; 2 .. a / 2 + 1)\n              \
    \      {\n                        if (is_prime(k) && a % k == 0 && i * j * k ==\
    \ a)\n                        {\n                            return true;\n  \
    \                      }\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}", "{\n    long i = 2;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n\
    \    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool is_prime(long\
    \ a)\n    {\n        if (a == 1) return false;\n        if (a == 2) return true;\n\
    \        if (a % 2 == 0) return false;\n        for (long i = 3; i < a; i += 2)\n\
    \        {\n            if (a % i == 0) return false;\n        }\n        return\
    \ true;\n    }\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    while (i\
    \ < a)\n    {\n        while (j < a)\n        {\n            while (k < a)\n \
    \           {\n                if (i * j * k == a)\n                {\n      \
    \              if (is_prime(i) && is_prime(j) && is_prime(k))\n              \
    \      {\n                        return true;\n                    }\n      \
    \          }\n                k++;\n            }\n            j++;\n        \
    \    k = 2;\n        }\n        i++;\n        j = 2;\n    }\n    return false;\n\
    }", "{\n    bool is_prime(long n)\n    {\n        if (n < 2)\n            return\
    \ false;\n        if (n == 2)\n            return true;\n        if (n % 2 ==\
    \ 0)\n            return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n\
    \            if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a < 6)\n        return false;\n    for (long i = 2; i <= a / 3;\
    \ i++)\n        if (is_prime(i) && is_prime(a / i) && is_prime(a / (i * (a / i))))\n\
    \            return true;\n    return false;\n}", "{\n    if (a < 6)\n       \
    \ return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a / 2);\n\
    \    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if (a % 5\
    \ == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}", "{\n\
    \    bool isPrime = true;\n    long b = a;\n    long c = a;\n    long d = a;\n\
    \    long e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n    long\
    \ i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n\
    \    long n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n    long\
    \ r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n\
    \    long w = a;\n    long x = a;\n    long y = a;\n    long z = a;\n    long\
    \ aa = a;\n    long ab = a;\n    long ac = a;\n    long ad = a;\n    long ae =\
    \ a;\n    long af = a;\n    long ag = a;\n    long ah = a;\n    long ai = a;\n\
    \    long aj = a;\n    long ak = a;\n    long al = a;\n    long am = a;\n    long\
    \ an = a;\n    long ao = a;\n    long ap = a;\n    long aq = a;\n    long ar =\
    \ a;\n    long as = a;\n    long at = a;\n    long au = a;\n    long av = a;\n\
    \    long aw = a;\n    long ax = a;\n    long ay = a;\n    long az = a;\n    long\
    \ ba = a;\n    long bb = a;\n    long bc = a;\n    long bd = a;\n    long be =\
    \ a;\n    long bf = a;\n    long bg = a;\n    long bh = a;\n    long bi = a;\n\
    \    long bj = a;\n    long bk = a;\n    long bl = a;\n    long bm = a;\n    long\
    \ bn = a;\n    long bo = a;\n    long bp = a;\n    long bq = a;\n    long br =\
    \ a;\n   ", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    long[] result = [];\n\
    \    foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n          \
    \  result ~= i;\n            a /= i;\n        }\n    }\n    return result.length\
    \ == 3;\n}", "{\n    long i = 2;\n    long j = a;\n    while (i < j)\n    {\n\
    \        if (a % i == 0)\n        {\n            j = a / i;\n            if (isPrime(i)\
    \ && isPrime(j))\n            {\n                return true;\n            }\n\
    \        }\n        i++;\n    }\n    return false;\n}", "{\n    int i = 2;\n \
    \   int count = 0;\n    while (a != 1)\n    {\n        if (a % i == 0)\n     \
    \   {\n            a /= i;\n            count++;\n        }\n        else\n  \
    \      {\n            i++;\n        }\n    }\n    return count == 3;\n}", "{\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    bool is_multiply_prime = false;\n\
    \    foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n          \
    \  is_multiply_prime = true;\n            break;\n        }\n    }\n    return\
    \ is_multiply_prime;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i;\
    \ primes)\n    {\n        if(a % i == 0)\n        {\n            a /= i;\n   \
    \     }\n    }\n    return a == 1;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    long[] factors = [];\n    foreach(long i; primes)\n    {\n       \
    \ if(a % i == 0)\n        {\n            factors ~= i;\n            a /= i;\n\
    \        }\n    }\n    if(factors.length == 3)\n    {\n        return true;\n\
    \    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 2;\n    long\
    \ k = 2;\n    while (i < a)\n    {\n        while (j < a)\n        {\n       \
    \     while (k < a)\n            {\n                if (i * j * k == a)\n    \
    \            {\n                    return true;\n                }\n        \
    \        k++;\n            }\n            j++;\n        }\n        i++;\n    }\n\
    \    return false;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    long[]\
    \ factors = [];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n     \
    \   {\n            factors ~= i;\n            a /= i;\n        }\n    }\n    if(factors.length\
    \ == 3)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    if(a < 2) return false;\n    if(a == 2) return true;\n   \
    \ if(a % 2 == 0) return false;\n    for(long i = 3; i <= sqrt(a); i += 2)\n  \
    \  {\n        if(a % i == 0) return false;\n    }\n    return true;\n}", "{\n\
    \    int i;\n    int j;\n    int k;\n    bool is_prime;\n    for (i = 2; i < a;\
    \ i++)\n    {\n        for (j = 2; j < a; j++)\n        {\n            for (k\
    \ = 2; k < a; k++)\n            {\n                if (i * j * k == a)\n     \
    \           {\n                    is_prime = true;\n                    for (int\
    \ l = 2; l < i; l++)\n                    {\n                        if (i % l\
    \ == 0)\n                        {\n                            is_prime = false;\n\
    \                            break;\n                        }\n             \
    \       }\n                    if (is_prime)\n                    {\n        \
    \                for (int l = 2; l < j; l++)\n                        {\n    \
    \                        if (j % l == 0)\n                            {\n    \
    \                            is_prime = false;\n                             \
    \   break;\n                            }\n                        }\n       \
    \                 if (is_prime)\n                        {\n                 \
    \           for (int l = 2; l < k; l++)\n                            {\n     \
    \                           if (k % l == 0)\n                                {\n\
    \                                    is_prime = false;\n                     \
    \               break;\n                                }\n                  \
    \          }\n                            if (is_prime)\n                    \
    \        {\n                                return true;\n                   \
    \         }\n                        }\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return false;\n}", "{\n    if (a <\
    \ 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}",
  "{\n    bool result = false;\n    if (a == 1)\n        return result;\n    if (a\
    \ == 2)\n        return true;\n    if (a == 3)\n        return true;\n    if (a\
    \ == 5)\n        return true;\n    if (a == 7)\n        return true;\n    if (a\
    \ == 11)\n        return true;\n    if (a == 13)\n        return true;\n    if\
    \ (a == 17)\n        return true;\n    if (a == 19)\n        return true;\n  \
    \  if (a == 23)\n        return true;\n    if (a == 29)\n        return true;\n\
    \    if (a == 31)\n        return true;\n    if (a == 37)\n        return true;\n\
    \    if (a == 41)\n        return true;\n    if (a == 43)\n        return true;\n\
    \    if (a == 47)\n        return true;\n    if (a == 53)\n        return true;\n\
    \    if (a == 59)\n        return true;\n    if (a == 61)\n        return true;\n\
    \    if (a == 67)\n        return true;\n    if (a == 71)\n        return true;\n\
    \    if (a == 73)\n        return true;\n    if (a == 79)\n        return true;\n\
    \    if (a == 83)\n        return true;\n    if (a == 89)\n        return true;\n\
    \    if (a == 97)\n        return true;\n    if (a % 2 == 0)\n        return false;\n\
    \    if (a % 3 == 0)\n        return false;\n    if (a % 5 == 0)\n        return\
    \ false;\n    if (a % 7 == 0)\n        return false;\n    if (a % 11 == 0)\n \
    \       return false;\n    if (a % 13 == 0)\n        return false;\n    if (a\
    \ % 17 == 0)\n        return false;\n    if (a % 19 == 0)\n        return false;\n\
    \    if (a % 23 == 0)\n        return false;\n    if (a % 29 == 0)\n        return\
    \ false;\n    if (a % 31 == 0)\n        return false;", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 6) return false;\n    for (long i = 2;\
    \ i <= sqrt(a); i++)\n    {\n        if (is_prime(i) && a % i == 0)\n        {\n\
    \            long b = a / i;\n            if (is_prime(b))\n            {\n  \
    \              for (long j = 2; j <= sqrt(b); j++)\n                {\n      \
    \              if (is_prime(j) && b % j == 0)\n                    {\n       \
    \                 long c = b / j;\n                        if (is_prime(c))\n\
    \                        {\n                            return true;\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n\
    \        if (n <= 1) return false;\n        if (n <= 3) return true;\n       \
    \ if (n % 2 == 0 || n % 3 == 0) return false;\n        for (long i = 5; i * i\
    \ <= n; i += 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n           \
    \     return false;\n        return true;\n    }\n    if (a <= 1) return false;\n\
    \    if (a <= 3) return true;\n    if (a % 2 == 0 || a % 3 == 0) return false;\n\
    \    for (long i = 5; i * i <= a; i += 6)\n        if (a % i == 0 || a % (i +\
    \ 2) == 0)\n            return false;\n    return true;\n}", "{\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    foreach(i; 0..primes.length)\n    {\n        if(a\
    \ % primes[i] == 0)\n        {\n            a /= primes[i];\n            i = 0;\n\
    \        }\n    }\n    return a == 1;\n}", "{\n    if (a == 1)\n        return\
    \ false;\n    if (a == 2)\n        return true;\n    if (a % 2 == 0)\n       \
    \ return false;\n    long i = 3;\n    long sqrt_a = sqrt(a);\n    while (i <=\
    \ sqrt_a)\n    {\n        if (a % i == 0)\n            return false;\n       \
    \ i += 2;\n    }\n    return true;\n}", "{\n    bool is_prime(long n)\n    {\n\
    \        if (n <= 1)\n            return false;\n        else if (n <= 3)\n  \
    \          return true;\n        else if (n % 2 == 0 || n % 3 == 0)\n        \
    \    return false;\n        long i = 5;\n        while (i * i <= n)\n        {\n\
    \            if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n\
    \            i = i + 6;\n        }\n        return true;\n    }\n    if (a <=\
    \ 1)\n        return false;\n    else if (a <= 3)\n        return true;\n    else\
    \ if (a % 2 == 0 || a % 3 == 0)\n        return false;\n    long i = 5;\n    while\
    \ (i * i <= a)\n    {\n        if (a % i == 0 || a % (i + 2) == 0)\n         \
    \   return false;\n        i = i + 6;\n    }\n    return true;\n}", "{\n    bool\
    \ result = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n\
    \    {\n        if(a % i == 0)\n        {\n            result = true;\n      \
    \      break;\n        }\n    }\n    return result;\n}", "{\n    int i = 2;\n\
    \    int count = 0;\n    while (i <= a)\n    {\n        if (a % i == 0)\n    \
    \    {\n            a /= i;\n            count++;\n        }\n        else\n \
    \       {\n            i++;\n        }\n    }\n    return count == 3;\n}", "{\n\
    \    if (a <= 1) return false;\n    if (a == 2) return true;\n    if (a % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n      \
    \  if (a % i == 0)\n            return false;\n    }\n    return true;\n}", "{\n\
    \    bool is_multiply_prime = false;\n    long[] primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    foreach(i; 0..25)\n    {\n        foreach(j; 0..25)\n        {\n        \
    \    foreach(k; 0..25)\n            {\n                if(primes[i] * primes[j]\
    \ * primes[k] == a)\n                {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    bool is_prime(long n) \n    {\n        if (n <= 1) \n            return\
    \ false;\n        if (n <= 3) \n            return true;\n        if (n % 2 ==\
    \ 0 || n % 3 == 0) \n            return false;\n        for (long i = 5; i * i\
    \ <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n      \
    \          return false;\n        return true;\n    }\n    if (a <= 1) \n    \
    \    return false;\n    if (a <= 3) \n        return true;\n    if (a % 2 == 0\
    \ || a % 3 == 0) \n        return false;\n    for (long i = 5; i * i <= a; i =\
    \ i + 6) \n        if (a % i == 0 || a % (i + 2) == 0) \n            return false;\n\
    \    return true;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    long[]\
    \ prime_factors = [];\n    for (long i = 0; i < primes.length; i++)\n    {\n \
    \       if (a % primes[i] == 0)\n        {\n            prime_factors ~= primes[i];\n\
    \            a /= primes[i];\n            i--;\n        }\n    }\n    if (prime_factors.length\
    \ == 3)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    bool result = false;\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach(long i; primes)\n    {\n        if(a % i == 0)\n        {\n\
    \            result = true;\n            break;\n        }\n    }\n    return\
    \ result;\n}", "{\n    // your code here\n    if(a <= 1)\n        return false;\n\
    \    if(a == 2 || a == 3 || a == 5)\n        return true;\n    if(a % 2 == 0)\n\
    \        return false;\n    if(a % 3 == 0)\n        return false;\n    if(a %\
    \ 5 == 0)\n        return false;\n    for(int i = 7; i <= sqrt(a); i += 2)\n \
    \   {\n        if(a % i == 0)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if (a == 1)\n        return false;\n    else if (a == 2)\n       \
    \ return true;\n    else if (a % 2 == 0)\n        return false;\n    else\n  \
    \  {\n        int i = 3;\n        while (i <= sqrt(a))\n        {\n          \
    \  if (a % i == 0)\n                return false;\n            i += 2;\n     \
    \   }\n        return true;\n    }\n}", "{\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n   \
    \         a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2)\n            return false;\n        if (n == 2)\n\
    \            return true;\n        if (n % 2 == 0)\n            return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n            if (n % i == 0)\n\
    \                return false;\n        return true;\n    }\n    if (a < 2)\n\
    \        return false;\n    if (a == 2)\n        return true;\n    if (a % 2 ==\
    \ 0)\n        return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    \
    \    if (a % i == 0)\n            return is_prime(i) && is_prime(a / i);\n   \
    \ return false;\n}", "{\n    int count = 0;\n    for (int i = 2; i <= a; i++)\n\
    \    {\n        if (a % i == 0)\n        {\n            count++;\n           \
    \ a /= i;\n            i--;\n        }\n    }\n    return count == 3;\n}", "{\n\
    \    bool isPrime = true;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long\
    \ p = 2;\n    long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n\
    \    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long\
    \ y = 2;\n    long z = 2;\n    long aa = 2;\n    long bb = 2;\n    long cc = 2;\n\
    \    long dd = 2;\n    long ee = 2;\n    long ff = 2;\n    long gg = 2;\n    long\
    \ hh = 2;\n    long ii = 2;\n    long jj = 2;\n    long kk = 2;\n    long ll =\
    \ 2;\n    long mm = 2;\n    long nn = 2;\n    long oo = 2;\n    long pp = 2;\n\
    \    long qq = 2;\n    long rr = 2;\n    long ss = 2;\n    long tt = 2;\n    long\
    \ uu = 2;\n    long vv = 2;\n    long ww = 2;\n    long xx = 2;\n    long yy =\
    \ 2;\n    long zz = 2;\n    long aaa = 2;\n    long bbb = 2;\n    long ccc = 2;\n\
    \    long ddd = 2;\n    long eee = 2;\n    long fff = 2;\n    long ggg = 2;\n\
    \    long hhh = 2;\n    long iii = 2;\n    long jjj = 2;\n    long kkk = 2;\n\
    \    long lll = 2;\n    long mmm = 2;\n    long nnn = 2;\n    long ooo = 2;\n\
    \    long ppp = 2;\n    long qqq = 2;\n    long rrr = 2;\n    long sss = 2;\n\
    \    long ttt = 2;\n    long uuu = 2;\n    long vvv = 2;\n   ", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1)\n            return false;\n        if (n ==\
    \ 2)\n            return true;\n        if (n % 2 == 0)\n            return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n            if (n % i == 0)\n\
    \                return false;\n        return true;\n    }\n    if (a <= 1)\n\
    \        return false;\n    if (a == 2)\n        return true;\n    if (a % 2 ==\
    \ 0)\n        return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    \
    \    if (a % i == 0)\n            return is_prime(i) && is_prime(a / i);\n   \
    \ return false;\n}", "{\n    if (a == 1) return false;\n    if (a == 2) return\
    \ true;\n    if (a == 3) return true;\n    if (a == 5) return true;\n    if (a\
    \ == 7) return true;\n    if (a == 11) return true;\n    if (a == 13) return true;\n\
    \    if (a == 17) return true;\n    if (a == 19) return true;\n    if (a == 23)\
    \ return true;\n    if (a == 29) return true;\n    if (a == 31) return true;\n\
    \    if (a == 37) return true;\n    if (a == 41) return true;\n    if (a == 43)\
    \ return true;\n    if (a == 47) return true;\n    if (a == 53) return true;\n\
    \    if (a == 59) return true;\n    if (a == 61) return true;\n    if (a == 67)\
    \ return true;\n    if (a == 71) return true;\n    if (a == 73) return true;\n\
    \    if (a == 79) return true;\n    if (a == 83) return true;\n    if (a == 89)\
    \ return true;\n    if (a == 97) return true;\n    return false;\n}", "{\n   \
    \ bool is_prime(long a)\n    {\n        if (a < 2) return false;\n        if (a\
    \ == 2) return true;\n        if (a % 2 == 0) return false;\n        for (long\
    \ i = 3; i <= sqrt(a); i += 2)\n        {\n            if (a % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    if (a < 6) return false;\n\
    \    if (a == 6) return true;\n    if (a % 2 == 0) return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) return is_multiply_prime(a / 3);\n    for (long i\
    \ = 5; i <= sqrt(a); i += 6)\n    {\n        if (a % i == 0) return is_multiply_prime(a\
    \ / i);\n        if (a % (i + 2) == 0) return is_multiply_prime(a / (i + 2));\n\
    \    }\n    return is_prime(a);\n}", "{\n    bool is_prime(long n)\n    {\n  \
    \      if (n < 2) return false;\n        for (long i = 2; i < n; i++)\n      \
    \  {\n            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    long num = a;\n    int count = 0;\n    for (long i = 2; i < num; i++)\n\
    \    {\n        if (is_prime(i) && num % i == 0)\n        {\n            num /=\
    \ i;\n            count++;\n            i--;\n        }\n    }\n    return count\
    \ == 3;\n}", "{\n    bool[] is_prime = new bool[a + 1];\n    is_prime[0] = false;\n\
    \    is_prime[1] = false;\n    foreach (i; 2 .. a + 1)\n        is_prime[i] =\
    \ true;\n    foreach (i; 2 .. a + 1)\n    {\n        if (is_prime[i])\n      \
    \  {\n            for (long j = i * i; j <= a; j += i)\n                is_prime[j]\
    \ = false;\n        }\n    }\n    foreach (i; 2 .. a + 1)\n    {\n        if (is_prime[i])\n\
    \        {\n            foreach (j; 2 .. a + 1)\n            {\n             \
    \   if (is_prime[j])\n                {\n                    foreach (k; 2 ..\
    \ a + 1)\n                    {\n                        if (is_prime[k])\n  \
    \                      {\n                            if (i * j * k == a)\n  \
    \                              return true;\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}", "{\n    if (a == 1)\n        return false;\n    if (a == 2)\n  \
    \      return true;\n    if (a == 3)\n        return true;\n    if (a == 5)\n\
    \        return true;\n    if (a == 7)\n        return true;\n    if (a == 11)\n\
    \        return true;\n    if (a == 13)\n        return true;\n    if (a == 17)\n\
    \        return true;\n    if (a == 19)\n        return true;\n    if (a == 23)\n\
    \        return true;\n    if (a == 29)\n        return true;\n    if (a == 31)\n\
    \        return true;\n    if (a == 37)\n        return true;\n    if (a == 41)\n\
    \        return true;\n    if (a == 43)\n        return true;\n    if (a == 47)\n\
    \        return true;\n    if (a == 53)\n        return true;\n    if (a == 59)\n\
    \        return true;\n    if (a == 61)\n        return true;\n    if (a == 67)\n\
    \        return true;\n    if (a == 71)\n        return true;\n    if (a == 73)\n\
    \        return true;\n    if (a == 79)\n        return true;\n    if (a == 83)\n\
    \        return true;\n    if (a == 89)\n        return true;\n    if (a == 97)\n\
    \        return true;\n    return false;\n}", "{\n    bool is_multiply_prime =\
    \ false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for (int i = 0;\
    \ i < prime_numbers.length; i++)\n    {\n        for (int j = 0; j < prime_numbers.length;\
    \ j++)\n        {\n            for (int k = 0; k < prime_numbers.length; k++)\n\
    \            {\n                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\
    \ == a)\n                {\n                    is_multiply_prime = true;\n  \
    \              }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    bool result = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   foreach(prime; primes)\n    {\n        if(a % prime == 0)\n        {\n   \
    \         a /= prime;\n            if(a == 1)\n            {\n               \
    \ result = true;\n                break;\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    // your code here\n    bool result = false;\n \
    \   long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n      \
    \  if(a % i == 0)\n        {\n            result = true;\n            break;\n\
    \        }\n    }\n    return result;\n}", "{\n    bool is_prime(long n) {\n \
    \       if (n <= 1) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    if (a <= 1) return false;\n    if (a == 2) return true;\n    if (a\
    \ % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a); i += 2) {\n    \
    \    if (a % i == 0) {\n            if (is_prime(i) && is_prime(a / i)) return\
    \ true;\n        }\n    }\n    return false;\n}", "{\n    bool is_prime(long a)\n\
    \    {\n        if (a < 2) return false;\n        if (a == 2) return true;\n \
    \       if (a % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(a);\
    \ i += 2)\n        {\n            if (a % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 6) return false;\n    for (long i = 2;\
    \ i <= a / 3; i++)\n    {\n        if (is_prime(i) && is_prime(a / i) && is_prime(a\
    \ / (i * (a / i)))) return true;\n    }\n    return false;\n}", "{\n    bool result\
    \ = false;\n    if (a > 0)\n    {\n        long[] primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \        long[] factors = [];\n        long i = 0;\n        while (a > 1)\n  \
    \      {\n            if (a % primes[i] == 0)\n            {\n               \
    \ factors ~= primes[i];\n                a /= primes[i];\n            }\n    \
    \        else\n            {\n                i++;\n            }\n        }\n\
    \        if (factors.length == 3)\n        {\n            result = true;\n   \
    \     }\n    }\n    return result;\n}", "{\n    bool result = false;\n    long\
    \ i = 2;\n    long j = 2;\n    long k = 2;\n    while (i < a)\n    {\n       \
    \ while (j < a)\n        {\n            while (k < a)\n            {\n       \
    \         if (i * j * k == a)\n                {\n                    result =\
    \ true;\n                    break;\n                }\n                k++;\n\
    \            }\n            j++;\n        }\n        i++;\n    }\n    return result;\n\
    }", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n\
    \        if(a % i == 0)\n        {\n            if(a / i == 1)\n            {\n\
    \                return true;\n            }\n            else\n            {\n\
    \                return is_multiply_prime(a / i);\n            }\n        }\n\
    \    }\n    return false;\n}", "{\n    long i;\n    long j;\n    long k;\n   \
    \ bool is_prime;\n    bool is_multiply_prime;\n    is_multiply_prime = false;\n\
    \    for (i = 2; i < a; i++)\n    {\n        is_prime = true;\n        for (j\
    \ = 2; j < i; j++)\n        {\n            if (i % j == 0)\n            {\n  \
    \              is_prime = false;\n                break;\n            }\n    \
    \    }\n        if (is_prime)\n        {\n            for (k = 2; k < a; k++)\n\
    \            {\n                is_prime = true;\n                for (j = 2;\
    \ j < k; j++)\n                {\n                    if (k % j == 0)\n      \
    \              {\n                        is_prime = false;\n                \
    \        break;\n                    }\n                }\n                if\
    \ (is_prime)\n                {\n                    if (a % (i * k) == 0)\n \
    \                   {\n                        is_multiply_prime = true;\n   \
    \                     break;\n                    }\n                }\n     \
    \       }\n        }\n    }\n    return is_multiply_prime;\n}", "{\n    bool result\
    \ = false;\n    int[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n \
    \   {\n        if(a % i == 0)\n        {\n            result = true;\n       \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    if (a == 1)\n\
    \        return false;\n    if (a == 2)\n        return true;\n    if (a % 2 ==\
    \ 0)\n        return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n\
    \        if (a % i == 0)\n            return false;\n    }\n    return true;\n\
    }", "{\n    bool is_prime(long n)\n    {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     foreach (i; 2 .. cast(long)sqrt(n) + 1)\n        {\n            if (n %\
    \ i == 0) return false;\n        }\n        return true;\n    }\n    bool is_multiply_prime(long\
    \ a)\n    {\n        if (a <= 1) return false;\n        if (a == 2) return true;\n\
    \        if (a % 2 == 0) return false;\n        foreach (i; 2 .. cast(long)sqrt(a)\
    \ + 1)\n        {\n            if (a % i == 0)\n            {\n              \
    \  if (is_prime(i) && is_prime(a / i))\n                {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    \    }\n    return is_multiply_prime(a);\n}", "{\n    int i = 2;\n    int j =\
    \ 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n   \
    \ int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac\
    \ = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n \
    \   int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al\
    \ = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n \
    \   int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au\
    \ = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n \
    \   int az = 0;\n    int ba = 0;\n    int bb = 0;\n    int bc = 0;\n    int bd\
    \ = 0;\n    int be = 0;\n    int bf = 0;\n    int bg = 0;\n    int bh = 0;\n \
    \   int bi = 0;\n    int bj = 0;\n    int bk = 0;\n    int bl = 0;\n    int bm\
    \ = 0;\n    int bn = 0;\n    int bo = 0;\n    int bp = 0;\n    int bq = 0;\n \
    \   int br = 0;\n    int bs = 0;\n    int bt = 0;\n    int bu = 0;\n    int bv\
    \ = 0;\n    int bw = 0;\n    int bx = 0;\n    int by = 0;\n    int bz", "{\n \
    \   bool is_multiply_prime = false;\n    int i = 2;\n    int count = 0;\n    while\
    \ (i <= a)\n    {\n        if (a % i == 0)\n        {\n            a /= i;\n \
    \           count++;\n        }\n        else\n        {\n            i++;\n \
    \       }\n    }\n    if (count == 3)\n    {\n        is_multiply_prime = true;\n\
    \    }\n    return is_multiply_prime;\n}", "{\n    bool is_prime(long n)\n   \
    \ {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i\
    \ += 2)\n        {\n            if (n % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n    long[] primes = new long[100];\n\
    \    long i = 0;\n    for (long j = 2; j < 100; j++)\n    {\n        if (is_prime(j))\n\
    \        {\n            primes[i] = j;\n            i++;\n        }\n    }\n \
    \   for (long j = 0; j < i; j++)\n    {\n        for (long k = 0; k < i; k++)\n\
    \        {\n            for (long l = 0; l < i; l++)\n            {\n        \
    \        if (primes[j] * primes[k] * primes[l] == a)\n                    return\
    \ true;\n            }\n        }\n    }\n    return false;\n}", "{\n    bool\
    \ result = false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i;\
    \ prime_numbers)\n    {\n        if(a % i == 0)\n        {\n            result\
    \ = true;\n        }\n    }\n    return result;\n}", "{\n    if (a <= 1)\n   \
    \     return false;\n    if (a == 2)\n        return true;\n    if (a % 2 == 0)\n\
    \        return false;\n    long limit = sqrt(a);\n    for (long i = 3; i <= limit;\
    \ i += 2)\n    {\n        if (a % i == 0)\n            return false;\n    }\n\
    \    return true;\n}", "{\n    bool result = false;\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n      \
    \  {\n            result = true;\n            break;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long\
    \ result = 0;\n    while (i < 100)\n    {\n        while (j < 100)\n        {\n\
    \            while (k < 100)\n            {\n                result = i * j *\
    \ k;\n                if (result == a)\n                {\n                  \
    \  return true;\n                }\n                k++;\n            }\n    \
    \        j++;\n        }\n        i++;\n    }\n    return false;\n}", "{\n   \
    \ bool is_prime(long n) {\n        if (n < 2) return false;\n        if (n ==\
    \ 2) return true;\n        if (n % 2 == 0) return false;\n        for (long i\
    \ = 3; i <= sqrt(n); i += 2) {\n            if (n % i == 0) return false;\n  \
    \      }\n        return true;\n    }\n    if (a < 2) return false;\n    if (a\
    \ == 2) return true;\n    if (a % 2 == 0) return false;\n    for (long i = 3;\
    \ i <= sqrt(a); i += 2) {\n        if (a % i == 0) {\n            if (is_prime(i)\
    \ && is_prime(a / i)) return true;\n        }\n    }\n    return false;\n}", "{\n\
    \    bool result = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long\
    \ i; primes)\n    {\n        if(a % i == 0)\n        {\n            result = true;\n\
    \            break;\n        }\n    }\n    return result;\n}", "{\n    if (a <=\
    \ 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    bool result = false;\n    if (a\
    \ == 2 || a == 3 || a == 5)\n        return true;\n    if (a % 2 == 0)\n     \
    \   return false;\n    if (a % 3 == 0)\n        return false;\n    if (a % 5 ==\
    \ 0)\n        return false;\n    for (int i = 2; i < a; i++)\n    {\n        if\
    \ (a % i == 0)\n        {\n            if (is_prime(i))\n            {\n     \
    \           if (is_prime(a / i))\n                {\n                    if (is_prime(a\
    \ / (a / i)))\n                    {\n                        result = true;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1)\n            return false;\n        else if (n\
    \ <= 3)\n            return true;\n        else if (n % 2 == 0 || n % 3 == 0)\n\
    \            return false;\n        else\n        {\n            for (long i =\
    \ 5; i * i <= n; i += 6)\n                if (n % i == 0 || n % (i + 2) == 0)\n\
    \                    return false;\n            return true;\n        }\n    }\n\
    \    bool is_multiply_prime(long a)\n    {\n        if (a <= 1)\n            return\
    \ false;\n        else if (a <= 3)\n            return true;\n        else if\
    \ (a % 2 == 0 || a % 3 == 0)\n            return false;\n        else\n      \
    \  {\n            for (long i = 5; i * i <= a; i += 6)\n                if (a\
    \ % i == 0 || a % (i + 2) == 0)\n                    return false;\n         \
    \   return true;\n        }\n    }\n    bool is_multiply_prime(long a)\n    {\n\
    \        if (a <= 1)\n            return false;\n        else if (a <= 3)\n  \
    \          return true;\n        else if (a % 2 == 0 || a % 3 == 0)\n        \
    \    return false;\n        else\n        {\n            for (long i = 5; i *\
    \ i <= a; i += 6)\n                if (a % i == 0 || a % (i + 2) == 0)\n     \
    \               return false;\n            return true;\n        }\n    }\n  \
    \  bool is_multiply_prime(long a)\n    {\n        if (a <= 1)\n            return\
    \ false;\n        else if (a <= 3)\n            return true;\n        else if\
    \ (a % 2 == 0 || a % 3 == 0)\n            return false;\n        else\n      \
    \  {\n            for (long i = 5; i * i <= a; i += 6)\n                if (a\
    \ % i == 0 || a % (i + 2) == 0)\n                    return false;\n         \
    \   return true;\n        }\n    }\n    bool is_mult", "{\n    bool is_multiply_prime\
    \ = false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; prime_numbers)\n\
    \    {\n        if(a % i == 0)\n        {\n            is_multiply_prime = true;\n\
    \        }\n    }\n    return is_multiply_prime;\n}", "{\n    long i = 2;\n  \
    \  long j = 2;\n    long k = 2;\n    long x = a;\n    long y = a;\n    long z\
    \ = a;\n    long count = 0;\n    long count2 = 0;\n    long count3 = 0;\n    long\
    \ count4 = 0;\n    long count5 = 0;\n    long count6 = 0;\n    long count7 = 0;\n\
    \    long count8 = 0;\n    long count9 = 0;\n    long count10 = 0;\n    long count11\
    \ = 0;\n    long count12 = 0;\n    long count13 = 0;\n    long count14 = 0;\n\
    \    long count15 = 0;\n    long count16 = 0;\n    long count17 = 0;\n    long\
    \ count18 = 0;\n    long count19 = 0;\n    long count20 = 0;\n    long count21\
    \ = 0;\n    long count22 = 0;\n    long count23 = 0;\n    long count24 = 0;\n\
    \    long count25 = 0;\n    long count26 = 0;\n    long count27 = 0;\n    long\
    \ count28 = 0;\n    long count29 = 0;\n    long count30 = 0;\n    long count31\
    \ = 0;\n    long count32 = 0;\n    long count33 = 0;\n    long count34 = 0;\n\
    \    long count35 = 0;\n    long count36 = 0;\n    long count37 = 0;\n    long\
    \ count38 = 0;\n    long count39 = 0;\n    long count40 = 0;\n    long count41\
    \ = 0;\n    long count42 = 0;\n    long count43 = 0;\n    long count44 = 0;\n\
    \    long count45 = 0;\n    long count46 = 0;\n    long count47 = 0;\n    long\
    \ count48 = 0;\n    long count49 = 0;\n    long count50 = 0;\n    long count51\
    \ = 0;\n    long count52 = 0;\n    long count53 = 0;\n    long count54 = 0;\n\
    \    long count55 = 0;\n    long count56 = 0;\n    long count57 = 0;\n    long\
    \ count58 = 0;\n    long count59", "{\n    // your code here\n    int i = 2;\n\
    \    int count = 0;\n    while(a != 1)\n    {\n        if(a % i == 0)\n      \
    \  {\n            a /= i;\n            count++;\n        }\n        else\n   \
    \     {\n            i++;\n        }\n    }\n    if(count == 3)\n    {\n     \
    \   return true;\n    }\n    else\n    {\n        return false;\n    }\n}", "{\n\
    \    long i = 2;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long\
    \ ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai =\
    \ 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n\
    \    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long\
    \ ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av =\
    \ 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n\
    \    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long\
    \ be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi =\
    \ 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n\
    \    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long\
    \ br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv =\
    \ 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n\
    \    bool result = false;\n    if (a == 1)\n        return result;\n    if (a\
    \ == 2)\n        return true;\n    long b = a;\n    long c = 0;\n    long d =\
    \ 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n   \
    \ long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m =\
    \ 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n   \
    \ long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v =\
    \ 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n   \
    \ long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long\
    \ ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai =\
    \ 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n\
    \    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long\
    \ ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av =\
    \ 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n\
    \    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long\
    \ be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi =\
    \ 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n\
    \    long bn = 0;\n    long bo = 0;", "{\n    int count = 0;\n    for (int i =\
    \ 2; i <= a; i++)\n    {\n        if (a % i == 0)\n        {\n            count++;\n\
    \            a /= i;\n            i--;\n        }\n    }\n    return count ==\
    \ 3;\n}", "{\n    bool result = false;\n    long[] primeNumbers = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    for (int i = 0; i < primeNumbers.length; i++)\n    {\n       \
    \ for (int j = 0; j < primeNumbers.length; j++)\n        {\n            for (int\
    \ k = 0; k < primeNumbers.length; k++)\n            {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a)\n                {\n             \
    \       result = true;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <=\
    \ 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0)\
    \ return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n \
    \           if (n % i == 0)\n                return false;\n        }\n      \
    \  return true;\n    }\n    long n = a;\n    long i = 2;\n    while (n > 1)\n\
    \    {\n        if (is_prime(i) && n % i == 0)\n        {\n            n /= i;\n\
    \            i = 2;\n        }\n        else\n            i++;\n    }\n    return\
    \ n == 1;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long\
    \ temp = a;\n    bool is_prime = true;\n    bool is_multiply_prime = false;\n\
    \    while (i < temp)\n    {\n        if (temp % i == 0)\n        {\n        \
    \    temp = temp / i;\n            j = 2;\n            while (j < temp)\n    \
    \        {\n                if (temp % j == 0)\n                {\n          \
    \          temp = temp / j;\n                    k = 2;\n                    while\
    \ (k < temp)\n                    {\n                        if (temp % k == 0)\n\
    \                        {\n                            is_prime = false;\n  \
    \                          break;\n                        }\n               \
    \         k++;\n                    }\n                    if (is_prime)\n   \
    \                 {\n                        is_multiply_prime = true;\n     \
    \                   break;\n                    }\n                }\n       \
    \         j++;\n            }\n            if (is_multiply_prime)\n          \
    \  {\n                break;\n            }\n        }\n        i++;\n    }\n\
    \    return is_multiply_prime;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    bool isPrime = false;\n    foreach(i; primes)\n    {\n        if(a % i ==\
    \ 0)\n        {\n            isPrime = true;\n            break;\n        }\n\
    \    }\n    return isPrime;\n}", "{\n    if (a == 1) return false;\n    if (a\
    \ == 2) return true;\n    if (a == 3) return true;\n    if (a == 5) return true;\n\
    \    if (a == 7) return true;\n    if (a == 11) return true;\n    if (a == 13)\
    \ return true;\n    if (a == 17) return true;\n    if (a == 19) return true;\n\
    \    if (a == 23) return true;\n    if (a == 29) return true;\n    if (a == 31)\
    \ return true;\n    if (a == 37) return true;\n    if (a == 41) return true;\n\
    \    if (a == 43) return true;\n    if (a == 47) return true;\n    if (a == 53)\
    \ return true;\n    if (a == 59) return true;\n    if (a == 61) return true;\n\
    \    if (a == 67) return true;\n    if (a == 71) return true;\n    if (a == 73)\
    \ return true;\n    if (a == 79) return true;\n    if (a == 83) return true;\n\
    \    if (a == 89) return true;\n    if (a == 97) return true;\n    return false;\n\
    }", "{\n    int count = 0;\n    for (int i = 2; i <= a; i++)\n    {\n        if\
    \ (a % i == 0)\n        {\n            count++;\n            a /= i;\n       \
    \     i--;\n        }\n    }\n    return count == 3;\n}", "{\n    bool result\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n \
    \   {\n        if(a % i == 0)\n        {\n            result = true;\n       \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 6) return false;\n    if (a == 6) return\
    \ true;\n    if (a % 2 == 0)\n    {\n        if (is_prime(a / 2)) return true;\n\
    \        if (is_prime(a / 3)) return true;\n        if (is_prime(a / 5)) return\
    \ true;\n    }\n    if (a % 3 == 0)\n    {\n        if (is_prime(a / 3)) return\
    \ true;\n        if (is_prime(a / 5)) return true;\n    }\n    if (a % 5 == 0)\n\
    \    {\n        if (is_prime(a / 5)) return true;\n    }\n    return false;\n}",
  "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return true;\n}",
  "{\n    bool is_prime(long n)\n    {\n        if (n <= 1) return false;\n      \
    \  if (n <= 3) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        for (long i = 5; i * i <= n; i += 6)\n            if (n % i == 0 || n\
    \ % (i + 2) == 0)\n                return false;\n        return true;\n    }\n\
    \    if (a <= 1) return false;\n    if (a <= 3) return true;\n    if (a % 2 ==\
    \ 0 || a % 3 == 0) return false;\n    for (long i = 5; i * i <= a; i += 6)\n \
    \       if (a % i == 0 || a % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}", "{\n    if (a < 6) return false;\n    if (a % 2 == 0) {\n       \
    \ if (a % 3 == 0) return true;\n        else return false;\n    }\n    if (a %\
    \ 3 == 0) {\n        if (a % 5 == 0) return true;\n        else return false;\n\
    \    }\n    if (a % 5 == 0) {\n        if (a % 7 == 0) return true;\n        else\
    \ return false;\n    }\n    return false;\n}", "{\n    long i = 2;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n\
    \    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (long i = 5;\
    \ i * i <= n; i += 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n     \
    \           return false;\n        return true;\n    }\n    if (a <= 1) return\
    \ false;\n    if (a <= 3) return true;\n    if (a % 2 == 0 || a % 3 == 0) return\
    \ false;\n    for (long i = 5; i * i <= a; i += 6)\n        if (a % i == 0 ||\
    \ a % (i + 2) == 0)\n            return false;\n    return true;\n}", "{\n   \
    \ // your code here\n    if(a == 1)\n        return false;\n    if(a == 2)\n \
    \       return true;\n    if(a % 2 == 0)\n        return false;\n    for(int i\
    \ = 3; i <= sqrt(a); i += 2)\n    {\n        if(a % i == 0)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    if (a <= 1) return false;\n   \
    \ if (a == 2) return true;\n    if (a % 2 == 0) return false;\n    for (long i\
    \ = 3; i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) return false;\n\
    \    }\n    return true;\n}", "{\n    if (a <= 1) return false;\n    if (a ==\
    \ 2) return true;\n    if (a % 2 == 0) return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int i = 2;\n    while (i <= a)\n    {\n\
    \        if (a % i == 0)\n        {\n            a /= i;\n            if (a ==\
    \ 1)\n                return true;\n        }\n        else\n            i++;\n\
    \    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 2;\n    long\
    \ k = 2;\n    long result = 0;\n    while (i < a)\n    {\n        while (j < a)\n\
    \        {\n            while (k < a)\n            {\n                result =\
    \ i * j * k;\n                if (result == a)\n                {\n          \
    \          return true;\n                }\n                k++;\n           \
    \ }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}",
  "{\n    bool result = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long\
    \ prime; primes)\n    {\n        if(a % prime == 0)\n        {\n            result\
    \ = true;\n            break;\n        }\n    }\n    return result;\n}", "{\n\
    \    int[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    int i = 0;\n    while (a > 1)\n  \
    \  {\n        if (a % primes[i] == 0)\n        {\n            a /= primes[i];\n\
    \        }\n        else\n        {\n            i++;\n        }\n    }\n    return\
    \ i < 3;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    auto result =\
    \ true;\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n  \
    \          a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n    bool result\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n \
    \   {\n        if(a % i == 0)\n        {\n            result = true;\n       \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    if (a == 1) return\
    \ false;\n    if (a == 2) return true;\n    if (a == 3) return true;\n    if (a\
    \ == 5) return true;\n    if (a == 7) return true;\n    if (a == 11) return true;\n\
    \    if (a == 13) return true;\n    if (a == 17) return true;\n    if (a == 19)\
    \ return true;\n    if (a == 23) return true;\n    if (a == 29) return true;\n\
    \    if (a == 31) return true;\n    if (a == 37) return true;\n    if (a == 41)\
    \ return true;\n    if (a == 43) return true;\n    if (a == 47) return true;\n\
    \    if (a == 53) return true;\n    if (a == 59) return true;\n    if (a == 61)\
    \ return true;\n    if (a == 67) return true;\n    if (a == 71) return true;\n\
    \    if (a == 73) return true;\n    if (a == 79) return true;\n    if (a == 83)\
    \ return true;\n    if (a == 89) return true;\n    if (a == 97) return true;\n\
    \    if (a == 6) return true;\n    if (a == 10) return true;\n    if (a == 14)\
    \ return true;\n    if (a == 15) return true;\n    if (a == 21) return true;\n\
    \    if (a == 22) return true;\n    if (a == 33) return true;\n    if (a == 34)\
    \ return true;\n    if (a == 35) return true;\n    if (a == 38) return true;\n\
    \    if (a == 39) return true;\n    if (a == 46) return true;\n    if (a == 51)\
    \ return true;\n    if (a == 55) return true;\n    if (a == 57) return true;\n\
    \    if (a == 62) return true;\n    if (a == 65) return true;\n    if (a == 69)\
    \ return true;\n    if (a == 74) return true;\n    if (a == 77) return true;\n\
    \    if (", "{\n    if (a < 6)\n        return false;\n    else if (a == 6)\n\
    \        return true;\n    else\n    {\n        long b = a;\n        long c =\
    \ a;\n        long d = a;\n        long e = a;\n        long f = a;\n        long\
    \ g = a;\n        long h = a;\n        long i = a;\n        long j = a;\n    \
    \    long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = a;\n\
    \        long z = a;\n        long aa = a;\n        long ab = a;\n        long\
    \ ac = a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n\
    \        long ag = a;\n        long ah = a;\n        long ai = a;\n        long\
    \ aj = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n\
    \        long an = a;\n        long ao = a;\n        long ap = a;\n        long\
    \ aq = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n\
    \        long au = a;\n        long av = a;\n        long aw = a;\n        long\
    \ ax = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n\
    \        long bb = a;\n        long bc = a;\n        long bd = a;\n        long\
    \ be = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n\
    \        long bi = a;\n        long bj = a;\n        long bk = a;\n        long\
    \ bl = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;",
  "{\n    bool is_prime(long n)\n    {\n        if (n < 2)\n            return false;\n\
    \        for (long i = 2; i < n; i++)\n            if (n % i == 0)\n         \
    \       return false;\n        return true;\n    }\n    for (long i = 2; i < a;\
    \ i++)\n        if (is_prime(i) && a % i == 0)\n        {\n            long b\
    \ = a / i;\n            for (long j = 2; j < b; j++)\n                if (is_prime(j)\
    \ && b % j == 0)\n                {\n                    long c = b / j;\n   \
    \                 if (is_prime(c))\n                        return true;\n   \
    \             }\n        }\n    return false;\n}", "{\n    import std.math;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.typecons;\n\
    \    import std.array;\n    import std.conv;\n    import std.math;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std.typecons;\n    import\
    \ std.array;\n    import std.conv;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.typecons;\n    import std.array;\n\
    \    import std.conv;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.conv;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.typecons;\n    import std.array;\n    import std.conv;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.typecons;\n\
    \    import std.array;\n    import std.conv;\n    import std.math;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std.typecons;\n    import\
    \ std.array;\n    import std.conv;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.typecons;\n    import std.array;\n\
    \    import std.conv;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.conv;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.typecons;\n    import std.array;\n    import std.conv;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.typecons;\n\
    \    import std.array;\n    import std.conv;\n    import std.math;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std", "{\n    bool result\
    \ = false;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    while(i < a)\n\
    \    {\n        while(j < a)\n        {\n            while(k < a)\n          \
    \  {\n                if(i * j * k == a)\n                {\n                \
    \    result = true;\n                    break;\n                }\n         \
    \       k++;\n            }\n            j++;\n        }\n        i++;\n    }\n\
    \    return result;\n}", "{\n    bool result = false;\n    long[] primes = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n  \
    \      {\n            result = true;\n            break;\n        }\n    }\n \
    \   return result;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <=\
    \ 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0 ||\
    \ n % 3 == 0) return false;\n        for (long i = 5; i * i <= n; i += 6)\n  \
    \          if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n\
    \        return true;\n    }\n    if (a <= 1) return false;\n    if (a <= 3) return\
    \ true;\n    if (a % 2 == 0 || a % 3 == 0) return false;\n    for (long i = 5;\
    \ i * i <= a; i += 6)\n        if (a % i == 0 || a % (i + 2) == 0)\n         \
    \   return false;\n    return true;\n}", "{\n    bool is_prime(long n)\n    {\n\
    \        if (n < 2) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n\
    \        {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n    }\n    if (a < 6) return false;\n    if (a % 2 == 0)\n    {\n   \
    \     if (is_prime(a / 2)) return true;\n        if (is_prime(a / 3)) return true;\n\
    \        if (is_prime(a / 5)) return true;\n    }\n    if (a % 3 == 0)\n    {\n\
    \        if (is_prime(a / 3)) return true;\n        if (is_prime(a / 5)) return\
    \ true;\n    }\n    if (a % 5 == 0)\n    {\n        if (is_prime(a / 5)) return\
    \ true;\n    }\n    return false;\n}", "{\n    bool result = false;\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime; primes)\n    {\n     \
    \   if(a % prime == 0)\n        {\n            a /= prime;\n            if(a ==\
    \ 1)\n            {\n                result = true;\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    int[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    int i = 0;\n    while (a != 1)\n    {\n        if\
    \ (a % primes[i] == 0)\n        {\n            a /= primes[i];\n        }\n  \
    \      else\n        {\n            i++;\n        }\n    }\n    return i < 3;\n\
    }", "{\n    long i = 2;\n    long j = a;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz",
  "{\n    bool is_prime(long n)\n    {\n        if (n <= 1)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \       if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a <= 1)\n        return false;\n    if (a == 2)\n        return\
    \ true;\n    if (a % 2 == 0)\n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n        if (a % i == 0)\n            return is_prime(i) &&\
    \ is_prime(a / i);\n    return false;\n}", "{\n    if (a < 6)\n        return\
    \ false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a / 2);\n    if\
    \ (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n\
    \        return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool\
    \ is_prime(long n)\n    {\n        if (n <= 1) return false;\n        if (n ==\
    \ 2) return true;\n        if (n % 2 == 0) return false;\n        foreach (i;\
    \ 2 .. n)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    foreach (i; 2 .. a)\n    {\n        if (is_prime(i)\
    \ && a % i == 0)\n        {\n            foreach (j; 2 .. a)\n            {\n\
    \                if (is_prime(j) && a % j == 0 && i != j)\n                {\n\
    \                    foreach (k; 2 .. a)\n                    {\n            \
    \            if (is_prime(k) && a % k == 0 && i != k && j != k)\n            \
    \            {\n                            return true;\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if\
    \ (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2\
    \ == 0) return false;\n        foreach (i; 2 .. (int)sqrt(n))\n        {\n   \
    \         if (n % i == 0) return false;\n        }\n        return true;\n   \
    \ }\n    foreach (i; 2 .. a)\n    {\n        if (is_prime(i) && a % i == 0)\n\
    \        {\n            long b = a / i;\n            foreach (j; 2 .. b)\n   \
    \         {\n                if (is_prime(j) && b % j == 0)\n                {\n\
    \                    long c = b / j;\n                    if (is_prime(c))\n \
    \                   {\n                        return true;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return false;\n\
    }", "{\n    bool is_multiply_prime = false;\n    long a_copy = a;\n    long i\
    \ = 2;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n \
    \   long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw =", "{\n    int[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    int[] factors = [];\n\
    \    int i = 0;\n    while (a > 1)\n    {\n        if (a % primes[i] == 0)\n \
    \       {\n            a /= primes[i];\n            factors ~= primes[i];\n  \
    \      }\n        else\n        {\n            i++;\n        }\n    }\n    return\
    \ factors.length == 3;\n}", "{\n    int i = 2;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n\
    \    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int\
    \ fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj\
    \ = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n\
    \    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int\
    \ sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www\
    \ = 0;\n    int", "{\n    bool is_prime(long n)\n    {\n        if (n < 2)\n \
    \           return false;\n        if (n == 2)\n            return true;\n   \
    \     if (n % 2 == 0)\n            return false;\n        for (long i = 3; i <=\
    \ sqrt(n); i += 2)\n            if (n % i == 0)\n                return false;\n\
    \        return true;\n    }\n    if (a < 2)\n        return false;\n    if (a\
    \ == 2)\n        return true;\n    if (a % 2 == 0)\n        return false;\n  \
    \  for (long i = 3; i <= sqrt(a); i += 2)\n        if (a % i == 0)\n         \
    \   return is_prime(i) && is_prime(a / i);\n    return false;\n}", "{\n    bool\
    \ is_prime(long n) \n    {\n        if (n <= 1) \n            return false;\n\
    \        if (n == 2) \n            return true;\n        if (n % 2 == 0) \n  \
    \          return false;\n        for (long i = 3; i <= sqrt(n); i += 2) \n  \
    \          if (n % i == 0) \n                return false;\n        return true;\n\
    \    }\n    if (a <= 1) \n        return false;\n    if (a == 2) \n        return\
    \ true;\n    if (a % 2 == 0) \n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2) \n        if (a % i == 0 && is_prime(i) && is_prime(a / i))\
    \ \n            return true;\n    return false;\n}", "{\n    bool isPrime(long\
    \ n)\n    {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (long i = 5;\
    \ i * i <= n; i += 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n     \
    \           return false;\n        return true;\n    }\n    if (a <= 1) return\
    \ false;\n    if (a <= 3) return true;\n    if (a % 2 == 0 || a % 3 == 0) return\
    \ false;\n    for (long i = 5; i * i <= a; i += 6)\n        if (a % i == 0 ||\
    \ a % (i + 2) == 0)\n            return false;\n    return true;\n}", "{\n   \
    \ bool is_prime(long n)\n    {\n        if (n <= 1) return false;\n        if\
    \ (n == 2) return true;\n        if (n % 2 == 0) return false;\n        for (long\
    \ i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0)\n     \
    \           return false;\n        }\n        return true;\n    }\n    if (a <=\
    \ 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \        {\n            if (is_prime(i) && is_prime(a / i))\n                return\
    \ true;\n        }\n    }\n    return false;\n}", "{\n    int count = 0;\n   \
    \ for (int i = 2; i <= a; i++)\n    {\n        if (a % i == 0)\n        {\n  \
    \          count++;\n            a /= i;\n            i--;\n        }\n    }\n\
    \    return count == 3;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n           \
    \ a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n    int i;\n    int j;\n\
    \    int k;\n    int count = 0;\n    for (i = 2; i < a; i++)\n    {\n        for\
    \ (j = 2; j < a; j++)\n        {\n            for (k = 2; k < a; k++)\n      \
    \      {\n                if (i * j * k == a)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    if\
    \ (count == 1)\n    {\n        return true;\n    }\n    else\n    {\n        return\
    \ false;\n    }\n}", "{\n    int i = 2;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n\
    \    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int\
    \ fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj\
    \ = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n\
    \    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int\
    \ sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www\
    \ = 0;\n    int", "{\n    bool is_prime(long n)\n    {\n        if (n < 2) return\
    \ false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n\
    \ % i == 0) return false;\n        }\n        return true;\n    }\n    if (a <\
    \ 2) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \        {\n            if (is_prime(i) && is_prime(a / i)) return true;\n   \
    \     }\n    }\n    return false;\n}", "{\n    bool is_multiply_prime = false;\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(prime; primes)\n    {\n\
    \        if(a % prime == 0)\n        {\n            is_multiply_prime = true;\n\
    \            break;\n        }\n    }\n    return is_multiply_prime;\n}", "{\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long result = 0;\n   \
    \ while (i < a)\n    {\n        while (j < a)\n        {\n            while (k\
    \ < a)\n            {\n                result = i * j * k;\n                if\
    \ (result == a)\n                {\n                    return true;\n       \
    \         }\n                k++;\n            }\n            j++;\n        }\n\
    \        i++;\n    }\n    return false;\n}", "{\n    bool result = false;\n  \
    \  long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n    {\n      \
    \  if(a % i == 0)\n        {\n            a /= i;\n            if(a == 1)\n  \
    \          {\n                result = true;\n                break;\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    if (a < 3) return false;\n\
    \    if (a == 3) return true;\n    if (a % 2 == 0) return false;\n    if (a %\
    \ 3 == 0) return false;\n    if (a % 5 == 0) return false;\n    if (a % 7 == 0)\
    \ return false;\n    if (a % 11 == 0) return false;\n    if (a % 13 == 0) return\
    \ false;\n    if (a % 17 == 0) return false;\n    if (a % 19 == 0) return false;\n\
    \    if (a % 23 == 0) return false;\n    if (a % 29 == 0) return false;\n    if\
    \ (a % 31 == 0) return false;\n    if (a % 37 == 0) return false;\n    if (a %\
    \ 41 == 0) return false;\n    if (a % 43 == 0) return false;\n    if (a % 47 ==\
    \ 0) return false;\n    if (a % 53 == 0) return false;\n    if (a % 59 == 0) return\
    \ false;\n    if (a % 61 == 0) return false;\n    if (a % 67 == 0) return false;\n\
    \    if (a % 71 == 0) return false;\n    if (a % 73 == 0) return false;\n    if\
    \ (a % 79 == 0) return false;\n    if (a % 83 == 0) return false;\n    if (a %\
    \ 89 == 0) return false;\n    if (a % 97 == 0) return false;\n    return true;\n\
    }", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    long[] prime_factors = [];\n\
    \    long i = 0;\n    while (a > 1)\n    {\n        if (a % primes[i] == 0)\n\
    \        {\n            prime_factors ~= primes[i];\n            a /= primes[i];\n\
    \        }\n        else\n        {\n            i++;\n        }\n    }\n    if\
    \ (prime_factors.length == 3)\n    {\n        return true;\n    }\n    else\n\
    \    {\n        return false;\n    }\n}", "{\n    if (a <= 1)\n        return\
    \ false;\n    if (a == 2)\n        return true;\n    if (a % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if\
    \ (a % i == 0)\n            return false;\n    }\n    return true;\n}", "{\n \
    \   bool is_prime(long n)\n    {\n        if (n < 2)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \       if (n % i == 0)\n                return false;\n        return true;\n\
    \    }\n    if (a < 2)\n        return false;\n    if (a == 2)\n        return\
    \ true;\n    if (a % 2 == 0)\n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n        if (a % i == 0)\n            if (is_prime(i) && is_prime(a\
    \ / i))\n                return true;\n    return false;\n}", "{\n    bool result\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime; primes)\n\
    \    {\n        if(a % prime == 0)\n        {\n            result = true;\n  \
    \          a /= prime;\n        }\n    }\n    return result;\n}", "{\n    int[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97];\n    int i = 0;\n    while (a > 1)\n    {\n   \
    \     if (a % primes[i] == 0)\n        {\n            a /= primes[i];\n      \
    \  }\n        else\n        {\n            i++;\n        }\n    }\n    return\
    \ i == 3;\n}", "{\n    bool result = false;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long temp = 0;\n    while (i < a)\n    {\n        while\
    \ (j < a)\n        {\n            while (k < a)\n            {\n             \
    \   temp = i * j * k;\n                if (temp == a)\n                {\n   \
    \                 result = true;\n                    break;\n               \
    \ }\n                k++;\n            }\n            if (result)\n          \
    \  {\n                break;\n            }\n            j++;\n        }\n   \
    \     if (result)\n        {\n            break;\n        }\n        i++;\n  \
    \  }\n    return result;\n}", "{\n    if (a < 6) return false;\n    if (a % 2\
    \ == 0) return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0) return is_multiply_prime(a / 5);\n    if (a % 7 ==\
    \ 0) return is_multiply_prime(a / 7);\n    if (a % 11 == 0) return is_multiply_prime(a\
    \ / 11);\n    if (a % 13 == 0) return is_multiply_prime(a / 13);\n    if (a %\
    \ 17 == 0) return is_multiply_prime(a / 17);\n    if (a % 19 == 0) return is_multiply_prime(a\
    \ / 19);\n    if (a % 23 == 0) return is_multiply_prime(a / 23);\n    if (a %\
    \ 29 == 0) return is_multiply_prime(a / 29);\n    if (a % 31 == 0) return is_multiply_prime(a\
    \ / 31);\n    if (a % 37 == 0) return is_multiply_prime(a / 37);\n    if (a %\
    \ 41 == 0) return is_multiply_prime(a / 41);\n    if (a % 43 == 0) return is_multiply_prime(a\
    \ / 43);\n    if (a % 47 == 0) return is_multiply_prime(a / 47);\n    if (a %\
    \ 53 == 0) return is_multiply_prime(a / 53);\n    if (a % 59 == 0) return is_multiply_prime(a\
    \ / 59);\n    if (a % 61 == 0) return is_multiply_prime(a / 61);\n    if (a %\
    \ 67 == 0) return is_multiply_prime(a / 67);\n    if (a % 71 == 0) return is_multiply_prime(a\
    \ / 71);\n    if (a % 73 == 0) return is_multiply_prime(a / 73);\n    if (a %\
    \ 79 == 0) return is_multiply", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n           \
    \ a /= i;\n        }\n    }\n    return a == 1;\n}", "{\n    import std.algorithm\
    \ : all;\n    import std.math : isPrime;\n    import std.range : iota;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

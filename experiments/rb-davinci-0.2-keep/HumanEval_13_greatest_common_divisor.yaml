name: HumanEval_13_greatest_common_divisor
language: ruby
prompt: "# Return a greatest common divisor of two integers a and b\n# >>> greatest_common_divisor(3,\
  \ 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n# 5\ndef greatest_common_divisor(a,\
  \ b)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_greatest_common_divisor\n\
  \    candidate = method(:greatest_common_divisor)\n    assert_equal(1, candidate.call(3,\
  \ 7))\n    assert_equal(5, candidate.call(10, 15))\n    assert_equal(7, candidate.call(49,\
  \ 14))\n    assert_equal(12, candidate.call(144, 60))\n  end\nend\n"
completions: ["  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n   \
    \ return greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement\
    \ me!\nend", "  # TODO: return the greatest common divisor of a and b\n  if a\
    \ == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n\
    \  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a == b\n\
    \    return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n \
    \ else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  # your code\
    \ here\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  # TODO: return the greatest common divisor of\
    \ a and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement me\n\
    end", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  # TODO: return the greatest common divisor of a and b\n\
    \  if b == 0\n    return a\n  else\n    return greatest_common_divisor(b, a %\
    \ b)\n  end\nend", "  # TODO: return the greatest common divisor of a and b\n\
    \  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n  end\nend",
  "  a, b = b, a if a < b\n  while b > 0\n    a, b = b, a % b\n  end\n  a\nend", " \
    \ if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: Return the greatest\
    \ common divisor of two integers\n  if a == b\n    return a\n  elsif a > b\n \
    \   return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  # TODO: return the greatest common divisor of a and b\n\
    \  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a - b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  #\
    \ TODO: return the greatest common divisor of a and b\n  # Hint: use Euclidean\
    \ algorithm\n  # http://en.wikipedia.org/wiki/Euclidean_algorithm\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \  # http://www.youtube.com/watch?v=QxPQ_ERp5Jc\n  # http://www.youtube.com/watch?v=JUzYl1TYMc",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: implement me\nend",
  "  # TODO: implement me\nend", "  # TODO: your code goes here\nend", "  # TODO:\
    \ implement me\nend", "  # TODO: implement this method\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  if a == b\n    return a\n  else\n    if a > b\n\
    \      a = a - b\n      greatest_common_divisor(a, b)\n    else\n      b = b -\
    \ a\n      greatest_common_divisor(a, b)\n    end\n  end\nend", "  if a == b\n\
    \    return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n \
    \ else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  if b ==\
    \ 0\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\n\
    end", "  # TODO: return the greatest common divisor of a and b\n  # >>> greatest_common_divisor(3,\
    \ 5)\n  # 1\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15", "  # TODO: implement me\nend", "  if a == b\n    a\n  elsif a > b\n   \
    \ greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a, b\
    \ - a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  # TODO: return the greatest common divisor of a and b\n  if\
    \ a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a - b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  #\
    \ TODO: implement me\nend", "  # TODO: implement me\nend", "  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n   \
    \ return greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement\
    \ me\nend", "  if b == 0\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  if a == b\n    a\n  elsif a\
    \ > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a < b\n    a, b = b, a\n  end\n  while b != 0\n \
    \   a, b = b, a % b\n  end\n  a\nend", "  # TODO: implement me\nend", "  if a\
    \ == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a - b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  #\
    \ TODO: implement me\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO:\
    \ Return the greatest common divisor of two integers\n  # a and b\n  if a == b\n\
    \    return a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n\
    \    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: implement\
    \ me\nend", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a\
    \ % b)\n  end\nend", "  # TODO: return a greatest common divisor of two integers\
    \ a and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  a, b\
    \ = b, a if a < b\n  return a if b == 0\n  greatest_common_divisor(b, a % b)\n\
    end", "  return a if b == 0\n  greatest_common_divisor(b, a % b)\nend", "  if\
    \ a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a -\
    \ b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend", " \
    \ if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement this method\n  if a == b\n    return a\n  elsif a > b\n   \
    \ return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n  end\n\
    end", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n\
    \  end\nend", "  # TODO: implement me\nend", "  if a == b\n    return a\n  elsif\
    \ a > b\n    return greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: implement me\nend", "  if a == b\n    a\n  elsif\
    \ a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: return the greatest common divisor of a and\
    \ b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ implement this method\n  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  a, b = b, a if a < b\n  return a if b == 0\n  greatest_common_divisor(b, a %\
    \ b)\nend", "  # TODO: Return the greatest common divisor of two integers\n  if\
    \ a % b == 0\n    return b\n  else\n    return greatest_common_divisor(b, a %\
    \ b)\n  end\nend", "  # TODO: implement me\nend", "  if a == b\n    a\n  elsif\
    \ a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # Your code here\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  # TODO: return the greatest common divisor of a\
    \ and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: Return the greatest\
    \ common divisor of two integers\n  if a == b\n    return a\n  elsif a > b\n \
    \   return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if b == 0\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  # TODO: return the greatest common divisor of a and\
    \ b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement me\n\
    end", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n\
    \  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n  \
    \  return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n\
    \    return greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n   \
    \ return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n\
    \    return greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement\
    \ this method\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  a, b\
    \ = b, a if a < b\n  return a if b == 0\n  greatest_common_divisor(b, a % b)\n\
    end", "  # TODO: return the greatest common divisor of a and b\n  a, b = b, a\
    \ % b while b > 0\n  a\nend", "  a, b = b, a if a < b\n  while b > 0\n    a, b\
    \ = b, a % b\n  end\n  a\nend", "  if a == b\n    return a\n  elsif a > b\n  \
    \  return greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: Return the greatest\
    \ common divisor of two integers\n  if a == b\n    return a\n  elsif a > b\n \
    \   return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n  end\n\
    end", "  # TODO: implement me\nend", "  if a == b\n    return a\n  elsif a > b\n\
    \    return greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a\
    \ == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  # Your code here\nend",
  "  # TODO: implement me\nend", "  # TODO: Return the greatest common divisor of\
    \ two integers\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  # TODO: return the greatest common divisor of a\
    \ and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  if a\
    \ % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n  end\nend",
  "  # TODO: implement me\nend", "  # TODO: implement me!\nend", "  if a == b\n  \
    \  a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  # TODO: return the greatest common divisor of a\
    \ and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  # TODO: return the greatest common divisor of a and b\n  if\
    \ a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  # >>> greatest_common_divisor(3,\
    \ 5)\n  # 1\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15", "  # TODO: implement this method\n  if a == b\n    return a\n  elsif a\
    \ > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me!\nend", "  # TODO: implement me\nend", "  # TODO: return\
    \ the greatest common divisor of a and b\n  # TODO: return the greatest common\
    \ divisor of a and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ implement me\nend", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  # TODO: Return the greatest common divisor of two integers\n\
    \  if a % b == 0\n    return b\n  elsif b % a == 0\n    return a\n  else\n   \
    \ if a > b\n      return greatest_common_divisor(a % b, b)\n    else\n      return\
    \ greatest_common_divisor(a, b % a)\n    end\n  end\nend", "  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n   \
    \ return greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n   \
    \ return greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: return the\
    \ greatest common divisor of a and b\n  if a == b\n    return a\n  elsif a > b\n\
    \    return greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  # TODO: return the greatest common divisor of a and b\n\
    \  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  if b == 0\n    return a\n \
    \ else\n    return greatest_common_divisor(b, a % b)\n  end\nend", "  if a ==\
    \ b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n\
    \  else\n    return greatest_common_divisor(a, b - a)\n  end\nend", "  if a ==\
    \ b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n   \
    \ greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO: implement me\nend",
  "  a, b = b, a if a < b\n  return a if b == 0\n  greatest_common_divisor(b, a %\
    \ b)\nend", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a\
    \ % b)\n  end\nend", "  # TODO: implement me\nend", "  if a % b == 0\n    b\n\
    \  else\n    greatest_common_divisor(b, a % b)\n  end\nend", "  if a == b\n  \
    \  return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n\
    \    return greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n   \
    \ a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: return the greatest common divisor of two integers\n\
    \  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ implement me\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  # TODO: implement this method\n  if a == b\n \
    \   return a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n\
    \    return greatest_common_divisor(a, b-a)\n  end\nend", "  return a if b ==\
    \ 0\n  greatest_common_divisor(b, a % b)\nend", "  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  # TODO: implement me\nend", "  if a == b\n    a\n  elsif a\
    \ > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: return the greatest common divisor of a and\
    \ b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  if a == b\n    return a\n \
    \ elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  # TODO: return the greatest common divisor of a\
    \ and b\n  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a-b,\
    \ b)\n  else\n    return greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO:\
    \ implement me\nend", "  # TODO: return the greatest common divisor of a and b\n\
    \  # if a == b\n  #   return a\n  # elsif a > b\n  #   return greatest_common_divisor(a-b,\
    \ b)\n  # else\n  #   return greatest_common_divisor(a, b-a)\n  # end\n  return\
    \ a if b == 0\n  return greatest_common_divisor(b, a % b)\nend", "  a, b = b,\
    \ a if a < b\n  return a if b == 0\n  greatest_common_divisor(b, a % b)\nend",
  "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n  end\n\
    end", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n\
    \  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n  \
    \  return a\n  elsif a > b\n    return greatest_common_divisor(a - b, b)\n  else\n\
    \    return greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n   \
    \ a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: return the greatest common divisor of a and b\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  if a < b\n    a, b = b, a\n  end\n  while b != 0\n    a, b = b, a % b\n  end\n\
    \  a\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO:\
    \ Return the greatest common divisor of two integers\n  if a == b\n    return\
    \ a\n  elsif a > b\n    return greatest_common_divisor(a-b, b)\n  else\n    return\
    \ greatest_common_divisor(a, b-a)\n  end\nend", "  # TODO: implement me\nend",
  "  # your code here\nend", "  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a - b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO:\
    \ return the greatest common divisor of a and b\n  # >>> greatest_common_divisor(3,\
    \ 5)\n  # 1\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15)\n  # 5\n  # >>> greatest_common_divisor(25, 15)\n  # 5\n  # >>> greatest_common_divisor(25,\
    \ 15", "  if a % b == 0\n    b\n  else\n    greatest_common_divisor(b, a % b)\n\
    \  end\nend", "  if a == b\n    return a\n  elsif a > b\n    return greatest_common_divisor(a\
    \ - b, b)\n  else\n    return greatest_common_divisor(a, b - a)\n  end\nend",
  "  # TODO: implement me\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  # TODO:\
    \ implement this method\n  if a == b\n    return a\n  elsif a > b\n    return\
    \ greatest_common_divisor(a-b, b)\n  else\n    return greatest_common_divisor(a,\
    \ b-a)\n  end\nend", "  # TODO: implement me\nend", "  # TODO: return the greatest\
    \ common divisor of a and b\n  # TODO: return the greatest common divisor of a\
    \ and b\n  if a == b\n    return a\n  elsif a > b\n    a = a - b\n    greatest_common_divisor(a,\
    \ b)\n  else\n    b = b - a\n    greatest_common_divisor(a, b)\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

{
  "name": "mbpp_557_toggle_string",
  "language": "r",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ntoggle_string <- function(string) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- toggle_string\n    if(!identical(candidate('Python'), 'pYTHON')){quit('no', 1)}\n    if(!identical(candidate('Pangram'), 'pANGRAM')){quit('no', 1)}\n    if(!identical(candidate('LIttLE'), 'liTTle')){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # Convert to lower case\n  string <- tolower(string)\n  # Convert to upper case\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  \n  # Loop over each character in the string.\n  for (i in 1:length(string)) {\n    # If the character is upper case, make it lower case.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      # Otherwise, make it upper case.\n      string[i] <- toupper(string[i])\n    }\n  }\n  \n  # Return the modified string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x %in% letters) {\n      if (x == tolower(x)) {\n        toupper(x)\n      } else {\n        tolower(x)\n      }\n    } else {\n      x\n    }\n  })\n  # Return the string.\n  paste(string, collapse = \"\")\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to a character vector.\n  char_vec <- strsplit(string, \"\")[[1]]\n  \n  # Use sapply to apply the tolower and toupper functions to each character.\n  # Use the ifelse function to toggle the case of each character.\n  sapply(char_vec, function(x) {\n    ifelse(x == tolower(x), toupper(x), tolower(x))\n  })\n  \n  # Return the modified character vector as a string.\n  return(paste(sapply(char_vec, function(x) {\n    ifelse(x == tolower(x), toupper(x), tolower(x))\n  }), collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEfG\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n    string <- strsplit(string, \"\")[[1]]\n    for (i in 1:length(string)) {\n        if (string[i] == toupper(string[i])) {\n            string[i] <- tolower(string[i])\n        } else {\n            string[i] <- toupper(string[i])\n        }\n    }\n    return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")",
    "\n  # Write your code here\n  return(string)\n}\n",
    "\n  string_as_char <- strsplit(string, \"\")[[1]]\n  string_as_char <- ifelse(string_as_char %in% letters,\n                           ifelse(string_as_char %in% LETTERS,\n                                  tolower(string_as_char),\n                                  toupper(string_as_char)),\n                           string_as_char)\n  paste(string_as_char, collapse = \"\")\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Write your code here\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"Ab,c,de!$\")\n",
    "\n  # Convert the string to a character vector.\n  chars <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  # Use the ifelse function to toggle the case of each character.\n  toggled_chars <- sapply(chars, function(x) {\n    ifelse(x == tolower(x), toupper(x), tolower(x))\n  })\n  # Return the toggled string.\n  return(paste(toggled_chars, collapse = \"\"))\n}\n",
    "\n  # Convert to lower case\n  string <- tolower(string)\n  # Convert to upper case\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  char_vec <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(char_vec, function(x) {\n    if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  })\n  # Combine the vector back into a string.\n  paste(sapply(char_vec, function(x) {\n    if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  }), collapse = \"\")\n}\n\ntoggle_string(\"aBcDeF\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "r",
  "prompt": "# Write a rthon function to reverse only the vowels of a given string (where y is not a vowel).\nreverse_vowels <- function(str1) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- reverse_vowels\n    if(!identical(candidate('Python'), 'Python')){quit('no', 1)}\n    if(!identical(candidate('USA'), 'ASU')){quit('no', 1)}\n    if(!identical(candidate('ab'), 'ab')){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  paste(str1, collapse = \"\")\n}\nreverse_vowels(\"python\")\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  paste(str1, collapse = \"\")\n}\n\nreverse_vowels(\"python\")\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  # Create a vector of the string\n  str1 <- unlist(strsplit(str1, \"\"))\n  # Create a vector of the indices of the vowels in the string\n  vowel_indices <- which(str1 %in% vowels)\n  # Create a vector of the vowels in the string\n  vowels_in_str1 <- str1[vowel_indices]\n  # Reverse the vowels\n  vowels_in_str1 <- rev(vowels_in_str1)\n  # Replace the vowels in the string with the reversed vowels\n  str1[vowel_indices] <- vowels_in_str1\n  # Return the string\n  return(paste(str1, collapse = \"\"))\n}\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1[which(str1 %in% vowels)] <- rev(str1[which(str1 %in% vowels)])\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"python\")\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  v_index <- which(str1 %in% vowels)\n  if (length(v_index) > 1) {\n    str1[v_index] <- str1[v_index][length(v_index):1]\n  }\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"Hello!\")\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  v_pos <- which(str1 %in% vowels)\n  str1[v_pos] <- rev(str1[v_pos])\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"Hello World\")\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  paste(str1, collapse = \"\")\n}\n\nreverse_vowels(\"python\")\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  # Create a vector of the string\n  str1 <- strsplit(str1, \"\")[[1]]\n  # Create a vector of the indices of the vowels in the string\n  indices <- which(str1 %in% vowels)\n  # Create a vector of the vowels in the string\n  vowels_in_str1 <- str1[indices]\n  # Reverse the vowels\n  vowels_in_str1 <- rev(vowels_in_str1)\n  # Replace the vowels in the string with the reversed vowels\n  str1[indices] <- vowels_in_str1\n  # Return the string\n  return(paste(str1, collapse = \"\"))\n}\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  # Create a vector of the indices of the vowels in the string\n  vowel_indices <- which(vapply(strsplit(str1, \"\")[[1]], function(x) {x %in% vowels}, logical(1)))\n  # Create a vector of the vowels in the string\n  vowel_vector <- strsplit(str1, \"\")[[1]][vowel_indices]\n  # Reverse the vowel vector\n  rev_vowel_vector <- rev(vowel_vector)\n  # Replace the vowels in the string with the reversed vowel vector\n  str1[vowel_indices] <- rev_vowel_vector\n  # Return the string\n  return(str1)\n}\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \n  # Create a vector of the string's characters\n  str_chars <- strsplit(str1, \"\")[[1]]\n  \n  # Create a vector of the string's vowels\n  str_vowels <- str_chars[str_chars %in% vowels]\n  \n  # Reverse the vowels\n  str_vowels <- rev(str_vowels)\n  \n  # Replace the vowels in the string with the reversed vowels\n  for (i in 1:length(str_vowels)) {\n    str_chars[str_chars %in% vowels] <- str_vowels\n  }\n  \n  # Return the string\n  return(paste(str_chars, collapse = \"\"))\n}\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"python\")\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  # Create a vector of the indices of the vowels in the string\n  vowel_indices <- which(str1 %in% vowels)\n  # Create a vector of the vowels in the string\n  vowels_in_str <- str1[vowel_indices]\n  # Reverse the vector of vowels\n  vowels_in_str <- rev(vowels_in_str)\n  # Replace the vowels in the string with the reversed vector of vowels\n  str1[vowel_indices] <- vowels_in_str\n  # Return the string\n  return(str1)\n}\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1_vowels <- str1[str1 %in% vowels]\n  str1[str1 %in% vowels] <- str1_vowels[length(str1_vowels):1]\n  paste(str1, collapse = \"\")\n}\n\nreverse_vowels(\"hello\")\n",
    "\n  # Create a vector of vowels\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  # Create a vector of the vowels in the string\n  vowels_in_str <- str1[str_detect(str1, paste(vowels, collapse = \"|\"))]\n  # Reverse the vowels in the string\n  vowels_in_str <- rev(vowels_in_str)\n  # Create a vector of the non-vowels in the string\n  non_vowels_in_str <- str1[!str_detect(str1, paste(vowels, collapse = \"|\"))]\n  # Combine the reversed vowels and non-vowels\n  str1 <- c(vowels_in_str, non_vowels_in_str)\n  # Return the reversed string\n  return(str1)\n}\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  paste(str1, collapse = \"\")\n}\n\nreverse_vowels(\"python\")\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"python\")\n",
    "\n  str1 <- gsub(\"[^aeiouAEIOU]\", \"\", str1)\n  str1 <- gsub(\"[aeiouAEIOU]\", \"\", str1, fixed = TRUE)\n  return(str1)\n}\nreverse_vowels(\"Hello\")\n",
    "\n  # Write your code here\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- tolower(str1)\n  str1 <- unlist(str1)\n  str1 <- str1[str1 %in% vowels]\n  str1 <- rev(str1)\n  str1 <- paste(str1, collapse = \"\")\n  return(str1)\n}\n",
    "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  str1 <- unlist(strsplit(str1, \"\"))\n  str1 <- str1[!str1 %in% vowels]\n  str1 <- paste(str1, collapse = \"\")\n  return(str1)\n}\n\nreverse_vowels(\"python\")\n",
    "\n  vowels <- c(\"a\",\"e\",\"i\",\"o\",\"u\")\n  str1 <- strsplit(str1, \"\")[[1]]\n  str1[str1 %in% vowels] <- rev(str1[str1 %in% vowels])\n  return(paste(str1, collapse = \"\"))\n}\n\nreverse_vowels(\"python\")\n"
  ]
}
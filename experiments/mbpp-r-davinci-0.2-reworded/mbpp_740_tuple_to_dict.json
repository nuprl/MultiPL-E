{
  "name": "mbpp_740_tuple_to_dict",
  "language": "r",
  "prompt": "# Write a function to convert the given list to a key-value named list using adjacent elements. https://www.geeksforgeeks.org/rthon-convert-list-to-adjacent-pair-named list/\ntuple_to_dict <- function(test_tup) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- tuple_to_dict\n    if(!identical(candidate(list(1, 5, 7, 10, 13, 5)), list(1 = 5, 7 = 10, 13 = 5))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6)), list(1 = 2, 3 = 4, 5 = 6))){quit('no', 1)}\n    if(!identical(candidate(list(7, 8, 9, 10, 11, 12)), list(7 = 8, 9 = 10, 11 = 12))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), 2)]\n  test_tup[seq(1, length(test_tup), 2)]\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  test_dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(test_dict)\n}\n",
    "\n  test_dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(test_dict)\n}\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup <- test_tup[seq(1, length(test_tup), by = 2)]\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(2, length(test_tup), by = 2)] <- NULL\n  return(test_tup)\n}\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(2, length(test_tup), by = 2)] <- NULL\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  test_dict <- list()\n  for (i in 1:length(test_tup)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n    i <- i + 1\n  }\n  return(test_dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n    i <- i+1\n  }\n  return(dict)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n    names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n    return(test_tup[seq(1, length(test_tup), by = 2)])\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), 2)]\n  test_tup[seq(2, length(test_tup), 2)] <- NULL\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(1, length(test_tup), by = 2)]\n}\n\ntuple_to_dict(c(\"a\", 1, \"b\", 2, \"c\", 3))\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), 2)]\n  test_tup[seq(2, length(test_tup), 2)] <- NULL\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  test_dict <- list()\n  for (i in 1:length(test_tup)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n    i <- i+1\n  }\n  return(test_dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for(i in 1:length(test_tup)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(1, length(test_tup), by = 2)]\n}\n\ntuple_to_dict(c(\"a\", 1, \"b\", 2, \"c\", 3))\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(2, length(test_tup), by = 2)] <- NULL\n  return(test_tup)\n}\n",
    "\n  test_dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(test_dict)\n}\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), 2)]\n  test_tup[seq(2, length(test_tup), 2)] <- NULL\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n",
    "\n  test_dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    test_dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(test_dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  names(test_tup) <- test_tup[seq(2, length(test_tup), by = 2)]\n  test_tup[seq(2, length(test_tup), by = 2)] <- NULL\n  return(test_tup)\n}\n\ntuple_to_dict(test_tup)\n"
  ]
}
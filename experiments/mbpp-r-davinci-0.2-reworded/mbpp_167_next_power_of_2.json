{
  "name": "mbpp_167_next_power_of_2",
  "language": "r",
  "prompt": "# Write a rthon function to find the smallest power of 2 greater than or equal to n.\nnext_power_of_2 <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- next_power_of_2\n    if(!identical(candidate(0), 1)){quit('no', 1)}\n    if(!identical(candidate(5), 8)){quit('no', 1)}\n    if(!identical(candidate(17), 32)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    i <- 1\n    while(2^i < n) {\n        i <- i + 1\n    }\n    return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2**(ceiling(log2(n))))\n  }\n}\n",
    "\n    if(n == 1) {\n        return(1)\n    } else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if (n < 0) {\n        return(NA)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n\nnext_power_of_2(10)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^(ceiling(log2(n))))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\nnext_power_of_2(16)\nnext_power_of_2(128)\nnext_power_of_2(256)\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n < 0) {\n    stop(\"n must be a positive integer\")\n  }\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n    if (n == 0) {\n        return 1\n    }\n    else {\n        return 2 ** (ceiling(log2(n)))\n    }\n}\n\nnext_power_of_2(2)\nnext_power_of_2(5)\nnext_power_of_2(10)\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  if (n %% 2 == 0) {\n    return(next_power_of_2(n / 2) * 2)\n  } else {\n    return(next_power_of_2(n / 2) * 2 * 2)\n  }\n}\n\nnext_power_of_2(10)\n",
    "\n  # Your code here\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^(ceiling(log(n, 2))))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^(ceiling(log2(n))))\n  }\n}\n",
    "\n  return(2^ceiling(log(n, 2)))\n}\n\nnext_power_of_2(5)\n\nnext_power_of_2(16)\n\nnext_power_of_2(32)\n\nnext_power_of_2(50)\n",
    "\n  i <- 1\n  while (2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n    return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(5)\nnext_power_of_2(16)\nnext_power_of_2(32)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(",
    "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2) {\n    return(2)\n  }\n  if (n == 3) {\n    return(4)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(8)\n  }\n  if (n == 6) {\n    return(8)\n  }\n  if (n == 7) {\n    return(8)\n  }\n  if (n == 8) {\n    return(8)\n  }\n  if (n == 9) {\n    return(16)\n  }\n  if (n == 10) {\n    return(16)\n  }\n  if (n == 11) {\n    return(16)\n  }\n  if (n == 12) {\n    return(16)\n  }\n  if (n == 13) {\n    return(16)\n  }\n  if (n == 14) {\n    return(16)\n  }\n  if (n == 15) {\n    return(16)\n  }\n  if (n == 16) {\n    return(16)\n  }\n  if (n == 17) {\n    return(32)\n  }\n  if (n == 18) {\n    return(32)\n  }\n  if (n == 19) {\n    return(32)\n  }\n  if (n == 20) {\n    return(32)\n  }\n  if (n == 21) {\n    return(32)\n  }\n  if (n == 22) {\n    return(32)\n  }\n  if (n == 23) {\n    return(32)\n  }\n  if (n == 24) {\n    return(32)\n  }\n  if (n == 25) {\n    return(32)\n  }\n  if (n == 26) {\n    return(32)\n  }\n  if (n == 27) {\n    return(32)\n  }\n  if (n == 28",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(3)\nnext_power_of_2(10)\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n  return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2**ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log(n, base = 2)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  if (n % 2 == 0) {\n    return(next_power_of_2(n / 2))\n  }\n  return(next_power_of_2(n + 1))\n}\n\nnext_power_of_2(5)\nnext_power_of_2(10)\nnext_power_of_2(16)\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^(ceiling(log(n, base = 2))))\n  }\n}\n",
    "\n  if (n < 2) {\n    return(2)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^(ceiling(log2(n))))\n    }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    # Your code here\n    return(2^ceiling(log2(n)))\n}\nnext_power_of_2(5)\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log(n, base = 2)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if(n < 0) {\n    return(0)\n  }\n  else {\n    return(2^(ceiling(log2(n))))\n  }\n}\n\nnext_power_of_2(2)\nnext_power_of_2(5)\nnext_power_of_2(10)\nnext_power_of_2(16)\nnext_power_of_2(32)\nnext_power_of_2(64)\nnext_power_of_2(128)\nnext_power_of_2(256)\nnext_power_of_2(512)\nnext_power_of_2(1024)\nnext_power_of_2(2048)\nnext_power_of_2(4096)\nnext_power_of_2(8192)\nnext_power_of_2(16384)\nnext_power_of_2(32768)\nnext_power_of_2(65536)\nnext_power_of_2(131072)\nnext_power_of_2(262144)\nnext_power_of_2(524288)\nnext_power_of_2(1048576)\nnext_power_of_2(2097152)\nnext_power_of_2(4194304)\nnext_power_of_2(8388608)\nnext_power_of_2(16777216)\nnext_power_of_2(33554432)\nnext_power_of_2(67108864)\nnext_power_of_2(134217728)\nnext_power_of_2(268435456)\nnext_power_of_2(536870912)\nnext_power_of_2(1073741824)\nnext_power_of_2(2147483648)\nnext_power_of_2(4294967296)\nnext_power_of_2(8589934592)\nnext_power_of_2(17179869184)\nnext_power_of_2(34359738368)\nnext_power_of_2(68719476736)\nnext_power_of_2(13",
    "\n  # Your code here\n  return(2^ceiling(log(n,2)))\n}\n\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(32)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    i <- 1\n    while(2^i < n) {\n        i <- i + 1\n    }\n    return(2^i)\n}\nnext_power_of_2(5)\n",
    "\n    if (n == 1) {\n        return(n)\n    }\n    else {\n        return(2^(ceiling(log2(n))))\n    }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    i <- 1\n    while(2^i < n) {\n        i <- i + 1\n    }\n    return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n  if(n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_",
    "\n    i <- 1\n    while(2^i < n) {\n        i <- i + 1\n    }\n    return(2^i)\n}\nnext_power_of_2(12)\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n < 0) {\n    return(0)\n  }\n  else if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(10)\nnext_power_of_2(16)\nnext_power_of_2(32)\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_",
    "\n  i <- 0\n  while (2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(2)\n    }\n    if (n == 2) {\n        return(2)\n    }\n    if (n == 3) {\n        return(4)\n    }\n    if (n == 4) {\n        return(4)\n    }\n    if (n == 5) {\n        return(8)\n    }\n    if (n == 6) {\n        return(8)\n    }\n    if (n == 7) {\n        return(8)\n    }\n    if (n == 8) {\n        return(8)\n    }\n    if (n == 9) {\n        return(16)\n    }\n    if (n == 10) {\n        return(16)\n    }\n    if (n == 11) {\n        return(16)\n    }\n    if (n == 12) {\n        return(16)\n    }\n    if (n == 13) {\n        return(16)\n    }\n    if (n == 14) {\n        return(16)\n    }\n    if (n == 15) {\n        return(16)\n    }\n    if (n == 16) {\n        return(16)\n    }\n    if (n == 17) {\n        return(32)\n    }\n    if (n == 18) {\n        return(32)\n    }\n    if (n == 19) {\n        return(32)\n    }\n    if (n == 20) {\n        return(32)\n    }\n    if (n == 21) {\n        return(32)\n    }\n    if (n == 22) {\n        return(32)\n    }\n    if (n == 23) {\n        return(32)\n    }\n    if (n == 24) {\n        return(32)\n    }\n    if (n == 25) {\n        return(32)\n    }\n    if (n == 26) {\n        return(32)\n    }\n    if (n == 27) {\n        return(32)\n    }\n    if (n == 28",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n  if (n < 0) {\n    stop(\"n must be a positive integer\")\n  } else if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  if (n % 2 == 1) {\n    return(2 * next_power_of_2(n / 2))\n  }\n  return(n)\n}\n\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\n",
    "\n  if (n < 0) {\n    stop(\"n must be non-negative\")\n  }\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(2^ceiling(log(n, base = 2)))\n    }\n}\n",
    "\n    # Your code here\n    return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(6)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of",
    "\n  if(n == 1) {\n    return(1)\n  }\n  else {\n    return(2^(ceiling(log2(n))))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(1)\n    }\n    if (n == 2) {\n        return(2)\n    }\n    if (n == 3) {\n        return(4)\n    }\n    if (n == 4) {\n        return(4)\n    }\n    if (n == 5) {\n        return(8)\n    }\n    if (n == 6) {\n        return(8)\n    }\n    if (n == 7) {\n        return(8)\n    }\n    if (n == 8) {\n        return(8)\n    }\n    if (n == 9) {\n        return(16)\n    }\n    if (n == 10) {\n        return(16)\n    }\n    if (n == 11) {\n        return(16)\n    }\n    if (n == 12) {\n        return(16)\n    }\n    if (n == 13) {\n        return(16)\n    }\n    if (n == 14) {\n        return(16)\n    }\n    if (n == 15) {\n        return(16)\n    }\n    if (n == 16) {\n        return(16)\n    }\n    if (n == 17) {\n        return(32)\n    }\n    if (n == 18) {\n        return(32)\n    }\n    if (n == 19) {\n        return(32)\n    }\n    if (n == 20) {\n        return(32)\n    }\n    if (n == 21) {\n        return(32)\n    }\n    if (n == 22) {\n        return(32)\n    }\n    if (n == 23) {\n        return(32)\n    }\n    if (n == 24) {\n        return(32)\n    }\n    if (n == 25) {\n        return(32)\n    }\n    if (n == 26) {\n        return(32)\n    }\n    if (n == 27) {\n        return(32)\n    }\n    if (n == 28",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  return(2^ceiling(log(n, base = 2)))\n}\n\nnext_power_of_2(5)\nnext_power_of_2(16)\nnext_power_of_2(32)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n < 0) {\n    return(NA)\n  }\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2) {\n    return(2)\n  }\n  if (n == 3) {\n    return(4)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(8)\n  }\n  if (n == 6) {\n    return(8)\n  }\n  if (n == 7) {\n    return(8)\n  }\n  if (n == 8) {\n    return(8)\n  }\n  if (n == 9) {\n    return(16)\n  }\n  if (n == 10) {\n    return(16)\n  }\n  if (n == 11) {\n    return(16)\n  }\n  if (n == 12) {\n    return(16)\n  }\n  if (n == 13) {\n    return(16)\n  }\n  if (n == 14) {\n    return(16)\n  }\n  if (n == 15) {\n    return(16)\n  }\n  if (n == 16) {\n    return(16)\n  }\n  if (n == 17) {\n    return(32)\n  }\n  if (n == 18) {\n    return(32)\n  }\n  if (n == 19) {\n    return(32)\n  }\n  if (n == 20) {\n    return(32)\n  }\n  if (n == 21) {\n    return(32)\n  }\n  if (n == 22) {\n    return(32)\n  }\n  if (n == 23) {\n    return(32)\n  }\n  if (n == 24) {\n    return(32)\n  }\n  if (n == 25) {\n    return(32)\n  }\n  if (n == 26) {\n    return(32)\n  }\n  if (n == 27",
    "\n  return(2^ceiling(log(n,2)))\n}\n\nnext_power_of_2(5)\n",
    "\n  return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n    if (n == 1) {\n        return(n)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^(ceiling(log(n, base = 2))))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(5)\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\nnext_power_of_2(5)\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2 ^ ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(6)\n",
    "\n  if(n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\nnext_power_of_2(5)\n",
    "\n  if (n < 0) {\n    stop(\"n must be a positive integer\")\n  }\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  if (n == 2) {\n    return(2)\n  }\n  if (n == 3) {\n    return(4)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(8)\n  }\n  if (n == 6) {\n    return(8)\n  }\n  if (n == 7) {\n    return(8)\n  }\n  if (n == 8) {\n    return(8)\n  }\n  if (n == 9) {\n    return(16)\n  }\n  if (n == 10) {\n    return(16)\n  }\n  if (n == 11) {\n    return(16)\n  }\n  if (n == 12) {\n    return(16)\n  }\n  if (n == 13) {\n    return(16)\n  }\n  if (n == 14) {\n    return(16)\n  }\n  if (n == 15) {\n    return(16)\n  }\n  if (n == 16) {\n    return(16)\n  }\n  if (n == 17) {\n    return(32)\n  }\n  if (n == 18) {\n    return(32)\n  }\n  if (n == 19) {\n    return(32)\n  }\n  if (n == 20) {\n    return(32)\n  }\n  if (n == 21) {\n    return(32)\n  }\n  if (n == 22) {\n    return(32)\n  }\n  if (n == 23) {\n    return(32)\n  }\n  if (n == 24) {\n    return(32)\n  }\n  if (n == 25) {\n    return(32)\n  }\n  if (n == 26) {\n    return(32)\n  }\n  if (n == 27) {\n    return(32)\n  }\n  if (n == 28) {\n    return(32)\n  }\n  if (n == 29",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if(n == 1) {\n        return(1)\n    }\n    else {\n        return(2^(ceiling(log(n, 2))))\n    }\n}\nnext_power_of_2(2)\n",
    "\n  if(n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(n)\n    }\n    else {\n        return(2^ceiling(log(n, base = 2)))\n    }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power",
    "\n    if (n == 1) {\n        return(n)\n    }\n    if (n % 2 == 0) {\n        return(n)\n    }\n    return(next_power_of_2(n + 1))\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(2)\n    }\n    if (n == 2) {\n        return(2)\n    }\n    if (n == 3) {\n        return(4)\n    }\n    if (n == 4) {\n        return(4)\n    }\n    if (n == 5) {\n        return(8)\n    }\n    if (n == 6) {\n        return(8)\n    }\n    if (n == 7) {\n        return(8)\n    }\n    if (n == 8) {\n        return(8)\n    }\n    if (n == 9) {\n        return(16)\n    }\n    if (n == 10) {\n        return(16)\n    }\n    if (n == 11) {\n        return(16)\n    }\n    if (n == 12) {\n        return(16)\n    }\n    if (n == 13) {\n        return(16)\n    }\n    if (n == 14) {\n        return(16)\n    }\n    if (n == 15) {\n        return(16)\n    }\n    if (n == 16) {\n        return(16)\n    }\n    if (n == 17) {\n        return(32)\n    }\n    if (n == 18) {\n        return(32)\n    }\n    if (n == 19) {\n        return(32)\n    }\n    if (n == 20) {\n        return(32)\n    }\n    if (n == 21) {\n        return(32)\n    }\n    if (n == 22) {\n        return(32)\n    }\n    if (n == 23) {\n        return(32)\n    }\n    if (n == 24) {\n        return(32)\n    }\n    if (n == 25) {\n        return(32)\n    }\n    if (n == 26) {\n        return(32)\n    }\n    if (n == 27) {\n        return(32)\n    }\n    if (n == 28",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(12)\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n < 0) {\n    stop(\"n must be a positive integer\")\n  }\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if(n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(43)\nnext_power_of_2(",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(2^(ceiling(log2(n))))\n    }\n}\n",
    "\n  return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(5)\nnext_power_of_2(16)\nnext_power_of_2(32)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n < 0) {\n    stop(\"n must be a positive integer\")\n  } else if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if(n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n < 0) {\n    stop(\"n must be non-negative\")\n  }\n  k <- 1\n  while (k < n) {\n    k <- k * 2\n  }\n  return(k)\n}\n\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power",
    "\n  # If n is a power of 2, return n\n  if (n %% 2 == 0) {\n    return(n)\n  }\n  # If n is not a power of 2, return the next power of 2\n  else {\n    return(next_power_of_2(n + 1))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(",
    "\n    if (n < 0) {\n        return(NA)\n    }\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(1)\n    }\n    if (n == 2) {\n        return(2)\n    }\n    if (n == 3) {\n        return(4)\n    }\n    if (n == 4) {\n        return(4)\n    }\n    if (n == 5) {\n        return(8)\n    }\n    if (n == 6) {\n        return(8)\n    }\n    if (n == 7) {\n        return(8)\n    }\n    if (n == 8) {\n        return(8)\n    }\n    if (n == 9) {\n        return(16)\n    }\n    if (n == 10) {\n        return(16)\n    }\n    if (n == 11) {\n        return(16)\n    }\n    if (n == 12) {\n        return(16)\n    }\n    if (n == 13) {\n        return(16)\n    }\n    if (n == 14) {\n        return(16)\n    }\n    if (n == 15) {\n        return(16)\n    }\n    if (n == 16) {\n        return(16)\n    }\n    if (n == 17) {\n        return(32)\n    }\n    if (n == 18) {\n        return(32)\n    }\n    if (n == 19) {\n        return(32)\n    }\n    if (n == 20) {\n        return(32)\n    }\n    if (n == 21) {\n        return(32)\n    }\n    if (n == 22) {\n        return(32)\n    }\n    if (n == 23) {\n        return(32)\n    }\n    if (n == 24) {\n        return(32)\n    }\n    if (n == 25) {\n        return(32)\n    }\n    if (n == 26) {\n        return(32)\n    }\n    if (n == 27",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(n)\n    }\n    else {\n        return(2^ceiling(log(n, 2)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else if (n == 2) {\n    return(2)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log(n, base = 2)))\n    }\n}\n",
    "\n    if (n == 1) {\n        return(n)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if (n == 0) {\n        return(0)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n",
    "\n    if(n == 0) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log2(n)))\n    }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n  if (n < 0) {\n    stop(\"n must be a non-negative integer\")\n  }\n  if (n == 0) {\n    return(1)\n  }\n  return(2^ceiling(log2(n)))\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of_2(",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power_of",
    "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  if (n == 2) {\n    return(2)\n  }\n  if (n == 3) {\n    return(4)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(8)\n  }\n  if (n == 6) {\n    return(8)\n  }\n  if (n == 7) {\n    return(8)\n  }\n  if (n == 8) {\n    return(8)\n  }\n  if (n == 9) {\n    return(16)\n  }\n  if (n == 10) {\n    return(16)\n  }\n  if (n == 11) {\n    return(16)\n  }\n  if (n == 12) {\n    return(16)\n  }\n  if (n == 13) {\n    return(16)\n  }\n  if (n == 14) {\n    return(16)\n  }\n  if (n == 15) {\n    return(16)\n  }\n  if (n == 16) {\n    return(16)\n  }\n  if (n == 17) {\n    return(32)\n  }\n  if (n == 18) {\n    return(32)\n  }\n  if (n == 19) {\n    return(32)\n  }\n  if (n == 20) {\n    return(32)\n  }\n  if (n == 21) {\n    return(32)\n  }\n  if (n == 22) {\n    return(32)\n  }\n  if (n == 23) {\n    return(32)\n  }\n  if (n == 24) {\n    return(32)\n  }\n  if (n == 25) {\n    return(32)\n  }\n  if (n == 26) {\n    return(32)\n  }\n  if (n == 27) {\n    return(32)\n  }\n  if (n == 28",
    "\n  i <- 1\n  while (2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  if (n % 2 == 0) {\n    return(next_power_of_2(n / 2))\n  }\n  return(next_power_of_2(n + 1))\n}\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  # Your code here\n  if(n == 1){\n    return(n)\n  }\n  else{\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext",
    "\n  if (n == 1) {\n    return(n)\n  }\n  if (n %% 2 == 0) {\n    return(next_power_of_2(n / 2))\n  } else {\n    return(next_power_of_2(n + 1))\n  }\n}\n\nnext_power_of_2(10)\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2**ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(10)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, 2)))\n  }\n}\n\nnext_power_of_2(3)\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^ceiling(log(n, base = 2)))\n    }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  if (n == 2) {\n    return(2)\n  }\n  if (n == 3) {\n    return(4)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(8)\n  }\n  if (n == 6) {\n    return(8)\n  }\n  if (n == 7) {\n    return(8)\n  }\n  if (n == 8) {\n    return(8)\n  }\n  if (n == 9) {\n    return(16)\n  }\n  if (n == 10) {\n    return(16)\n  }\n  if (n == 11) {\n    return(16)\n  }\n  if (n == 12) {\n    return(16)\n  }\n  if (n == 13) {\n    return(16)\n  }\n  if (n == 14) {\n    return(16)\n  }\n  if (n == 15) {\n    return(16)\n  }\n  if (n == 16) {\n    return(16)\n  }\n  if (n == 17) {\n    return(32)\n  }\n  if (n == 18) {\n    return(32)\n  }\n  if (n == 19) {\n    return(32)\n  }\n  if (n == 20) {\n    return(32)\n  }\n  if (n == 21) {\n    return(32)\n  }\n  if (n == 22) {\n    return(32)\n  }\n  if (n == 23) {\n    return(32)\n  }\n  if (n == 24) {\n    return(32)\n  }\n  if (n == 25) {\n    return(32)\n  }\n  if (n == 26) {\n    return(32)\n  }\n  if (n == 27) {\n    return(32)\n  }\n  if (n == 28) {\n    return(32)\n  }\n  if (n == 29",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  return (2 ** ceiling(log2(n)))\n}\n\nnext_power_of_2(5)\nnext_power_of_2(16)\nnext_power_of_2(32)\n",
    "\n    if (n == 0) {\n        return(1)\n    }\n    else {\n        return(2**ceiling(log(n, base = 2)))\n    }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power",
    "\n  # Your code goes here\n  return(2^ceiling(log2(n)))\n}\n\nnext_power_of_2(10)\n",
    "\n    if (n == 1) {\n        return(1)\n    }\n    else {\n        return(2^(ceiling(log(n, 2))))\n    }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n < 0) {\n    return(0)\n  } else if (n == 0) {\n    return(1)\n  } else {\n    return(2 ^ ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_2(42)\nnext_power",
    "\n  if (n == 0) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log(n, base = 2)))\n  }\n}\n\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power",
    "\n  if (n == 1) {\n    return(n)\n  } else {\n    return(2^ceiling(log2(n)))\n  }\n}\n\nnext_power_of_2(3)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  i <- 1\n  while(2^i < n) {\n    i <- i + 1\n  }\n  return(2^i)\n}\n\nnext_power_of_2(5)\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(0)\n    }\n    else {\n        return(2^(ceiling(log2(n))))\n    }\n}\nnext_power_of_2(0)\nnext_power_of_2(1)\nnext_power_of_2(2)\nnext_power_of_2(3)\nnext_power_of_2(4)\nnext_power_of_2(5)\nnext_power_of_2(6)\nnext_power_of_2(7)\nnext_power_of_2(8)\nnext_power_of_2(9)\nnext_power_of_2(10)\nnext_power_of_2(11)\nnext_power_of_2(12)\nnext_power_of_2(13)\nnext_power_of_2(14)\nnext_power_of_2(15)\nnext_power_of_2(16)\nnext_power_of_2(17)\nnext_power_of_2(18)\nnext_power_of_2(19)\nnext_power_of_2(20)\nnext_power_of_2(21)\nnext_power_of_2(22)\nnext_power_of_2(23)\nnext_power_of_2(24)\nnext_power_of_2(25)\nnext_power_of_2(26)\nnext_power_of_2(27)\nnext_power_of_2(28)\nnext_power_of_2(29)\nnext_power_of_2(30)\nnext_power_of_2(31)\nnext_power_of_2(32)\nnext_power_of_2(33)\nnext_power_of_2(34)\nnext_power_of_2(35)\nnext_power_of_2(36)\nnext_power_of_2(37)\nnext_power_of_2(38)\nnext_power_of_2(39)\nnext_power_of_2(40)\nnext_power_of_2(41)\nnext_power_of_",
    "\n  if (n == 1) {\n    return(n)\n  }\n  else {\n    return(2^ceiling(log2(n)))\n  }\n}\n"
  ]
}
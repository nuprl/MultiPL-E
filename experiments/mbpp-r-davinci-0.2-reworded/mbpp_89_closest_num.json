{
  "name": "mbpp_89_closest_num",
  "language": "r",
  "prompt": "# Write a function to find the closest smaller number than n.\nclosest_num <- function(N) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- closest_num\n    if(!identical(candidate(11), 10)){quit('no', 1)}\n    if(!identical(candidate(7), 6)){quit('no', 1)}\n    if(!identical(candidate(12), 11)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # Find the closest smaller number than n.\n  N <- N - 1\n  # Return the closest smaller number than n.\n  return(N)\n}\n",
    "\n  if (N < 2) {\n    return(0)\n  }\n  if (N == 2) {\n    return(1)\n  }\n  if (N == 3) {\n    return(2)\n  }\n  if (N == 4) {\n    return(3)\n  }\n  if (N == 5) {\n    return(4)\n  }\n  if (N == 6) {\n    return(5)\n  }\n  if (N == 7) {\n    return(6)\n  }\n  if (N == 8) {\n    return(7)\n  }\n  if (N == 9) {\n    return(8)\n  }\n  if (N == 10) {\n    return(9)\n  }\n  if (N == 11) {\n    return(10)\n  }\n  if (N == 12) {\n    return(11)\n  }\n  if (N == 13) {\n    return(12)\n  }\n  if (N == 14) {\n    return(13)\n  }\n  if (N == 15) {\n    return(14)\n  }\n  if (N == 16) {\n    return(15)\n  }\n  if (N == 17) {\n    return(16)\n  }\n  if (N == 18) {\n    return(17)\n  }\n  if (N == 19) {\n    return(18)\n  }\n  if (N == 20) {\n    return(19)\n  }\n  if (N == 21) {\n    return(20)\n  }\n  if (N == 22) {\n    return(21)\n  }\n  if (N == 23) {\n    return(22)\n  }\n  if (N == 24) {\n    return(23)\n  }\n  if (N == 25) {\n    return(24)\n  }\n  if (N == 26) {\n    return(25)\n  }\n  if (N == 27) {\n    return(26)\n  }\n  if (N == 28) {\n    return(27)\n  }\n  if (N == 29",
    "\n  for (i in 1:N) {\n    if (N %% i == 0) {\n      closest_num <- i\n    }\n  }\n  return(closest_num)\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  else {\n    return(N-1)\n  }\n}\n",
    "\n    # Create a vector of numbers from 1 to N.\n    nums <- 1:N\n    # Create a vector of numbers from 1 to N that are smaller than N.\n    smaller_nums <- nums[nums < N]\n    # Find the closest number to N in the vector of smaller numbers.\n    closest_num <- smaller_nums[which.min(abs(smaller_nums - N))]\n    # Return the closest number.\n    return(closest_num)\n}\n",
    "\n    if (N == 1) {\n        return(0)\n    }\n    else {\n        return(N - 1)\n    }\n}\n",
    "\n    if (N == 1) {\n        return(0)\n    }\n    else {\n        return(N - 1)\n    }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  else {\n    return(N-1)\n  }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  else {\n    return(N-1)\n  }\n}\n",
    "\n  if (N < 2) {\n    return(0)\n  }\n  if (N == 2) {\n    return(1)\n  }\n  if (N == 3) {\n    return(2)\n  }\n  if (N == 4) {\n    return(3)\n  }\n  if (N == 5) {\n    return(4)\n  }\n  if (N == 6) {\n    return(5)\n  }\n  if (N == 7) {\n    return(6)\n  }\n  if (N == 8) {\n    return(7)\n  }\n  if (N == 9) {\n    return(8)\n  }\n  if (N == 10) {\n    return(9)\n  }\n  if (N == 11) {\n    return(10)\n  }\n  if (N == 12) {\n    return(11)\n  }\n  if (N == 13) {\n    return(12)\n  }\n  if (N == 14) {\n    return(13)\n  }\n  if (N == 15) {\n    return(14)\n  }\n  if (N == 16) {\n    return(15)\n  }\n  if (N == 17) {\n    return(16)\n  }\n  if (N == 18) {\n    return(17)\n  }\n  if (N == 19) {\n    return(18)\n  }\n  if (N == 20) {\n    return(19)\n  }\n  if (N == 21) {\n    return(20)\n  }\n  if (N == 22) {\n    return(21)\n  }\n  if (N == 23) {\n    return(22)\n  }\n  if (N == 24) {\n    return(23)\n  }\n  if (N == 25) {\n    return(24)\n  }\n  if (N == 26) {\n    return(25)\n  }\n  if (N == 27) {\n    return(26)\n  }\n  if (N == 28) {\n    return(27)\n  }\n  if (N == 29",
    "\n  if (N == 1) {\n    return(1)\n  }\n  else {\n    return(N - 1)\n  }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  if (N == 2) {\n    return(1)\n  }\n  if (N == 3) {\n    return(2)\n  }\n  if (N == 4) {\n    return(3)\n  }\n  if (N == 5) {\n    return(4)\n  }\n  if (N == 6) {\n    return(5)\n  }\n  if (N == 7) {\n    return(6)\n  }\n  if (N == 8) {\n    return(7)\n  }\n  if (N == 9) {\n    return(8)\n  }\n  if (N == 10) {\n    return(9)\n  }\n  if (N == 11) {\n    return(10)\n  }\n  if (N == 12) {\n    return(11)\n  }\n  if (N == 13) {\n    return(12)\n  }\n  if (N == 14) {\n    return(13)\n  }\n  if (N == 15) {\n    return(14)\n  }\n  if (N == 16) {\n    return(15)\n  }\n  if (N == 17) {\n    return(16)\n  }\n  if (N == 18) {\n    return(17)\n  }\n  if (N == 19) {\n    return(18)\n  }\n  if (N == 20) {\n    return(19)\n  }\n  if (N == 21) {\n    return(20)\n  }\n  if (N == 22) {\n    return(21)\n  }\n  if (N == 23) {\n    return(22)\n  }\n  if (N == 24) {\n    return(23)\n  }\n  if (N == 25) {\n    return(24)\n  }\n  if (N == 26) {\n    return(25)\n  }\n  if (N == 27) {\n    return(26)\n  }\n  if (N == 28) {\n    return(27)\n  }\n  if (N == 29",
    "\n  if(N == 1) {\n    return(0)\n  }\n  else {\n    return(N - 1)\n  }\n}\n",
    "\n  # Find the closest smaller number than n.\n  #\n  # Args:\n  #   N: A number.\n  #\n  # Returns:\n  #   The closest smaller number than n.\n  #\n  # Example:\n  #   > closest_num(5)\n  #   4\n  #   > closest_num(10)\n  #   9\n  #   > closest_num(2)\n  #   1\n  #   > closest_num(6.9)\n  #   5\n  #   > closest_num(0)\n  #   -1\n  #   > closest_num(-4)\n  #   -5\n  #   > closest_num(-5)\n  #   -6\n  #\n  # Note:\n  #   If n is an integer, the closest smaller number is n - 1.\n  #   If n is not an integer, the closest smaller number is the largest integer less than n.\n  #   If n is negative, the closest smaller number is the largest integer less than n.\n  #   If n is 0, the closest smaller number is -1.\n  #   If n is -1, the closest smaller number is -2.\n  #   If n is -2, the closest smaller number is -3.\n  #   ...\n  #   If n is -n, the closest smaller number is -(n + 1).\n  #   ...\n  #   If n is -2, the closest smaller number is -3.\n  #   If n is -1, the closest smaller number is -2.\n  #   If n is 0, the closest smaller number is -1.\n  #   If n is negative, the closest smaller number is the largest integer less than n.\n  #   If n is not an integer, the closest smaller number is the largest integer less than n.\n  #   If n is an integer, the closest smaller number is n - 1.\n  #\n  # Hint:\n  #   Use the floor function.\n  #   Use the ceiling function.\n  #   Use the ifelse function.\n  #   Use the ifelse function.\n  #   Use the ifelse function.\n  #   Use the ifelse function.",
    "\n    if (N == 1) {\n        return(0)\n    }\n    else {\n        return(N - 1)\n    }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  else {\n    return(N - 1)\n  }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  else {\n    return(N - 1)\n  }\n}\n",
    "\n  x <- N\n  while (x > 0) {\n    if (is.prime(x)) {\n      return(x)\n    }\n    x <- x - 1\n  }\n}\n",
    "\n  if (N == 1) {\n    return(0)\n  }\n  if (N == 2) {\n    return(1)\n  }\n  if (N == 3) {\n    return(2)\n  }\n  if (N == 4) {\n    return(3)\n  }\n  if (N == 5) {\n    return(4)\n  }\n  if (N == 6) {\n    return(5)\n  }\n  if (N == 7) {\n    return(6)\n  }\n  if (N == 8) {\n    return(7)\n  }\n  if (N == 9) {\n    return(8)\n  }\n  if (N == 10) {\n    return(9)\n  }\n  if (N == 11) {\n    return(10)\n  }\n  if (N == 12) {\n    return(11)\n  }\n  if (N == 13) {\n    return(12)\n  }\n  if (N == 14) {\n    return(13)\n  }\n  if (N == 15) {\n    return(14)\n  }\n  if (N == 16) {\n    return(15)\n  }\n  if (N == 17) {\n    return(16)\n  }\n  if (N == 18) {\n    return(17)\n  }\n  if (N == 19) {\n    return(18)\n  }\n  if (N == 20) {\n    return(19)\n  }\n  if (N == 21) {\n    return(20)\n  }\n  if (N == 22) {\n    return(21)\n  }\n  if (N == 23) {\n    return(22)\n  }\n  if (N == 24) {\n    return(23)\n  }\n  if (N == 25) {\n    return(24)\n  }\n  if (N == 26) {\n    return(25)\n  }\n  if (N == 27) {\n    return(26)\n  }\n  if (N == 28) {\n    return(27)\n  }\n  if (N == 29",
    "\n  for (i in 1:N) {\n    if (i %% 3 == 0 & i %% 7 == 0) {\n      return(i)\n    }\n  }\n}\n\nclosest_num(100)\n"
  ]
}
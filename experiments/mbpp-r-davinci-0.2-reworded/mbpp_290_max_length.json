{
  "name": "mbpp_290_max_length",
  "language": "r",
  "prompt": "# Write a function to find the list of maximum length in a list of lists.\nmax_length <- function(list1) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- max_length\n    if(!identical(candidate(list(list(0), list(1, 3), list(5, 7), list(9, 11), list(13, 15, 17))), list(3, list(13, 15, 17)))){quit('no', 1)}\n    if(!identical(candidate(list(list(1), list(5, 7), list(10, 12, 14, 15))), list(4, list(10, 12, 14, 15)))){quit('no', 1)}\n    if(!identical(candidate(list(list(5), list(15, 20, 25))), list(3, list(15, 20, 25)))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_length <- 0\n  max_length_list <- NULL\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n      max_length_list <- list1[[i]]\n    }\n  }\n  return(max_length_list)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n",
    "\n  max(unlist(lapply(list1, length)))\n}\n\nmax_length(list1)\n",
    "\n  max_length <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_length) {\n      max_length <- length(list1[[i]])\n    }\n  }\n  return(max_length)\n}\n",
    "\n  max_len <- 0\n  for (i in 1:length(list1)) {\n    if (length(list1[[i]]) > max_len) {\n      max_len <- length(list1[[i]])\n    }\n  }\n  return(max_len)\n}\n"
  ]
}
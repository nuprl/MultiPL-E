{
  "name": "mbpp_431_common_element",
  "language": "r",
  "prompt": "# Write a function that takes two lists and returns true if they have at least one common element.\ncommon_element <- function(list1, list2) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- common_element\n    if(!identical(candidate(list(1, 2, 3, 4, 5), list(5, 6, 7, 8, 9)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5), list(6, 7, 8, 9)), NULL)){quit('no', 1)}\n    if(!identical(candidate(list('a', 'b', 'c'), list('d', 'b', 'e')), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n\ncommon_element(c(1, 2, 3), c(4, 5, 6))\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n\ncommon_element(c(1, 2, 3), c(4, 5, 6))\ncommon_element(c(1, 2, 3), c(4, 5, 3))\n",
    "\n  for (i in list1) {\n    if (i %in% list2) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  intersect(list1, list2) != 0\n}\n\ncommon_element(c(1, 2, 3), c(2, 3, 4))\n",
    "\n  for (i in 1:length(list1)) {\n    for (j in 1:length(list2)) {\n      if (list1[i] == list2[j]) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    if (i %in% list2) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n\ncommon_element(c(1,2,3), c(4,5,6))\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  if (length(intersect(list1, list2)) > 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  intersect(list1, list2)\n}\n",
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n\ncommon_element(c(1,2,3), c(4,5,6))\ncommon_element(c(1,2,3), c(4,5,3))\n",
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  for (i in list1) {\n    for (j in list2) {\n      if (i == j) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n",
    "\n    for (i in list1) {\n        for (j in list2) {\n            if (i == j) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n}\n"
  ]
}
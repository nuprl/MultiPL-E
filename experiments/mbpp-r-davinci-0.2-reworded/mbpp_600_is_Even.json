{
  "name": "mbpp_600_is_Even",
  "language": "r",
  "prompt": "# Write a rthon function to check whether the given number is even or not.\nis_Even <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_600_is_Even.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- is_Even\n    if(!identical(candidate(1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(3), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if(n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(5)\nis_Even(6)\n",
    "\n  if(n%%2 == 0) {\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\n",
    "\n  if (n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(2)\nis_Even(3)\n",
    "\n  if(n%%2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(3)\nis_Even(4)\n",
    "\n  if (n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(4)\nis_Even(5)\n",
    "\n    if (n %% 2 == 0) {\n        return(\"Even\")\n    } else {\n        return(\"Odd\")\n    }\n}\n\nis_Even(2)\nis_Even(3)\n",
    "\n    if (n %% 2 == 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nis_Even(5)\nis_Even(6)\n",
    "\n    if (n %% 2 == 0) {\n        print(\"Even\")\n    } else {\n        print(\"Odd\")\n    }\n}\nis_Even(4)\n",
    "\n  if (n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(5)\nis_Even(6)\n",
    "\n  if (n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(10)\nis_Even(11)\n",
    "\n  if (n %% 2 == 0) {\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\n\nis_Even(4)\nis_Even(5)\n",
    "\n  if(n %% 2 == 0) {\n    return(TRUE)\n  }\n  else {\n    return(FALSE)\n  }\n}\n",
    "\n    if (n %% 2 == 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\nis_Even(10)\n",
    "\n    if (n %% 2 == 0) {\n        return(\"Even\")\n    } else {\n        return(\"Odd\")\n    }\n}\n\nis_Even(5)\n",
    "\n  if (n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_Even(10)\n",
    "\n  if(n%%2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (n %% 2 == 0) {\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\n\nis_Even(10)\n",
    "\n  if (n %% 2 == 0) {\n    return(\"Even\")\n  }\n  else {\n    return(\"Odd\")\n  }\n}\n\nis_Even(10)\n",
    "\n  if(n %% 2 == 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (n %% 2 == 0) {\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\n\nis_Even(5)\n"
  ]
}
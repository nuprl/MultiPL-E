{
  "name": "mbpp_162_sum_series",
  "language": "r",
  "prompt": "# Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nsum_series <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- sum_series\n    if(!identical(candidate(6), 12)){quit('no', 1)}\n    if(!identical(candidate(10), 30)){quit('no', 1)}\n    if(!identical(candidate(9), 25)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n\nsum_series(5)\n",
    "\n  sum <- 0\n  for (i in 0:n/2) {\n    sum <- sum + (n - 2*i)\n  }\n  return(sum)\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  sum(n - 2*(0:floor(n/2)))\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  if (n <= 0) {\n    return(0)\n  } else {\n    return(n + sum_series(n - 2))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n\nsum_series(5)\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n - 2))\n  }\n}\n\nsum_series(5)\n",
    "\n  if (n < 0) {\n    return(NULL)\n  }\n  if (n == 0) {\n    return(0)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  if (n == 2) {\n    return(1)\n  }\n  if (n == 3) {\n    return(2)\n  }\n  if (n == 4) {\n    return(4)\n  }\n  if (n == 5) {\n    return(7)\n  }\n  if (n == 6) {\n    return(12)\n  }\n  if (n == 7) {\n    return(20)\n  }\n  if (n == 8) {\n    return(33)\n  }\n  if (n == 9) {\n    return(54)\n  }\n  if (n == 10) {\n    return(88)\n  }\n  if (n == 11) {\n    return(143)\n  }\n  if (n == 12) {\n    return(232)\n  }\n  if (n == 13) {\n    return(376)\n  }\n  if (n == 14) {\n    return(609)\n  }\n  if (n == 15) {\n    return(986)\n  }\n  if (n == 16) {\n    return(1596)\n  }\n  if (n == 17) {\n    return(2583)\n  }\n  if (n == 18) {\n    return(4180)\n  }\n  if (n == 19) {\n    return(6764)\n  }\n  if (n == 20) {\n    return(10945)\n  }\n  if (n == 21) {\n    return(17710)\n  }\n  if (n == 22) {\n    return(28656)\n  }\n  if (n == 23) {\n    return(46367)\n  }\n  if (n == 24) {\n    return(75024)\n  }\n  if (n == 25) {\n    return(121392)\n  }\n  if (n == 26) {\n    return(1964",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  if (n <= 0) {\n    return(0)\n  }\n  else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  if (n == 1) {\n    return (1)\n  }\n  else {\n    return (n + sum_series(n-2))\n  }\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  } else {\n    return(n + sum_series(n - 2))\n  }\n}\n\nsum_series(6)\n",
    "\n  sum <- 0\n  for (i in 0:n/2) {\n    sum <- sum + (n - 2*i)\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 0:(n/2)) {\n    sum <- sum + (n - 2*i)\n  }\n  return(sum)\n}\n",
    "\n    if (n == 1) {\n        return(1)\n    } else {\n        return(n + sum_series(n-2))\n    }\n}\n",
    "\n  sum(n - 2*(0:floor(n/2)))\n}\n",
    "\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(n + sum_series(n-2))\n  }\n}\n",
    "\n  sum <- 0\n  for (i in 0:n/2) {\n    sum <- sum + (n - 2*i)\n  }\n  return(sum)\n}\n"
  ]
}
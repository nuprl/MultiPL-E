{
  "name": "mbpp_430_parabola_directrix",
  "language": "r",
  "prompt": "# Write a function to find the directrix of a parabola.\nparabola_directrix <- function(a, b, c) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- parabola_directrix\n    if(!identical(candidate(5, 3, 2), -198)){quit('no', 1)}\n    if(!identical(candidate(9, 8, 4), -2336)){quit('no', 1)}\n    if(!identical(candidate(2, 4, 6), -130)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  -c / b\n}\n",
    "\n    -c/b\n}\n",
    "\n    # a is the coefficient of x^2\n    # b is the coefficient of x\n    # c is the constant term\n    return(-b/(2*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n    -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # directrix is the line perpendicular to the axis of symmetry\n  # at a distance of 1/(4a) from the vertex\n  # directrix equation is y = -1/(4a)x + d\n  # where d is the y-intercept of the directrix\n  # d = -1/(4a) * (-b/2a) + c\n  d <- -1/(4*a) * (-b/2*a) + c\n  return(d)\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-c/b)\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c) / (4*a))\n}\n"
  ]
}
{
  "name": "mbpp_445_index_multiplication",
  "language": "r",
  "prompt": "# Write a function to perform index wise multiplication of list elements in the given two lists.\nindex_multiplication <- function(test_tup1, test_tup2) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- index_multiplication\n    if(!identical(candidate(list(list(1, 3), list(4, 5), list(2, 9), list(1, 10)), list(list(6, 7), list(3, 9), list(1, 1), list(7, 3))), list(list(6, 21), list(12, 45), list(2, 9), list(7, 30)))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(5, 6), list(3, 10), list(2, 11)), list(list(7, 8), list(4, 10), list(2, 2), list(8, 4))), list(list(14, 32), list(20, 60), list(6, 20), list(16, 44)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(6, 7), list(4, 11), list(3, 12)), list(list(8, 9), list(5, 11), list(3, 3), list(9, 5))), list(list(24, 45), list(30, 77), list(12, 33), list(27, 60)))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  test_tup1 * test_tup2\n}\n",
    "\n  test_tup1 * test_tup2\n}\n",
    "\n    test_tup1 * test_tup2\n}\n",
    "\n  if (length(test_tup1) != length(test_tup2)) {\n    return(\"Length of the two lists are not equal\")\n  }\n  else {\n    return(test_tup1 * test_tup2)\n  }\n}\n",
    "\n  test_tup1 * test_tup2\n}\n",
    "\n  # Write your code here\n  return(test_tup1*test_tup2)\n}\n",
    "\n  return(test_tup1 * test_tup2)\n}\n",
    "\n  if (length(test_tup1) != length(test_tup2)) {\n    print(\"Length of both lists should be same\")\n  } else {\n    for (i in 1:length(test_tup1)) {\n      print(test_tup1[i] * test_tup2[i])\n    }\n  }\n}\n",
    "\n  test_tup1 * test_tup2\n}\n\nindex_multiplication(test_tup1, test_tup2)\n",
    "\n  return(test_tup1 * test_tup2)\n}\n",
    "\n  test_tup1 * test_tup2\n}\n",
    "\n  test_tup1 * test_tup2\n}\n\nindex_multiplication(test_tup1, test_tup2)\n",
    "\n  if (length(test_tup1) == length(test_tup2)) {\n    return(test_tup1 * test_tup2)\n  } else {\n    return(\"Length of both the lists are not equal\")\n  }\n}\n\nindex_multiplication(test_tup1, test_tup2)\n",
    "\n  return(test_tup1 * test_tup2)\n}\n",
    "\n  # Write your code here\n  test_tup1 * test_tup2\n}\n",
    "\n    test_tup1 * test_tup2\n}\n",
    "\n  test_tup1 * test_tup2\n}\n\nindex_multiplication(test_tup1, test_tup2)\n",
    "\n  # Write your code here\n  test_tup1 * test_tup2\n}\n",
    "\n  test_tup1 * test_tup2\n}\n",
    "\n  test_tup1 * test_tup2\n}\n\nindex_multiplication(test_tup1, test_tup2)\n"
  ]
}
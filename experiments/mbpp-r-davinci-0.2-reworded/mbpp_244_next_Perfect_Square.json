{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "r",
  "prompt": "# Write a rthon function to find the next perfect square greater than a given number.\nnext_Perfect_Square <- function(N) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- next_Perfect_Square\n    if(!identical(candidate(35), 36)){quit('no', 1)}\n    if(!identical(candidate(6), 9)){quit('no', 1)}\n    if(!identical(candidate(9), 16)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sqrt(N) %/% 1 == 0\n  return(N+1)\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n    if (N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(-1)\n",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  }\n  else {\n    sqrt(N) %/% 1 == 0\n    if(sqrt(N) %/% 1 == 0) {\n      print(N)\n    }\n    else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(36)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N%%1 != 0) {\n    print(\"Please enter a positive integer\")\n  } else {\n    sqrt(N)%%1 == 0\n    print(N)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    if (sqrt(N) %/% 1 == 0) {\n      print(N)\n    } else {\n      print(ceiling(sqrt(N))^2)\n    }\n  }\n}\n\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n    if (N < 0) {\n        print(\"Enter a positive number\")\n    } else {\n        sqrt(N) %/% 1 == 0\n        print(N)\n    }\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(N)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  if(N %% 1 != 0) {\n    return(\"Not a whole number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)\nnext_Perfect_Square(73)\nnext_Perfect_Square(74)\nnext_Perfect_Square(75)\nnext_Perfect",
    "\n  if (N < 0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(-1)\n",
    "\n  if (N == 0) {\n    return(0)\n  }\n  else if (N == 1) {\n    return(1)\n  }\n  else {\n    return(next_Perfect_Square(N - 1) + 2 * sqrt(N - 1) + 1)\n  }\n}\n\nnext_Perfect_Square(5)\n",
    "\n  if (N %% 1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square is\", N + 1))\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)\nnext_Perfect_Square(73)\nnext_Perfect_Square(74)\nnext_",
    "\n    if (N > 0) {\n        sqrt(N) %/% 1 == 0\n        return(N)\n    } else {\n        return(NA)\n    }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  if(N == 0) {\n    return(1)\n  }\n  if(N == 1) {\n    return(4)\n  }\n  if(N == 2) {\n    return(9)\n  }\n  if(N == 3) {\n    return(16)\n  }\n  if(N == 4) {\n    return(25)\n  }\n  if(N == 5) {\n    return(36)\n  }\n  if(N == 6) {\n    return(49)\n  }\n  if(N == 7) {\n    return(64)\n  }\n  if(N == 8) {\n    return(81)\n  }\n  if(N == 9) {\n    return(100)\n  }\n  if(N == 10) {\n    return(121)\n  }\n  if(N == 11) {\n    return(144)\n  }\n  if(N == 12) {\n    return(169)\n  }\n  if(N == 13) {\n    return(196)\n  }\n  if(N == 14) {\n    return(225)\n  }\n  if(N == 15) {\n    return(256)\n  }\n  if(N == 16) {\n    return(289)\n  }\n  if(N == 17) {\n    return(324)\n  }\n  if(N == 18) {\n    return(361)\n  }\n  if(N == 19) {\n    return(400)\n  }\n  if(N == 20) {\n    return(441)\n  }\n  if(N == 21) {\n    return(484)\n  }\n  if(N == 22) {\n    return(529)\n  }\n  if(N == 23) {\n    return(576)\n  }\n  if(N == 24) {\n    return(625)\n  }\n  if(N == 25) {\n    return(676)\n  }\n  if(N == 26) {\n    return(729)\n  }\n  if",
    "\n  if(N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  x <- sqrt(N)\n  if (x %% 1 == 0) {\n    return(x^2)\n  } else {\n    return((x+1)^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(i*i > N) {\n      return(i*i)\n    }\n    i <- i + 1\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)",
    "\n  if (N <= 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-5)\n",
    "\n  if(N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    if(sqrt(N) %% 1 == 0) {\n      print(N)\n    } else {\n      print(ceiling(sqrt(N))^2)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-37)\n",
    "\n  return(ceiling(sqrt(N))^2)\n}\n\nnext_Perfect_Square(36)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-10)\n",
    "\n  if(N %% 1 != 0) {\n    return(NA)\n  }\n  else {\n    while(TRUE) {\n      if(sqrt(N) %% 1 == 0) {\n        return(N)\n      }\n      else {\n        N <- N + 1\n      }\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(26)\nnext_Perfect_Square(1.5)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\nnext_Perfect_Square(-5)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(N)\n  }\n}\nnext_Perfect_Square(9)\n",
    "\n  if(N>0){\n    if(sqrt(N)%%1==0){\n      return(N)\n    }\n    else{\n      return(ceiling(sqrt(N))^2)\n    }\n  }\n  else{\n    return(NA)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-1)\n",
    "\n    if (N == 0) {\n        return(0)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(0)\nnext_Perfect_Square(1)\nnext_Perfect_Square(2)\nnext_Perfect_Square(3)\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)",
    "\n  sqrt(N) %/% 1 == 0\n  if(sqrt(N) %/% 1 == 0) {\n    return(N)\n  }\n  else {\n    return(next_Perfect_Square(N+1))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(sqrt(N) %% 1 == 0) {\n    return(N)\n  } else {\n    return(next_Perfect_Square(N+1))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  x <- sqrt(N)\n  if (x %% 1 == 0) {\n    return(N)\n  } else {\n    return(ceiling(x)^2)\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(16)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  if (N < 0) {\n    return(N)\n  }\n  else {\n    return(N + 1)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(16)\nnext_Perfect_Square(9)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-1)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)",
    "\n  if (N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-25)\n",
    "\n  if (N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(-10)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square greater than\", N, \"is\", N + 1))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    return(NA)\n  }\n  else {\n    return(N+1)\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if (N %% 1 == 0) {\n    if (N > 0) {\n      sqrt(N) %% 1 == 0\n      if (sqrt(N) %% 1 == 0) {\n        N + 1\n      } else {\n        sqrt(N) %% 1 != 0\n        if (sqrt(N) %% 1 != 0) {\n          N <- N + 1\n          sqrt(N) %% 1 == 0\n          if (sqrt(N) %% 1 == 0) {\n            N\n          } else {\n            sqrt(N) %% 1 != 0\n            if (sqrt(N) %% 1 != 0) {\n              N <- N + 1\n              sqrt(N) %% 1 == 0\n              if (sqrt(N) %% 1 == 0) {\n                N\n              } else {\n                sqrt(N) %% 1 != 0\n                if (sqrt(N) %% 1 != 0) {\n                  N <- N + 1\n                  sqrt(N) %% 1 == 0\n                  if (sqrt(N) %% 1 == 0) {\n                    N\n                  } else {\n                    sqrt(N) %% 1 != 0\n                    if (sqrt(N) %% 1 != 0) {\n                      N <- N + 1\n                      sqrt(N) %% 1 == 0\n                      if (sqrt(N) %% 1 == 0) {\n                        N\n                      } else {\n                        sqrt(N) %% 1 != 0\n                        if (sqrt(N) %% 1 != 0) {\n                          N <- N + 1\n                          sqrt(N) %% 1 == 0\n                          if (sqrt(N) %% 1 == 0) {\n                            N\n                          } else {\n                            sqrt(N) %% 1 != 0\n                            if (sqrt(N) %% 1 != 0) {\n                              N <- N + 1\n                              sqrt(N) %% 1 == 0\n                              if (sqrt(N) %% 1 == 0) {\n                                N\n                              } else {\n                                sqrt(N) %% 1 != 0\n                                if (sqrt(N) %% 1 != 0) {\n                                  N <- N + 1\n                                  sqrt",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n    if (N < 0) {\n        return(\"Please enter a positive integer\")\n    } else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(10)\n",
    "\n    if (N == 0) {\n        return(0)\n    }\n    if (N == 1) {\n        return(1)\n    }\n    if (N == 2) {\n        return(4)\n    }\n    if (N == 3) {\n        return(9)\n    }\n    if (N == 4) {\n        return(16)\n    }\n    if (N == 5) {\n        return(25)\n    }\n    if (N == 6) {\n        return(36)\n    }\n    if (N == 7) {\n        return(49)\n    }\n    if (N == 8) {\n        return(64)\n    }\n    if (N == 9) {\n        return(81)\n    }\n    if (N == 10) {\n        return(100)\n    }\n    if (N == 11) {\n        return(121)\n    }\n    if (N == 12) {\n        return(144)\n    }\n    if (N == 13) {\n        return(169)\n    }\n    if (N == 14) {\n        return(196)\n    }\n    if (N == 15) {\n        return(225)\n    }\n    if (N == 16) {\n        return(256)\n    }\n    if (N == 17) {\n        return(289)\n    }\n    if (N == 18) {\n        return(324)\n    }\n    if (N == 19) {\n        return(361)\n    }\n    if (N == 20) {\n        return(400)\n    }\n    if (N == 21) {\n        return(441)\n    }\n    if (N == 22) {\n        return(484)\n    }\n    if (N == 23) {\n        return(529)\n    }\n    if (N == 24) {\n        return(576)\n    }\n    if (N == 25) {\n        return(625)\n    }\n    if (N == 26) {\n        return(676)\n    }\n    if (N == 27) {\n        return(729)\n    }\n    if (N == 28",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(sqrt(N) %% 1 == 0) {\n    return(N)\n  }\n  else {\n    return(next_Perfect_Square(N+1))\n  }\n}\nnext_Perfect_Square(24)\n",
    "\n  if(N < 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)",
    "\n    if (N < 0) {\n        return(\"Please enter a positive number\")\n    } else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(-25)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(i^2 > N) {\n      return(i^2)\n    }\n    i <- i + 1\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  sqrt(N) %/% 1 == 0\n  if(sqrt(N) %/% 1 == 0) {\n    return(N)\n  } else {\n    return(N + 1)\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n    if(N<0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  if(N < 0) {\n    return(N)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\nnext_Perfect_Square(0)\n",
    "\n  if (N%%1 != 0) {\n    return(\"Not a whole number\")\n  } else {\n    return(sqrt(N)%%1 == 0)\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if(N<0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-1)\n",
    "\n  if(N < 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(paste(\"The next perfect square is\", (sqrt(N)+1)^2))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    print(N + 1)\n    while (sqrt(N + 1) %% 1 != 0) {\n      N <- N + 1\n    }\n    print(N + 1)\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(sqrt(N) + 1)\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    print(sqrt(N)+1)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n    if (sqrt(N) %% 1 == 0) {\n        return(N)\n    } else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\n",
    "\n  if (N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(-5)\n",
    "\n  sqrt(N) %% 1 == 0\n  if(sqrt(N) %% 1 == 0) {\n    print(N)\n  } else {\n    print(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  if (N < 0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  if(N < 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(paste(\"The next perfect square greater than\", N, \"is\", (sqrt(N)+1)^2))\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(paste(\"The next perfect square is\", N + 1))\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(16)\nnext_Perfect_Square(-25)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(N + 1)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(16)\nnext_Perfect_Square(-9)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\n\nnext_Perfect_Square(25)\n",
    "\n    if (N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  sqrt(N) %% 1 == 0\n  if (sqrt(N) %% 1 == 0) {\n    print(N)\n  } else {\n    print(N + 1)\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(\"Invalid Input\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(-1)\n",
    "\n  if (N < 0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext",
    "\n  if(N %% 1 != 0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n    if(N%%1 != 0) {\n        return(\"Not a valid input\")\n    }\n    else {\n        sqrt_N <- sqrt(N)\n        if(sqrt_N%%1 == 0) {\n            return(N+1)\n        }\n        else {\n            return(ceiling(sqrt_N)*ceiling(sqrt_N))\n        }\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)\nnext_Perfect_Square(73)\nnext_Perfect_Square(74)\nnext_Perfect_Square(75)\nnext_Perfect_Square(76)\nnext_Perfect_Square(77)\nnext_Perfect_Square(78)\nnext_Perfect_Square(79)\nnext_Perfect_Square(80)",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  }\n  else {\n    sqrt(N) %/% 1 == 0\n    print(paste(\"The next perfect square greater than\", N, \"is\", N+1))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  } else {\n    x <- sqrt(N)\n    if(x%%1 == 0) {\n      print(N)\n    } else {\n      print(ceiling(x)^2)\n    }\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-5)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter an integer value\")\n  }\n  else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(paste(\"The next perfect square is\", N+1))\n    }\n    else {\n      print(paste(\"The next perfect square is\", (sqrt(N)+1)^2))\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(9)\nnext_Perfect_Square(-1)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Input is not an integer\")\n  } else {\n    print(sqrt(N) + 1)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(23)\nnext_Perfect_Square(22)\nnext_Perfect_Square(21)\nnext_Perfect_Square(20)\nnext_Perfect_Square(19)\nnext_Perfect_Square(18)\nnext_Perfect_Square(17)\nnext_Perfect_Square(16)\nnext_Perfect_Square(15)\nnext_Perfect_Square(14)\nnext_Perfect_Square(13)\nnext_Perfect_Square(12)\nnext_Perfect_Square(11)\nnext_Perfect_Square(10)\nnext_Perfect_Square(9)\nnext_Perfect_Square(8)\nnext_Perfect_Square(7)\nnext_Perfect_Square(6)\nnext_Perfect_Square(5)\nnext_Perfect_Square(4)\nnext_Perfect_Square(3)\nnext_Perfect_Square(2)\nnext_Perfect_Square(1)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-1)\nnext_Perfect_Square(-2)\nnext_Perfect_Square(-3)\nnext_Perfect_Square(-4)\nnext_Perfect_Square(-5)\nnext_Perfect_Square(-6)\nnext_Perfect_Square(-7)\nnext_Perfect_Square(-8)\nnext_Perfect_Square(-9)\nnext_Perfect_Square(-10)\nnext_Perfect_Square(-11)\nnext_Perfect_Square(-12)\nnext_Perfect_Square(-13)\nnext_Perfect_Square(-14)\nnext_Perfect_Square(-15)\nnext_Perfect_Square(-16)\nnext_Perfect_Square(-17)\nnext_Perfect_Square(-18)\nnext_Perfect_Square(-19)\nnext_Perfect_Square(-20)\nnext_Perfect_Square(-21)\nnext_Perfect_Square(-22)\nnext_Perfect_Square(-23)\nnext_Perfect_Square(-24)\nnext_Perfect_Square(-25)\nnext_Perfect_Square(25",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  if(N<0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    if(sqrt(N) %/% 1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(-1)\n",
    "\n  sqrt(N) %/% 1 == 0\n  if(sqrt(N) %/% 1 == 0) {\n    return(sqrt(N)+1)\n  } else {\n    return(sqrt(N)+1)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if (N < 0) {\n    return(\"N should be greater than 0\")\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  sqrt(N) %% 1 == 0\n  sqrt(N + 1) %% 1 == 0\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt_N <- sqrt(N)\n    if (sqrt_N == floor(sqrt_N)) {\n      print(paste(\"The next perfect square is\", N + 1))\n    } else {\n      print(paste(\"The next perfect square is\", ceiling(sqrt_N)^2))\n    }\n  }\n}\n\nnext_Perfect_Square(36)\nnext_Perfect_Square(25)\nnext_Perfect_Square(-25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(5)\n",
    "\n  if(N %% 1 != 0) {\n    print(\"Not a valid number\")\n  } else {\n    sqrt_N <- sqrt(N)\n    if(sqrt_N %% 1 == 0) {\n      print(N)\n    } else {\n      print(ceiling(sqrt_N)^2)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)\nnext_Perfect_Square(73)\nnext_Perfect_Square(74)\nnext_Perfect_Square(75)\nnext_Perfect_Square(76)\nnext_Perfect_Square(77)\nnext_Perfect_Square(78)\nnext_Perfect_Square(79)\nnext_Perfect_Square(80)\nnext_Perfect_Square(81)\nnext",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(\"Please enter a positive number\")\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n    if (N < 0) {\n        print(\"Please enter a positive number\")\n    } else {\n        sqrt(N) %/% 1 == 0\n        if (sqrt(N) %/% 1 == 0) {\n            print(N)\n        } else {\n            print(N + 1)\n        }\n    }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n    sqrt(N) %/% 1 == 0\n    return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n    x <- sqrt(N)\n    if (x == floor(x)) {\n        return(x^2)\n    } else {\n        return(ceiling(x)^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n    sqrt(N) %/% 1 == 0\n    if(sqrt(N) %/% 1 == 0) {\n        print(sqrt(N) + 1)\n    } else {\n        print(sqrt(N) + 2)\n    }\n}\n\nnext_Perfect_Square(15)\n",
    "\n  sqrt(N) %/% 1 == 0\n  N <- N + 1\n  sqrt(N) %/% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(0)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter a valid number\")\n  } else {\n    sqrt(N)%%1 == 0\n    print(N)\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N<0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-1)\n",
    "\n  if(N %% 1 != 0) {\n    print(\"Please enter a valid integer\")\n  }\n  else {\n    sqrt(N) %% 1 == 0\n    if(sqrt(N) %% 1 == 0) {\n      print(N)\n    }\n    else {\n      print(N + 1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  if (N %% 1 != 0) {\n    stop(\"N must be an integer\")\n  }\n  if (N < 0) {\n    stop(\"N must be positive\")\n  }\n  if (N == 0) {\n    return(1)\n  }\n  if (N == 1) {\n    return(4)\n  }\n  if (N == 2) {\n    return(4)\n  }\n  if (N == 3) {\n    return(9)\n  }\n  if (N == 4) {\n    return(9)\n  }\n  if (N == 5) {\n    return(9)\n  }\n  if (N == 6) {\n    return(9)\n  }\n  if (N == 7) {\n    return(16)\n  }\n  if (N == 8) {\n    return(16)\n  }\n  if (N == 9) {\n    return(16)\n  }\n  if (N == 10) {\n    return(16)\n  }\n  if (N == 11) {\n    return(16)\n  }\n  if (N == 12) {\n    return(16)\n  }\n  if (N == 13) {\n    return(16)\n  }\n  if (N == 14) {\n    return(16)\n  }\n  if (N == 15) {\n    return(16)\n  }\n  if (N == 16) {\n    return(25)\n  }\n  if (N == 17) {\n    return(25)\n  }\n  if (N == 18) {\n    return(25)\n  }\n  if (N == 19) {\n    return(25)\n  }\n  if (N == 20) {\n    return(25)\n  }\n  if (N == 21) {\n    return(25)\n  }\n  if (N == 22) {\n    return(25)\n  }\n  if (N == 23) {\n    return(25)\n  }\n  if (N == 24) {\n    return(25)\n  }\n  if (N == 25) {\n    return(36)\n",
    "\n  if (N %% 1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square is:\", N + 1))\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  if (N == 0) {\n    return(1)\n  }\n  if (N == 1) {\n    return(4)\n  }\n  if (N == 2) {\n    return(9)\n  }\n  if (N == 3) {\n    return(16)\n  }\n  if (N == 4) {\n    return(25)\n  }\n  if (N == 5) {\n    return(36)\n  }\n  if (N == 6) {\n    return(49)\n  }\n  if (N == 7) {\n    return(64)\n  }\n  if (N == 8) {\n    return(81)\n  }\n  if (N == 9) {\n    return(100)\n  }\n  if (N == 10) {\n    return(121)\n  }\n  if (N == 11) {\n    return(144)\n  }\n  if (N == 12) {\n    return(169)\n  }\n  if (N == 13) {\n    return(196)\n  }\n  if (N == 14) {\n    return(225)\n  }\n  if (N == 15) {\n    return(256)\n  }\n  if (N == 16) {\n    return(289)\n  }\n  if (N == 17) {\n    return(324)\n  }\n  if (N == 18) {\n    return(361)\n  }\n  if (N == 19) {\n    return(400)\n  }\n  if (N == 20) {\n    return(441)\n  }\n  if (N == 21) {\n    return(484)\n  }\n  if (N == 22) {\n    return(529)\n  }\n  if (N == 23) {\n    return(576)\n  }\n  if (N == 24) {\n    return(625)\n  }\n  if (N == 25) {\n    return(676)\n  }\n  if (N == 26) {\n    return(729)\n  }\n  if (N == 27",
    "\n    if (N %% 1 != 0) {\n        print(\"Please enter an integer\")\n    } else {\n        sqrt(N) %% 1 == 0\n        if (sqrt(N) %% 1 == 0) {\n            print(N)\n        } else {\n            print(N + 1)\n        }\n    }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square greater than\", N, \"is\", N + 1))\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    print(N + 1)\n  }\n}\n\nnext_Perfect_Square(4)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter a positive integer\")\n  } else {\n    if(N < 0) {\n      print(\"Please enter a positive integer\")\n    } else {\n      if(N == 0) {\n        print(\"Please enter a positive integer\")\n      } else {\n        if(N == 1) {\n          print(\"Please enter a positive integer\")\n        } else {\n          if(N == 2) {\n            print(\"Please enter a positive integer\")\n          } else {\n            if(N == 3) {\n              print(\"Please enter a positive integer\")\n            } else {\n              if(N == 4) {\n                print(\"Please enter a positive integer\")\n              } else {\n                if(N == 5) {\n                  print(\"Please enter a positive integer\")\n                } else {\n                  if(N == 6) {\n                    print(\"Please enter a positive integer\")\n                  } else {\n                    if(N == 7) {\n                      print(\"Please enter a positive integer\")\n                    } else {\n                      if(N == 8) {\n                        print(\"Please enter a positive integer\")\n                      } else {\n                        if(N == 9) {\n                          print(\"Please enter a positive integer\")\n                        } else {\n                          if(N == 10) {\n                            print(\"Please enter a positive integer\")\n                          } else {\n                            if(N == 11) {\n                              print(\"Please enter a positive integer\")\n                            } else {\n                              if(N == 12) {\n                                print(\"Please enter a positive integer\")\n                              } else {\n                                if(N == 13) {\n                                  print(\"Please enter a positive integer\")\n                                } else {\n                                  if(N == 14) {\n                                    print(\"Please enter a positive integer\")\n                                  } else {\n                                    if(N == 15) {\n                                      print(\"Please enter a positive integer\")\n                                    } else {\n                                      if(N == 16) {\n                                        print(\"Please enter a positive integer\")\n                                      } else {\n                                        if(N == 17) {\n                                          print(\"Please enter a positive integer\")\n                                        } else {\n                                ",
    "\n  sqrt(N) %/% 1 == 0\n  N <- N + 1\n  sqrt(N) %/% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  if (N == 0) {\n    return(1)\n  }\n  if (N == 1) {\n    return(4)\n  }\n  if (N == 2) {\n    return(4)\n  }\n  if (N == 3) {\n    return(9)\n  }\n  if (N == 4) {\n    return(9)\n  }\n  if (N == 5) {\n    return(9)\n  }\n  if (N == 6) {\n    return(9)\n  }\n  if (N == 7) {\n    return(16)\n  }\n  if (N == 8) {\n    return(16)\n  }\n  if (N == 9) {\n    return(16)\n  }\n  if (N == 10) {\n    return(16)\n  }\n  if (N == 11) {\n    return(16)\n  }\n  if (N == 12) {\n    return(16)\n  }\n  if (N == 13) {\n    return(16)\n  }\n  if (N == 14) {\n    return(16)\n  }\n  if (N == 15) {\n    return(16)\n  }\n  if (N == 16) {\n    return(25)\n  }\n  if (N == 17) {\n    return(25)\n  }\n  if (N == 18) {\n    return(25)\n  }\n  if (N == 19) {\n    return(25)\n  }\n  if (N == 20) {\n    return(25)\n  }\n  if (N == 21) {\n    return(25)\n  }\n  if (N == 22) {\n    return(25)\n  }\n  if (N == 23) {\n    return(25)\n  }\n  if (N == 24) {\n    return(25)\n  }\n  if (N == 25) {\n    return(25)\n  }\n  if (N == 26) {\n    return(25)\n  }\n  if (N == 27",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N<0) {\n    print(\"Negative number\")\n  }\n  else {\n    x <- sqrt(N)\n    if(x%%1==0) {\n      print(N)\n    }\n    else {\n      print(ceiling(x)*ceiling(x))\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-25)\n",
    "\n  if(N %% 1 != 0) {\n    print(\"Please enter a positive integer\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(N)\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N<0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(0)\nnext_Perfect_Square(-25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  } else {\n    sqrt_N <- sqrt(N)\n    if (sqrt_N == round(sqrt_N)) {\n      return(N)\n    } else {\n      return(ceiling(sqrt_N)^2)\n    }\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(36)\n",
    "\n  if(N<0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n    if(N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    print(\"The given number is not an integer\")\n  } else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\n\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    return(NA)\n  }\n  else {\n    sqrt_N <- sqrt(N)\n    if(sqrt_N%%1 != 0) {\n      return(NA)\n    }\n    else {\n      return(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\n",
    "\n    if(N<=0) {\n        return(0)\n    }\n    else {\n        sqrt_N <- sqrt(N)\n        if(sqrt_N == floor(sqrt_N)) {\n            return(N)\n        }\n        else {\n            return(next_Perfect_Square(N+1))\n        }\n    }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  if (N < 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\n",
    "\n  N <- N + 1\n  while(TRUE) {\n    if(sqrt(N) %% 1 == 0) {\n      return(N)\n    }\n    N <- N + 1\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)",
    "\n  i <- 1\n  while(TRUE) {\n    if(i^2 > N) {\n      return(i^2)\n    }\n    i <- i + 1\n  }\n}\n\nnext_Perfect_Square(15)\n",
    "\n  if (N %% 1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square is\", N + 1))\n  }\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(0)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)",
    "\n  if(N%%1==0) {\n    if(N<=0) {\n      print(\"Enter a positive number\")\n    }\n    else {\n      sqrt(N)%%1==0\n      if(sqrt(N)%%1==0) {\n        print(N)\n      }\n      else {\n        print(N+1)\n        while(sqrt(N+1)%%1!=0) {\n          N <- N+1\n        }\n        print(N+1)\n      }\n    }\n  }\n  else {\n    print(\"Enter a positive integer\")\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)",
    "\n    if (sqrt(N) %% 1 == 0) {\n        return(N)\n    } else {\n        return(next_Perfect_Square(N + 1))\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number.\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square is: \", (sqrt(N) + 1)^2))\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(100)\nnext_Perfect_Square(1000)\nnext_Perfect_Square(-1)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\nnext_Perfect_Square(25)\nnext_Perfect_Square(-10)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  if (N == 0) {\n    return(1)\n  }\n  if (N == 1) {\n    return(4)\n  }\n  if (N == 2) {\n    return(9)\n  }\n  if (N == 3) {\n    return(16)\n  }\n  if (N == 4) {\n    return(25)\n  }\n  if (N == 5) {\n    return(36)\n  }\n  if (N == 6) {\n    return(49)\n  }\n  if (N == 7) {\n    return(64)\n  }\n  if (N == 8) {\n    return(81)\n  }\n  if (N == 9) {\n    return(100)\n  }\n  if (N == 10) {\n    return(121)\n  }\n  if (N == 11) {\n    return(144)\n  }\n  if (N == 12) {\n    return(169)\n  }\n  if (N == 13) {\n    return(196)\n  }\n  if (N == 14) {\n    return(225)\n  }\n  if (N == 15) {\n    return(256)\n  }\n  if (N == 16) {\n    return(289)\n  }\n  if (N == 17) {\n    return(324)\n  }\n  if (N == 18) {\n    return(361)\n  }\n  if (N == 19) {\n    return(400)\n  }\n  if (N == 20) {\n    return(441)\n  }\n  if (N == 21) {\n    return(484)\n  }\n  if (N == 22) {\n    return(529)\n  }\n  if (N == 23) {\n    return(576)\n  }\n  if (N == 24) {\n    return(625)\n  }\n  if (N == 25) {\n    return(676)\n  }\n  if (N == 26) {\n    return(729)\n  }\n  if (N == 27",
    "\n  if(N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(N)\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  return(ceiling(sqrt(N))^2)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  }\n  else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square greater than\", N, \"is\", N + 1))\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n    if(N %% 1 == 0) {\n        return(sqrt(N) + 1)\n    }\n    else {\n        return(\"Not a perfect square\")\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(-1)\n",
    "\n    sqrt(N) %/% 1 == 0\n    return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N %% 1 != 0) {\n    return(\"N is not an integer\")\n  }\n  else {\n    if(N < 0) {\n      return(\"N is not positive\")\n    }\n    else {\n      if(N == 0) {\n        return(\"1 is the next perfect square\")\n      }\n      else {\n        if(N == 1) {\n          return(\"4 is the next perfect square\")\n        }\n        else {\n          if(N == 2) {\n            return(\"4 is the next perfect square\")\n          }\n          else {\n            if(N == 3) {\n              return(\"4 is the next perfect square\")\n            }\n            else {\n              if(N == 4) {\n                return(\"9 is the next perfect square\")\n              }\n              else {\n                if(N == 5) {\n                  return(\"9 is the next perfect square\")\n                }\n                else {\n                  if(N == 6) {\n                    return(\"9 is the next perfect square\")\n                  }\n                  else {\n                    if(N == 7) {\n                      return(\"9 is the next perfect square\")\n                    }\n                    else {\n                      if(N == 8) {\n                        return(\"9 is the next perfect square\")\n                      }\n                      else {\n                        if(N == 9) {\n                          return(\"16 is the next perfect square\")\n                        }\n                        else {\n                          if(N == 10) {\n                            return(\"16 is the next perfect square\")\n                          }\n                          else {\n                            if(N == 11) {\n                              return(\"16 is the next perfect square\")\n                            }\n                            else {\n                              if(N == 12) {\n                                return(\"16 is the next perfect square\")\n                              }\n                              else {\n                                if(N == 13) {\n                                  return(\"16 is the next perfect square\")\n                                }\n                                else {\n                                  if(N == 14) {\n                                    return(\"16 is the next perfect square\")\n                                  }\n                                  else {\n                                    if(N == 15) {\n                                      return(\"16 is the next perfect square\")\n                                    }\n                                    else {\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-9)\n",
    "\n    if(N < 0) {\n        return(\"Please enter a positive number\")\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(10)\nnext_Perfect_Square(-10)\n",
    "\n  if(N%%1 != 0) {\n    return(\"Not a whole number\")\n  }\n  else {\n    return(sqrt(N)%%1 == 0)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  }\n  else {\n    sqrt(N) %/% 1 == 0\n    if(sqrt(N) %/% 1 == 0) {\n      print(N)\n    }\n    else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(-25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  if(N %% 1 != 0) {\n    print(\"Please enter a valid number\")\n  } else {\n    sqrt(N) %% 1 == 0\n    if(sqrt(N) %% 1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n    if(N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n    if (N == 0) {\n        return(0)\n    }\n    else {\n        return(N + 1)\n    }\n}\n\nnext_Perfect_Square(0)\nnext_Perfect_Square(1)\nnext_Perfect_Square(2)\nnext_Perfect_Square(3)\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(",
    "\n  if(N < 0) {\n    return(NULL)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    print(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(4)\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(",
    "\n    x <- sqrt(N)\n    if (x == round(x)) {\n        return(N)\n    } else {\n        return(ceiling(x)^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n  x <- sqrt(N)\n  if (x == floor(x)) {\n    return(N)\n  } else {\n    return(ceiling(x)^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\n",
    "\n    if (N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Not a whole number\")\n  } else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)",
    "\n  if (N%%1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N)%%1 == 0\n    if (sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(-1)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    print(sqrt(N)%%1 == 0)\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(24)\nnext_Perfect_Square(26)\nnext_Perfect_Square(25.5)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(36)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    if (sqrt(N) %/% 1 == 0) {\n      print(N)\n    } else {\n      print(ceiling(sqrt(N))^2)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-25)\n",
    "\n  x <- sqrt(N)\n  if (x %% 1 == 0) {\n    return(N)\n  } else {\n    return(ceiling(x)^2)\n  }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(8)\nnext_Perfect_Square(10)\n",
    "\n  if (N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(N)\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    sqrt_N <- sqrt(N)\n    if(sqrt_N == floor(sqrt_N)) {\n      return(N)\n    }\n    else {\n      return(floor(sqrt_N + 1)^2)\n    }\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(16)\nnext_Perfect_Square(37)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N %% 1 != 0) {\n    print(\"Please enter an integer\")\n  } else {\n    sqrt(N) %% 1 == 0\n    print(paste(\"The next perfect square is\", N+1))\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\n",
    "\n    if (sqrt(N) %% 1 == 0) {\n        return(N)\n    }\n    else {\n        return(next_Perfect_Square(N+1))\n    }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(10)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\n",
    "\n  sqrt(N) %/% 1 == 0\n  N <- N + 1\n  sqrt(N) %/% 1 == 0\n  print(N)\n}\n\nnext_Perfect_Square(25)\n",
    "\n  if(N<0) {\n    print(\"Please enter a positive number\")\n  }\n  else {\n    sqrt(N) %/% 1 == 0\n    print(sqrt(N))\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    print(\"Please enter a positive number\")\n  } else {\n    sqrt(N) %/% 1 == 0\n    print(paste(\"The next perfect square is:\", (sqrt(N) + 1)^2))\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n    if(N < 0) {\n        return(NA)\n    }\n    else {\n        sqrt_N <- sqrt(N)\n        if(sqrt_N == trunc(sqrt_N)) {\n            return(N)\n        }\n        else {\n            return(ceiling(sqrt_N)^2)\n        }\n    }\n}\n",
    "\n    sqrt(N) %% 1 == 0\n    if (sqrt(N) %% 1 == 0) {\n        return(N)\n    } else {\n        return(N + 1)\n    }\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %% 1 == 0\n  return(N+1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if (N < 0) {\n    return(NA)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(10)\n",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter an integer\")\n  }\n  else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    }\n    else {\n      print(N+1)\n    }\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\n",
    "\n  sqrt(N) %/% 1 == 0\n  if(sqrt(N) %/% 1 == 0) {\n    print(paste(\"The next perfect square is\", N + 1))\n  } else {\n    print(paste(\"The next perfect square is\", N + 2))\n  }\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n    if (N < 0) {\n        print(\"Please enter a positive number\")\n    } else {\n        sqrt(N) %% 1 == 0\n        if (sqrt(N) %% 1 == 0) {\n            print(N)\n        } else {\n            print(N + 1)\n        }\n    }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\n",
    "\n  if(N<0) {\n    return(0)\n  } else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n",
    "\n  sqrt(N) %/% 1 == 0\n  return(N + 1)\n}\nnext_Perfect_Square(25)\n",
    "\n  if(N < 0) {\n    return(NA)\n  }\n  else {\n    return(ceiling(sqrt(N))^2)\n  }\n}\n\nnext_Perfect_Square(25)\nnext_Perfect_Square(37)\nnext_Perfect_Square(-9)\n",
    "\n    if(N < 0) {\n        return(NA)\n    }\n    else {\n        return(ceiling(sqrt(N))^2)\n    }\n}\n\nnext_Perfect_Square(5)\nnext_Perfect_Square(6)\nnext_Perfect_Square(7)\nnext_Perfect_Square(8)\nnext_Perfect_Square(9)\nnext_Perfect_Square(10)\nnext_Perfect_Square(11)\nnext_Perfect_Square(12)\nnext_Perfect_Square(13)\nnext_Perfect_Square(14)\nnext_Perfect_Square(15)\nnext_Perfect_Square(16)\nnext_Perfect_Square(17)\nnext_Perfect_Square(18)\nnext_Perfect_Square(19)\nnext_Perfect_Square(20)\nnext_Perfect_Square(21)\nnext_Perfect_Square(22)\nnext_Perfect_Square(23)\nnext_Perfect_Square(24)\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)",
    "\n  if(N%%1 != 0) {\n    print(\"Please enter a positive integer\")\n  } else {\n    sqrt(N)%%1 == 0\n    if(sqrt(N)%%1 == 0) {\n      print(N)\n    } else {\n      print(N+1)\n    }\n  }\n}\nnext_Perfect_Square(25)\nnext_Perfect_Square(26)\nnext_Perfect_Square(27)\nnext_Perfect_Square(28)\nnext_Perfect_Square(29)\nnext_Perfect_Square(30)\nnext_Perfect_Square(31)\nnext_Perfect_Square(32)\nnext_Perfect_Square(33)\nnext_Perfect_Square(34)\nnext_Perfect_Square(35)\nnext_Perfect_Square(36)\nnext_Perfect_Square(37)\nnext_Perfect_Square(38)\nnext_Perfect_Square(39)\nnext_Perfect_Square(40)\nnext_Perfect_Square(41)\nnext_Perfect_Square(42)\nnext_Perfect_Square(43)\nnext_Perfect_Square(44)\nnext_Perfect_Square(45)\nnext_Perfect_Square(46)\nnext_Perfect_Square(47)\nnext_Perfect_Square(48)\nnext_Perfect_Square(49)\nnext_Perfect_Square(50)\nnext_Perfect_Square(51)\nnext_Perfect_Square(52)\nnext_Perfect_Square(53)\nnext_Perfect_Square(54)\nnext_Perfect_Square(55)\nnext_Perfect_Square(56)\nnext_Perfect_Square(57)\nnext_Perfect_Square(58)\nnext_Perfect_Square(59)\nnext_Perfect_Square(60)\nnext_Perfect_Square(61)\nnext_Perfect_Square(62)\nnext_Perfect_Square(63)\nnext_Perfect_Square(64)\nnext_Perfect_Square(65)\nnext_Perfect_Square(66)\nnext_Perfect_Square(67)\nnext_Perfect_Square(68)\nnext_Perfect_Square(69)\nnext_Perfect_Square(70)\nnext_Perfect_Square(71)\nnext_Perfect_Square(72)"
  ]
}
{
  "name": "mbpp_411_snake_to_camel",
  "language": "r",
  "prompt": "# Write a function to convert the given snake case string to camel case string.\nsnake_to_camel <- function(word) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- snake_to_camel\n    if(!identical(candidate('android_tv'), 'AndroidTv')){quit('no', 1)}\n    if(!identical(candidate('google_pixel'), 'GooglePixel')){quit('no', 1)}\n    if(!identical(candidate('apple_watch'), 'AppleWatch')){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # Split the word into a vector of words\n  words <- strsplit(word, \"_\")[[1]]\n  # Capitalize the first letter of each word\n  words <- toupper(substring(words, 1, 1)) * substring(words, 2)\n  # Return the words joined together\n  return(paste(words, collapse=\"\"))\n}\n",
    "\n    word <- strsplit(word, \"_\")[[1]]\n    word <- paste(word[1], toupper(substr(word[-1], 1, 1)), substr(word[-1], 2, nchar(word[-1])), sep = \"\", collapse = \"\")\n    return(word)\n}\n",
    "\n  # Split the word into a vector of words\n  words <- strsplit(word, \"_\")[[1]]\n  # Capitalize the first letter of each word\n  words <- paste0(toupper(substring(words, 1, 1)), substring(words, 2))\n  # Paste the words together\n  paste(words, collapse = \"\")\n}\n",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[1] <- tolower(word[1])\n  word <- paste(word, collapse = \"\")\n  word <- gsub(\"(.)([A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([a-z])([0-9])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([a-z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([A-Z])([0-9])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([a-z])([A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([a-z])([A-Z][a-z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([a-z])([0-9])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([A-Z])([A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([A-Z])([A-Z][A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([0-9][0-9])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([0-9])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([A-Z][a-z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([a-z][a-z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([0-9])([A-Z][A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"([a-z])([A",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[1] <- tolower(word[1])\n  word[2:length(word)] <- toupper(word[2:length(word)])\n  word <- paste(word, collapse = \"\")\n  return(word)\n}\n",
    "\n  word <- gsub(\"_([a-z])\", \"\\\\U\\\\1\", word)\n  word <- gsub(\"_\", \"\", word)\n  return(word)\n}\n",
    "\n  # Split the word into a vector of words\n  words <- strsplit(word, \"_\")[[1]]\n  # Capitalize the first letter of each word\n  words <- paste0(toupper(substring(words, 1, 1)), substring(words, 2))\n  # Concatenate the words together\n  paste(words, collapse = \"\")\n}\n",
    "\n  # Split the word into a vector of characters\n  word_vector <- strsplit(word, \"\")[[1]]\n  # Iterate through the vector\n  for (i in seq_along(word_vector)) {\n    # If the character is an underscore\n    if (word_vector[i] == \"_\") {\n      # Replace the underscore with the next character in upper case\n      word_vector[i] <- toupper(word_vector[i + 1])\n      # Remove the next character\n      word_vector <- word_vector[-c(i + 1)]\n    }\n  }\n  # Return the word\n  return(paste(word_vector, collapse = \"\"))\n}\n\nsnake_to_camel(\"hello_world\")\nsnake_to_camel(\"hello_world_again\")\n",
    "\n  words <- strsplit(word, \"_\")[[1]]\n  paste(words[1], toupper(substring(words[-1], 1, 1)), substring(words[-1], 2), sep = \"\", collapse = \"\")\n}\n\nsnake_to_camel(\"hello_world\")\n",
    "\n  word <- gsub(\"_\", \" \", word)\n  word <- gsub(\"(\\\\w)([A-Z])\", \"\\\\1 \\\\2\", word)\n  word <- gsub(\"\\\\b([A-Za-z])\", \"\\\\U\\\\1\", word)\n  word <- gsub(\" \", \"\", word)\n  return(word)\n}\n\nsnake_to_camel(\"hello_world\")\nsnake_to_camel(\"hello_world_again\")\nsnake_to_camel(\"hello_world_again_and_again\")\n",
    "\n  # Split the word into a vector of words\n  words <- strsplit(word, \"_\")[[1]]\n  # Convert the first word to lower case\n  words[1] <- tolower(words[1])\n  # Convert the remaining words to title case\n  words[-1] <- sapply(words[-1], function(x) {\n    paste(toupper(substring(x, 1, 1)), substring(x, 2), sep = \"\")\n  })\n  # Return the words as a single string\n  return(paste(words, collapse = \"\"))\n}\n\nsnake_to_camel(\"hello_world\")\n",
    "\n  word <- gsub(\"_([a-z])\", \"\\\\U\\\\1\", word)\n  word <- gsub(\"_\", \"\", word)\n  return(word)\n}\n",
    "\n  word <- strsplit(word, \"_\")\n  word <- unlist(word)\n  word <- word[-1]\n  word <- paste(word, collapse = \"\")\n  word <- paste(toupper(substring(word, 1, 1)), substring(word, 2), sep = \"\")\n  word <- paste(tolower(substring(word, 1, 1)), substring(word, 2), sep = \"\")\n  return(word)\n}\n\nsnake_to_camel(\"hello_world\")\n",
    "\n  word <- gsub(\"_\", \" \", word)\n  word <- gsub(\"(\\\\w)(\\\\w*)\", \"\\\\U\\\\1\\\\L\\\\2\", word)\n  word <- gsub(\" \", \"\", word)\n  return(word)\n}\n\nsnake_to_camel(\"hello_world\")\n",
    "\n  word <- gsub(\"_.\", toupper, word)\n  word <- gsub(\"_\", \"\", word)\n  return(word)\n}\n",
    "\n  word <- gsub(\"_([a-z])\", \"\\\\U\\\\1\", word)\n  word <- gsub(\"^([a-z])\", \"\\\\U\\\\1\", word)\n  return(word)\n}\n\nsnake_to_camel(\"hello_world\")\nsnake_to_camel(\"hello_world_again\")\nsnake_to_camel(\"hello_world_again_and_again\")\n",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[1] <- tolower(word[1])\n  word[2:length(word)] <- toupper(word[2:length(word)])\n  return(paste(word, collapse = \"\"))\n}\n\nsnake_to_camel(\"hello_world\")\nsnake_to_camel(\"hello_world_again\")\n",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[2:length(word)] <- toupper(word[2:length(word)])\n  word <- paste(word, collapse = \"\")\n  return(word)\n}\n",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[1] <- tolower(word[1])\n  word[-1] <- toupper(word[-1])\n  return(paste(word, collapse = \"\"))\n}\n\nsnake_to_camel(\"hello_world\")\n",
    "\n  word <- strsplit(word, \"_\")[[1]]\n  word[1] <- tolower(word[1])\n  word[-1] <- toupper(word[-1])\n  return(paste(word, collapse = \"\"))\n}\n"
  ]
}
{
  "name": "mbpp_599_sum_average",
  "language": "r",
  "prompt": "# Write a function to find sum and average of first n natural numbers.\nsum_average <- function(number) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_599_sum_average.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- sum_average\n    if(!identical(candidate(10), list(55, 5.5))){quit('no', 1)}\n    if(!identical(candidate(15), list(120, 8.0))){quit('no', 1)}\n    if(!identical(candidate(20), list(210, 10.5))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(list(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum/number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum/number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(list(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  print(paste(\"Sum of first\", number, \"natural numbers is\", sum))\n  print(paste(\"Average of first\", number, \"natural numbers is\", average))\n}\n\nsum_average(5)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n",
    "\n  sum <- 0\n  for(i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum/number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n    sum <- 0\n    for(i in 1:number) {\n        sum <- sum + i\n    }\n    average <- sum / number\n    return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n    sum <- 0\n    for (i in 1:number) {\n        sum <- sum + i\n    }\n    average <- sum/number\n    return(c(sum, average))\n}\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum/number\n  print(paste(\"Sum of first\", number, \"natural numbers is\", sum))\n  print(paste(\"Average of first\", number, \"natural numbers is\", average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(list(sum, average))\n}\n\nsum_average(5)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(c(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum / number\n  return(list(sum, average))\n}\n\nsum_average(10)\n",
    "\n    sum <- 0\n    for (i in 1:number) {\n        sum <- sum + i\n    }\n    average <- sum / number\n    return(list(sum, average))\n}\n\nsum_average(10)\n",
    "\n  sum <- 0\n  for (i in 1:number) {\n    sum <- sum + i\n  }\n  average <- sum/number\n  return(c(sum, average))\n}\n\nsum_average(10)\n"
  ]
}
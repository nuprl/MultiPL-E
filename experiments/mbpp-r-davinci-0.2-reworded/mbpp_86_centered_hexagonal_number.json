{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "r",
  "prompt": "# Write a function to find nth centered hexagonal number.\ncentered_hexagonal_number <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- centered_hexagonal_number\n    if(!identical(candidate(10), 271)){quit('no', 1)}\n    if(!identical(candidate(2), 7)){quit('no', 1)}\n    if(!identical(candidate(9), 217)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    # Your code here\n    return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (2 * n^2 - n)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  (2 * n^2 - n)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  (3*n^2 - 3*n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (2 * n^2 - n)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (2*n^2 - n)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (2 * n^2 - n)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  (3 * n^2 - 3 * n + 2)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n"
  ]
}
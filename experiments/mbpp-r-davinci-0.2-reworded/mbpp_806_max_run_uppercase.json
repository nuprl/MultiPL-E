{
  "name": "mbpp_806_max_run_uppercase",
  "language": "r",
  "prompt": "# Write a function to find maximum run of uppercase characters in the given string.\nmax_run_uppercase <- function(test_str) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- max_run_uppercase\n    if(!identical(candidate('GeMKSForGERksISBESt'), 5)){quit('no', 1)}\n    if(!identical(candidate('PrECIOusMOVemENTSYT'), 6)){quit('no', 1)}\n    if(!identical(candidate('GooGLEFluTTER'), 4)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # Split the string into a vector of characters.\n  char_vec <- strsplit(test_str, \"\")[[1]]\n  # Create a vector of logicals indicating whether each character is uppercase.\n  is_upper <- sapply(char_vec, is.upper)\n  # Create a vector of run lengths.\n  run_lengths <- rle(is_upper)$lengths\n  # Return the maximum run length.\n  max(run_lengths)\n}\n",
    "\n  # Create a vector of the indices of uppercase characters\n  uppercase_indices <- grep(\"[A-Z]\", test_str)\n  # Create a vector of the indices of lowercase characters\n  lowercase_indices <- grep(\"[a-z]\", test_str)\n  # Create a vector of the indices of spaces\n  space_indices <- grep(\" \", test_str)\n  # Create a vector of all indices\n  all_indices <- c(uppercase_indices, lowercase_indices, space_indices)\n  # Sort the vector of all indices\n  all_indices <- sort(all_indices)\n  # Create a vector of the differences between consecutive indices\n  diffs <- diff(all_indices)\n  # Find the maximum difference\n  max_diff <- max(diffs)\n  # Return the maximum difference\n  return(max_diff)\n}\n",
    "\n  # Convert the string to lowercase and then split it into a vector of characters.\n  test_str <- strsplit(tolower(test_str), \"\")[[1]]\n  # Find the indices of the uppercase characters.\n  uppercase_indices <- grep(\"[A-Z]\", test_str)\n  # Find the indices of the lowercase characters.\n  lowercase_indices <- grep(\"[a-z]\", test_str)\n  # Find the indices of the uppercase characters that are followed by lowercase characters.\n  uppercase_indices_with_lowercase <- uppercase_indices[-length(uppercase_indices)]\n  # Find the indices of the lowercase characters that are preceded by uppercase characters.\n  lowercase_indices_with_uppercase <- lowercase_indices[-1]\n  # Find the indices of the uppercase characters that are not followed by lowercase characters.\n  uppercase_indices_without_lowercase <- uppercase_indices[!uppercase_indices %in% uppercase_indices_with_lowercase]\n  # Find the indices of the lowercase characters that are not preceded by uppercase characters.\n  lowercase_indices_without_uppercase <- lowercase_indices[!lowercase_indices %in% lowercase_indices_with_uppercase]\n  # Find the indices of the uppercase characters that are not followed by lowercase characters and are not preceded by uppercase characters.\n  uppercase_indices_without_lowercase_and_uppercase <- uppercase_indices_without_lowercase[!uppercase_indices_without_lowercase %in% lowercase_indices_without_uppercase]\n  # Find the indices of the lowercase characters that are not preceded by uppercase characters and are not followed by lowercase characters.\n  lowercase_indices_without_uppercase_and_lowercase <- lowercase_indices_without_uppercase[!lowercase_indices_without_uppercase %in% uppercase_indices_without_lowercase]\n  # Find the indices of the",
    "\n  # Create a vector of the uppercase characters in the string.\n  uppercase_chars <- str_extract_all(test_str, \"[A-Z]\")[[1]]\n  \n  # Create a vector of the indices of the uppercase characters.\n  uppercase_indices <- str_locate_all(test_str, \"[A-Z]\")[[1]]\n  \n  # Create a vector of the indices of the lowercase characters.\n  lowercase_indices <- str_locate_all(test_str, \"[a-z]\")[[1]]\n  \n  # Create a vector of the indices of the non-alphabetic characters.\n  non_alphabetic_indices <- str_locate_all(test_str, \"[^a-zA-Z]\")[[1]]\n  \n  # Create a vector of the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- c(non_alphabetic_indices, lowercase_indices)\n  \n  # Sort the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- sort(non_alphabetic_and_lowercase_indices)\n  \n  # Create a vector of the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- c(non_alphabetic_indices, lowercase_indices)\n  \n  # Sort the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- sort(non_alphabetic_and_lowercase_indices)\n  \n  # Create a vector of the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- c(non_alphabetic_indices, lowercase_indices)\n  \n  # Sort the indices of the non-alphabetic and lowercase characters.\n  non_alphabetic_and_lowercase_indices <- sort(non_alphabetic_and_lowercase_indices)\n  \n  # Create a vector of the indices of the non-",
    "\n  max_run <- 0\n  run <- 0\n  for (i in 1:nchar(test_str)) {\n    if (is.na(str_extract(test_str, i))) {\n      run <- 0\n    } else if (str_extract(test_str, i) == str_to_upper(str_extract(test_str, i))) {\n      run <- run + 1\n      if (run > max_run) {\n        max_run <- run\n      }\n    } else {\n      run <- 0\n    }\n  }\n  return(max_run)\n}\n",
    "\n  # Convert the string to lowercase.\n  test_str <- tolower(test_str)\n  # Find the indices of the uppercase characters.\n  uppercase_indices <- grep(\"[A-Z]\", test_str)\n  # Find the indices of the lowercase characters.\n  lowercase_indices <- grep(\"[a-z]\", test_str)\n  # Find the indices of the uppercase characters that are not followed by a lowercase character.\n  uppercase_end_indices <- uppercase_indices[-which(uppercase_indices %in% lowercase_indices - 1)]\n  # Find the indices of the uppercase characters that are not preceded by a lowercase character.\n  uppercase_start_indices <- uppercase_indices[-which(uppercase_indices %in% lowercase_indices + 1)]\n  # Find the indices of the uppercase characters that are not preceded or followed by a lowercase character.\n  uppercase_start_end_indices <- intersect(uppercase_start_indices, uppercase_end_indices)\n  # Find the lengths of the runs of uppercase characters.\n  uppercase_run_lengths <- uppercase_end_indices - uppercase_start_indices + 1\n  # Find the maximum length of the runs of uppercase characters.\n  max_run_length <- max(uppercase_run_lengths)\n  # Find the indices of the runs of uppercase characters that have the maximum length.\n  max_run_indices <- which(uppercase_run_lengths == max_run_length)\n  # Find the indices of the uppercase characters that are the start and end of the runs of uppercase characters that have the maximum length.\n  max_run_start_end_indices <- uppercase_start_end_indices[max_run_indices]\n  # Find the indices of the uppercase characters that are the start of the runs of uppercase characters that have the maximum length.\n  max_run_start_indices <- max_run_start_end_indices[seq(1,",
    "\n    max_run <- 0\n    current_run <- 0\n    for (i in 1:nchar(test_str)) {\n        if (is.na(str_extract(test_str[i], \"[A-Z]\"))) {\n            current_run <- 0\n        } else {\n            current_run <- current_run + 1\n            if (current_run > max_run) {\n                max_run <- current_run\n            }\n        }\n    }\n    return(max_run)\n}\n",
    "\n  # Convert string to uppercase\n  test_str <- toupper(test_str)\n  # Split string into vector of characters\n  test_str <- strsplit(test_str, \"\")[[1]]\n  # Find the indices of the uppercase characters\n  test_str <- which(test_str %in% LETTERS)\n  # Find the length of the longest run of uppercase characters\n  max(rle(diff(test_str))$lengths)\n}\n",
    "\n    # Split the string into a vector of characters\n    test_str_vec <- strsplit(test_str, \"\")[[1]]\n    # Create a vector of logical values indicating whether each character is uppercase\n    test_str_vec_is_upper <- sapply(test_str_vec, is.element, c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"))\n    # Create a vector of integers indicating the length of each run of uppercase characters\n    test_str_vec_run_length <- rle(test_str_vec_is_upper)$lengths\n    # Return the maximum run length\n    max(test_str_vec_run_length)\n}\n",
    "\n  # Get the indices of the uppercase characters in the string\n  ind <- grep(\"[A-Z]\", test_str)\n  # Get the indices of the uppercase characters in the string\n  # that are not followed by another uppercase character\n  ind_end <- grep(\"[A-Z][^A-Z]\", test_str)\n  # Get the indices of the uppercase characters in the string\n  # that are not preceded by another uppercase character\n  ind_start <- grep(\"[^A-Z][A-Z]\", test_str)\n  # If there are no uppercase characters in the string, return 0\n  if (length(ind) == 0) {\n    return(0)\n  }\n  # If there are no uppercase characters in the string\n  # that are not followed by another uppercase character,\n  # return the length of the first run of uppercase characters\n  if (length(ind_end) == 0) {\n    return(length(ind))\n  }\n  # If there are no uppercase characters in the string\n  # that are not preceded by another uppercase character,\n  # return the length of the last run of uppercase characters\n  if (length(ind_start) == 0) {\n    return(length(ind) - ind_end[length(ind_end)])\n  }\n  # If there are uppercase characters in the string\n  # that are not followed by another uppercase character\n  # and uppercase characters in the string\n  # that are not preceded by another uppercase character,\n  # return the length of the longest run of uppercase characters\n  if (length(ind_end) > 0 && length(ind_start) > 0) {\n    return(max(ind_end - ind_start + 1))\n  }\n}\n",
    "\n  # Convert the string to a vector of characters.\n  test_str <- strsplit(test_str, \"\")[[1]]\n  # Create a vector of logical values indicating whether each character is uppercase.\n  is_upper <- sapply(test_str, function(x) {\n    x == toupper(x)\n  })\n  # Create a vector of run lengths.\n  run_lengths <- rle(is_upper)$lengths\n  # Return the maximum run length.\n  max(run_lengths)\n}\n",
    "\n  # Create a vector of the uppercase characters in the string\n  uppercase_chars <- str_extract_all(test_str, \"[A-Z]\")\n  # Create a vector of the lengths of the runs of uppercase characters\n  uppercase_runs <- str_count(test_str, \"[A-Z]\")\n  # Return the maximum run of uppercase characters\n  max(uppercase_runs)\n}\n",
    "\n  # Convert the string to a character vector.\n  test_str <- strsplit(test_str, \"\")[[1]]\n  # Find the indices of the uppercase characters.\n  uppercase_indices <- which(test_str %in% LETTERS)\n  # Find the indices of the lowercase characters.\n  lowercase_indices <- which(test_str %in% letters)\n  # Find the indices of the non-alphabetic characters.\n  non_alphabetic_indices <- which(!(test_str %in% LETTERS) & !(test_str %in% letters))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in% LETTERS) & !(test_str %in% letters)))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in% LETTERS) & !(test_str %in% letters)))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in% LETTERS) & !(test_str %in% letters)))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in% LETTERS) & !(test_str %in% letters)))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in% LETTERS) & !(test_str %in% letters)))\n  # Find the indices of the characters that are neither uppercase nor lowercase.\n  non_alphabetic_indices <- c(non_alphabetic_indices, which(!(test_str %in%",
    "\n  # Split the string into a vector of characters\n  test_str_vec <- strsplit(test_str, \"\")[[1]]\n  # Create a vector of TRUE/FALSE values for each character, indicating whether it is uppercase\n  test_str_vec_is_upper <- sapply(test_str_vec, is.element, c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"))\n  # Create a vector of consecutive run lengths of uppercase characters\n  test_str_vec_is_upper_run_lengths <- rle(test_str_vec_is_upper)$lengths\n  # Return the maximum run length\n  return(max(test_str_vec_is_upper_run_lengths))\n}\n",
    "\n  # Convert the string to a vector of characters\n  test_str_vec <- strsplit(test_str, \"\")[[1]]\n  # Create a vector of logicals indicating whether each character is uppercase\n  test_str_vec_logical <- grepl(\"[A-Z]\", test_str_vec)\n  # Create a vector of the lengths of each run of uppercase characters\n  test_str_vec_logical_run_lengths <- rle(test_str_vec_logical)$lengths\n  # Return the maximum run length\n  max(test_str_vec_logical_run_lengths)\n}\n",
    "\n  # Split the string into a vector of characters\n  char_vec <- strsplit(test_str, \"\")[[1]]\n  # Create a vector of logicals indicating whether each character is uppercase\n  is_upper <- sapply(char_vec, is.element, c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"))\n  # Create a vector of consecutive runs of uppercase characters\n  run_vec <- rle(is_upper)$lengths\n  # Return the maximum run\n  return(max(run_vec))\n}",
    "\n  # Convert the string to a vector of characters\n  test_str <- strsplit(test_str, \"\")[[1]]\n  # Find the indices of uppercase characters\n  uppercase_indices <- which(test_str %in% LETTERS)\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(uppercase_indices < length(test_str))]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices of the uppercase characters that are followed by a lowercase character\n  uppercase_indices <- uppercase_indices[which(test_str[uppercase_indices + 1] %in% letters)]\n  # Find the indices",
    "\n  # Find the indices of uppercase characters in the string.\n  uppercase_indices <- grep(\"[[:upper:]]\", test_str)\n  # Find the indices of lowercase characters in the string.\n  lowercase_indices <- grep(\"[[:lower:]]\", test_str)\n  # Find the indices of non-alphabetic characters in the string.\n  non_alpha_indices <- grep(\"[^[:alpha:]]\", test_str)\n  # Find the indices of all characters in the string.\n  all_indices <- seq_along(test_str)\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters that are neither uppercase, lowercase, nor non-alphabetic.\n  other_indices <- setdiff(all_indices, c(uppercase_indices, lowercase_indices, non_alpha_indices))\n  # Find the indices of characters",
    "\n  # Create a vector of the indices of the uppercase characters in the string.\n  uppercase_indices <- grep(\"[A-Z]\", test_str)\n  # Create a vector of the indices of the lowercase characters in the string.\n  lowercase_indices <- grep(\"[a-z]\", test_str)\n  # Create a vector of the indices of the characters in the string.\n  all_indices <- seq(1, nchar(test_str))\n  # Create a vector of the indices of the non-uppercase characters in the string.\n  non_uppercase_indices <- setdiff(all_indices, uppercase_indices)\n  # Create a vector of the indices of the non-lowercase characters in the string.\n  non_lowercase_indices <- setdiff(all_indices, lowercase_indices)\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase_indices, lowercase_indices))\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase_indices, lowercase_indices))\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase_indices, lowercase_indices))\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase_indices, lowercase_indices))\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase_indices, lowercase_indices))\n  # Create a vector of the indices of the non-alphabetic characters in the string.\n  non_alphabetic_indices <- setdiff(all_indices, union(uppercase",
    "\n  # Create a vector of all the uppercase letters in the string.\n  uppercase_letters <- str_extract_all(test_str, \"[A-Z]\")\n  # Create a vector of the lengths of each run of uppercase letters.\n  uppercase_lengths <- str_length(uppercase_letters)\n  # Return the maximum length of the runs.\n  return(max(uppercase_lengths))\n}\n"
  ]
}
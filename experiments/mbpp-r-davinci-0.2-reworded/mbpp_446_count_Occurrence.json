{
  "name": "mbpp_446_count_Occurrence",
  "language": "r",
  "prompt": "# Write a rthon function to count the occurence of all elements of list in a list.\ncount_Occurrence <- function(tup, lst) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- count_Occurrence\n    if(!identical(candidate(list('a', 'a', 'c', 'b', 'd'), list('a', 'b')), 3)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 1, 4, 6, 7, 1, 4), list(1, 4, 7)), 6)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6), list(1, 2)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for(i in 1:length(lst)) {\n        if(tup == lst[i]) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 2, 1, 3, 4, 1))\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 2, 3, 4, 1))\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in 1:length(lst)) {\n    if(tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 2, 3, 1, 2, 3))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,1,2,3,1,2,3))\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (tup == i) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for(i in 1:length(lst)) {\n    if(tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,6,7,8,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n\ncount_Occurrence(2, c(1,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[[i]]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,6,7,8,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n    count <- 0\n    for (i in 1:length(lst)) {\n        if (tup == lst[i]) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n\nlst <- c(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10)\ncount_Occurrence(1, lst)\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  for (i in 1:length(lst)) {\n    print(paste(lst[i], \":\", sum(tup == lst[i])))\n  }\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  count\n}\n\ncount_Occurrence(2, c(1, 2, 3, 2, 2, 2, 4, 5, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  count\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 1, 4, 5, 1))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 1, 1, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 1, 1, 1))\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (lst[i] == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 4, 5, 1, 2, 1))\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1, 2, 3, 4, 5, 2, 2, 2, 2, 2))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\nlst <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\ntup <- 5\ncount_Occurrence(tup, lst)\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1, 2, 3, 2, 2, 4, 5, 2))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  for (i in 1:length(tup)) {\n    print(paste(tup[i], \"occurs\", sum(lst == tup[i]), \"times\"))\n  }\n}\n\ncount_Occurrence(c(1,2,3,4,5), c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1, 2, 3, 2, 1, 2, 3, 2, 1))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in 1:length(lst)) {\n    if (tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n\ncount_Occurrence(2, c(1,2,3,4,2,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(5, c(1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 9, 10))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for(i in lst) {\n        if(i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(2, c(1, 2, 3, 4, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n    count <- 0\n    for (i in 1:length(lst)) {\n        if (tup == lst[i]) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n    count <- 0\n    for (i in lst) {\n        if (i == tup) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 1, 4, 5, 1))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in lst) {\n    if(i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for(i in 1:length(lst)) {\n    if(tup == lst[i]) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3, 1, 1, 2, 3,",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\ncount_Occurrence(1, c(1,2,3,1,2,1))\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
    "\n  count <- 0\n  for (i in lst) {\n    if (i == tup) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n"
  ]
}
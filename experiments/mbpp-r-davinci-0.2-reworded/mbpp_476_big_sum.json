{
  "name": "mbpp_476_big_sum",
  "language": "r",
  "prompt": "# Write a rthon function to find the sum of the largest and smallest value in a given vector.\nbig_sum <- function(nums) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- big_sum\n    if(!identical(candidate(c(1, 2, 3)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 2, 3, 4)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 6)), 8)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  return(sum(range(nums)))\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n\nbig_sum(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  max <- nums[1]\n  min <- nums[1]\n  for (i in nums) {\n    if (i > max) {\n      max <- i\n    }\n    if (i < min) {\n      min <- i\n    }\n  }\n  return(max + min)\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n\nbig_sum(c(1,2,3,4,5))\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  return(sum(range(nums)))\n}\n",
    "\n    return(max(nums) + min(nums))\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  max_num <- max(nums)\n  min_num <- min(nums)\n  return(max_num + min_num)\n}\n",
    "\n  return(sum(range(nums)))\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n    return(max(nums) + min(nums))\n}\n\nbig_sum(c(1,2,3,4,5))\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n    max_num <- max(nums)\n    min_num <- min(nums)\n    return(max_num + min_num)\n}\n",
    "\n  return(max(nums) + min(nums))\n}\n",
    "\n  return(sum(range(nums)))\n}\n",
    "\n  max_num <- max(nums)\n  min_num <- min(nums)\n  sum_num <- max_num + min_num\n  return(sum_num)\n}\n"
  ]
}
{
  "name": "mbpp_592_sum_Of_product",
  "language": "r",
  "prompt": "# Write a rthon function to find the sum of the product of consecutive binomial co-efficients.\nsum_Of_product <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- sum_Of_product\n    if(!identical(candidate(3), 15)){quit('no', 1)}\n    if(!identical(candidate(4), 56)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  sum\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + binom(i,j) * binom(i,j+1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + (choose(i,j) * choose(i,j))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + binom(i, j) * binom(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum(choose(n,0:n))\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + binom(n, i) * binom(n, i + 1)\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (choose(n, i) * choose(n, i + 1))\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (choose(i,j) * choose(n-i,n-j))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (choose(n, i) * choose(n, i + 1))\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n    }\n    return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  sum\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (choose(n, i) * choose(n, i + 1))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (n-i+1)*choose(n,i)\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j+1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return (sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  sum\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum(choose(n, 0:n) * choose(n, 1:(n+1)))\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n    sum <- 0\n    for(i in 1:n) {\n        for(j in 1:i) {\n            sum <- sum + choose(i,j) * choose(i,j)\n        }\n    }\n    return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 0:n) {\n    for (j in 0:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + factorial(n)/(factorial(i)*factorial(n-i))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))*(factorial(n)/(factorial(i+1)*factorial(n-i-1)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))*(factorial(n)/(factorial(i+1)*factorial(n-i-1)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum_of_product <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum_of_product <- sum_of_product + (choose(i, j) * choose(i, j))\n    }\n  }\n  return(sum_of_product)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (choose(i,j) * choose(n-i,n-j))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (choose(i, j) * choose(i, j))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 0:n) {\n    for (j in 0:n) {\n      if (i != j) {\n        sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i))) * (factorial(n) / (factorial(j) * factorial(n - j)))\n      }\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (choose(n, i) * choose(n, i + 1))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      if (i != j) {\n        sum <- sum + choose(n, i) * choose(n, j)\n      }\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i))) * (factorial(n) / (factorial(i + 1) * factorial(n - i - 1)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (choose(n, i) * choose(n, i + 1))\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  sum\n}\nsum_Of_product(5)\n",
    "\n  sum_of_product <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum_of_product <- sum_of_product + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum_of_product)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  sum\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 0:n) {\n    for (j in 0:n) {\n      if (i != j) {\n        sum <- sum + factorial(n) / (factorial(i) * factorial(n - i)) * factorial(n) / (factorial(j) * factorial(n - j))\n      }\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(j, i)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(10)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    sum <- sum + (choose(n,i) * choose(n,i+1))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j - 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (choose(i,j) * choose(i,j+1))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum_of_product <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum_of_product <- sum_of_product + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum_of_product)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + binom(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j+1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i,j) * choose(i,j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))*(factorial(n)/(factorial(i+1)*factorial(n-(i+1))))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(n)/(factorial(i)*factorial(j)*factorial(n-i)*factorial(n-j)))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for(i in 1:n) {\n    for(j in 1:i) {\n      sum <- sum + choose(i,j)*choose(i,j+1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i,j) * choose(n-i,n-j)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + choose(i, j) * choose(n - i, n - j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j - 1)\n    }\n  }\n  sum\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i))) * (factorial(n) / (factorial(i + 1) * factorial(n - i - 1)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n"
  ]
}
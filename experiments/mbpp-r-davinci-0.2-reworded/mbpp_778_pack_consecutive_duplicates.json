{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "r",
  "prompt": "# Write a function to pack consecutive duplicates of a given list elements into sublists.\npack_consecutive_duplicates <- function(list1) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- pack_consecutive_duplicates\n    if(!identical(candidate(list(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)), list(list(0, 0), list(1), list(2), list(3), list(4, 4), list(5), list(6, 6, 6), list(7), list(8), list(9), list(4, 4)))){quit('no', 1)}\n    if(!identical(candidate(list(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)), list(list(10, 10), list(15), list(19), list(18, 18), list(17), list(26, 26), list(17), list(18), list(10)))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'a', 'b', 'c', 'd', 'd')), list(list('a', 'a'), list('b'), list('c'), list('d', 'd')))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list(list1[i])\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list(list1[i])\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list2[[length(list2)]]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2) + 1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else if (list1[i] == list1[i - 1]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n    } else {\n      list2[[length(list2) + 1]] <- list1[i]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[[i]] != list1[[i+1]]) {\n      list2[[j]] <- list1[i:(i+1)]\n      j <- j + 1\n      i <- i + 1\n    } else {\n      i <- i + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    pack_consecutive_duplicates_helper(list1[-1], list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3))\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i + 1]) {\n      list2[[j]] <- list1[seq(i - length(list2[[j]]) + 1, i)]\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  list2\n}\n",
    "\n    list2 <- list()\n    list3 <- list()\n    for (i in 1:length(list1)) {\n        if (i == 1) {\n            list2[[i]] <- list1[i]\n        } else {\n            if (list1[i] == list1[i-1]) {\n                list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n            } else {\n                list2[[length(list2)+1]] <- list1[i]\n            }\n        }\n    }\n    for (i in 1:length(list2)) {\n        list3[[i]] <- list2[[i]][1]\n    }\n    return(list3)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i + 1]) {\n      list2[[j]] <- list1[seq(i - length(list2[[j]]) + 1, i)]\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[i] == list1[i-1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i - 1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n\npack_consecutive_duplicates(list1)\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2[[length(list2) + 1]] <- list1[i:(j - 1)]\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2[[length(list2) + 1]] <- list1[i:(j - 1)]\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, NULL)\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n  } else {\n    if (list1[1] == list2[[length(list2)]][1]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    } else {\n      list2 <- c(list2, list(list1[1]))\n    }\n  }\n  pack_consecutive_duplicates_helper(list1[-1], list2)\n}\n\npack_consecutive_duplicates(c(\"a\", \"a\", \"a\", \"a\", \"b\", \"c\", \"c\", \"a\", \"a\", \"d\", \"e\", \"e\", \"e\", \"e\"))\n",
    "\n    list2 <- list()\n    i <- 1\n    j <- 1\n    while (i <= length(list1)) {\n        list2[[j]] <- list1[i]\n        while (i <= length(list1) && list1[i] == list2[[j]][1]) {\n            list2[[j]] <- c(list2[[j]], list1[i])\n            i <- i + 1\n        }\n        j <- j + 1\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(pack_consecutive_duplicates_helper2(list1)))\n    pack_consecutive_duplicates_helper(list1[-which(list1 %in% list2[[length(list2)]])], list2)\n  }\n}\n\npack_consecutive_duplicates_helper2 <- function(list1) {\n  if (length(list1) == 0) {\n    return(list())\n  }\n  else {\n    if (length(list1) == 1) {\n      return(list1)\n    }\n    else {\n      if (list1[1] == list1[2]) {\n        return(c(list1[1], pack_consecutive_duplicates_helper2(list1[2:length(list1)])))\n      }\n      else {\n        return(list1[1])\n      }\n    }\n  }\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2 <- c(list2, list(list1[i:(j-1)]))\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    i <- 1\n    while (i <= length(list1)) {\n        j <- i\n        while (j <= length(list1) && list1[i] == list1[j]) {\n            j <- j + 1\n        }\n        list2[[length(list2) + 1]] <- list1[i:(j - 1)]\n        i <- j\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      break\n    }\n    if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n    } else {\n      list2[[j]] <- list1[i]\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n\npack_consecutive_duplicates(list1)\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n    if (length(list1) == 0) {\n        return(list2)\n    }\n    else {\n        pack_consecutive_duplicates_helper(tail(list1, -1), append(list2, list(list1[1])))\n    }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10))\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5))\n",
    "\n  pack_consecutive_duplicates <- function(list1, list2) {\n    if (length(list1) == 0) {\n      return(list2)\n    } else {\n      if (length(list2) == 0) {\n        return(pack_consecutive_duplicates(tail(list1, -1), list(list1[1])))\n      } else {\n        if (list1[1] == list2[[length(list2)]]) {\n          return(pack_consecutive_duplicates(tail(list1, -1), list(c(list2[[length(list2)]], list1[1]))))\n        } else {\n          return(pack_consecutive_duplicates(tail(list1, -1), list(list2, list1[1])))\n        }\n      }\n    }\n  }\n  return(pack_consecutive_duplicates(list1, list()))\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      break\n    }\n    if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      if (list1[i] == list1[i + 1]) {\n        list2[[j]] <- list1[i]\n        i <- i + 1\n      } else {\n        list2[[j]] <- list1[i]\n        i <- i + 1\n        j <- j + 1\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  for (j in 1:length(list1)) {\n    if (j == length(list1) || list1[j] != list1[j+1]) {\n      list2[[i]] <- list1[seq(j-length(list2[[i]])+1, j)]\n      i <- i + 1\n    }\n  }\n  list2\n}\n",
    "\n    list2 <- list()\n    i <- 1\n    while (i <= length(list1)) {\n        j <- i + 1\n        while (j <= length(list1) && list1[i] == list1[j]) {\n            j <- j + 1\n        }\n        list2[[length(list2) + 1]] <- list1[i:(j - 1)]\n        i <- j\n    }\n    list2\n}\n\npack_consecutive_duplicates(c(\"a\", \"a\", \"a\", \"a\", \"b\", \"c\", \"c\", \"a\", \"a\", \"d\", \"e\", \"e\", \"e\", \"e\"))\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while (i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  k <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[k]] <- c(list2[[k]], list1[[i]])\n    } else {\n      k <- k + 1\n      list2[[k]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list1 <- unlist(list1)\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[i] != list1[i-1]) {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    } else {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    i <- 1\n    j <- 1\n    while (i <= length(list1)) {\n        if (i == length(list1) || list1[i] != list1[i+1]) {\n            list2[[j]] <- list1[seq(i-length(list2[[j]])+1, i)]\n            j <- j + 1\n        }\n        i <- i + 1\n    }\n    return(list2)\n}\n\npack_consecutive_duplicates(c('a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e'))\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2 <- c(list2, list(list1[i:(j-1)]))\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i + 1\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2 <- c(list2, list(list1[i:(j - 1)]))\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while(i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list1 <- as.character(list1)\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), unlist))\n  list1 <- as.list(list1)\n  return(list1)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  list2 <- c(list2, list(list1[1]))\n  list1 <- list1[-1]\n  while (length(list1) > 0 && list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    list1 <- list1[-1]\n  }\n  pack_consecutive_duplicates_helper(list1, list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  i <- 1\n  for(j in 2:length(list1)) {\n    if(list1[j] == list1[j-1]) {\n      list2[[i]] <- c(list2[[i]], list1[j])\n    } else {\n      i <- i+1\n      list2[[i]] <- list1[j]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(pack_consecutive_duplicates_helper2(list1)))\n    pack_consecutive_duplicates_helper(list1[-which(list1 == list1[1])], list2)\n  }\n}\n\npack_consecutive_duplicates_helper2 <- function(list1) {\n  if (length(list1) == 0) {\n    return(list())\n  }\n  else if (list1[1] == list1[2]) {\n    list1[1] <- c(list1[1], list1[2])\n    list1[-1]\n  }\n  else {\n    list1[1]\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5))\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == 1) {\n      list2[[j]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[j]] <- c(list2[[j]], list1[i])\n      } else {\n        j <- j + 1\n        list2[[j]] <- list1[i]\n      }\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    list2\n  } else {\n    pack_consecutive_duplicates_helper(tail(list1, -1), append(list2, list(pack_consecutive_duplicates_helper2(list1))))\n  }\n}\n\npack_consecutive_duplicates_helper2 <- function(list1) {\n  if (length(list1) == 0) {\n    list()\n  } else if (length(list1) == 1) {\n    list(list1[[1]])\n  } else if (list1[[1]] == list1[[2]]) {\n    list(list1[[1]]) %>% append(pack_consecutive_duplicates_helper2(tail(list1, -1)))\n  } else {\n    list(list1[[1]])\n  }\n}\n",
    "\n  list1 <- unlist(list1)\n  list1 <- as.character(list1)\n  list1 <- strsplit(list1, \"\")\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n  list1 <- lapply(list1, as.factor)\n  list1 <- lapply(list1, as.numeric)\n  list1 <- lapply(list1, as.integer)\n  list1 <- lapply(list1, as.character)\n ",
    "\n  # Create an empty list to store the final result\n  list2 <- list()\n  # Create a variable to store the previous element\n  prev <- list1[1]\n  # Create a variable to store the current sublist\n  curr <- list()\n  # Loop through the list\n  for (i in list1) {\n    # If the current element is the same as the previous element, add it to the current sublist\n    if (i == prev) {\n      curr <- c(curr, i)\n    }\n    # If the current element is not the same as the previous element, add the current sublist to the final list and create a new sublist\n    else {\n      list2 <- c(list2, list(curr))\n      curr <- list()\n      curr <- c(curr, i)\n    }\n    # Update the previous element\n    prev <- i\n  }\n  # Add the last sublist to the final list\n  list2 <- c(list2, list(curr))\n  # Remove the first element of the final list, which is an empty list\n  list2 <- list2[-1]\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[i] == list1[i-1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while(i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list3 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else if (list1[i] == list1[i-1]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n    } else {\n      list2[[length(list2)+1]] <- list1[i]\n    }\n  }\n  for (i in 1:length(list2)) {\n    if (length(list2[[i]]) == 1) {\n      list3[[i]] <- list2[[i]]\n    } else {\n      list3[[i]] <- list(list2[[i]])\n    }\n  }\n  return(list3)\n}\n",
    "\n  list1 <- as.character(list1)\n  list1 <- unlist(lapply(list1, function(x) {\n    if (x == \"\") {\n      x <- NA\n    } else {\n      x <- x\n    }\n  }))\n  list1 <- list1[!is.na(list1)]\n  list1 <- list1[list1 != \"\"]\n  list1 <- list1[list1 != \" \"]\n  list1 <- list1[list1 != \"  \"]\n  list1 <- list1[list1 != \"   \"]\n  list1 <- list1[list1 != \"    \"]\n  list1 <- list1[list1 != \"     \"]\n  list1 <- list1[list1 != \"      \"]\n  list1 <- list1[list1 != \"       \"]\n  list1 <- list1[list1 != \"        \"]\n  list1 <- list1[list1 != \"         \"]\n  list1 <- list1[list1 != \"          \"]\n  list1 <- list1[list1 != \"           \"]\n  list1 <- list1[list1 != \"            \"]\n  list1 <- list1[list1 != \"             \"]\n  list1 <- list1[list1 != \"              \"]\n  list1 <- list1[list1 != \"               \"]\n  list1 <- list1[list1 != \"                \"]\n  list1 <- list1[list1 != \"                 \"]\n  list1 <- list1[list1 != \"                  \"]\n  list1 <- list1[list1 != \"                   \"]\n  list1 <- list1[list1 != \"                    \"]\n  list1 <- list1[list1 != \"                     \"]\n  list1 <- list1[list1 != \"                      \"]\n  list1 <- list1[list1 != \"                       \"]\n  list1 <- list1[list1 != \"                        \"]\n  list1 <- list1[list1 != \"                         \"]\n  list1 <- list1[list1 != \"                          \"]\n  list1 <- list1[list1 != \"                           \"]\n  list1 <- list1[list1 != \"                           ",
    "\n    list1 <- as.character(list1)\n    list2 <- list()\n    list3 <- list()\n    for (i in 1:length(list1)) {\n        if (i == 1) {\n            list2[[i]] <- list1[i]\n        }\n        else {\n            if (list1[i] == list1[i-1]) {\n                list2[[i]] <- list1[i]\n            }\n            else {\n                list3[[length(list3)+1]] <- list2\n                list2 <- list()\n                list2[[1]] <- list1[i]\n            }\n        }\n    }\n    list3[[length(list3)+1]] <- list2\n    return(list3)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while (i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      j <- j + 1\n    } else {\n      list2[[j]] <- list1[i:(i + 1)]\n      i <- i + 1\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i+1]) {\n      list2[[j]] <- list1[i]\n      j <- j + 1\n    } else {\n      list2[[j]] <- list1[i:(i+1)]\n      i <- i + 1\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[i] == list1[i-1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates <- function(list1, result) {\n    if (length(list1) == 0) {\n      return(result)\n    }\n    if (length(result) == 0) {\n      result <- list(list1[1])\n      return(pack_consecutive_duplicates(list1[-1], result))\n    }\n    if (list1[1] == result[[length(result)]][1]) {\n      result[[length(result)]] <- c(result[[length(result)]], list1[1])\n      return(pack_consecutive_duplicates(list1[-1], result))\n    } else {\n      result <- c(result, list(list1[1]))\n      return(pack_consecutive_duplicates(list1[-1], result))\n    }\n  }\n  return(pack_consecutive_duplicates(list1, list()))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    first_element <- list1[1]\n    list1 <- list1[-1]\n    new_list <- list(first_element)\n    while (length(list1) > 0 && list1[1] == first_element) {\n      new_list <- c(new_list, list1[1])\n      list1 <- list1[-1]\n    }\n    list2 <- c(list2, list(new_list))\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      break\n    }\n    if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      j <- j + 1\n      i <- i + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(take_while(list1, function(x) x == list1[1])))\n    pack_consecutive_duplicates_helper(drop_while(list1, function(x) x == list1[1]), list2)\n  }\n}\n\npack_consecutive_duplicates(c('a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e'))\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2[[length(list2) + 1]] <- list1[i:(j - 1)]\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[[i]] == list1[[i-1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(pack_consecutive_duplicates_helper2(list1)))\n    pack_consecutive_duplicates_helper(list1[-which(list1 %in% list2[[length(list2)]])], list2)\n  }\n}\n\npack_consecutive_duplicates_helper2 <- function(list1) {\n  if (length(list1) == 0) {\n    return(list())\n  }\n  else if (length(list1) == 1) {\n    return(list1)\n  }\n  else if (list1[1] == list1[2]) {\n    return(c(list1[1], pack_consecutive_duplicates_helper2(list1[-1])))\n  }\n  else {\n    return(list1[1])\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "\n  pack <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      pack[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i - 1]) {\n        pack[[length(pack)]] <- c(pack[[length(pack)]], list1[i])\n      } else {\n        pack[[length(pack) + 1]] <- list1[i]\n      }\n    }\n  }\n  return(pack)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(take_while(list1, function(x) x == list1[1])))\n    pack_consecutive_duplicates_helper(drop_while(list1, function(x) x == list1[1]), list2)\n  }\n}\n\npack_consecutive_duplicates(c('a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e'))\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  index <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[index]][[1]]) {\n      list2[[index]] <- c(list2[[index]], list1[[i]])\n    } else {\n      index <- index + 1\n      list2[[index]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    if(i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if(list1[i] == list1[i+1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      list2[[j+1]] <- list1[[i]]\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[[i]] == list1[[i-1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i + 1]) {\n      list2[[j]] <- list1[seq(i - length(list2[[j]]) + 1, i)]\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list1 <- as.character(list1)\n    list2 <- list()\n    list2[[1]] <- list1[1]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[i] == list1[i-1]) {\n            list2[[j]] <- c(list2[[j]], list1[i])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[i]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n\npack_consecutive_duplicates(list1)\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i+1]) {\n      list2[[j]] <- list1[i]\n      j <- j + 1\n    } else {\n      list2[[j]] <- list1[i:(i+1)]\n      i <- i + 1\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_acc <- function(list1, acc) {\n    if (length(list1) == 0) {\n      return(acc)\n    } else {\n      if (length(acc) == 0) {\n        return(pack_consecutive_duplicates_acc(tail(list1, -1), list(list1[1])))\n      } else {\n        if (list1[1] == acc[[length(acc)]]) {\n          return(pack_consecutive_duplicates_acc(tail(list1, -1), c(acc[-length(acc)], c(acc[[length(acc)]], list1[1]))))\n        } else {\n          return(pack_consecutive_duplicates_acc(tail(list1, -1), c(acc, list(list1[1]))))\n        }\n      }\n    }\n  }\n  return(pack_consecutive_duplicates_acc(list1, list()))\n}\n",
    "\n  lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), list)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5))\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    pack_consecutive_duplicates_helper(tail(list1, -1), append_to_list(list2, list1[1]))\n  }\n}\n\nappend_to_list <- function(list1, element) {\n  if (length(list1) == 0) {\n    return(list(list(element)))\n  }\n  else {\n    if (list1[[length(list1)]][[1]] == element) {\n      list1[[length(list1)]] <- c(list1[[length(list1)]], element)\n    }\n    else {\n      list1[[length(list1) + 1]] <- list(element)\n    }\n    return(list1)\n  }\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(take_while(list1, function(x) x == list1[1])))\n    pack_consecutive_duplicates_helper(drop_while(list1, function(x) x == list1[1]), list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6))\n",
    "\n  pack_consecutive_duplicates <- function(list1, result) {\n    if (length(list1) == 0) {\n      return(result)\n    }\n    else {\n      result <- c(result, list(list1[1]))\n      list1 <- list1[-1]\n      while (length(list1) > 0 && list1[1] == result[[length(result)]][1]) {\n        result[[length(result)]] <- c(result[[length(result)]], list1[1])\n        list1 <- list1[-1]\n      }\n      return(pack_consecutive_duplicates(list1, result))\n    }\n  }\n  return(pack_consecutive_duplicates(list1, list()))\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while(i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      if (list1[i] == list1[i + 1]) {\n        list2[[j]] <- list1[i]\n        i <- i + 1\n      } else {\n        list2[[j]] <- list1[i]\n        i <- i + 1\n        j <- j + 1\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1) || list1[i] != list1[i+1]) {\n      list2[[j]] <- list1[seq(i-length(list2[[j]])+1, i)]\n      j <- j + 1\n    }\n    i <- i + 1\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n    if (length(list1) == 0) {\n        return(list2)\n    }\n    if (length(list2) == 0) {\n        return(pack_consecutive_duplicates_helper(tail(list1, -1), list(list(list1[1]))))\n    }\n    if (list1[1] == list2[[length(list2)]][1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n        return(pack_consecutive_duplicates_helper(tail(list1, -1), list2))\n    }\n    list2 <- c(list2, list(list(list1[1])))\n    return(pack_consecutive_duplicates_helper(tail(list1, -1), list2))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  k <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i - 1]]) {\n      list2[[k]] <- c(list2[[k]], list1[[i]])\n    } else {\n      k <- k + 1\n      list2[[k]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    pack[[length(pack) + 1]] <- list1[i:(j - 1)]\n    i <- j\n  }\n  return(pack)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] != list1[[i-1]]) {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    } else {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    }\n  }\n  list2\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  \n  if (length(list2) == 0) {\n    return(pack_consecutive_duplicates_helper(tail(list1, -1), list(list(list1[1]))))\n  }\n  \n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(tail(list1, -1), list2))\n  } else {\n    list2 <- c(list2, list(list(list1[1])))\n    return(pack_consecutive_duplicates_helper(tail(list1, -1), list2))\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5))\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    pack_consecutive_duplicates_helper(tail(list1, -1), c(list2, list(pack_consecutive_duplicates_helper_2(list1))))\n  }\n}\n\npack_consecutive_duplicates_helper_2 <- function(list1) {\n  if (length(list1) == 0) {\n    return(list())\n  }\n  else if (length(list1) == 1) {\n    return(list1)\n  }\n  else if (head(list1, 1) == head(list1, 2)) {\n    pack_consecutive_duplicates_helper_2(c(head(list1, 1), tail(list1, -1)))\n  }\n  else {\n    return(list1)\n  }\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n\npack_consecutive_duplicates(list1)\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i + 1\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2 <- c(list2, list(list1[i:(j - 1)]))\n    i <- j\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  index <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[index]][[1]]) {\n      list2[[index]] <- c(list2[[index]], list1[[i]])\n    } else {\n      index <- index + 1\n      list2[[index]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2 <- c(list2, list(list1[i:(j-1)]))\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[1]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[i] == list1[i-1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list2[[j]][[1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n    list2 <- list()\n    list2[[1]] <- list1[[1]]\n    j <- 1\n    for (i in 2:length(list1)) {\n        if (list1[[i]] == list1[[i-1]]) {\n            list2[[j]] <- c(list2[[j]], list1[[i]])\n        } else {\n            j <- j + 1\n            list2[[j]] <- list1[[i]]\n        }\n    }\n    return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  } else {\n    pack_consecutive_duplicates_helper(list1[-1], list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5))\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    if(i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if(list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    list2\n  } else {\n    pack_consecutive_duplicates_helper(tail(list1, -1), list2)\n  }\n}\n\npack_consecutive_duplicates(list(a, a, a, a, b, c, c, a, a, d, e, e, e, e))\n",
    "\n    pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n    if (length(list1) == 0) {\n        return(list2)\n    }\n    else {\n        pack_consecutive_duplicates_helper(tail(list1, -1), c(list2, list(list1[1])))\n    }\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while(i <= length(list1)) {\n    list2[[j]] <- list1[i]\n    while(i <= length(list1) && list1[i] == list2[[j]][1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n      i <- i + 1\n    }\n    j <- j + 1\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  i <- 1\n  while (i <= length(list1)) {\n    j <- i\n    while (j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2[[i]] <- list1[i:(j-1)]\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  \n  list2 <- c(list2, list(list1[1]))\n  list1 <- list1[-1]\n  \n  while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    list1 <- list1[-1]\n  }\n  \n  pack_consecutive_duplicates_helper(list1, list2)\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5))\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list(), list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2, list3) {\n  if (length(list1) == 0) {\n    return(list3)\n  }\n  if (length(list2) == 0) {\n    list2 <- c(list2, list1[1])\n    list1 <- list1[-1]\n    return(pack_consecutive_duplicates_helper(list1, list2, list3))\n  }\n  if (list1[1] == list2[1]) {\n    list2 <- c(list2, list1[1])\n    list1 <- list1[-1]\n    return(pack_consecutive_duplicates_helper(list1, list2, list3))\n  }\n  list3 <- c(list3, list2)\n  list2 <- list()\n  return(pack_consecutive_duplicates_helper(list1, list2, list3))\n}\n\npack_consecutive_duplicates(list1)\n",
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  while (i <= length(list1)) {\n    if (i == length(list1)) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else if (list1[i] == list1[i + 1]) {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n    } else {\n      list2[[j]] <- list1[i]\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    list2[[i]] <- list1[i]\n    for (j in (i+1):length(list1)) {\n      if (list1[i] == list1[j]) {\n        list2[[i]] <- c(list2[[i]], list1[j])\n      } else {\n        break\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  index <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[index]][[1]]) {\n      list2[[index]] <- c(list2[[index]], list1[[i]])\n    } else {\n      index <- index + 1\n      list2[[index]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <- unlist(lapply(split(list1, cumsum(c(TRUE, diff(list1) != 0))), as.character))\n  list1 <-",
    "\n  pack_consecutive_duplicates <- function(list1, result) {\n    if (length(list1) == 0) {\n      return(result)\n    }\n    else {\n      first <- list1[1]\n      rest <- list1[-1]\n      if (length(result) == 0) {\n        result <- list(list(first))\n      }\n      else {\n        last <- result[[length(result)]]\n        if (last[1] == first) {\n          last <- c(last, first)\n          result[[length(result)]] <- last\n        }\n        else {\n          result <- c(result, list(list(first)))\n        }\n      }\n      return(pack_consecutive_duplicates(rest, result))\n    }\n  }\n  return(pack_consecutive_duplicates(list1, list()))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, NULL)\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    pack_consecutive_duplicates_helper(tail(list1, -1), c(list2, list(list1[1])))\n  }\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n"
  ]
}
{
  "name": "mbpp_450_extract_string",
  "language": "r",
  "prompt": "# Write a function to extract specified size of strings from a given list of string values.\nextract_string <- function(str, l) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- extract_string\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 8), list('practice', 'solution'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 6), list('Python'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 9), list('exercises'))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str_len <- nchar(str)\n  if (str_len >= l) {\n    return(substr(str, 1, l))\n  } else {\n    return(str)\n  }\n}\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(str, 5)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, 3)\n"
  ]
}
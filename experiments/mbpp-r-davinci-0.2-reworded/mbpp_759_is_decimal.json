{
  "name": "mbpp_759_is_decimal",
  "language": "r",
  "prompt": "# Write a function to check whether a given string is a decimal number with a precision of 2.\nis_decimal <- function(num) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- is_decimal\n    if(!identical(candidate('123.11'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('e666.86'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('3.124587'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('1.11'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('1.1.11'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if(grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n    if (grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n",
    "\n  if (grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^-?[0-9]+(\\\\.[0-9]{1,2})?$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if(grepl(\"^-?[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_decimal(\"12.12\")\n",
    "\n  if(grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if(grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (is.null(regexpr(\"^[0-9]*\\\\.[0-9]{2}$\", num))) {\n    return(FALSE)\n  } else {\n    return(TRUE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if(!is.character(num)) {\n    return(FALSE)\n  }\n  if(grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  }\n  return(FALSE)\n}\n",
    "\n  if(!is.character(num)) {\n    stop(\"Input must be a character string\")\n  }\n  if(grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]+(\\\\.[0-9]{1,2})?$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"^[0-9]*\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if(grepl(\"^[0-9]+\\\\.[0-9]{2}$\", num)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_decimal(\"123.45\")\nis_decimal(\"123.4\")\nis_decimal(\"123.\")\n"
  ]
}
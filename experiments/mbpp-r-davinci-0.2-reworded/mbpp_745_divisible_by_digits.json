{
  "name": "mbpp_745_divisible_by_digits",
  "language": "r",
  "prompt": "# Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rthon-exercises/lambda/rthon-lambda-exercise-24.php\ndivisible_by_digits <- function(startnum, endnum) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- divisible_by_digits\n    if(!identical(candidate(1, 22), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22))){quit('no', 1)}\n    if(!identical(candidate(1, 15), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15))){quit('no', 1)}\n    if(!identical(candidate(20, 25), list(22, 24))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  nums <- seq(startnum, endnum)\n  nums <- Filter(function(x) {\n    digits <- strsplit(as.character(x), split = \"\")[[1]]\n    digits <- as.numeric(digits)\n    all(x %% digits == 0)\n  }, nums)\n  return(nums)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    x_digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(x_digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[nums %% 10 != 0]\n  nums <- nums[nums %% 100 != 0]\n  nums <- nums[nums %% 1000 != 0]\n  nums <- nums[nums %% 10000 != 0]\n  nums <- nums[nums %% 100000 != 0]\n  nums <- nums[nums %% 1000000 != 0]\n  nums <- nums[nums %% 10000000 != 0]\n  nums <- nums[nums %% 100000000 != 0]\n  nums <- nums[nums %% 1000000000 != 0]\n  nums <- nums[nums %% 10000000000 != 0]\n  nums <- nums[nums %% 100000000000 != 0]\n  nums <- nums[nums %% 1000000000000 != 0]\n  nums <- nums[nums %% 10000000000000 != 0]\n  nums <- nums[nums %% 100000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000000 !=",
    "\n  divisible_by_digits <- function(num) {\n    num_digits <- strsplit(as.character(num), \"\")[[1]]\n    all(num %% as.numeric(num_digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    x_digits <- strsplit(as.character(x), \"\")[[1]]\n    divisible <- TRUE\n    for (i in 1:length(x_digits)) {\n      if (x %% as.numeric(x_digits[i]) != 0) {\n        divisible <- FALSE\n      }\n    }\n    divisible\n  }\n  divisible_nums <- sapply(startnum:endnum, divisible_by_digits)\n  startnum:endnum[divisible_nums]\n}\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[nums %% 10 != 0]\n  nums <- nums[nums %% 100 != 0]\n  nums <- nums[nums %% 1000 != 0]\n  nums <- nums[nums %% 10000 != 0]\n  nums <- nums[nums %% 100000 != 0]\n  nums <- nums[nums %% 1000000 != 0]\n  nums <- nums[nums %% 10000000 != 0]\n  nums <- nums[nums %% 100000000 != 0]\n  nums <- nums[nums %% 1000000000 != 0]\n  nums <- nums[nums %% 10000000000 != 0]\n  nums <- nums[nums %% 100000000000 != 0]\n  nums <- nums[nums %% 1000000000000 != 0]\n  nums <- nums[nums %% 10000000000000 != 0]\n  nums <- nums[nums %% 100000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000000 !=",
    "\n  divisible_by_digits <- function(x) {\n    digits <- as.numeric(strsplit(as.character(x), \"\")[[1]])\n    all(digits != 0, x %% digits == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(num) {\n    digits <- as.numeric(strsplit(as.character(num), split = \"\")[[1]])\n    all(num %% digits == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(num) {\n    num_digits <- strsplit(as.character(num), \"\")[[1]]\n    all(num %% as.numeric(num_digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    divisible <- TRUE\n    for (digit in digits) {\n      if (x %% as.integer(digit) != 0) {\n        divisible <- FALSE\n        break\n      }\n    }\n    divisible\n  }\n  divisible_nums <- Filter(divisible_by_digits, seq(startnum, endnum))\n  divisible_nums\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[sapply(nums, function(x) all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(nums)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[sapply(nums, function(x) all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(nums)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[sapply(nums, function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(sapply(digits, function(y) {\n      as.numeric(y) != 0 & x %% as.numeric(y) == 0\n    }))\n  })]\n  nums\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    x_digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(x_digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[nums %% 10 != 0]\n  nums <- nums[nums %% 100 != 0]\n  nums <- nums[nums %% 1000 != 0]\n  nums <- nums[nums %% 10000 != 0]\n  nums <- nums[nums %% 100000 != 0]\n  nums <- nums[nums %% 1000000 != 0]\n  nums <- nums[nums %% 10000000 != 0]\n  nums <- nums[nums %% 100000000 != 0]\n  nums <- nums[nums %% 1000000000 != 0]\n  nums <- nums[nums %% 10000000000 != 0]\n  nums <- nums[nums %% 100000000000 != 0]\n  nums <- nums[nums %% 1000000000000 != 0]\n  nums <- nums[nums %% 10000000000000 != 0]\n  nums <- nums[nums %% 100000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000 != 0]\n  nums <- nums[nums %% 10000000000000000000000000000 != 0]\n  nums <- nums[nums %% 100000000000000000000000000000 != 0]\n  nums <- nums[nums %% 1000000000000000000000000000000 !=",
    "\n  # Write your code here\n  numbers <- seq(startnum, endnum)\n  numbers <- numbers[sapply(numbers, function(x) all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(numbers)\n}\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[sapply(nums, function(x) all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(nums)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    return(all(x %% as.numeric(digits) == 0))\n  }\n  return(Filter(divisible_by_digits, startnum:endnum))\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  # create a vector of numbers from startnum to endnum\n  numbers <- seq(startnum, endnum)\n  # create a function to check if a number is divisible by all its digits\n  divisible_by_all_digits <- function(x) {\n    # create a vector of digits from the number\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    # check if the number is divisible by all its digits\n    all(x %% as.numeric(digits) == 0)\n  }\n  # apply the divisible_by_all_digits function to the numbers vector\n  numbers[sapply(numbers, divisible_by_all_digits)]\n}\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n"
  ]
}
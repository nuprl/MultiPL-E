{
  "name": "mbpp_285_text_match_two_three",
  "language": "r",
  "prompt": "# Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\ntext_match_two_three <- function(text) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_285_text_match_two_three.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- text_match_two_three\n    if(!identical(candidate('ac'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('dc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abbbba'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\ntext_match_two_three(\"abb\")\ntext_match_two_three(\"abbb\")\ntext_match_two_three(\"abbbb\")\ntext_match_two_three(\"abbbbb\")\n",
    "\n  if(regexpr(\"ab{2,3}\", text) > 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(\"Match\")\n  } else {\n    return(\"No match\")\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\ntext_match_two_three(\"abb\")\ntext_match_two_three(\"abbb\")\ntext_match_two_three(\"abbbb\")\ntext_match_two_three(\"abbbbb\")\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (grepl(\"ab{2,3}\", text)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n"
  ]
}
{
  "name": "mbpp_585_expensive_items",
  "language": "r",
  "prompt": "# Write a function to find the n most expensive items in a given dataset.\nexpensive_items <- function(items, n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- expensive_items\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22)), 1), list(list('name' = 'Item-2', 'price' = 555.22)))){quit('no', 1)}\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-3', 'price' = 45.09)), 2), list(list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-1', 'price' = 101.1)))){quit('no', 1)}\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-3', 'price' = 45.09), list('name' = 'Item-4', 'price' = 22.75)), 1), list(list('name' = 'Item-2', 'price' = 555.22)))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # sort items by price\n  sorted_items <- items[order(items$price), ]\n  # return the n most expensive items\n  return(sorted_items[1:n, ])\n}\n",
    "\n  items %>%\n    arrange(desc(price)) %>%\n    head(n)\n}\n\nexpensive_items(items, 5)\n",
    "\n  # Sort items by price\n  items <- items[order(items$price), ]\n  # Return the last n items\n  return(items[nrow(items)-n+1:nrow(items), ])\n}\n",
    "\n  # sort items by price\n  sorted_items <- items[order(items$price),]\n  # return the last n items\n  return(sorted_items[nrow(sorted_items):(nrow(sorted_items) - n + 1),])\n}\n",
    "\n  # Sort the items by price in descending order\n  sorted_items <- items[order(items$price, decreasing = TRUE), ]\n  # Return the first n items\n  return(sorted_items[1:n, ])\n}\n",
    "\n  # Sort the items by price in descending order.\n  sorted_items <- sort(items, decreasing = TRUE)\n  \n  # Return the first n items.\n  return(sorted_items[1:n])\n}\n",
    "\n  # Sort the items by price in descending order\n  sorted_items <- items[order(items$price, decreasing = TRUE), ]\n  # Return the first n items\n  return(sorted_items[1:n, ])\n}\n",
    "\n  # Sort items by price\n  sorted_items <- sort(items, decreasing = TRUE)\n  \n  # Return the first n items\n  return(sorted_items[1:n])\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # sort the items by price\n  sorted_items <- sort(items, decreasing = TRUE)\n  # return the first n items\n  return(sorted_items[1:n])\n}\n",
    "\n  # Sort the items by price, in descending order.\n  sorted_items <- sort(items, decreasing = TRUE)\n  # Return the first n items.\n  return(sorted_items[1:n])\n}\n",
    "\n  items %>%\n    arrange(desc(price)) %>%\n    slice(1:n)\n}\n\nexpensive_items(items, 3)\n",
    "\n    # Sort items by price in descending order\n    sorted_items <- items[order(items$price, decreasing = TRUE), ]\n    # Return the first n rows\n    return(sorted_items[1:n, ])\n}\n",
    "\n  # sort items by price\n  sorted_items <- items[order(items$price),]\n  # return the n most expensive items\n  return(sorted_items[1:n,])\n}\n",
    "\n  # Sort items by price in descending order\n  sorted_items <- items[order(items$price, decreasing = TRUE), ]\n  # Return the first n items\n  return(sorted_items[1:n, ])\n}\n",
    "\n  # Sort the items by price\n  sorted_items <- sort(items, decreasing = TRUE)\n  # Return the first n items\n  return(sorted_items[1:n])\n}\n",
    "\n  # Sort the items by price\n  sorted_items <- sort(items, decreasing = TRUE)\n  # Return the first n items\n  return(sorted_items[1:n])\n}\n",
    "\n  # Sort the items by price in descending order.\n  sorted_items <- items[order(items$price, decreasing = TRUE), ]\n  # Return the first n rows.\n  return(sorted_items[1:n, ])\n}\n",
    "\n  # Sort the items by price in descending order.\n  sorted_items <- sort(items, decreasing = TRUE)\n  # Return the first n items.\n  return(sorted_items[1:n])\n}\n",
    "\n  # sort the items by price\n  sorted_items <- items[order(items$price, decreasing = TRUE), ]\n  # return the first n rows\n  return(sorted_items[1:n, ])\n}"
  ]
}
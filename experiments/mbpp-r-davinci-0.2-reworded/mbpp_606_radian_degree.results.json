{
  "name": "mbpp_606_radian_degree",
  "language": "r",
  "prompt": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "results": [
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * (pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\nradian_degree(180)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "[1] 3.141593\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree*pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree*pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return (degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree*pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree*pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * (pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree*pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi / 180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\nradian_degree(180)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 3.141593\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\nradian_degree(180)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 3.141593\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(45)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 0.7853982\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree*pi/180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return (degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n    radian <- degree * (pi/180)\n    return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\nradian_degree(180)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "[1] 3.141593\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  degree * pi / 180\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi/180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree*pi/180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(90)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 1.570796\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * pi / 180)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n    radian <- degree * (pi/180)\n    return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\nradian_degree(180)\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "[1] 3.141593\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * (pi / 180)\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  return(degree * (pi/180))\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1666123290,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi/180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {\n  radian <- degree * pi / 180\n  return(radian)\n}\n\ntest_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_803_is_perfect_square",
  "language": "r",
  "prompt": "# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nis_perfect_square <- function(n) {",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "test_humaneval <- function() {\ncandidate <- is_perfect_square\n    if(!identical(candidate(10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(36), TRUE)){quit('no', 1)}\n    if(!identical(candidate(14), FALSE)){quit('no', 1)}\n    if(!identical(candidate(196), TRUE)){quit('no', 1)}\n    if(!identical(candidate(125), FALSE)){quit('no', 1)}\n    if(!identical(candidate(15625), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  i <- 1\n  while (i*i <= n) {\n    if ((n % i == 0) && (n / i == i)) {\n      return(TRUE)\n    }\n    i <- i + 1\n  }\n  return(FALSE)\n}\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  for (i in 1:n) {\n    if (i * i == n) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  i <- 1\n  while (i * i <= n) {\n    if ((n % i == 0) && (n / i == i)) {\n      return(TRUE)\n    }\n    i <- i + 1\n  }\n  return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if (i * i == n) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  for (i in 1:n) {\n    if (i * i == n) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\nis_perfect_square(25)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    j <- n\n    while (i <= j) {\n        mid <- (i + j) / 2\n        if (mid * mid == n) {\n            return(TRUE)\n        }\n        if (mid * mid < n) {\n            i <- mid + 1\n        } else {\n            j <- mid - 1\n        }\n    }\n    return(FALSE)\n}\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  i <- 1\n  while (i * i <= n) {\n    if ((n % i == 0) && (n / i == i)) {\n      return(TRUE)\n    }\n    i <- i + 1\n  }\n  return(FALSE)\n}\n",
    "\n  sqrt(n) == floor(sqrt(n))\n}\n\nis_perfect_square(4)\nis_perfect_square(5)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  i <- 1\n  while (i * i <= n) {\n    if ((n % i == 0) && (n / i == i)) {\n      return(TRUE)\n    }\n    i <- i + 1\n  }\n  return(FALSE)\n}\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\nis_perfect_square(26)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if (i * i == n) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    j <- n\n    while (i <= j) {\n        mid <- floor((i + j) / 2)\n        if (mid * mid == n) {\n            return(TRUE)\n        }\n        if (mid * mid < n) {\n            i <- mid + 1\n        } else {\n            j <- mid - 1\n        }\n    }\n    return(FALSE)\n}\n\nis_perfect_square(25)\n",
    "\n  if (n < 0) {\n    return(FALSE)\n  }\n  if (n == 0 || n == 1) {\n    return(TRUE)\n  }\n  i <- 1\n  while (i * i <= n) {\n    if ((n % i == 0) && (n / i == i)) {\n      return(TRUE)\n    }\n    i <- i + 1\n  }\n  return(FALSE)\n}\n\nis_perfect_square(25)\nis_perfect_square(26)\n",
    "\n    if (n < 0) {\n        return(FALSE)\n    }\n    if (n == 0 || n == 1) {\n        return(TRUE)\n    }\n    i <- 1\n    while (i * i <= n) {\n        if ((n % i == 0) && (n / i == i)) {\n            return(TRUE)\n        }\n        i <- i + 1\n    }\n    return(FALSE)\n}\n"
  ]
}
name: HumanEval_77_iscube
language: rb
prompt: "# Write a function that takes an integer a and returns True \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\ndef iscube(a)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_iscube\n\
  \    candidate = method(:iscube)\n    assert_equal(true, candidate.call(1))\n  \
  \  assert_equal(false, candidate.call(2))\n    assert_equal(true, candidate.call(-1))\n\
  \    assert_equal(true, candidate.call(64))\n    assert_equal(false, candidate.call(180))\n\
  \    assert_equal(true, candidate.call(1000))\n    assert_equal(true, candidate.call(0))\n\
  \    assert_equal(false, candidate.call(1729))\n  end\nend\n"
completions: ["  if a >= 3\n    return true\n  end\n  return false\nend", "    if\
    \ a==0 or a == 1:\n        return True\n    if a == 2 or a==3 or a == 4:\n   \
    \     return True\n    if a == 5 or a == 6 or a == 7 or a == 8 or a == 9 or a\
    \ == 10:\n        return True\n    else:\n        return False\n</cell>\n<cell>\n\
    print iscube(9)\n</cell>\n<cell>\nprint iscube(3)\n</cell>\n<cell>\nprint iscube(1)\n\
    </cell>\n<cell>\nprint iscube(10)\n</cell>\n<cell>\nprint iscube(100)\n</cell>\n\
    <cell>\nprint iscube(400)\n</cell>\n<text>\nQuestion 4\nWrite a function that\
    \ takes an integer $a$ and an integer $n$ as input and returns the sum of the\
    \ first $n$ natural numbers.", "    # Write your code here.\n    (a**3) mod 25\
    \ == 0 # is cube of a\nend\nprint(iscube(16))\n</cell>\n<code language=julia-1.0>",
  "    cube = (a > 0) & (a%3 > 0) & (a%3 <= 5)\n    return cube\n</cell>\n<text>\n\
    Task 7. Write a function that checks if two integers a and b are even.\nNote:\
    \ You may assume that the arguments are valid integers. You may not use any built-in\
    \ functions (such as abs, round, etc.). You may not use any conditional statements.\n\
    Examples:\nisEven(4,3) --> True\nisEven(-4,3) --> False\nisEven(0,0) --> True\n\
    isEven(20,10) --> False", '   return (cube(a,a,a,a,a) and cube(a,a,a,a,a))', " \
    \   if a % 9 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0\n       return\
    \ true\n    else return false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    iscube(12)\n</cell>\n<text>\nWhat is infix notation?\nOne way to write mathematical\
    \ expressions in Julia is to write them in infix notation. For example, to add\
    \ 5 to 12, we would write 5 + 12 and to multiple 12 with 7, we would write 12\
    \ * 7. Another way to write this in infix notation is  by placing a space between\
    \ symbols and operators. For example, 5 * 7 + 12 is written as 5 7 +  12. The\
    \ space between the * and the + is called a separator and separates two symbols\
    \ (* and +).", "  if (a==1)\n     return True\n  else if (a>1)\n     return iscube(a-1)**3\
    \ + iscube(a-1)**2\n  else\n     return False", "  if a<0\n    return false\n\
    \  else\n    return true\n  end\nend", "    if a == 0 or a == 1\n        return\
    \ true\n    else if a == 2\n        return true\n    else if a % 3 == 0\n    \
    \    return true\n    else if a % 3 == 1\n        return false\n    else\n   \
    \     return false\n    end\nend", "    cube = 1\n    if a == 1 or a==2 or a==3\
    \ or a==4 or a==5 or a==6:\n        return True\n    return False", "   return\
    \ a == a*a*a\nend", "  a == a*a*a\nend\n</cell>\n<cell>", "    ( a >= 0 and a\
    \ <= 9 and (a-1)**3 == a )\nend\n</cell>\n<code language=julia-1.3>\niscube(12)\
    \ # returns true\niscube(17) # returns false\n</cell>\n<code language=julia-1.3>",
  "    if a == 1: return True\n    if a == 2: return True\n    if a == 3**3: return\
    \ True\n    if a == (3*3)**3: return True\n    if a == (3*3*3)**3: return True\n\
    \    return False", "  if a**3 < a\n  return true\n  end\n  return false\nend\n\
    </cell>\n<code language=julia-1.6>\niscube(2)\n</cell>\n<text>\nQuestion 2.8\n\
    Write a function that takes an integer n and returns\nTrue if it is a square number\
    \ and False if not.", "  if a is 1\n    return true\n  else\n    return false\n\
    end\n</cell>\n<cell>\niscube(2)\n</cell>\n<cell>\niscube(9)\n</cell>\n<cell>\n\
    iscube(-5)\n</cell>\n<text>\nQuestion 12. Write a function which takes a number\
    \ as input and returns a list with the first $n$ integers of the cube.", "  return\
    \ true\nend", "  if a == 0 or a == 1 or a==-1 or a==1 or a==-1\n    return true\n\
    \  else\n    return false\n  end\nend", "    if a == 1:\n        return True\n\
    \    elif a == 2:\n        return True\n    elif a == 3:\n        return True\n\
    \    elif a == 4:\n        return True\n    elif a == 5:\n        return True\n\
    \    elif a == 6:\n        return True\n    elif a == 7:\n        return True\n\
    \    elif a == 8:\n        return True\n    elif a == 9:\n        return True\n\
    \    elif a == 10:\n        return True\n    elif a == 11:\n        return True\n\
    \    elif a == 12:\n        return True\n    elif a == 13:\n        return True\n\
    \    elif a == 14:\n        return True\n    elif a == 15:\n        return True\n\
    \    elif a == 16:\n        return True\n    elif a == 17:\n        return True\n\
    \    elif a == 18:\n        return True\n    elif a == 19:\n        return True\n\
    \    elif a == 20:\n        return True\n    elif a == 21:\n        return True\n\
    \    elif a == 22:\n        return True\n    elif a == 23:\n        return True\n\
    \    elif a == 24:\n        return True\n    elif a == 25:\n        return True\n\
    \    elif a == 26:\n        return True\n    elif a == 27:\n        return True\n\
    \    elif a == 28:\n        return True\n    elif a == 29:\n        return True\n\
    \    elif a == 30:\n        return True\n    elif a == 31:\n        return True\n\
    \    elif a == 32:\n        return True\n    elif a == 33:\n        return True\n\
    \    elif a == 34:\n        return True\n    elif a == 35:\n        return True\n\
    \    elif a == 36:\n        return True\n    elif a == 37:\n        return True\n\
    \    elif a == 38:\n        return True\n    elif a == 39:\n        return True\n\
    \    elif a == 40:\n        return True\n    elif a == 41:\n        return True\n\
    \    elif a == 42:\n        return True\n    elif a == 43:\n        return True\n\
    \    elif a == 44:\n        return True\n    elif a == 45:\n        return True\n\
    \    elif a == 46:\n        return True\n    elif a == 47:\n        return True\n\
    \    elif a == 48:\n        return True\n    elif a == 49:\n        return True\n\
    \    elif a == 50:\n        return True\n    elif a == 51:\n        return True\n\
    \    elif a == 52:\n        return True\n    elif a == 53:\n        return True\n\
    \    elif a == 54:\n        return True\n    elif a == 55:\n        return True\n\
    \    elif a == 56:\n        return True\n    elif a == 57:\n        return True\n\
    \    elif a == 58:\n        return True\n    elif a == 59:\n        return True\n\
    \    elif a == 60:\n        return True\n    elif a == 61:\n        return True\n\
    \    elif a == 62:\n        return True\n    elif a == 63:\n        return True\n\
    \    elif a == 64:\n        return True\n    elif a == 65:\n        return True\n\
    \    elif a == 66:\n        return True\n    elif a == 67:\n        return True\n\
    \    elif a == 68:\n        return True\n    elif a == 69:\n        return True\n\
    \    elif a == 70:\n        return True\n    elif a == 71:\n        return True\n\
    \    elif a == 72:\n        return True\n    elif a == 73:\n        return True\n\
    \    elif a == 74:\n        return True\n    elif a == 75:\n        return True\n\
    \    elif a == 76:\n        return True\n    elif a == 77:\n        return True",
  "    if a % 8 == 1 \n        return true\n    else \n        return false\nend\n\
    println(iscube(10))\nprintln(iscube(1))\n</cell>\n<code language=julia-1.0>",
  "    if a==1 and iscube(a-1)\n        return true\n    else \n        return false",
  '    return a**3 == a', "    if a%10==0: return True \n    if a%5==0: return True\n\
    \    if a%3==0: return True\n    if a%5==1 and a%3==1: return True\n    if a%5==2\
    \ and a%3==2: return True\n    if a%3==0 and a%5==0: return True\n    if a%5==1\
    \ and a%3==1: return True\n    return False", "  cubed = a**3\n  if cubed ==a\n\
    \    puts \"#{a} is a cube\"\n  else\n    puts \"#{a} is not a cube\"\n  end\n\
    end", "  if a==1\n    return true\n  if a==3\n    return true\n  else\n    return\
    \ false\nend", "  if a==1 then return true\n  else if a==3 then return true\n\
    \  else if a==5 then return true\n  else return false\nend", "  if a >= 0 and\
    \ a < 10\n  then return true\n  else return false\n  end if\nend function", " \
    \ if a==0\n    true\n  else\n    false\n  end\nend", "  if a==0 or a == 1 or a\
    \ == 3 or a == 5 or  a == 7 or a == 9 or a == 11 or a == 13 or a == 15 or a ==\
    \ 17 or a == 19 or a == 21 or a == 23 or a == 25 or a == 27 or a == 29 or a ==\
    \ 31 or a == 33 or a == 35 or a == 37 or a == 39 or a == 41 or a == 43 or a ==\
    \ 45 or a == 47 or a == 49 or a == 51 or a == 53 or a == 55 or a == 57 or a ==\
    \ 59 or a == 61 or a == 63 or a == 65 or a == 67 or a == 69 or a == 71 or a ==\
    \ 73 or a == 75 or a == 77 or a == 79 or a == 81 or a == 83 or a == 85 or a ==\
    \ 87 or a == 89 or a == 91 or a == 93 or a == 95 or a == 97 \n    return true\n\
    \  return false\nend", "    return ((a*a)==a)\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that checks whether a number is prime. \nIf the given number\
    \ is prime, then your function should return True. \nIf the given number is not\
    \ prime, then your function should return False.\nThe primes below 10 (except\
    \ 2 and 3) are not prime.", "    i = a\n    if i == 1\n        return True\n \
    \   else\n        return False\n    end\nend", "    if isnumber(a) and a>0\n \
    \       return true\n    else\n        return false\n    end\nend", "  puts cube(a)\n\
    \  puts cube(a+1)\n  puts cube(a-1)\n  puts cube(a-2)\n  puts cube(a+2)\n  puts\
    \ cube(a+3)\n  puts cube(a+4)\n  puts cube(a-3)\n  puts cube(a-4)\n  puts cube(a+5)\n\
    \  puts cube(a+6)\n  puts cube(a-6)\nend", "    return a % 1 == 0 and a % 2 ==\
    \ 0 and a % 3 == 0\nend", "    if a == 0 or a ** 3 == 0:\n        return True\n\
    \    return False\nprint(iscube(12))\nprint(iscube(16))\nprint(iscube(32))\nprint(iscube(36))\n\
    </cell>\n<text>\n\u0417\u0430\u0434\u0430\u0447\u0430\n\u0412\u044B\u043F\u0438\
    \u0448\u0438\u0442\u0435 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0443\
    , \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u043F\u0440\u0438\u043D\u0438\u043C\
    \u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043B\u0430 $a$ \u0438\
    \ $b$, \u0442\u0430\u043A\u0436\u0435 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\
    \u0430\u0442 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B \u0441\u043E\
    \u0445\u0440\u0430\u043D\u044F\u0435\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043E\
    \u0447\u0435\u0440\u0435\u0434\u043D\u043E\u0439 \u0444\u043E\u0440\u043C\u0435\
    \ $a^b$. \u041F\u0440\u0438\u043C\u0435\u0447\u0430\u043D\u0438\u0435: \u043F\u043E\
    \u0441\u043B\u0435 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\
    \u0438\u044F \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u043F\u0440\u043E\u0433\
    \u0440\u0430\u043C\u043C\u0430 \u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0434\
    \u0438\u0442 \u043F\u043E\u0441\u0447\u0438\u0442\u0430\u0442\u044C, \u0447\u0442\
    \u043E \u0435\u0441\u0442\u044C \u0444\u043E\u0440\u043C\u0430. \u041E\u0431\u0440\
    \u0430\u0442\u0438\u0442\u0435 \u0432\u043D\u0438\u043C\u0430\u043D\u0438\u0435\
    , \u0447\u0442\u043E \u0444\u043E\u0440\u043C\u0430 \u043C\u043E\u0436\u0435\u0442\
    \ \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0442\u043E\u043B\u044C\
    \u043A\u043E \u0441\u0438\u043C\u0432\u043E\u043B\u044B a, b \u0438 ^ . \u041F\
    \u0440\u043E\u0431\u043B\u0435\u043C\u0430, \u043F\u043E\u0442\u043E\u043C\u0443\
    \ \u0447\u0442\u043E \u0444\u043E\u0440\u043C\u0430 \u0445\u043E\u0442\u044F \u0431\
    \u044B \u043E\u0434\u043D\u0430 \u0438 \u0442\u0430 \u0436\u0435 \u0441\u0442\u0440\
    \u043E\u043A\u0430, \u0432 \u0447\u0430\u0441\u0442\u043D\u043E\u0441\u0442\u0438\
    \ \u0438\u043C\u0435\u0435\u0442\u0441\u044F \u0442\u043E\u043B\u044C\u043A\u043E\
    \ \u0441\u0438\u043C\u0432\u043E\u043B ^. \u0417\u0430\u043C\u0435\u0442\u044C\
    \u0442\u0435, \u0447\u0442\u043E \u0435\u0441\u043B\u0438 \u0441\u0442\u0440\u043E\
    \u043A\u0430 \u0434\u043B\u0438\u043D\u0430 \u0447\u0435\u0442\u0432\u0435\u0440\
    \u0442\u0438, \u0442\u043E \u0444\u043E\u0440\u043C\u0430 \u043E\u0447\u0435\u043D\
    \u044C \u043C\u0435\u0434\u043B\u0435\u043D\u043D\u0435\u0435, \u0442\u0430\u043A\
    \ \u043A\u0430\u043A \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\
    \u043D\u0438\u0435 \u043A\u043E\u0434\u0430 \u0434\u043B\u044F \u043F\u0440\u043E\
    \u0433\u0440\u0430\u043C\u043C\u044B \u0445\u043E\u0440\u043E\u0448\u043E \u0432\
    \u0440\u043E\u0434\u0435 \u043A\u0430\u043A \u0441\u0442\u0440\u043E\u043A\u0438\
    \ \u0438 \u0442\u0430\u043A\u0436\u0435 \u0432 \u043A\u043E\u043B\u043B\u0435\u043A\
    \u0446\u0438\u0438.", "    cube = a == a**3\n    return cube\n</cell>\n<cell>",
  "    return a==a^a^a\nend", "  x = a.to_s\n  if x =~ /^.*(\\d{6})/\n    puts \"\
    Yes #{a} is a cube of #{x.to_i}\"\n  else\n    puts \"No #{a} is not a cube of\
    \ #{x.to_i}\"\n  end\nend", "  a == (a * a * a)\nend", "  a % a == 0\nend", " \
    \   if a%3==0 and a%5==0 and a%7==0 then\n        return true\n    else\n    \
    \    return false\n    end\nend", "    cube = a * a * a\n    cube = cube.to_i\n\
    \    if cube == a*a*a\n        return true\n    else \n        return false\n\
    \    end\nend", "  # TODO: your code here\n  return False\nend", "  if a % 1==0\
    \ then\n    for b = a to a^3 do\n      if b^3 == a then return true\n    end\n\
    \  end\nend", "  if a < 1\n    return false\n  else if a == 1 \n    return true\n\
    \  else\n    cube = 1\n    i = 1\n    while i <= a\n      cube *= i\n      i +=\
    \ 1\n    return cube == a\nend", "    i=a%16\n    if i==0 or i==1 or i==5 or i==15\
    \ or i==16\n        return true\n    end\n    return false\nend", "    cube =\
    \ a**3\n    if cube == int(a):\n        return True\n    else:\n        return\
    \ False", "  return a mod 1 == 0 and a mod 2 == 0 and a mod 3 == 0 \nend\nprint(\"\
    iscube(2) = \", iscube(2))\nprint(\"iscube(3) = \", iscube(3))\nprint(\"iscube(4)\
    \ = \", iscube(4))\nprint(\"iscube(5) = \", iscube(5))\n</cell>\n<cell>", "  if\
    \ a >= 0 and a <= 9:\n    if a ** 3 == a and a == a ** 2 or a ** 3 == a:\n   \
    \   return True\n    return False\n  else:\n    return False", "  (a mod 2) =\
    \ 0\nend\n</cell>\n<code language=julia-1.5>\niscube(4)\n</cell>\n<code language=julia-1.5>",
  "    # Write your code here.\n    return a==0\n</cell>\n<text>\nTask 4: Compute\
    \ factorials, cubes, and cubecubes\nTask 1\nWrite a function that takes an integer\
    \ a and returns its factorial.", "    sum=0\n    for d in range(1,(a**3)+1):\n\
    \        sum+=(a**3)*(d**2)\n    if sum==a**3:\n        return True\n    else:\n\
    \        return False", "  return true\nend", "    if a > 0 \n        cube(a)\n\
    \    else\n        false\n    end\nend", "    if a is 0\n        return false\n\
    \    if a is 1\n        return true\n    for i = 2 to a/3\n        if a*i == a\n\
    \            return true\n    return false\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nfunction isCube(number) {\n  if(number < 0 || number > 6) return\
    \ false\n  if(number % 3 != 0 || number % 5 != 0) return false\n  if(number %\
    \ 3 == 0 && number % 5 != 0) return false\n  return true;\n}\n</code>\n<|/ a tags=java,algorithm,math,recursion\
    \ |>\n<| a dscore=0 tags=java,algorithm,math,recursion |>\n<code>\npublic class\
    \ CubeCheck {", "   cube = a**3\n   return cube == a\nend", "  if (a % 8 == 0\
    \ and a % 16 == 0 and a % 32 == 0)\n    return true\n  else\n    return false\n\
    \  end\nend\n</cell>\n<code language=julia-1.3>", "    if a > 0 and not a % 3\n\
    \        return true\n    else\n        return false\n    end\nend", "    # Your\
    \ code goes here\n    if (a<1)\n        return false\n    else\n        if (a\
    \ == 1)\n            return true\n        else\n            if (a==2)\n      \
    \          return true\n            else\n                if(a==3)\n         \
    \           return true\n                else\n                    if(a==4)\n\
    \                        return true\n                    else\n             \
    \           if(a==5)\n                            return true\n              \
    \          else\n                            if(a==6)\n                      \
    \          return true\n                            else\n                   \
    \             if(a==7)\n                                    return true\n    \
    \                            else\n                                    if(a==8)\n\
    \                                        return true\n                       \
    \             else\n                                        if(a==9)\n       \
    \                                     return true\n                          \
    \              else\n                                            return false\n\
    </code>\n<|/ a tags=algorithm,ruby,ruby-on-rails dscore=0 |>\n<| a |>\n<code>",
  "    if a<0\n        return false\n    \n    # YOUR CODE HERE\n    return true\n\
    end", "  if a==1\n    true\n  elsif a==3\n    true\n  else\n    false\n  end\n\
    end\nputs iscube(6)\nputs iscube(100)\nputs iscube(20)\nputs iscube(-1)", "  \
    \  if a<0\n        return false\n    if a==1\n        return true\n    for i in\
    \ 1..a\n        if i*i==a\n            return true\n    return false\n    ", " \
    \ if a % 3 = 0\n  else \n   if a % 5 = 0\n   else \n    a = a^3\n   end\n  end\n\
    end", "    \n    if a==1:\n        return True\n    elif a==4:\n        return\
    \ True\n    elif a==9:\n        return True\n    elif a==16:\n        return True\n\
    \    elif a==25:\n        return True\n    elif a==36:\n        return True\n\
    \    elif a==49:\n        return True\n    elif a==64:\n        return True\n\
    \    elif a==81:\n        return True\n    elif a==100:\n        return True\n\
    \    else:\n        return False", '  return a == a*a*a', "  return true\nend\n\
    </cell>\n<code language=julia-1.0>", "    if a%6==0 && a%12==0 && a%18==0 && a%24==0\
    \ && a%36==0 && a%60==0 && a%72==0 && a%88==0 && a%108==0 && a%120==0 && a%144==0\
    \ && a%168==0 && a%192==0 && a%216==0 && a%240==0 && a%288==0 && a%324==0 && a%360==0\
    \ && a%408==0 && a%456==0 && a%528==0 && a%560==0 && a%604==0 && a%648==0 && a%672==0\
    \ && a%768==0 && a%816==0 && a%848==0 && a%876==0 && a%912==0 && a%960==0 && a%992==0\
    \ && a%1024==0 \n        return true\n    else return false\nend", "    if a ==\
    \ 1\n        if a == 2\n            if a == 3\n                if a == 6\n   \
    \                 return True\n                else return False\n           \
    \ else return False\n        else return False\n    else return False\n</code>\n\
    <|/ a dscore=1 tags=ruby,algorithm,if-statement |>\n<| c |>\nThanks for your help\
    \ but my task is to write a program that checks if a number is a cube using only\
    \ if-statements.\n<|/ c |>\n<| c |>\nThis answer is not complete and does not\
    \ provide a solution.\n<|/ c |>\n<| a tags=ruby,algorithm,if-statement |>\nYou\
    \ can solve this with recursion, something like:\n<code>", "    iscube = False\n\
    \    if a >= 1 and a <= 9:\n        iscube = True\n    return iscube", "    if\
    \ a == 1 : return True\n    elif a > 1 and a < 9: return False\n    elif a > 9:\
    \ return False\n    else: return iscube(a-1)**3+iscube(a-1)**2+iscube(a-1)+1\n\
    \        \nprint(iscube(3))\nprint(iscube(8))\nprint(iscube(16))\nprint(iscube(9))\n\
    print(iscube(11))\n</cell>\n<cell>", '# Write a function that takes an integer
    a and returns True ', "    cube = a == a**3\n    return cube", '  return true',
  "  if a <3\n    return false\n  end\n  for j in (1..(a-1))\n    for i in (1..(a-1))\n\
    \      if((j==1) && (i==1))\n        return true\n      else\n        if ((a%i)\
    \ == 0)\n          return false\n        end\n      end\n    end\n  end\nend\n\
    </cell>\n<code language=julia-1.2>\n@code_warntype iscube(3) #test it out\n</cell>\n\
    <code language=julia-1.2>", "  \n  # If the input is valid and is a cube (a is\
    \ a positive integer) then\n  # return True\n  if isvalid(a)\n    if ispositive(a)\n\
    \      if a > 1\n        iscube = True\n      else\n        iscube = True\n  \
    \    end\n    else\n      iscube = False\n    end\n  else\n    iscube = False\n\
    \  end\n  return iscube\nend", "    if a == 1 or a==3 or a==5 or a==7 or a==9\n\
    \        return True\n    else\n        return False\n</code>\nThen we write a\
    \ function that checks if an ingeger is square\n<code>", "  if a==1\n    return\
    \ true\n  else if a==5\n    return true\n  else if a==9\n    return true\n  else\
    \ if a==13\n    return true\n  else\n    return false\n  end\nend", "    cube\
    \ = a**3\n    return cube == a", "  if a >= 0 and a <= 9 and a > 0 :\n     return\
    \ True\n  else:\n     return False", "    cube = (a >=0) and (a**3 == a)\n   \
    \ return cube \n</cell>\n<cell>\niscube(3) \n</cell>\n<cell>\niscube(4)\n</cell>\n\
    <cell>\niscube(7)\n</cell>\n<text>\n4.2 Write a function that takes an integer\
    \ a and returns True if and only if this ingeger is an arrangement of three consecutive\
    \ integers, each greater than or equal to that integer.", "    return (a**3)%1\
    \ !=0\nend\n</cell>\n<cell>", "  # TODO: define iscube here\n  true\nend", " \
    \ a = a.to_i\n  if (a**3 == a*a*a) or (a**3 == a*a*a-a) or (a**3 == a*a*a+a)\n\
    \    true\n  else\n    false\n  end\nend\nprint iscube(4) ? \"It works\" : \"\
    Try again\"", "    return a.cube() == True\nend", "    \n    if a==1 or a==2 or\
    \ a==3 or a==4 or a==5 or a==6 or a==7 or a==8 or a==9 or a==10\n        return\
    \ True\n    else \n        return False\n        \niscube(6) #True\niscube(9)\
    \ #True\niscube(100) #False\n</cell>\n<cell>", "    if a == 1 and isodd(a)\n \
    \       return true\n    else if a == 1 and iseven(a)\n        return true\n \
    \   else if a == 2 and isodd(a)\n        return true\n    else if a == 2 and iseven(a)\n\
    \        return true\n    else if a == 3 and isodd(a)\n        return true\n \
    \   else if a == 3 and iseven(a)\n        return true\n    end\n    return false\n\
    end", "    if a <= 0 then \n        return false\n    else \n        return true\n\
    \    end if\nend function\n</cell>\n<text>\nTests\nRun the following cell to test\
    \ your code.", "\tif a<3 || a>9\n\t\treturn false\n\telse\n\t\tcube=a^a^a\n\t\t\
    cube=cube^cube\n\t\tcube=cube^cube\n\t\tcube=cube^cube\n\t\tcube=cube^cube\n\t\
    \tif cube==a\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\tend\nend", '#
    Write a function that takes an integer a and returns a ', "    cube = is_cube(a)\n\
    \    return cube", "    if a <= 0 then return false \n    for i=1 to a \n    \
    \    for j=1 to i\n            if j == a*i*i then return true \n    return false\n\
    end ", "    cube = a**3\n    if a == cube then return true\n    return false\n\
    end", "  if a^3 == a\n    puts \"Cube of #{a}\"\n  else\n    puts \"Not a cube\
    \ of #{a}\"\n  end\nend", "    if a==0\n        return false\n    else \n    \
    \    return true\n    end\nend", "    \n    if a==1 or a==0 or a==-1:\n      \
    \  return True\n    \n    elif a == 1:\n        cube=a\n        \n        if iscube(cube):\n\
    \            return True\n            \n        else:\n            return False\n\
    \            \n    elif a == 0:\n        return False\n        \n    elif a ==\
    \ -1:\n        cube=a\n        \n        if iscube(cube):\n            return\
    \ True\n            \n        else:\n            return False\n        \n    else:\n\
    \        return False\n        \n    ", " iscube = 0\n if a > 0 and a < 100\n\
    \  iscube = a**3\n else\n  return false\n end\n return iscube\nend", "  a >= 0\n\
    \  return true\nend", "  if a==0 return 0\n  if a==1 return 1\n  if a==2 return\
    \ 1\n  if a==3 return 0\n  if a==4 return 1\n  if a==5 return 0\n  if a==6 return\
    \ 1\n  if a==7 return 1\n  if a==8 return 0\n  if a==9 return 1\n  if a==10 return\
    \ 0\n  if a==11 return 1\n  if a==12 return 1\n  if a==13 return 0\n  if a==14\
    \ return 1\n  if a==15 return 0\n  if a==16 return 1\n  if a==17 return 1\n  if\
    \ a==18 return 0\n  if a==19 return 1\n  if a==20 return 1\n  if a==21 return\
    \ 0\n  if a==22 return 1\n  if a==23 return 1\n  if a==24 return 0\n  if a==25\
    \ return 1\n  if a==26 return 0\n  if a==27 return 1\n  if a==28 return 1\n  if\
    \ a==29 return 0\n  if a==30 return 1\n  if a==31 return 1\n  if a==32 return\
    \ 0\n  if a==33 return 1\n  if a==34 return 1\n  if a==35 return 0\n  if a==36\
    \ return 1\n  if a==37 return 1\n  if a==38 return 0\n  if a==39 return 1\n  if\
    \ a==40 return 1\n  if a==41 return 1\n  if a==42 return 0\n  if a==43 return\
    \ 1\n  if a==44 return 1\n  if a==45 return 0\n  if a==46 return 1\n  if a==47\
    \ return 1\n  if a==48 return 0\n  if a==49 return 1\n  if a==50 return 0\n  if\
    \ a==51 return 1\n  if a==52 return 1\n  if a==53 return 0\n  if a==54 return\
    \ 1\n  if a==55 return 0\n  if a==56 return 1\n  if a==57 return 1\n  if a==58\
    \ return 0\n  if a==59 return 1\n  if a==60 return 1\n  if a==61 return 0\n  if\
    \ a==62 return 1\n  if a==63 return 1\n  if a==64 return 0\n  if a==65 return\
    \ 1\n  if a==66 return 1\n  if a==67 return 0\n  if a==68 return 1\n  if a==69\
    \ return 1\n  if a==70 return 0\n  if a==71 ", "  return false if a.zero?\n  return\
    \ true if a == 1\n  return true if a == 3\n  return true if a == 9\n  return false\
    \ if a.is_odd?\n  cubes= (1..9).collect{|i| i*i*i}\n  cubes.include?(a)\nend\n\
    p iscube(5)\np iscube(6)\np iscube(100)\np iscube(130)\np iscube(173)\np iscube(184)\n\
    p iscube(201)\np iscube(321)\np iscube(333)", '    return a % a == 0 and a % 3
    != 0', "\tcube=false\n\tif a==0\n\t\tcube=true\n\telse\n\t\ta%2==0 and a>0 and\
    \ a<4\n\t\tif a<4\n\t\t\tcube=true\n\t\telse\n\t\t\tcube=false\n\t\tend\n\tend\n\
    \treturn cube\nend", "  a == a*a*a\nend\n</cell>\n<code language=julia-1.0>",
  "  a == (a ^ 3) && a.even?\nend", "    if a == 1 or a==3 or a==5 or a==7 ora==9:\n\
    \        return True\n    else:\n        return False\nprint(iscube(1))\nprint(iscube(5))\n\
    print(iscube(7))\nprint(iscube(9))\nprint(iscube(33))\nprint(iscube(13))\n</cell>\n\
    <text>\nProblem 7\nUse lambda expressions and the filter method to filter out\
    \ numbers that have a value less than 10.", "    (n,r)=a,1\n    while r*(n+1)>(n*n*n)\n\
    \        (n,r)=n,n*(n+1)//r+1\n    end\n    (n,r)=a,1\n    while r*(n-1)>(n*n*n)\n\
    \        (n,r)=n,n*(n-1)//r+1\n    end\n    if n*(n-1)==n*n*n \n        return\
    \ true\n    else\n        return false\n    end\nend", "    cube = 1\n    for\
    \ n in a:\n        if cube * n == a:\n            cube = n\n    return cube ==\
    \ a\n</cell>\n<cell>", "    if a==1: return False\n    i = 2\n    while i <= a:\n\
    \        if a*i == a: \n            return True\n        i += 1\n    return False",
  "  return true if a.cubes == a.cubes.cubes(a).cubes(a).cubes(a)\nend\nprint(iscube(3))",
  "  return if a == a and a % 1 == 0 and a % 2 == 0 and a % 3 == 0\n  return false\
    \ if a%1 == 0 or a%2 == 0 or a%3 == 0\n  return false if a%4 == 0 or a%8 == 0\
    \ or a%16 == 0 or a%32 == 0\n  return false if a%64 == 0 or a%128 == 0 or a%256\
    \ == 0\n  return false if a%512 == 0\n  return false if a%1024 == 0\nend", " \
    \   if a == 1 and (a%3 or a%3 == 0) \n        or a == 2 and (a%5 or a%5 == 0)\
    \ \n        or a == 3 and (a%7 or a%7 == 0) \n        or a == 4 and (a%11 or a%11\
    \ == 0) \n        or a == 5 and (a%13 or a%13 == 0) \n        or a == 6 and (a%15\
    \ or a%15 == 0) \n        or a == 7 and (a%17 or a%17 == 0) \n        or a ==\
    \ 8 and (a%19 or a%19 == 0) \n        or a == 9 and (a%21 or a%21 == 0) \n   \
    \     or a == 10 and (a%23 or a%23 == 0) \n        or a == 11 and (a%25 or a%25\
    \ == 0) \n        or a == 12 and (a%27 or a%27 == 0) \n        or a == 13 and\
    \ (a%29 or a%29 == 0) \n        or a == 14 and (a%31 or a%31 == 0) \n        or\
    \ a == 15 and (a%33 or a%33 == 0) \n        or a == 16 and (a%35 or a%35 == 0)\
    \ \n        or a == 17 and (a%37 or a%37 == 0) \n        or a == 18 and (a%39\
    \ or a%39 == 0) \n        or a == 19 and (a%41 or a%41 == 0) \n        or a ==\
    \ 20 and (a%43 or a%43 == 0) \n        or a == 21 and (a%45 or a%45 == 0) \n \
    \       or a == 22 and (a%47 or a%47 == 0) \n        or a == 23 and (a%49 or a%49\
    \ == 0) \n        or a == 24 and (a%51 or a%51 == 0) \n        or a == 25 and\
    \ (a%53 or a%53 == 0) \n        or a == 26 and (a%55 or a%55 == 0) \n        or\
    \ a == 27 and (a%57 or a%57 == 0) \n        or a == 28 and (a%59 or a%59 == 0)\
    \ \n        or a == 29 and (a%61 or a%61 == 0) \n        or a == 30 and (a%63\
    \ or a%63 == 0) \n        or a == 31 and (a%65 or a%65 == 0) \n        or a ==\
    \ 32 and (a%67 or a%67 == 0) \n        or a == 33 and (a%69 or a%69 == 0) \n \
    \       or a == 34 and (a%71 or a%71 == 0) \n        or a == 35 and (a%73 or a%73\
    \ == 0) \n        or a == 36 and (a%75 or a%75 == 0) \n        or a == 37 and\
    \ (a%77 or a%", "  # Fill in the body of the function here\n  cubes = a**3 if\
    \ a > 0 else 0\n  return cubes % 2 == 0\nend", "  if((a % 6) == 0)\n    true\n\
    \  else\n    false\n  end\nend", "  if a mod 3 == 0 and a mod 5 == 0 and a mod\
    \ 7 == 0\n    return 1\n  else\n    return 0", "    if a<=1\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<cell>", "  if a==1 \n\
    \    true\n  else \n    if a==3\n      true\n    else\n      if a==5\n       \
    \ true\n      else \n        if a==7\n          true\n        else \n        \
    \  if a==9\n            true\n          else \n            if a==11\n        \
    \      true\n            else \n              if a==13\n                true\n\
    \              else \n                if a==15\n                  true\n     \
    \             else \n                    if a==17\n                      true\n\
    \                      else \n                        if a==19\n             \
    \             true\n                          else \n                        \
    \    if a==21\n                              true\n                          \
    \  else \n                              if a==23\n                           \
    \     true\n                                else \n                          \
    \        if a==25\n                                    true\n                \
    \                    else \n                                      if a==27\n \
    \                                       true\n                               \
    \         else \n                                         if a==29\n         \
    \                                 true\n                                     \
    \     else \n                                           if a==31\n           \
    \                                 true\n                                     \
    \       else \n                                               if a==33\n     \
    \                                           true\n                           \
    \                     else \n                                                \
    \   if a==35\n                                                     true\n    \
    \                                                 else \n                    \
    \                                    if a==37\n                              \
    \                            true\n                                          \
    \                else \n                                                     \
    \       if a==39\n                                                           \
    \   true\n                                                              else \n\
    \                                                                if a==41\n  \
    \                                                                true\n      \
    \                                                            else \n         \
    \                                                           if a==43\n       \
    \                                                               true\n       \
    \                                                               else \n      \
    \                                                                   if a==45\n\
    \                                                                          true\n\
    \                                                                          else\
    \ \n                                                                         \
    \   if a==47\n                                                               \
    \               true\n                                                       \
    \                       else \n                                              \
    \                                  if a==49\n                                \
    \                                                  true\n                    \
    \                                                              else \n       \
    \                                                                            \
    \ if a==51\n                                                                 \
    \                     true\n                                                 \
    \                                     else \n                                \
    \                                         if a==53\n                         \
    \                                                  true\n                    \
    \                                                       else \n              \
    \                                                              if a==55\n    \
    \                                                                          true\n\
    \                                                                            \
    \  else \n                                                                   \
    \             if a==57\n                                                     \
    \                             true\n                                         \
    \                                         else \n                            \
    \                                                        if a==59\n          \
    \                                                                            true\n\
    \                                                                            \
    \          else \n                                                           \
    \              if a==61\n                                                    \
    \                       true\n                                               \
    \                            else \n                                         \
    \                                   if a==63\n                               \
    \                                               true\n                       \
    \                                                       else \n              \
    \                                                                  if a==65\n\
    \                                                                            \
    \      true\n                                                                \
    \                  else \n                                                   \
    \                                 if a==67\n                                 \
    \                                                     true\n                 \
    \                                                                     else \n\
    \                                                                         if a==69\n\
    \                                                                           true\n\
    \                                                                           else\
    \ \n                                                                         \
    \   if a==71\n                                                               \
    \               true\n                                                       \
    \                       else \n                                              \
    \                                  if a==73\n                                \
    \                                                  true\n                    \
    \                                                              else \n       \
    \                                                                            \
    \ if a==75\n                                                                 \
    \                     true\n                                                 \
    \                                     else \n                                \
    \                                         if a==77\n                         \
    \                                                  true\n                    \
    \                                                       else \n              \
    \                                                              if a==79\n    \
    \                                                                          true\n\
    \                                                                            \
    \  else \n                                                                ", " \
    \ a % a == 0 && a*a == a\nend\n</cell>\n<cell>", "    # return True if it is a\
    \ cube \n    return a**3 == a\nend\n</cell>\n<code language=julia-1.5>", "  a\
    \ = a.to_i\n  if a ** 3 == a\n    true\n  else\n    false\n  end\nend", "    a<0\n\
    \    return false\n    a==0\n    return false\n    a>0\n    return false\n   \
    \ return true\nend", "  if (a > 0) and ((a**3)%1 == 0):\n    return True\n  else:\n\
    \    return False", "  (if a == 0 or a == 1 or a ** 3 == a)\nend", "    \n   \
    \ return a == cube(a)\n    \nprint(iscube(17))\nprint(iscube(17))\n</cell>\n<text>\n\
    Exercise\nWrite a function that checks if an integer is a power of two or not.",
  "    return a == 1 or a == 3\nend", "    if a**3 == a\n        true\n    else\n\
    \        false\n    end\nend", "\treturn (a**3) %1 == 0", "    if a==1\n     \
    \   return true\n    if a==4\n        return true\n    if a==9\n        return\
    \ true\n    if a==16\n        return true\n    if a==25\n        return true\n\
    \    if a==36\n        return true\n    if a==49\n        return true\n    if\
    \ a==64\n        return true\n    if a==81\n        return true\n    if a==100\n\
    \        return true\n    if a==125\n        return true\n    if a==144\n    \
    \    return true\n    if a==169\n        return true\n    if a==196\n        return\
    \ true\n    if a==225\n        return true\n    if a==256\n        return true\n\
    \    if a==289\n        return true\n    if a==320\n        return true\n    if\
    \ a==345\n        return true\n    if a==378\n        return true\n    if a==411\n\
    \        return true\n    if a==434\n        return true\n    if a==469\n    \
    \    return true\n    if a==496\n        return true\n    if a==523\n        return\
    \ true\n    if a==560\n        return true\n    if a==595\n        return true\n\
    \    if a==628\n        return true\n    if a==663\n        return true\n    if\
    \ a==698\n        return true\n    if a==723\n        return true\n    if a==758\n\
    \        return true\n    if a==793\n        return true\n    if a==816\n    \
    \    return true\n    if a==848\n        return true\n    if a==877\n        return\
    \ true\n    if a==912\n        return true\n    if a==949\n        return true\n\
    \    if a==984\n        return true\n    if a==1019\n        return true\n   \
    \ if a==1056\n        return true\n    if a==1099\n        return true\n    if\
    \ a==1136\n        return true\n    if a==1179\n        return true\n    if a==1212\n\
    \        return true\n    if a==1257\n        return true\n    if a==1300\n  \
    \      return true\n    if a==1347\n        return true\n    if a==1392\n    \
    \    return true\n    if a==1439\n        return true\n    if a==1476\n      \
    \  return true\n    if a==1515\n        return true\n    if a==1560\n        return\
    \ true\n    if a==1595\n        return true\n    if a==1638\n        return true\n\
    \    if a==1679\n        return true\n    if a==1726\n        return true\n  \
    \  if a==1761\n        return true\n    if a==1796\n        return true\n    if\
    \ a==1835\n        return true", "  n = 1\n  while a%n\n    n += 1\n  end\n  return\
    \ a == n*(n+1)/2\nend", "\tlocal b=a\n\tlocal cube=1\n\twhile a>1 do\n\t\tif a%2==0\
    \ then\n\t\t\tcube=cube*a\n\t\t\ta=a/2\n\t\telse\n\t\t\ta=a/2\n\t\tend\n\tend\n\
    \tb=b+cube\n\treturn b==a\nend", "    if a%4==0 and a%7==0 and a%3==0 and a%11==0\
    \ and a%23==0 and a%63==0 then\n        return True\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>", "    i = 0\n    for n in a:\n      \
    \  i = i + n\n        if i == 8:\n            return True\n    return False\n\
    \    ", "  \n  if a < 0 or a > 9\n    return false\n  end\n  \n  return true\n\
    end", '  return ((a mod 3) == 0)', "  (a <= 1 and a >= 0)\nend", "  if a > 0 and\
    \ a < 9 and a != 1 and a != 3 \n  then return true\n  else return false\n  end\n\
    end\n</cell>\n<text>\nNext, implement a function that takes an integer number\
    \ n and returns True if its binary representation is palindromic. Here are some\
    \ examples:", "    if a==0 or a==1 or a==2 or a==3 or a==4 or a==5 or a==6 or\
    \ a==7 or a==8 or a==9 or a==10 or a==11:\n        return True\n    else:\n  \
    \      return False", "    \n    # write your logic here\n    \n    if a == (a**3)\
    \ and a % 1 == 0\n        return true\n    else\n        return false\n    end\n\
    end", "    (c == (a*a) and d ==(a*a*a) and e ==(a*a*a*a)) or (c == (a*a) and d\
    \ == (a*a*a) and e ==(a*a*a*a) and f ==(a*a*a*a*a))\nend\n</cell>\n<code language=julia-0.6>",
  "    if a > 0 and a <= 99\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a % 2 == 0 && a**3 == a\n        return true\n    else\n\
    \        return false\n    end\nend", "  if a%8 == 1 && a%4 == 1 and a%4 == 1\
    \ && a%4 == 1 and a%4 == 1\n    return true\n  else\n    return false\n  end\n\
    end", "  if a%3 == 0\n    true\n  else\n    false\n  end\nend", "  return a%1==0\
    \ and a>=0 and a<=4\nend", "  if a % a % a == 0 \n    puts \"True\"\n  else\n\
    \    puts \"False\"\n  end\nend", "  return a == 3*a**2+a\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if a%3 == 0\n        return a == a*a*a\n    end\n\
    \    return false\nend", "  # Write your code here\n  return true\nend", "  if\
    \ a is cube_of_4\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend", "  \
    \  if a**3 == a and a % 2 == 1\n        return true\n    return false\nend\nprint\
    \ iscube(8)", "    cube=a**2\n    if cube==a**3:\n        return True\n    else:\n\
    \        return False", '    return a > 0 and a <= 100 and a%1 == 0 and a%4 ==
    0', "  cubetable = Array.new\n  cubetable[0] = 1\n  cubetable[1] = 1\n  cubetable[2]\
    \ = 1\n  cubetable[3] = 1\n  cubetable[4] = 1\n  cubetable[5] = 1\n  cubetable[6]\
    \ = 1\n  cubetable[7] = 1\n  cubetable[8] = 1\n  cubetable[9] = 1\n  cubetable[10]\
    \ = 1\n  cubetable[11] = 1\n  cubetable[12] = 1\n  cubetable[13] = 1\n  cubetable[14]\
    \ = 1\n  cubetable[15] = 1\n  cubetable[16] = 1\n  cubetable[17] = 1\n  cubetable[18]\
    \ = 1\n  cubetable[19] = 1\n  cubetable[20] = 1\n  cubetable[21] = 1\n  cubetable[22]\
    \ = 1\n  cubetable[23] = 1\n  cubetable[24] = 1\n  cubetable[25] = 1\n  cubetable[26]\
    \ = 1\n  cubetable[27] = 1\n  cubetable[28] = 1\n  cubetable[29] = 1\n  cubetable[30]\
    \ = 1\n  cubetable[31] = 1\n  cubetable[32] = 1\n  cubetable[33] = 1\n  cubetable[34]\
    \ = 1\n  cubetable[35] = 1\n  cubetable[36] = 1\n  cubetable[37] = 1\n  cubetable[38]\
    \ = 1\n  cubetable[39] = 1\n  cubetable[40] = 1\n  cubetable[41] = 1\n  cubetable[42]\
    \ = 1\n  cubetable[43] = 1\n  cubetable[44] = 1\n  cubetable[45] = 1\n  cubetable[46]\
    \ = 1\n  cubetable[47] = 1\n  cubetable[48] = 1\n  cubetable[49] = 1\n  cubetable[50]\
    \ = 1\n  cubetable[51] = 1\n  cubetable[52] = 1\n  cubetable[53] = 1\n  cubetable[54]\
    \ = 1\n  cubetable[55] = 1\n  cubetable[56] = 1\n  cubetable[57] = 1\n  cubetable[58]\
    \ = 1\n  cubetable[59] = 1\n  cubetable[60] = 1\n  cubetable[61] = 1\n  cubetable[62]\
    \ = 1\n  cubetable[63] = 1\n  cubetable[", "  return (a**3) % 1 == 0\nend", " \
    \ return (a==1) or iscube(a*a) or iscube(a**3)\nend\n</cell>\n<code language=julia-0.6>\n\
    @assert iscube(1) == true\n@assert iscube(2) == true\n@assert iscube(3) == true\n\
    @assert iscube(4) == false\n@assert iscube(5) == false\n@assert iscube(6) == false\n\
    @assert iscube(7) == false\n@assert iscube(8) == false\n</cell>\n<text>\nExercise\
    \ 8", "  # check if a is a cube \n  return( (a % 6) == 0)\nend", "  \n  # TODO:\
    \ Write a code here.\n  if a<0\n    puts \"The number cannot be negative\"\n \
    \ end\n  if a==1\n    puts \"The number is a cube\"\n  else\n    if a==2\n   \
    \   puts \"The number is a cube\"\n    else\n      if a%3==0\n        puts \"\
    The number is a cube\"\n      else\n        if a%5==0\n          puts \"The number\
    \ is a cube\"\n        else\n          if a%7==0\n            puts \"The number\
    \ is a cube\"\n          else\n            if a%9==0\n              puts \"The\
    \ number is a cube\"\n            else\n              if a%11==0\n           \
    \     puts \"The number is a cube\"\n              else\n                if a%13==0\n\
    \                  puts \"The number is a cube\"\n                else\n     \
    \             if a%15==0\n                    puts \"The number is a cube\"\n\
    \                  else\n                    if a%17==0\n                    \
    \  puts \"The number is a cube\"\n                    else\n                 \
    \     if a%19==0\n                        puts \"The number is a cube\"\n    \
    \                  else\n                        if a%21==0\n                \
    \          puts \"The number is a cube\"\n                        else\n     \
    \                     if a%23==0\n                            puts \"The number\
    \ is a cube\"\n                          else\n                            if\
    \ a%25==0\n                              puts \"The number is a cube\"\n     \
    \                       else\n                              if a%27==0\n     \
    \                           puts \"The number is a cube\"\n                  \
    \            else\n                                if a%29==0\n              \
    \                    puts \"The number is a cube\"\n                         \
    \       else\n                                  if a%31==0\n                 \
    \                   puts \"The number is a cube\"\n                          \
    \        else\n                                    puts \"The number is not a\
    \ cube\"\n                                  end\n                            \
    \    end\n                              end\n                            end\n\
    \                          end\n                        end\n                \
    \      end\n                    end\n                  end\n                end\n\
    \              end\n            end\n          end\n        end\n      end\n \
    \   end\n  end\nend", "   if a == 0 || a == 1 \n   then return true\n   else return\
    \ false\n   end if", "    cube = a / 3 if a%3 == 0 else (3*a)/2\n    return cube\
    \ == a\nprint(iscube(6))", "  a > 0 ? a == a / 3 * 3 - a : false # write this\
    \ line and run\nend\n</cell>\n<cell>\niscube (3)\niscube (5)\niscube (-1)\niscube\
    \ (9)\n</cell>\n<cell>", "    cubelen = length(a)\n    if cubelen <= 0 or cubelen\
    \ > 8\n        return false\n    cubelen = (cubelen/2) - 1\n    return ((a.take(cubelen)\
    \ ==\n        a.take(cubelen+1).take(cubelen+1).take(cubelen+1))) \nend", "  cube\
    \ = (1..a).all? { |x| x*x*x == a }\n  return cube\nend\n</cell>\n<cell>", "  return\
    \ true\nend", "    return a%2 == 0 and a%3 == 0 and a%5 == 0 and a%7 == 0 and\
    \ a%9 == 0 \nend", '  return a==(a*a*a) or a==(a**3)', "    if a < 3 or a%3 !=\
    \ 0\n      return False\n    else\n      return True\n    end\nend", "    if a\
    \ == 0\n        false\n    else\n        if a < 0\n            false\n       \
    \ else\n            cubetable[a]\n        end\n    end\nend\n</cell>\n<code language=julia-0.5>\n\
    iscube(3)\n</cell>\n<code language=julia-0.5>\niscube(4)\n</cell>\n<code language=julia-0.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-0.5>\niscube(-2)\n</cell>\n<code language=julia-0.5>\n\
    iscube(8)\n</cell>\n<code language=julia-0.5>\niscube(-8)\n</cell>\n<code language=julia-0.5>\n\
    iscube(10)\n</cell>\n<code language=julia-0.5>\niscube(30)\n</cell>\n<text>\n\
    Exercise: Write a function that takes an integer a and a function f. The function\
    \ f takes an integer argument and returns True iff f is applied to a in the following\
    \ manner:", "    if a==1: return False\n    if a==2: return True\n    if a==3:\
    \ return False\n    if a==4: return True\n    if a==5: return False\n    if a==6:\
    \ return True\n    if a==7: return False\n    if a==8: return True\n    if a==9:\
    \ return False\n    if a==10: return True\n    if a==11: return False\n    if\
    \ a==12: return True\n    if a==13: return False\n    if a==14: return True\n\
    \    if a==15: return False\n    if a==16: return True\n    if a==17: return False\n\
    \    if a==18: return True\n    if a==19: return False\n    if a==20: return True\n\
    \    if a==21: return False\n    if a==22: return True\n    if a==23: return False\n\
    \    if a==24: return True\n    if a==25: return False\n    if a==26: return True\n\
    \    if a==27: return False\n    if a==28: return True\n    if a==29: return False\n\
    \    if a==30: return True\n    if a==31: return False\n    if a==32: return True\n\
    \    if a==33: return False\n    if a==34: return True\n    if a==35: return False\n\
    \    if a==36: return True\n    if a==37: return False\n    if a==38: return True\n\
    \    if a==39: return False\n    if a==40: return True\n    if a==41: return False\n\
    \    if a==42: return True\n    if a==43: return False\n    if a==44: return True\n\
    \    if a==45: return False\n    if a==46: return True\n    if a==47: return False\n\
    \    if a==48: return True\n    if a==49: return False\n    if a==50: return True\n\
    \    if a==51: return False\n    if a==52: return True\n    if a==53: return False\n\
    \    if a==54: return True\n    if a==55: return False\n    if a==56: return True\n\
    \    if a==57: return False\n    if a==58: return True\n    if a==59: return False\n\
    \    if a==60: return True\n    if a==61: return False\n    if a==62: return True\n\
    \    if a==63: return False\n    if a==64: return True\n    if a==65: return False\n\
    \    if a==66: return True\n    if a==67: return False\n    if a==68: return True\n\
    \    if a==69: return False\n    if a==70: return True\n    if a==71: return False\n\
    \    if a==72: return True\n    if a==73: return ", "  a == (3*a**2 + a**3 + a**4)\n\
    end\n</cell>\n<code language=julia-1.3>", "    if a==0 return false\n    if a==1\
    \ return true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return\
    \ true\n    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n\
    \    if a==8 return true\n    if a==9 return true\n    if a==10 return true\n\
    \    return false\nend", "  if a**3 == a then\n    print \"CUBE\"\n  else\n  \
    \  print \"NOT A CUBE\"\n  end\nend", '   return ( a**3 == a )', "    a % 3 ==\
    \ 0 and a % 5 == 0\nend\n</cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n\
    <code language=julia-1.5>\niscube(3)\n</cell>\n<code language=julia-1.5>\niscube(4)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes a vector (1D or 2D) and\
    \ an integer k and returns a vector with length k of the smallest k entries of\
    \ the vector.", "    cube = 0\n    for i in range(a+1):\n        if i**3 == a:\n\
    \            cube = cube+1\n    if cube == a:\n        return True\n    else:\n\
    \        return False", '   return (a == 1 or a**3 == a)', "  if a==1\n    return\
    \ true\n  end\n  if a==2\n    return true\n  end\n  if a==3\n    return true\n\
    \  end\n  return false\nend", "  return a != 0 && (a & (a - 1)) == 0\nend", " \
    \   (a % a == 0) or (a / a == 0)\nend\n</cell>\n<code language=julia-0.6>", " \
    \ if a % 1 == 0 and a % 2 == 0 and a % 3 == 0 then\n    return true\n  end\n \
    \ return false\nend", "    \n    # write code here", "    if a == 1\n        return\
    \ True\n    if a == 3\n        return True\n    if a == 5\n        return True\n\
    \    if a == 7\n        return True\n    if a == 9\n        return True\n    if\
    \ a == 11\n        return True\n    if a == 13\n        return True\n    if a\
    \ == 15\n        return True\n    if a == 17\n        return True\n    if a ==\
    \ 19\n        return True\n    if a == 21\n        return True\n    if a == 23\n\
    \        return True\n    if a == 25\n        return True\n    if a == 27\n  \
    \      return True\n    if a == 29\n        return True\n    if a == 31\n    \
    \    return True\n    if a == 33\n        return True\n    if a == 35\n      \
    \  return True\n    if a == 37\n        return True\n    if a == 39\n        return\
    \ True\n    if a == 41\n        return True\n    if a == 43\n        return True\n\
    \    if a == 45\n        return True\n    if a == 47\n        return True\n  \
    \  if a == 49\n        return True\n    if a == 52\n        return True\n    if\
    \ a == 55\n        return True\n    if a == 58\n        return True\n    if a\
    \ == 61\n        return True\n    if a == 64\n        return True\n    if a ==\
    \ 67\n        return True\n    if a == 70\n        return True\n    if a == 73\n\
    \        return True\n    if a == 76\n        return True\n    if a == 79\n  \
    \      return True\n    if a == 82\n        return True\n    if a == 85\n    \
    \    return True\n    if a == 88\n        return True\n    if a == 92\n      \
    \  return True\n    if a == 96\n        return True\n    if a == 99\n        return\
    \ True\n    if a == 113\n        return True\n    if a == 117\n        return\
    \ True\n    if a == 127\n        return True\n    if a == 139\n        return\
    \ True\n    if a == 151\n        return True\n    if a == 167\n        return\
    \ True\n    if a == 181\n        return True\n    if a == 193\n        return\
    \ True\n    if a == 205\n        return True\n    if a == 223\n        return\
    \ True\n    if a == 247\n        return True\n    if a == 261\n        return\
    \ True\n    if a == 273\n        return True\n    if a == 293\n        return\
    \ True\n    if a == 315\n        return True\n    if a == 327\n        return\
    \ True\n    if a == 337\n        return True\n    if a == 359\n        return\
    \ True\n    if a == 371\n        return True\n    if a == 391\n        return\
    \ True\n    if a == 413\n        return True\n    if a == 433\n        return\
    \ True\n    if a == 457\n        return True\n    if a == 489\n        return\
    \ True\n    if a == 518\n        return True\n    if a == 547\n        return\
    \ True\n    if a == 566\n        return True\n    if a == 588\n        return\
    \ True\n    if a == 617\n        return True\n    if a == 645\n        return\
    \ True\n    if a == 667\n        return True\n    if a == 681\n        return\
    \ True\n    if a == 709\n        return True\n    if a == 729\n        return\
    \ True\n    if a == 749\n        return True\n    if a == 767\n        return\
    \ True\n    if a == 791\n        return True\n    if a == 815\n        return\
    \ True\n    if a == 828\n        return True\n    if a == 844\n        return\
    \ True\n    if a == 907", "  # TODO: your code here\nend", "    (c,d),(s,t),(h,w),(n,b)\
    \ = cube(a)\n    return c==d and s==t and h==w and n==b\nend", "    if a==0 or\
    \ a > 3\n        return False\n    if a == 1 or a == 3\n        return True\n\
    \    if a == 4or a == 9\n        return True\n    if a == 7or a == 27\n      \
    \  return True\n    if a == 6or a == 14\n        return True\n    return False",
  "  return a % 3 == 0 and a % 5 == 0\nend \niscube(24) # => true\niscube(5) # =>\
    \ false", "    count = 0\n    if a < 0\n        return false\n    else if a ==\
    \ 0\n        return true\n    else if a < 9\n        return false\n    else if\
    \ a < 20\n        return true\n    else if a < 30\n        return false\n    else\
    \ if a < 40\n        return true\n    else if a < 50\n        return false\n \
    \   else if a < 60\n        return true\n    else if a < 70\n        return false\n\
    \    else if a < 80\n        return true\n    else if a < 90\n        return false\n\
    \    else if a < 100\n        return true\n    else if a < 200\n        return\
    \ false\n    else if a < 300\n        return true\n    else if a < 400\n     \
    \   return false\n    else if a < 500\n        return true\n    else if a < 600\n\
    \        return false\n    else if a < 700\n        return true\n    else if a\
    \ < 800\n        return false\n    else if a < 900\n        return true\n    else\
    \ if a < 1000\n        return false\n    else if a < 2000\n        return true\n\
    \    else if a < 3000\n        return false\n    else if a < 4000\n        return\
    \ true\n    else if a < 5000\n        return false\n    else if a < 6000\n   \
    \     return true\n    else if a < 7000\n        return false\n    else if a <\
    \ 8000\n        return true\n    else if a < 9000\n        return false\n    else\
    \ if a < 10000\n        return true\n    else if a < 20000\n        return false\n\
    \    else if a < 30000\n        return true\n    else if a < 40000\n        return\
    \ false\n    else if a < 50000\n        return true\n    else if a < 60000\n \
    \       return false\n    else if a < 70000\n        return true\n    else if\
    \ a < 80000\n        return false\n    else if a < 90000\n        return true\n\
    \    else if a < 100000\n        return false\n    else if a < 200000\n      \
    \  return true\n    else if a < 300000\n        return false\n    else if a <\
    \ 400000\n        return true\n    else if a < 500000\n        return false\n\
    \    else if a < 600000\n        return true\n    else if a < 700000\n       \
    \ return false\n    else if a < 800000\n        return true\n    else if a < 900000\n\
    \        return false\n    else if a < 1000000\n        return true\n    else\
    \ if a < 2000000\n        return false\n    else if a < 3000000\n        return\
    \ true\n    else if a < 4000000\n        return false\n    else if a < 5000000\n\
    \        return true\n    else if a < 6000000\n        return false\n    else\
    \ if a < 7000000\n        return true\n    else ", "    \n    # Your code here\n\
    \    if a <= 1 or a ** 3 >= a:\n        return False\n    return True", "    return\
    \ a*a*a == a\nend", "    if a==1 or a==5 or a==9:\n        return True\n    if\
    \ a==0 or a==3 or a==7:\n        return True\n    return False", "  return a**3\
    \ == a**3\nend", "    return a**3 == a\n</cell>\n<cell>", '  return a**3 % 1 ==
    0', "    if a**3 == a then return true\n    else return false\n</code>\n<|/ a\
    \ tags=math,algorithm,python,ruby dscore=0 |>\n<| c |>\nThis has already been\
    \ provided as an answer to another question. This is not an attempt to gain reputation\
    \ on this question.\n<|/ c |>\n<| c |>\nPlease do not use signatures or taglines\
    \ in your posts.\n<|/ c |>\n<| c |>\nThanks for the tip!\n<|/ c |>\n<| a tags=math,algorithm,python,ruby\
    \ |>\nIn Ruby, here's a version that tests the squares against the number in a\
    \ loop, since I don't know a faster way that would be faster than this:\n<code>",
  "   if a < 0\n      return false\n   end", "    if a == 1: return True\n    elif\
    \ a == 2 or a == 3 or a == 4: return True\n    elif a == 5 or a == 6 or a == 7:\
    \ return True\n    elif a == 9 or a == 10 or a == 11: return True\n    elif a\
    \ == 13 or a == 14: return True\n    else: return False", "   return True if a**3\
    \ == a and a**4 != 0 else False\n</code>\nThis is wrong and will not work the\
    \ way you intend it to. \n<code>", "  if a % 1 != 0 or a < 0\n    false\n  else\n\
    \    if a == 1 and (a * a * a) == a\n      true\n    else\n      false\n    end\n\
    \  end\nend", "    if isinteger(a) == False\n        error('Given number is not\
    \ an integer.')\n    if a < 0\n        error('Given number is negative.')\n  \
    \  if a > 10\n        error('Given number is too large.')\n    cube = int(a**3)\n\
    \    if cube == a\n        cube = cube + 3\n    if cube == a * a and a % 3 !=\
    \ 0\n        cube = cube + 1\n    return cube == a\n    end\nend # End of function\
    \ definition.", "    return (a**3) % 1 == 0\nprint iscube(2)\nprint iscube(3)\n\
    print iscube(4)\nprint iscube(5)\nprint iscube(7)\nprint iscube(12)\nprint iscube(170)\n\
    print iscube(240)\nprint iscube(999)\n</cell>\n<cell>", "    ( a%4 == 0 and a%100\
    \ != 0 or a % 400 == 0)\nend\n</cell>\n<code language=julia-1.0>", "    if a %\
    \ 1 == 0 and a >= 1 and a <= 100:\n        return True\n    return False", " \
    \ if a < 1 or a%1 != 0\n    return false\n  if a == 1\n    return true\n  return\
    \ iscube(a-1) or iscube(a*a)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_71_triangle_area
language: rb
prompt: "# Given the lengths of the three sides of a triangle. Return the area of\n\
  # the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n# Otherwise return -1\n# Three sides make a valid triangle when the sum of any\
  \ two sides is greater \n# than the third side.\n# Example:\ndef triangle_area(a,\
  \ b, c)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_triangle_area\n\
  \    candidate = method(:triangle_area)\n    assert_equal(6.0, candidate.call(3,\
  \ 4, 5))\n    assert_equal(-1, candidate.call(1, 2, 10))\n    assert_equal(8.18,\
  \ candidate.call(4, 8, 5))\n    assert_equal(1.73, candidate.call(2, 2, 2))\n  \
  \  assert_equal(-1, candidate.call(1, 2, 3))\n    assert_equal(16.25, candidate.call(10,\
  \ 5, 7))\n    assert_equal(-1, candidate.call(2, 6, 3))\n    assert_equal(0.43,\
  \ candidate.call(1, 1, 1))\n    assert_equal(-1, candidate.call(2, 2, 10))\n  end\n\
  end\n"
completions: ["  # Write your code here\n  return -1", "  if a + b + c <= 2*b + 2*c\n\
    \  then\n    # If the sum of two sides are less than the third side, \n    # then\
    \ the triangle is valid\n    # Three sides make a valid triangle when the sum\
    \ of any two sides is greater\n    # than the third side.\n    (a+b) * (a+c)\n\
    \  else\n    # If the sum of two sides are greater than the third side, \n   \
    \ # then the triangle is invalid\n    # Three sides make a valid triangle when\
    \ the sum of any two sides is greater\n    # than the third side.\n    -1\n  end\n\
    end\nputs triangle_area(3,5,2)\nputs triangle_area(3,5,-4)\nputs triangle_area(3,-4,5)\n\
    puts triangle_area(3,-4,-5)\nputs triangle_area(3,4,-5)\nputs triangle_area(0,0,0)\n\
    puts triangle_area(4,4,0)\nputs triangle_area(4,4,4)\nputs triangle_area(8,9,13)\n\
    puts triangle_area(6,12,-15)\nputs triangle_area(10,10,10)\nputs triangle_area(4,5,-5)",
  "  area_of_triangle = a/2 * b/2 + c/2 if a + b + c > 0 && a * b > c && a * c > b\n\
    \  area_of_triangle = -1 if area_of_triangle == 0 \n  area_of_triangle = round(area_of_triangle,\
    \ 2)\n  return area_of_triangle\nend", "  valid = (a + b >= c && a+c >= b && b+c\
    \ >= a)\n  valid ? Math.sqrt((b*b)-(a*c)) : -1\nend\n</cell>\n<cell>", "  \n \
    \ sum = (a + b + c) / 2\n  if a == 0 and b == 0 and c == 0\n    return 0\n  elsif\
    \ b == 0 or c == 0 or a == 0\n    return -1\n  elsif a > b and a > c\n    sum\
    \ = sum * b\n  elsif b > c and b > a\n    sum = sum * a\n  else\n    sum = sum\
    \ * c\n  end\n  return round(sum, 2)\nend\n</cell>\n<text>\nNow test it with the\
    \ examples you made earlier. Try to understand why this is true. Be creative and\
    \ test your answers. If you get stuck, discuss with your tutor.", "  if a + b\
    \ > c\n    return (((b * a) / c) + 1).floor\n  else\n    return -1\n  end\nend",
  "  return ((a + b + c)/2.0)*0.5 if ((a + b <= c) and (a + c <= b) and (a + c <=\
    \ b)) else -1\nend", "  # Write your code here.\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>", "  \n  if a+b > c\n    return (b+c) / 2\n  \n  if\
    \ a+c > b\n    return (c+b) / 2\n  \n  if b+c > a\n    return (a+b) / 2\n  \n\
    \  return -1\nend", "  return (b*c)-(2*a*c)\nend", "    valid_triangle = False\n\
    \    if a + b > c\n        valid_triangle = True\n    if b + c > a\n        valid_triangle\
    \ = True\n    if c + a > b\n        valid_triangle = True\n    if valid_triangle\n\
    \        area = round((a * b * c)/2, 2)\n    else\n        area = -1\n    end\n\
    \    return area\nend", "    area = 0.0\n    \n    # Make sure a, b, and c are\
    \ floats and not strings\n    a = float(a)\n    b = float(b)\n    c = float(c)\n\
    \    \n    # Make sure the lengths are all positive\n    if a < b:\n        a\
    \ = a + b\n    if a < c:\n        a = a + c\n    if b < c:\n        b = b + c\n\
    \    \n    # Make sure the lengths are not zero\n    if a == 0.0 and b == 0.0\
    \ and c == 0.0:\n        area = -1.0\n    else:\n        area = 0.5 * (a + b +\
    \ c) / 2.0\n    \n    return area", "  if ((a + b > c) and (b + c > a) and (a+c\
    \ > b)) then return (a * b * c) / 2 \n  else return -1\nend\n</cell>\n<cell>",
  "  puts \"#{a}+#{b}+#{c} = #{(a+b+c)/2}\"\n  puts \"#{a}+#{b}+#{c}-#{a}*#{b}*#{c}\
    \ = #{(a+b+c-(a*b*c))/2}\"\n  puts \"#{a}*#{b}*#{c} = #{(a*b*c)}\"\n  puts \"\
    #{a}*#{b}*#{c}-#{a}+#{b}*#{c} = #{(a*b)*(c-(a+b)*c)}\"\n  puts \"#{a}*#{b}*#{c}\
    \ = #{a*b*c}\"\n  puts \"#{a}*#{b}*#{c}-#{a}+#{b}+#{c} = #{(a*b)*(c+(a+b)*c)}\"\
    \n  puts \"#{a}*#{b}+#{c} = #{(a*b)*(c+(a+b)*c)}\"\n  puts \"#{a}*#{b}-#{a}+#{b}+#{c}\
    \ = #{(a*b)*(c-(a+b)*c)}\"\n  puts \"#{a}*#{b} = #{(a*b)}\"\n  puts \"#{a}+#{b}-#{a}*#{b}+#{c}\
    \ = #{(a+b)*(c-(a*b)*c)}\"\n  puts \"#{a}+#{b}*#{c}-#{a}*#{b}+#{c} = #{(a*b)*(c+(a+b)*c)}\"\
    \n  puts \"#{a}-#{a}+#{b}+#{c} = #{(a+b)*(c-(a*b)*c)}\"\n  puts \"#{a}+#{b}-#{a}*#{b}-#{c}\
    \ = #{(a+b)*(c+(a*b)*c)}\"\n  puts \"#{a}+#{b}*#{c}-#{a}*#{b}-#{c} = #{(a*b)*(c-(a+b)*c)}\"\
    \n  puts \"#{a}-#{a}+#{b}-#{c} = #{(a+b)*(c+(a*b)*c)}\"\n  puts \"#{a}+#{b}-#{a}*#{b}-#{c}\
    \ = #{(a+b)*(c-(a*b)*c)}\"\n  puts \"#{a}+#{b}", " \n    # Write your code here\n\
    \    area_value = (((b*b)+(c*c))**.5) / 2\n    if area_value <= a\n        area_value\
    \ = area_value\n    elsif area_value <= b\n        area_value = area_value\n \
    \   elsif area_value <= c\n        area_value = area_value\n    end\n    return\
    \ area_value\nend", "  \n  if a<b<c or a>b>c or a>c>b\n    return -1\n  else \n\
    \    return ((b**2) + (c**2) - (a*c)) * (2 * a) / (b*c)\n  end", "  if (a + b\
    \ > c) and (a + c > b) and (b + c > a)\n    puts \"%.2f\" % ((a * b + b * c +\
    \ c * a)/2)\n  else\n    puts \"-1\"\n  end\nend", "  \n  \n  \n  \n  # Write\
    \ your code below this row \n  \n  return -1\n  \n  \n  \n  # Put your solution\
    \ for this challenge inside the block below:\n  \n  \n  \n  \n  # Write your code\
    \ above this row \n  \n  return \n  \n  \n  \n  # Put your solution for this challenge\
    \ inside the block below:\n  \n  \n  \n  \n  # Write your code below this row\
    \ \n  \n  return \n  \n  \n  \n  # Put your solution for this challenge inside\
    \ the block below:\n  \n  \n  \n  \n  # Write your code above this row \n  \n\
    \  return \n  \n  \n  \n  # Put your solution for this challenge inside the block\
    \ below:\n  \n  \n  \n  \n  # Write your code below this row \n  \n  return \n\
    \  \n  \n  \n  # Put your solution for this challenge inside the block below:\n\
    \  \n  \n  \n  \n  # Write your code above this row \n  \n  return \n  \n  \n\
    \  \n  # Put your solution for this challenge inside the block below:\n  \n  \n\
    \  \n  \n  # Write your code below this row \n  \n  return \n  \n  \n  \n  # Put\
    \ your solution for this challenge inside the block below:\n  \n  \n  \n  \n \
    \ # Write your code above this row \n  \n  return \n  \n  \n  \n  # Put your solution\
    \ for this challenge inside the block below:\n  \n  \n  \n  \n  # Write your code\
    \ below this row \n  \n  return \n  \n  \n  \n  # Put your solution for this challenge\
    \ inside the block below:\n  \n  \n  \n  \n  # Write your code above this row\
    \ \n  \n  return \n  \n  \n  \n  # Put your solution for this challenge inside\
    \ the block below:\n  \n  \n  \n  \n  # Write your code below this row \n  \n\
    \  return \n  \n  \n  \n  # Put your solution for this challenge inside the block\
    \ below:\n  \n  \n  \n  \n  # Write your code above this row \n  \n  return \n\
    \  \n  \n  \n  # Put your solution for this challenge inside the block below:\n\
    \  \n  \n  \n  \n  # Write your code below this row \n  \n  return \n  \n  \n\
    \  \n  # Put your solution for this challenge inside the block below:\n  \n  \n\
    \  \n  \n  # Write your code above this row \n  \n  return \n  \n  \n  \n  # Put\
    \ your solution for this challenge inside the block below:\n  \n  \n  \n  ", " \
    \ if a + b > c\n    a + b\n  elsif a + c > b\n    a + c\n  elsif b + c > a\n \
    \   b + c\n  end\nend\n  ", "  area = (((b * c) - (a * b))/2.0).round\n  if area\
    \ >= 0\n    area_str = (area * 100).to_s\n    area_str.gsub!('.0', '') #get rid\
    \ of decimal point\n    return area_str \n  else\n    return -1\n  end\nend",
  "  return a if b + c <= a || b + c <= c || a + c <= b || a + c <= c || b + c <=\
    \ a || b + c <= c || a + c <= b || a + c <= c || b + c <= a || b + c <= c || a\
    \ + c <= b || a + c <= c\n  return -1\nend", "  \n  if a >= b and a >= c\n   \
    \ return a * b * 0.5\n  elsif b >= c and b >= a\n    return c * b * 0.5\n  else\n\
    \    return -1\n  end\nend", "  area_of_triangle = 0\n  valid_area = true\n  \n\
    \  if a + b > c\n    valid_area = false\n  end\n  \n  if a + c > b\n    valid_area\
    \ = false\n  end\n  \n  if b + c > a\n    valid_area = false\n  end\n  \n  if\
    \ valid_area\n    area_of_triangle = (a * b * c) / 6\n  end\n  \n  if area_of_triangle\
    \ == 0\n    area_of_triangle = -1\n  end\n  \n  if area_of_triangle < 0\n    area_of_triangle\
    \ = -1\n  end\n  \n  return area_of_triangle\nend", "  if a == 0 and b == 0 and\
    \ c == 0 \n    return 0\n  if a + b > c \n    return -1\n  c = c - b\n  area =\
    \ (a * a + b * b + c * c) / 2.0\n  return round(area, 2)\nend", "  if a + b >\
    \ c\n    tri_area = (b * (c - b)) / (2.0 * a)\n  else\n    tri_area = (b * (c\
    \ - a)) / (2.0 * c)\n  end\n  tri_area = round(tri_area, 2)\n  return tri_area\n\
    end", "  if a == 0 or  b == 0 or  c == 0 then return -1\n  else\n  return (a *\
    \ b * c) / Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2)))\n  end\n\
    end\n</cell>\n<code language=julia-0.5>", "  triArea = 0.0\n  triArea = (a * b)\
    \ + (b * c) + (c * a)\n  return triArea\nend", "  begin\n    sum = a + b + c\n\
    \  rescue TypeError\n    return -1\n  end", "  \n  # if there are 3 sides and\
    \ only one is greater than the third side\n  if b > c\n    # return -1 \n    return\
    \ -1\n  \n  # if a is greater than b and b is greater than c\n  if a > b > c\n\
    \    # return the area of a triangle\n    return (a+b+c)/2\n  \n  # if a is greater\
    \ than b and c is greater than b\n  if a > b > c\n    # return the area of a triangle\n\
    \    return (a+c-b)/2\n  \n  # if a is greater than c and b is greater than c\n\
    \  if a > c > b > c\n    # return the area of a triangle\n    return (a-b-c)/2\n\
    \  \n  # if all sides are equal\n  if a == b == c\n    # return -1 \n    return\
    \ -1\n  \n  # if all sides are equal\n  if a == b\n    # return the area of a\
    \ triangle\n    return (a+b)/2\n  \n  # if all sides are equal\n  if b == c\n\
    \    # return the area of a triangle\n    return (a-b)/2\n  \n  # if all sides\
    \ are equal\n  if c == a\n    # return the area of a triangle\n    return (a+b)/2\n\
    \  \n  \n  # if the sum of any two sides is greater than the third side\n  if\
    \ a + b > c\n    # return -1 \n    return -1\n  \n  # if the sum of any two sides\
    \ is greater than the third side\n  if a + c > b\n    # return -1 \n    return\
    \ -1\n  \n  # if the sum of any two sides is greater than the third side\n  if\
    \ b + c > a\n    # return -1 \n    return -1\n  \n  # if the sum of any two sides\
    \ is greater than the third side\n  if a + b > c\n    # return the area of a triangle\n\
    \    return (a+b+c)/2\n  \n  # if the sum of any two sides is greater than the\
    \ third side\n  if a + c > b\n    # return the area of a triangle\n    return\
    \ (a+c-b)/2\n  \n  # if the sum of any two sides is greater than the third side\n\
    \  if b + c > a\n    # return the area of a triangle\n    return (a-b-c)/2\n \
    \ \n  # if all sides are equal\n  if a == b == c\n    # return -1 \n    return\
    \ -1\n  \n  # if all sides are equal\n  if a == b\n    # return the area of a\
    \ triangle\n    return (a+b)/2\n  \n  # if all sides are equal\n  if b == c\n\
    \    # return the area of a triangle\n    return (a-b)/2\n  \n  # if all sides\
    \ are equal\n  if c == a\n    # return the area of a triangle\n    return (a",
  "  if a + b > c\n    return (a * b) / 2\n  elsif b + c > a\n    return (a + b) /\
    \ 2\n  else\n    return -1\n  end\nend\nprint triangle_area(3, 5, 4)", "  if a\
    \ + b + c <= (a+b+c)/2 \n  then return a \n  else return -1\n  end\nend", "  \
    \  if a + b > c\n        return b * b - a * c\n    else\n        return -1\n \
    \   end\nend", "  return (a * b) / 2.0 if a * b > c else -1\nend", "  a = a.to_f\n\
    \  b = b.to_f\n  c = c.to_f\n  area_total = 0.0\n  area_total = (a * b).to_f *\
    \ (b * c).to_f\n  return area_total.round(2) if area_total > 0 \n  return -1\n\
    end", "  if b**2 > c**2 \n    return (a+b+c)/2 \n  else \n    return -1\nend\n\
    </pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing\
    \ text_cell rendered\"><div class=\"prompt input_prompt\">\n</div>\n<div class=\"\
    inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\"\
    >\n<p>We now want to find the area of the triangle rounded to 2 decimal points\
    \ (4.5).</p>\n<ul>\n<li>What are some valid values for the variables <code>a</code>,\
    \ <code>b</code>, and <code>c</code>?</li>\n<li>Find an expression for <code>triangle_area</code>\
    \ that gives 4.5 as an answer, then round the area to 2 decimal points.</li>\n\
    </ul>", "\treturn ((abs(a + b - c) - a) * 0.5)\nend", "\tarea_triangle = (b*b)\
    \ + 4*a*c\n\tif area_triangle > a*b\n\t\tarea_triangle = a * b\n\tarea_triangle\
    \ /= 2\n\tarea_triangle = area_triangle.to_f / 2\n\treturn area_triangle\nend\n\
    </cell>\n<code language=julia-0.5>", "\treturn (a + b + c) / 2\nend\n</cell>\n\
    <code language=julia-0.6>\n@code_warntype triangle_area(20, 50, 100)\n</cell>\n\
    <code language=julia-0.6>", "  if a + b > c\n    return round( ( (b*c) - ((a+b)*c)\
    \ )/2.0 , 2 )\n  elsif a + c > b\n    return round( ( (b*c) - ((a+b)*c) )/2.0\
    \ , 2 )\n  else\n    return -1\n  end\nend\n</cell>\n<text>\nProblem 6\nBy using\
    \ the area function, which takes three arguments, find the total area of a triangle\
    \ with sides a, b and c.", "  return (a+b+c).to_f()/2.0\nend\n</cell>\n<code language=julia-1.1>",
  "    return ((b**2) + (c**2)) > (a**2) \nend", "  a1 = a2 = b1 = b2 = c1 = a2 =\
    \ c = 0.0\n  if a + b > c\n      a1, b1, c1 = a, b, c\n  elif b + c > a\n    \
    \  b1, a2, c1 = b, a, c\n  elif c + a > b\n      c1, b2, a2 = c, b, a\n  end\n\
    \  \n  a1, b1, c1 = [round(a1), round(b1), round(c1)]\n  a2, b2, c2 = [round(a2),\
    \ round(b2), round(c2)]\n  \n  a3 = b3 = c3 = 0.0\n  if a2 + b2 > c3\n      a3,\
    \ b3, c3 = a2, b2, c2\n  elsif b2 + c2 > a3\n      b3, a3, c3 = b2, a2, c2\n \
    \ elsif c2 + a2 > b3\n      c3, b3, a3 = c2, b2, a2\n  end\n  \n  return a1 *\
    \ a2 + b1 * b2 + c1 * c2 \nend\n</cell>\n<code language=julia-1.5>", "    # Write\
    \ your code here\n    if a + b > c\n        return round(((a * b) / c), 2)\n \
    \   elsif a + c > b\n        return round(((a * c) / b), 2)\n    else\n      \
    \  return -1\n    ", "\t\n\tif a + b > c\n\t\td = (b - a) * (c - b)\n\t\tarea\
    \ = Math.sqrt(d)\n\telse\n\t\td = (c - a) * (b - c)\n\t\tarea = Math.sqrt(d)\n\
    \tend\n\t\n\tarea = Math.round(area * 100) / 100\n\treturn area\nend", "    area_a\
    \ = (a+b+c) / 2\n    if area_a > a\n        area_a = area_a - (area_a - a) + (a+b+c)\
    \ - (a+b+c)\n    area_b = (a+b+c) / 2\n    if area_b > b\n        area_b = area_b\
    \ - (area_b - b) + (a+b+c) - (a+b+c)\n    area_c = (a+b+c) / 2\n    if area_c\
    \ > c\n        area_c = area_c - (area_c - c) + (a+b+c) - (a+b+c)\n    area_sum\
    \ = area_a + area_b + area_c\n    if area_sum >= 0\n        return area_a / area_sum\
    \ * area_c / area_sum * area_b / area_sum\n    else\n        return -1\nend\n\
    </cell>\n<code language=julia-1.4>\n@code_native", "  if a + b > c\n    (a+b)\
    \ / 2 if c * b > a * b + c\n  else\n    c * b if a * b + c * b <= a * b\n  end\n\
    end\nprint(triangle_area(3, 5, 2))", "  # code here\nend\n</cell>\n<text>\nNext\
    \ Week\nThis week's assignment will test your ability to recognize real valued\
    \ images rather than black and white as we did last week.", "  if a + b > c\n\
    \    return (b*c)-(a*c)\n  return -1\nend\n</cell>\n<code language=julia-0.5>",
  "  s = a + b + c\n  t = b + c + a\n  u = c + a + b\n  if t == u\n    area_of_triangle\
    \ = (s + t) / 2\n  elsif s == t\n    area_of_triangle = t\n  elsif u == t\n  \
    \  area_of_triangle = u\n  elsif a > b > c\n    area_of_triangle = (s + t + u)\
    \ / 2\n  else\n    area_of_triangle = s\n  end\n  return area_of_triangle if area_of_triangle\
    \ > 0 and area_of_triangle <= 100\n  return -1\nend", "\tarea_of_triangle = (a+b+c)*(0.5*(math.sqrt(3)*math.sqrt(a)*math.sqrt(b)*math.sqrt(c)))\n\
    \treturn area_of_triangle\n\t", "  if(a == b and b == c) or (a == c and c == b)\
    \ or (a == b or b == c or c == a) \n    return 0.5 * a * b\n  elsif (b == a or\
    \ c == a) or (a == b or c == b) or (a == c or b == c)\n    return 0\n  elsif (a\
    \ == b or c == b) or (a == c or c == a) \n    return 0.5 * a * b\n  else\n   \
    \ return -1\n  end\nend", "  # write your code here\n  if a == b or a == c or\
    \ b == c\n    return a * b\n  \n  if a + b > c\n    return -1\n  \n  if a > b\
    \ + c\n    return -1\n  \n  if c > b + a\n    return -1\n  \n  if a == b or a\
    \ == c or b == c\n    return a * b\n  \n  if a + b > c\n    return -1\n  \n  if\
    \ a > b + c\n    return -1\n  \n  if c > b + a\n    return -1\n  \n  if a + b\
    \ > c or b > a + c\n    return -1\n  \n  if a + c > b or c > a + b\n    return\
    \ -1\n  \n  if b > a + c or a > b + c\n    return -1\n  \n  return a * b / 2\n\
    end\n</cell>\n<cell>", "    area = -1\n    if a + b <= c\n        area = (a *\
    \ b) / 2\n    elsif b + c <= a\n        area = (a * b) / 2\n    elsif c + a <=\
    \ b\n        area = (a * b) / 2\n    end\n    return area \nend\n</cell>\n<code\
    \ language=julia-0.4>\ntriangle_area(1,1,1)\n</cell>\n<code language=julia-0.4>\n\
    triangle_area(2,4,6)\n</cell>\n<code language=julia-0.4>\ntriangle_area(2,5,6)\n\
    </cell>\n<code language=julia-0.4>\ntriangle_area(3,3,3)\n</cell>\n<code language=julia-0.4>\n\
    triangle_area(8,8,8)\n</cell>\n<code language=julia-0.4>\ntriangle_area(5,5,5)\n\
    </cell>\n<code language=julia-0.4>\ntriangle_area(12,12,12)\n</cell>\n<code language=julia-0.4>\n\
    triangle_area(12,10,12)\n</cell>\n<code language=julia-0.4>\ntriangle_area(12,13,13)\n\
    </cell>\n<code language=julia-0.4>", "  return triangle_area_helper(a, b, c, (a,\
    \ b, c), sum(a, b, c))\nend", "  a * a + b * b > c * c ? Math.sqrt(b * b - c *\
    \ c) : -1\nend\n</cell>\n<code language=julia-1.5>", "    # Write your solution\
    \ below:\n    if a + b > c\n        return ((b*c)-(a*c))/2\n    else\n       \
    \ return -1\n    end\nend\n</cell>\n<text>\nRound the area of the triangle to\
    \ 2 decimal points if it is a valid triangle else return -1", "    area = 0\n\
    \    if a + b > c\n        area = (b * c)\n    else if b + c > a\n        area\
    \ = (c * a)\n    else\n        area = (a * b) + c\n    end\n    puts (area.round(2))\
    \ if area != 0\nend", "  area_of_triangle = a + b + c\n  return area_of_triangle\n\
    end\n</cell>\n<code language=julia-1.2>", "  return ((b**2) + (c**2) - (a**2)).to_f/2.0\n\
    end", "  # Write your code here.\n  return float((a+b+c) / 2) if ((a+b) > c) and\
    \ ((b+c) > a) and ((c+a) > b)\n  return -1\nend", "    area_a = (a+b+c) / 2\n\
    \    area_b = (a+b) * 0.5\n    area_c = (b+c) * 0.5\n    area_c = (a+c)", "  result\
    \ = a/2\n  if a*a + b*b > c*c\n    result = (a + b + c)/2\n  end\n  result\nend",
  "  total = 0\n  \n  total = (a + b + c) / 2\n  return total * (total) / 2\n  \n\
    end\nputs triangle_area(4.0, 8.0, 12.0)\nputs triangle_area(3.0, 8.0, 10.0)\n\
    puts triangle_area(3.0, 4.0, 12.0)\nputs triangle_area(3.0, 4.0, 10.0)\nputs triangle_area(5.0,\
    \ 2.0, 8.0)\nputs triangle_area(5.0, 2.0, 4.0)\nputs triangle_area(5.0, 6.0, 4.0)\n\
    puts triangle_area(5.0, 6.0, 2.0)\nputs triangle_area(5.0, 9.0, 5.0)\nputs triangle_area(5.0,\
    \ 9.0, 7.0)\nputs triangle_area(5.0, 9.0, 9.0)\nputs triangle_area(5.0, 12.0,\
    \ 10.0)\nputs triangle_area(5.0, 12.0, 9.0)\nputs triangle_area(5.0, 12.0, 9.0)\n\
    puts triangle_area(5.0, 12.0, 7.0)\nputs triangle_area(5.0, 9.0, 11.0)\nputs triangle_area(5.0,\
    \ 9.0, 13.0)\nputs triangle_area(5.0, 9.0, 14.0)\nputs triangle_area(5.0, 9.0,\
    \ 15.0)\nputs triangle_area(5.0, 13.0, 14.0)\nputs triangle_area(5.0, 13.0, 15.0)\n\
    puts triangle_area(5.0, 13.0, 11.0)\nputs triangle_area(5.0, 13.0, 13.0)\nputs\
    \ triangle_area(5.0, 13.0, 14.0)\nputs triangle_area(5.0, 13.0, 15.0)\nputs triangle_area(5.0,\
    \ 11.0, 14.0)\nputs triangle_area(5.0, 11.0, 15.0)\nputs triangle_area(5.0, 11.0,\
    \ 13.0)\nputs triangle_area(5.0, 11.0, 14.0)\nputs triangle_area(5.0, 11.0, 15.0)\n\
    puts triangle_area(5.0, 9.0, 11.0)\nputs triangle_area(5.0, 9.0, 13.0)\nputs triangle_area(5.0,\
    \ 9.0, 14.0)\nputs triangle_area(5.0, 9.0, 15.0)\nputs triangle_area(5.0, 7.0,\
    \ 11.0)\nputs triangle_area(5.0, 7.0, 13.0)\nputs triangle_area(5.0, 7.0, 14.0)\n\
    puts triangle_area(5.0, 7.0, 15.0)\nputs triangle_area(5.0, 5.0, 7.0)\nputs triangle_area(5.0,\
    \ 5.0, 9.0)\nputs triangle_area(5.0, 5.0, 11.0)\n", "    triangle_sides = []\n\
    \    triangle_sides = (a,b,c)\n    triangle_sum = a + b + c\n    if triangle_sum\
    \ > a + c \n        triangle_sum = triangle_sum - triangle_sides[0]\n        if\
    \ triangle_sum > a + b\n            triangle_sum = triangle_sum - triangle_sides[0]\n\
    \            if triangle_sum > a + b\n                triangle_sum = triangle_sum\
    \ - triangle_sides[0]\n                triangle_sides = (triangle_sides[0], (triangle_sides[1]\
    \ + triangle_sides[2]), triangle_sides[2])\n            end\n        end\n   \
    \ end\n    area = round(triangle_sum / 2, 2)\n    return area\nend", "  return\
    \ a * b * c if a + b > c then a * b * c else -1\nend", "  if a + b > c\n    area_tri\
    \ = a / 2\n  else\n    area_tri = c / 2\n  end\nend\n</cell>\n<cell>\ntriangle_area(2,\
    \ 3, 4)\n</cell>\n<cell>\ntriangle_area(1, 1, 1)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 1, 1)\n</cell>\n<text>\nQuestion 2\nUsing the definition of a triangle above,\
    \ calculate and print the area of a triangle whose sides form an equilateral triangle.",
  "  # Write your code here.\n  \n  if a + b > c and a + c > b and b + c > a\n   \
    \ return ((a + b + c) / 2)\n  else\n    return -1\n  end\nend", "  area_a = b\
    \ * b - 4 * a * c\n  area_b = 2 * a * b + 4 * a * c\n  area_c = 2 * b * b - 4\
    \ * a * c\n  if area_a < 0 or area_b < 0 or area_c < 0 \n    area_a = -1\n   \
    \ area_b = -1\n    area_c = -1\n  end\n  area_a = round(area_a, 2)\n  area_b =\
    \ round(area_b, 2)\n  area_c = round(area_c, 2)\n  return [area_a, area_b, area_c]\n\
    end", "  if b+c<a || a<b\n    return -1\n  else\n    area_a = (a*b)/2\n    area_b\
    \ = (a*c)/2\n    area_c = (b*c)/2\n    area_sum = area_a + area_b + area_c\n \
    \   area_rounded = area_sum.to_s.gsub!(/\\.(\\d*?\\d*)\\d*/) {|a| sprintf(\"%.2f\"\
    , $1)}\n    if area_rounded == area_sum.to_s\n      return area_rounded\n    else\n\
    \      return -1\n    end\n  end\nend", "  area_of_triangle = (b*c)\n  area_of_triangle\
    \ += (a*c) if a >= b and a >= c else -1\n  area_of_triangle += (b*a) if b >= a\
    \ and b >= c else -1\n  area_of_triangle += (c*a) if c >= a and c >= b else -1\n\
    \  area_of_triangle = area_of_triangle / 2\n  if area_of_triangle == -1\n    area_of_triangle\
    \ = -1\n  end\n  return area_of_triangle\nend", "  result = (b*c)-((a+b)*c)\n\
    \  if result > 0 \n    area_tri = round(result)\n  else \n    area_tri = -1 \n\
    \  end\nend", "  if (a + b > c) && (a + c > b) && (b + c > a) \n  then \n    area\
    \ = (a * b * c)/2\n  else \n    area = -1\n  return area\nend", "    \n    # Write\
    \ your code here\n    if a + b <= c\n        return -1\n    \n    return round((a\
    \ + b - c)/2)", "  if a + b > c\n    return (a * b) / 2\n  else\n    return -1\n\
    \  end\nend\n</cell>\n<code language=julia-0.5>\ntriangle_area(3, 4, 5)\n</cell>\n\
    <code language=julia-0.5>", "  # Write your code here.\n  \n  if a + b > c\n \
    \   return (a * b) / 2.0\n  elsif a + c > b\n    return ((a + c) * (b - c)) /\
    \ 2.0\n  else\n    return ((a + b) * (c - b)) / 2.0\n  end\nend", "\tif a + b\
    \ > c and a + c > b and b + c > a\n\t\treturn ((a * b) * c)/2\n\treturn -1\nend",
  "  return if ((a+b+c) <= 0)\n  \n  return if ((a+b) > (c+a))\n  \n  return if ((a+c)\
    \ > (b+a))\n  \n  return if ((a) > (b)) ? ((a * b)/(a+b)) : -1;\nend\n</pre>",
  "  if a + b > c\n    return (b * c) / 2\n  elsif a + c > b\n    return (2 * c) /\
    \ 2\n  elsif b + c > a\n    return (2 * b) / 2\n  else \n    return -1\nend",
  " \n  if ((a + b > c) && (a + c > b) && (b + c > a))\n \n    return ((a + b + c)\
    \ / 2)\n  else\n    return -1\n  end\nend\n ", " \n sum = a + b + c\n \n if sum\
    \ < 0 \n  return -1\n \n if a + b > c \n  return (a * b) / 2.0\n \n if b + c >\
    \ a \n  return (2.0 * b * c) / 3.0 \n \n if a + c > b \n  return (3.0 * b * c)\
    \ / 2.0\n \n print \"Sum of a, b, c is \", sum\n \n print \"The area of the triangle\
    \ is \", (a * b) / 2.0\n \n ", "  triangle_area = ((b**2) + (c**2) - (a**2))/2.0\n\
    \  return triangle_area if triangle_area > 0 and triangle_area < 1.0 else -1\n\
    end", "  area_a = a * b * c\n  area_b = a * c\n  area_c = b * c\n  return area_a\
    \ + area_b + area_c >= a + b + c\nend\n</cell>\n<code language=julia-1.0>", " \
    \ if a+b > c\n    return (a+b+c)/2\n  elsif a+c > b\n    return (a+c+b)/2\n  elsif\
    \ b+c > a\n    return (b+c+a)/2\n  else\n    return -1\n  end\nend\n</code></pre>\n\
    </div>\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell\
    \ rendered\"><div class=\"prompt input_prompt\">\n</div><div class=\"inner_cell\"\
    >\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"\
    Practice-Exercises-2\">Practice Exercises<a class=\"anchor-link\" href=\"#Practice-Exercises-2\"\
    >&#182;</a></h2><p>We've left you a series of lectures and started working with\
    \ you during the class. These exercises walk you through some basic concepts that\
    \ you must understand:</p>\n<ul>\n<li>The \"if\" and \"else\" statements</li>\n\
    <li>The \"for\" loop</li>\n<li>How to return values</li>\n<li>How to pass parameters</li>\n\
    </ul>\n<p>If you have any questions about any of these concepts, feel free to\
    \ check out the <a href=\"https://classroom.udacity.com/courses/ud859/lessons/0\"\
    >first couple of lectures</a>.</p>\n<p>These are not graded but more just to help\
    \ you get familiar with Python. We'll do our best to explain them here.</p>",
  "  if a + b > c\n    area_rounded = Math.round((c * 2) + (b * 2) + (a * 2) ** 0.5,\
    \ 2)\n  else\n    area_rounded = -1\n  end\n  return area_rounded\nend\n</pre>\n\
    \      </td>\n    </tr>\n    <tr class=\"odd\">\n      <td class=\"center\" colspan=\"\
    2\">\n        <i>(2) Method #2</i>\n      </td>\n    </tr>\n    <tr class=\"even\"\
    >\n      <td>\n        <pre>", "  if a + b > c\n    return (a * b * c) / 2.0\n\
    \  end\n  return -1\nend\n</cell>\n<code language=julia-1.0>\n@time area(3.14159265,\
    \ 3.14159265, 3.14159265) # The time taken to compute the area of a triangle is\
    \ 0.03 seconds.\n</cell>\n<code language=julia-1.0>\n@time area = triangle_area(3.14159265,\
    \ 3.14159265, 3.14159265) # The time taken to compute the area of a triangle is\
    \ 0.38 seconds.\n</cell>\n<text>\nWrite a function named is_right_angle(a, b,\
    \ c) which checks whether an angle is right angle or not.", "  a * b * c\nend\n\
    </cell>\n<cell>", "    area_tri = 0\n    area_tri = (a+b+c)/2\n    if area_tri\
    \ > (a+c) or area_tri > (b+c) or area_tri > (a+b) \n    area_tri = area_tri *\
    \ 0.5\n    end\n    return area_tri.to_f\nend\n</code>\n<|/ a tags=ruby,math |>\n\
    <| c |>\nThis won't return the correct area if the triangle is not valid - it\
    \ always returns 0. Try a triangle that is not valid - it should return -1.\n\
    <|/ c |>\n<| c |>\nYes you are right! I edited the answer with the correct function!\
    \ Thanks!\n<|/ c |>\n<| a |>\nYou have the formula in your code, but you aren't\
    \ using it.\n<code>", "    area_list = []\n    area_list.push(b * c)\n    area_list.push(a\
    \ * c)\n    area_list.push((a+b) * (a+c))\n    area_list.push((a+b) * (b+c))\n\
    \    area_list.push(b * c + (a * b))\n    area_list.push((a+b) * (a+c) + (b+c))\n\
    \    area_list.push(a * ((a+b) * (b+c)) + ((a+b) * (a+c)) + (b+c))\n    if area_list.sum\
    \ > area_list[2]\n        area_list.each_index do |i|\n            area_list[i]\
    \ /= area_list[2]\n        end\n        return area_list[2]\n    else \n     \
    \   return -1\n    end\nend", "  if a + b > c \n    rounded = a + (b - c) / 2\n\
    \  else\n    rounded = b + (c - a) / 2\n  end\n  return rounded\nend", "    area_rounded\
    \ = -1\n    \n    sides = [a, b, c]\n    \n    valid_sides = (sides[0] + sides[1]\
    \ + sides[2]) < sides[3]\n    \n    if valid_sides\n        area_rounded = ((sides[0]\
    \ + sides[1]) * sides[2]) / 2\n    end\n    \n    return area_rounded\nend\n</cell>\n\
    <code language=julia-0.6>", "  if(a + b > c && a + c > b && b + c > a)\n    puts\
    \ \"The area of the triangle is #{round(a * b * c, 2)}\"\n  else\n    puts \"\
    Invalid triangle area\"\n  end\nend\ntriangle_area(8, 3, 5)\n</code>\n<|/ a |>\n\
    <| c |>\n`round` is unnecessary here: just use `puts \"The area of the triangle\
    \ is #{(a * b * c).round(2)}\"`. [Integer#round](http://ruby-doc.org/core-2.4.1/Integer.html#method-i-round)\
    \ will already round to two decimal places if it can.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n def valid_triangle?(side1, side2, side3)\n      return true if\
    \ side1+side2==side3 && (side1+side2).round(1)==side3\n end\n</code>\n<|/ a tags=ruby,ruby-on-rails,math\
    \ |>\n<| c |>\nIn your function, you use == to compare sides with floats. That\
    \ will not work. Use round()\n<|/ c |>\n<| a tags=ruby,ruby-on-rails,math |>\n\
    <code>", "    \n    valid_triangle_sides = (a + b > c) and (a + c > b) and (b\
    \ + c > a)\n    \n    if valid_triangle_sides:\n        return (round(a * b *\
    \ c) / 2)\n    \n    return -1", "    if a + b > c\n        return a + b\n   \
    \ \n    if a + c > b\n        return a + c\n    \n    if b + c > a\n        return\
    \ b + c\n    \n    return -1\n    ", "  area_a = 0\n  area_b = 0\n  area_c = 0\n\
    \  \n  area_a = b * c if a > b and c > b then area_a = a else area_a = 0\n  area_b\
    \ = b * c if a > b and c > b then area_b = b else area_b = 0\n  area_c = a * b\
    \ if a > b and c > b then area_c = c else area_c = 0\n  \n  area_a = round(area_a,\
    \ 2)\n  area_b = round(area_b, 2)\n  area_c = round(area_c, 2)", "  return -1\
    \ if a + b < c or a + c < b or b + c < a else (a * b + c * a)**.5\nend\n</cell>\n\
    <code language=julia-1.3>", "  if( a * b > c )\n    return Math.sqrt( a * a +\
    \ b * b + c * c )\n  else\n    return -1\nend", "  sum = b + c\n  if a + b > c\
    \ + sum\n  \treturn b + c\n  else return b + c\nend", "  \nend", "    sum = 0\n\
    \    sum += b\n    sum += c\n    sum += a\n    sum = sum/2\n    if sum == b+c\n\
    \        area = (a+b)*(b+c)\n    elsif sum == a+b\n        area = (a+c)*(b+c)\n\
    \    else\n        area = -1\n    end\n    return round(area, 2)\nend\n</cell>\n\
    <code language=julia-0.5>\ntriangle_area(3, 4, 5)\n</cell>\n<code language=julia-0.5>",
  "  if a + b + c < b + c or a + b + c < a + c or a + b < b + c or b + c < a + c\n\
    \    -1\n  else\n    round(((a + b + c)/2)*(math.sqrt(3*(a + b + c)*(a+b+c-a)*(a+b+c+b-a)))*2)\n\
    \  end\nend", "  sum = (a + b + c)\n  area_rounded = (sum / 2).toFixed(2) if sum\
    \ > c && sum > b && sum > a \n  area_rounded = -1 if sum == 0 || area_rounded\
    \ == 0\n  return area_rounded\nend", "  abs = Math.abs a\n  ac = Math.abs c\n\
    \  return if abs == 0 \n    abs = Math.abs b\n    ac = Math.abs c\n    return\
    \ if abs == 0\n      abs = Math.abs a\n      ac = Math.abs b\n      return if\
    \ abs == 0\n        return if (a > b and a > c) or (a > b and b > c) or (b > a\
    \ and b > c) or (a > b and c > b) or (a > c and b > a) or (c > a and c > b)\n\
    \        \n        abs = Math.abs a\n        ac = Math.abs b\n        ba = Math.abs\
    \ c\n      else\n        return if ac >= abs or ba >= abs or ac >= ba\n      \
    \    \n          ac = Math.abs c\n          abs = Math.abs a\n          ba = Math.abs\
    \ b\n        else\n          abs = Math.abs a\n          ac = Math.abs b\n   \
    \       ba = Math.abs c\n        else\n          return -1\n        \n      end\n\
    \    else\n      abs = Math.abs a\n      ac = Math.abs b\n      ba = Math.abs\
    \ c\n    end\n  else\n    return if ac > abs or ba > abs or ac > ba\n      \n\
    \      ac = Math.abs c\n      abs = Math.abs a\n      ba = Math.abs b\n    else\n\
    \      abs = Math.abs a\n      ac = Math.abs b\n      ba = Math.abs c\n    else\n\
    \      return -1\n    end\n  end\nend\n</cell>\n<text>\nTask 6: Write a function\
    \ which takes a string containing some English words. Use Ruby string's methods\
    \ to split the string into an array where each element of the array contains a\
    \ word from the original string. Make sure your function only returns one value\
    \ (the largest word in the array). You can assume each word is less than 100 characters\
    \ long (i.e. no spaces)", "  \n  # Write your code here.\n  if a + b > c\n   \
    \ area_1 = (b * b) - ((a + b) * (a + c))\n    area_2 = (c * c) - ((a * b) * (a\
    \ + c))\n    area_3 = ((a + b) * (b * c)) - ((a + c) * (b + c))\n  else\n    area_1\
    \ = ((b * b) - ((a + b) * (a + c))) / ((a + b) * (a + c))\n    area_2 = ((c *\
    \ c) - ((a * b) * (a + c))) / ((a + b) * (a + c))\n    area_3 = ((a + b) * (b\
    \ * c)) / ((a + c) * (b + c))\n  end\n  area_1 = area_1.round(2)\n  area_2 = area_2.round(2)\n\
    \  area_3 = area_3.round(2)\n  area_total = (area_1 + area_2 + area_3).round(2)\n\
    \  return area_total\nend", "  if a < b + c\n    return -1\n  else \n    return\
    \ (b + c) * .5 / a\n  end \nend", "    if b+c<a+b\n        return b+c\n    else\n\
    \        return a+b\n    end\nend\n</cell>\n<text>\n4.6 Write a method triangle_area_sq\
    \ that calculates the area of the triangle rounded to a decimal point. \nThe method\
    \ must take in 3 arguments: a triangle side's length. \nThe method should return\
    \ a float of the area of the triangle. \nThe triangle will always be a square. ",
  "  \n  if a + b > c\n    area = (a * b) / c\n  else\n    area = -1\n  end", "  \
    \  \n    #Triangle formed\n    if a + b > c and a + c > b and b + c > a\n    \
    \    return (a+b+c)/2\n    \n    else:\n        return -1\n</cell>\n<text>\nNow\
    \ let's find out how many decimal points Python is using for its float and integer\
    \ division. To do this, we need to use Python's built-in int and float functions\
    \ and compare the results with the corresponding results from the float division\
    \ operator //.", "  return triangle_area(a, b, c, 2)\nend\n</pre>", "    return\
    \ (a+b+c)/2\nend", "    \n    # Write your code here\n    \n    return -1", " \
    \ area = (a**2 + b**2 - c**2)/(2.0*a*b)\n  \n  if area > 0 and area < 1.0\n  \
    \  puts \"#{area}\"\n  else\n    puts \"-1\"\n  end\nend", "  total = (a + b +\
    \ c)\n  if total < 0\n    total = 0\n  tri = total * 0.5\n  if a + b > c\n   \
    \ tri = tri * (1 - Math.sqrt(Math.pow((a + b), 2) + Math.pow((c - b), 2)))\n \
    \ elsif a + c > b\n    tri = tri * (1 - Math.sqrt(Math.pow((a + c), 2) + Math.pow((b\
    \ - c), 2)))\n  elsif b + c > a\n    tri = tri * (1 - Math.sqrt(Math.pow((b +\
    \ c), 2) + Math.pow((a - c), 2)))\n  else\n    tri = tri * (1 - Math.sqrt(Math.pow((a\
    \ + b + c), 2)))\n  tri = tri.round(2)\n  return tri if tri >= 0 end\nend\nprint(triangle_area(3,\
    \ 4, 5))\nprint(triangle_area(3, 4, 6))\nprint(triangle_area(3, 4, 7))\nprint(triangle_area(3,\
    \ 4, 8))\nprint(triangle_area(3, 4, 9))\nprint(triangle_area(3, 4, 10))", "  raise\
    \ \"Please add tests for this function\"\nend", "  if a + b > c\n  \tarea_rounded\
    \ = (((a + b) / 2) * c)\n  \treturn area_rounded\n  else\n  \tarea_rounded = -1\n\
    \  \treturn area_rounded\n  end\nend", "    return (a * b + b * c) / 2\n    #\
    \ return (a * b + b * c - a * c) / 2\n    # return (((a + b) * (b + c)) - ((a\
    \ + c) * (b + c))) / (2 * a)\n    # return ((a + b) * (b + c)) - ((a - b) * (c\
    \ - b))\n    # return (((a + b) * (b + c)) - ((a - b) * (c - b))) / (2 * a)\n\
    \    # return ((a + b) * (c - b)) - ((a - b) * (b - c))\n    # return ((a - b)\
    \ * (b - c)) + ((a + b) * (c - b))\n    # return ((a - b) * (b - c)) + ((a - b)\
    \ * (b - c))", "  return if(a + b > c) || (a - b > c)\n  a = Math.sqrt(Math.pow(a,\
    \ 2) + (Math.pow(b, 2)))\n  b = Math.sqrt(Math.pow(b, 2) + (Math.pow(a, 2)))\n\
    \  c = Math.sqrt(Math.pow(c, 2) + (Math.pow(b, 2)))\n  return Math.round(a * b\
    \ * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\nend", "  if (a + b + c) !=\
    \ (a + b + c + 1)\n    -1\n  else \n    ((a * b) + (a * c) + (b * c)) / ((a +\
    \ b) * (a + c) * (b + c))\n  end\nend", "    area_sum = a + b + c\n    if area_sum\
    \ % 2 == 0 and area_sum >= 3 and area_sum < 4 + a + b && area_sum < 4 + a + b\
    \ + c\n        return area_sum / 2\n    else\n        return -1\n    end\nend\n\
    </cell>\n<code language=julia-1.6>", "    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2)) \nend", "    # Write your code here.\n    area = Math.sqrt(b*b\
    \ + c*c - a*a)\n    if(area > 0)\n        return Math.round(area)\n    else return\
    \ -1\nend", "  # Write your code here\n  return Math.sqrt(a**2 + b**2 - (a*b)**2)\n\
    end", "  if a + b > c\n    return Math.sqrt(Math.pow(b,2) + Math.pow(c,2))\n \
    \ elsif c + b > a\n    return Math.sqrt(Math.pow(c,2) + Math.pow(a,2))\n  elsif\
    \ a + c > b\n    return Math.sqrt(Math.pow(a,2) + Math.pow(b,2))\n  else\n   \
    \ return -1\n  end\nend\n</cell>\n<text>\nTest your Code\nRun the cell block below\
    \ to test your code.", "  if a + b > c\n    triangle_area = (a*b*c) / 2.0\n  else\n\
    \    triangle_area = -1\n  end\nend", "   \n    if a + b >= c\n        area_of_triangle\
    \ = (a * b) / (math.sqrt(b * c + a * a + c * c))\n        return area_of_triangle\n\
    \    \n    if a + c >= b\n        area_of_triangle = (b * c) / (math.sqrt(b *\
    \ c + a * a + c * c))\n        return area_of_triangle\n    \n    if b + c >=\
    \ a\n        area_of_triangle = (c * a) / (math.sqrt(b * c + a * a + c * c))\n\
    \        return area_of_triangle\n    \n    else:\n        return -1\n    ", " \
    \ if a + b > c\n    return ((a * b * c) / 2)\n  else\n    return -1\n  end\nend\n\
    </cell>\n<code language=julia-0.5>\ntriangle_area(3, 5, 6)\n</cell>\n<code language=julia-0.5>\n\
    function find_length(a, b, c)\n  return (b - a) * (c - b)\nend\n</cell>\n<code\
    \ language=julia-0.5>\nfind_length(3, 5, 6)\n</cell>\n<code language=julia-0.5>\n\
    function find_area(a, b, c)\n  return (a * b * c) / 2\nend\n</cell>\n<code language=julia-0.5>\n\
    find_area(3, 5, 6)\n</cell>\n<code language=julia-0.5>", "  if(a + b > c && a\
    \ + c > b && b + c > a)\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend\n\
    triangle_area(1, 1, 1)", "  sum = a + b + c\n  if sum > 0 && b > a && c > b\n\
    \    puts (a * b) / 2\n  else\n    -1\n  end\nend\nprint triangle_area(5,3,4) ",
  "  # BEGIN PROBLEM 1\n  valid_triangle_area = if a + b > c\n    area_of_triangle\
    \ = a * b * c\n    if area_of_triangle > 2 * a * b\n      area_of_triangle = area_of_triangle\
    \ / 2\n    end\n  else\n    area_of_triangle = -1\n  end\n  # END PROBLEM 1",
  "  sum = a + b + c\n  area_valid = sum > c\n  if area_valid then \n    area_rounded\
    \ = (a * c) / sum\n    return area_rounded\n  else \n    return -1\nend", "  \
    \  return a*b*c\nend", "  if ((a + b) > c) or ((b + c) > a) or ((c + a) > b) return\
    \ -1\n  return 0.5 * ((a + b) * (b - c) + (b - a) * (c - b))\nend", "  area_a\
    \ = (a * b) / 2\n  area_b = (a * c) / 2\n  area_c = (b * c) / 2\n  if area_a +\
    \ area_b > area_c\n    return area_a + area_b\n  else\n    return area_c + area_b\n\
    \  end\nend", "  area_to_rounded = 0.0000000001\n  if a + b > c\n    area_to_rounded\
    \ = Math.sqrt(Math.pow(a + b, 2) - (Math.pow(a, 2) + Math.pow(b, 2)))\n  elsif\
    \ a + c > b\n    area_to_rounded = Math.sqrt(Math.pow(a + c, 2) - (Math.pow(a,\
    \ 2) + Math.pow(b, 2)))\n  elsif b + c > a\n    area_to_rounded = Math.sqrt(Math.pow(b\
    \ + c, 2) - (Math.pow(b, 2) + Math.pow(a, 2)))\n  else\n    area_to_rounded =\
    \ Math.sqrt(Math.pow(a, 2) + (Math.pow(b, 2) + Math.pow(c, 2)))\n  area_rounded\
    \ = Math.round(area_to_rounded*100)/100.0\n  return area_rounded\nend\n</cell>\n\
    <code language=julia-0.5>\ntriangle_area(3,5,4)\n</cell>\n<text>\nExercise 2\n\
    Write a program that prompts the user to enter 3 numbers between -100 and 100.\
    \ If the user enters a number between -100 and 100, the program should check if\
    \ it is an integer, if not, it should print a message to the user asking them\
    \ to enter a number between -100 and 100. If the user enters a valid number between\
    \ -100 and 100, the program should display the area of the triangle that the user\
    \ entered rounded to two decimal points.", "  ab, bc, ca = a, b, c\n  if aa +\
    \ bb > ca \n    return (aa + bb - ca) / 2\n  elsif aa + cc > bb \n    return (aa\
    \ + cc - bb) / 2\n  elsif ab + cc > aa \n    return (bb + cc - aa) / 2\n  elsif\
    \ ab + cb > bb \n    return (bb + cb - ab) / 2\n  elsif ac + bb > ca \n    return\
    \ (ca + bb - ac) / 2\n  elsif ac + cc > bb \n    return (ca + cc - bb) / 2\n \
    \ elsif ac + cb > ca \n    return (cb + cc - ac) / 2\n  elsif ab + cb > ca \n\
    \    return (ca + cb - ab) / 2\n  else\n    return -1\nend", "    if a + b > c\n\
    \        area = (b * b) - (4 * a * c)\n    else \n        area = (b * b) - (4\
    \ * (a * c))\n        \n    area = (area / 2)\n    area = round (area, 2)\n  \
    \  return area\n</code>\nThis is giving me this error:\n<code>\nTraceback (most\
    \ recent call last):\n  File \"python\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/spyder/utils/site/sitecustomize.py\"\
    , line 710, in runfile\n    execfile(filename, namespace)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/spyder/utils/site/sitecustomize.py\"\
    , line 101, in execfile\n    exec(compile(f.read(), filename, 'exec'), namespace)\n\
    \  File \"/Users/jhayes/PycharmProjects/Python/pytut/tut5.py\", line 26, in <module>\n\
    \    area = round (area, 2)\nNameError: name 'round' is not defined\n</code>\n\
    So I tried using round:\n<code>", "  # Write your code here.\n  if(a+b+c >0)\n\
    \    return ((b**2)+(c**2)-(a**2))\n  else\n    return -1\n  end\nend", "\tif\
    \ a + b + c <= (a + b + c)/2 \n\t\treturn (a * b * c) / 3.0 / 100\n\telse\n\t\t\
    return -1\nend", "  if a + b > c\n    return (b - a + c) / 2\n  elsif a + c >\
    \ b\n    return (b - a + c) / 2\n  elsif b + c > a\n    return (b - a + c) / 2\n\
    \  else\n    return -1\n  end\nend\n</cell>\n<cell>", "  if a+b+c >= b+c+a\n \
    \   area_a = ((a-b+c)/2)*b\n    area_b = ((b-a+c)/2)*a\n    area_c = ((c-a+b)/2)*c\n\
    \    area_a = round(area_a, 2)\n    area_b = round(area_b, 2)\n    area_c = round(area_c,\
    \ 2)\n    return area_a + area_b + area_c\n  end\n  \n  if a+b+c >= c+a+b\n  \
    \  area_a = ((a-c+b)/2)*c\n    area_b = ((b-a+c)/2)*a\n    area_c = ((c-a+b)/2)*b\n\
    \    area_a = round(area_a, 2)\n    area_b = round(area_b, 2)\n    area_c = round(area_c,\
    \ 2)\n    return area_a + area_b + area_c\n  end\n  \n  if a+b+c >= b+a+c\n  \
    \  area_a = ((a-b+c)/2)*b\n    area_b = ((b-a+c)/2)*a\n    area_c = ((c-a+b)/2)*c\n\
    \    area_a = round(area_a, 2)\n    area_b = round(area_b, 2)\n    area_c = round(area_c,\
    \ 2)\n    return area_a + area_b + area_c\n  end\n  \n  return -1\nend", "  area_of_triangle\
    \ = 0\n  valid_triangle = a < b + c && b < c + a && c < a + b\n  if valid_triangle\n\
    \    area_of_triangle = sqrt(a * a + b * b + c * c)\n    area_of_triangle = area_of_triangle\
    \ / 2.0\n  end\n  return area_of_triangle\nend", "    total = 0\n    if a + b\
    \ > c\n        total += (b - c)\n    else \n        total += (b + c - a)\n   \
    \ if a + c > b\n        total += (c - b)\n    else \n        total += (c + a -\
    \ b)\n    if total >= 0\n        return total/2\n    return -1\nprint(triangle_area(5,\
    \ 4, 3))\n</cell>\n<text>\nProblem 8\nWrite a program to find the circumference\
    \ of a circle given its radius.", "  if a + b > c\n    (a+b + c).round\n  else\
    \ \n    -1\n  end\nend", "    sides = [a,b,c]\n    total = a + b + c\n    if total\
    \ > sides[0] + sides[1] + sides[2]\n        return (sides[0] + sides[1] + sides[2])\
    \ / 2.0\n    else\n        return -1\n    end\nend", "  if a + b > c\n    return\
    \ (a * b) / 2.0\n  else\n    return -1\n  end\nend", "  return -1 if a + b > c\
    \ || a + c > b || b + c > a\n  return (a * b + c * 3) / (4.0 * Math::sqrt(a *\
    \ a + b * b + c * c))\nend", "  return Math.sqrt(Math.pow((a + b), 2) + Math.pow((a\
    \ + c), 2) + Math.pow((b + c), 2))\nend\n</cell>\n<cell>", "  if a + b > c &&\
    \ a + c > b && b + c > a\n    Math.sqrt( Math.pow( b - a, 2) +\n             \
    \ Math.pow( c - a, 2) +\n              Math.pow( a - b, 2) )\n  else\n    -1\n\
    \  end\nend\n</code>\n<|/ a |>\n<| c |>\nAh, that's much cleaner. Thanks.\n<|/\
    \ c |>\n<| c |>\nThis doesn't answer the question, since it doesn't answer how\
    \ to calculate the area of the triangle. While it may work for the OP it won't\
    \ help anyone else looking for an answer to the same problem.\n<|/ c |>\n<| c\
    \ |>\nI see what you're saying, however OP's problem was that the formula was\
    \ incorrect, which I believe this does. The OP didn't know how to *calculate*\
    \ the area of a triangle. Which is why the accepted answer provides the correct\
    \ formula to calculate the area of a triangle given three points.\n<|/ c |>\n\
    <| c |>\nOP didn't know the formula to calculate the area of a triangle. The accepted\
    \ answer provides that. I agree that your solution would be better but it doesn't\
    \ answer the OP's question.\n<|/ c |>\n<| c |>\nThe formula to calculate the area\
    \ of a triangle given three points is `Math.sqrt(Math.pow(point2.y-point1.y,2)+Math.pow(point2.x-point1.x,2)+Math.pow(point1.y-point2.y,2))`\n\
    <|/ c |>\n<| a |>\n<code>", "  if a + b > c\n    # do something\n  else\n    #\
    \ do something else\n  end\nend\n</cell>\n<text>\nExercise 6 - Write a function\
    \ that returns true if the first two arguments of its argument are both a positive\
    \ number and greater than 0\nExample:", "    if a + b > c\n        return ((a\
    \ + b) * (c + a)) / (2.0 * b)\n    else\n        return -1\n    end\nend", " \
    \ if a + b > c and a + c > b and b + c > a\n    return float( (a * b * c)/2.0\
    \ ) \n  else \n    return -1\nend", "  area_count = 0\n  triangle_count = 0\n\
    \  if a + b > c\n    area_count += 0.5\n  elsif a + c > b\n    area_count += 0.5\n\
    \  elsif b + c > a\n    area_count += 0.5\n  elsif a + b > c\n    area_count +=\
    \ 0.5\n    triangle_count += 1\n  elsif a + c > b\n    area_count += 0.5\n   \
    \ triangle_count += 1\n  elsif b + c > a\n    area_count += 0.5\n    triangle_count\
    \ += 1\n  elsif a + b > c\n    area_count += 0.5\n    triangle_count += 1\n  \
    \  area_count += 0.5\n    triangle_count += 1\n  elsif a + c > b\n    area_count\
    \ += 0.5\n    triangle_count += 1\n    area_count += 0.5\n    triangle_count +=\
    \ 1\n  elsif b + c > a\n    area_count += 0.5\n    triangle_count += 1\n    area_count\
    \ += 0.5\n    triangle_count += 1\n  elsif a + b > c\n    area_count += 0.5\n\
    \    triangle_count += 1\n    area_count += 0.5\n    triangle_count += 1\n   \
    \ area_count += 0.5\n    triangle_count += 1\n  elsif a + c > b\n    area_count\
    \ += 0.5\n    triangle_count += 1\n    area_count += 0.5\n    triangle_count +=\
    \ 1\n    area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n \
    \   triangle_count += 1\n  elsif b + c > a\n    area_count += 0.5\n    triangle_count\
    \ += 1\n    area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n\
    \    triangle_count += 1\n    area_count += 0.5\n    triangle_count += 1\n   \
    \ area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n    triangle_count\
    \ += 1\n    area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n\
    \    triangle_count += 1\n    area_count += 0.5\n    triangle_count += 1\n   \
    \ area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n    triangle_count\
    \ += 1\n    area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n\
    \    triangle_count += 1\n    area_count += 0.5\n    triangle_count += 1\n   \
    \ area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n    triangle_count\
    \ += 1\n    area_count += 0.5\n    triangle_count += 1\n    area_count += 0.5\n\
    \    triangle_count += 1\n    area_", "  if a + b > c\n    return ((a * b) / c).round(2)\n\
    \  else\n    if a + c > b\n      return ((b * c) / a).round(2)\n    else\n   \
    \   if b + c > a\n        return ((c * a) / b).round(2)\n      end\n    end\n\
    \  end\nend\n</cell>\n<code language=julia-1.0>", "\t\n\t# The area of a triangle\
    \ is equal to the base \n\t# of the triangle times the height of the triangle\
    \ \n\t# minus half of the length of either side.\n\treturn ((a * b) /2) - c\n\
    end", "  if a + b >= c\n    a + b + c\n  else\n    -1\n  end\nend\n</cell>\n<cell>",
  "  result = (a + b + c) / 2\n  \n  if a > b \n    result += (a - b)\n  \n  if a\
    \ > c \n    result += (a - c)\n  \n  if b > c \n    result += (a - c)\n  \n  return\
    \ result\nend", "  \n  if a + b + c != 0\n    s = (a + b + c) / 2\n  else\n  \
    \  s = -1\n  end", "  total = a + b + c\n  rounded_area = Math.sqrt(total * (total\
    \ - a) * (total - b) * (total - c)) / 2\n  return rounded_area\nend", "\tif a\
    \ + b > c && a + c > b && b + c > a\n\t\tMath.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2))\n\telse\n\t\t-1\n\tend\nend", "  valid_sides = a^2 + b^2\
    \ > c^2 # a is positive & b is negative & c is positive\n  if valid_sides \n \
    \   (a * b + c * b) * (a + c) - (a * c + b * b) * (a + b) # use double for math\n\
    \  else\n    -1\n  end\nend", "    valid_sides = a + b + c >= a + c + b\n    return\
    \ valid_sides ? a*b*c/((a+b+c)/2) : -1\nend", "  area_a = a + b + c \n  area_a\
    \ = area_a / 2.0 if area_a % 2 == 0 \n  area_b = a * b * c \n  area_b = area_b\
    \ / 2.0 if area_b % 2 == 0 \n  area_c = a * c * c \n  area_c = area_c / 2.0 if\
    \ area_c % 2 == 0 \n  return area_a if area_a > area_b and area_a > area_c else\
    \ area_b if area_b > area_c else area_c\nend", "    area_a = a * b\n    area_b\
    \ = a * (b - c)\n    area_c = a * (b + c)\n    area_sum = area_a + area_b + area_c\n\
    \    area_rounded = round(area_sum, 2)\n    return area_rounded\n</cell>\n<cell>",
  "  if a+b>c or b+c>a or c+a>b\n    return -1\n  else \n    return (a+b+c)/2\nend\n\
    </code>\n<|/ a |>\n<| a dscore=0 tags=ruby |>\n<code>", "    if a + b > c\n  \
    \      puts \"-1\"\n    elsif a + c > b\n        puts \"-1\"\n    elsif b + c\
    \ > a\n        puts \"-1\"\n    else\n        puts (a * b + b * c + c * a) / 2\n\
    \    end\nend", "  d = b * b - a * c\n  if d == 0\n    return -1\n  e = Math.sqrt(d)\n\
    \  return Math.round((a + b + c) / 2) * Math.round(e) / Math.round(e) # Round\
    \ to 2 decimal points\nend\n</code>\n<|/ a |>\n<| a |>\nThis code returns the\
    \ area of a triangle if the lengths of the sides are greater than zero\n<code>",
  "  return (a * b + b * c + c * a) / 2.0\nend\n</cell>\n<text>\nProblem 2\nWrite\
    \ a recursive function named get_area that takes 3 positive arguments. Each argument\
    \ represents the length of a side of a triangle. This function returns the area\
    \ of the triangle if the triangle is valid, otherwise returns -1. Hint: the function\
    \ should call the triangle_area function. Don't forget that triangle_area requires\
    \ 3 arguments and that get_area does not take any arguments.", "  valid_triangle\
    \ = a + b > c # a is greater than b and b is greater than c\n  if valid_triangle\n\
    \    area_of_triangle = (a + b + c) / 2\n  else\n    area_of_triangle = -1\n \
    \ end\n  return area_of_triangle\nend", "  if a + b > c \n    puts Float(Math.sqrt((b*b)\
    \ - (a*a))).round\n  elsif c + a > b\n    puts Float(Math.sqrt((c*c) - (b*b))).round\n\
    \  else\n    puts Float(Math.sqrt((c*c) - (a*a))).round\n  end\nend", "  return\
    \ (a * b + c * 2) if a + b + c > 0 else -1\nend", "  ab = ab_sum(a, b, c)\n  ac\
    \ = ac_sum(a, b, c)\n  ad = ad_sum(a, b, c)\n  \n  return round(ab + ac + ad,\
    \ 2) if ab + ac + ad > 0 else\n          -1\nend", "  if a == 0 and b == 0 and\
    \ c == 0 then\n     return 0\n  elsif a + b > c or a + c > b or b + c > a then\n\
    \     return -1\n  else\n     return (a + b + c) / 2\n  end\nend\n</cell>\n<cell>",
  "  d = b - a\n  e = c - a\n  f = b - c\n  return ((d**2 + e**2) * (f**2)).to_f\n\
    end", "  if a + b > c\n    return ((b**2) + (c**2) - (a**2))**0.5\n  elsif b +\
    \ c > a\n    return ((c**2) + (a**2) - (b**2))**0.5\n  elsif c + a > b\n    return\
    \ ((a**2) + (b**2) - (c**2))**0.5\n  else\n    return -1\n  end\nend\n</cell>\n\
    <code language=julia-1.3>\ntriangle_area(3,4,5)\n</cell>\n<code language=julia-1.3>",
  "  if a == b || a == c || b == c\n    return 0\n  else\n    return (a+b+c) / 2\n\
    \  end\nend", "  sum = a + b + c\n  if sum < c\n    sum = sum + c\n  end\n  if\
    \ sum < b\n    sum = sum + b\n  end\n  if sum < a\n    sum = sum + a\n  end\n\
    \  return sum / 2\nend", "  if a + b <= c\n    return a * b * 0.5\n  elsif a +\
    \ c <= b\n    return a * b * 0.5\n  elsif b + c <= a\n    return a * b * 0.5\n\
    \  else\n    return -1\n  end\nend", "\tsum = (a + b + c)\n\tif sum > c\n\t\t\
    return sum\n\telsif sum > b\n\t\treturn sum\n\telse\n\t\treturn sum\n\tend\nend\n\
    </cell>\n<text>\nQ8: Find the area of a triangle formed by the given points.",
  "  if a >= 0 and b >= 0 and c >= 0 \n  and a + b + c > 0 \n  and a + c >= b\n  and\
    \ b + c >= a\n  and a + b + c >= 0\n  then return round((a*b - b*c)/2, 2)\n  else\
    \ return -1\nend", "    ab = a * b\n    cb = c * b \n    area = ab + cb\n    return\
    \ round(area, 2)\n</cell>\n<cell>\ntriangle_area(2,2,3)\n</cell>\n<cell>\ntriangle_area(2,3,4)\n\
    </cell>\n<text>\nExercise\nUse a function to calculate the area of a triangle\
    \ when given three sides, a, b, and c.", "  if a+b > c && c+a > b\n    return\
    \ c*(a+b)/2\n  elsif a+c > b && b+c > a\n    return c*(a+b+c)/3\n  elsif b+c >\
    \ a && a+b > c\n    return c*(b+a-c)/3\n  end\n  -1\nend", "  sides = [ a, b,\
    \ c ]\n  s.each do |side| \n    if sides.length != 3\n      return -1\n    end\n\
    \    sum = sides.inject(0) { |s, e| s + e }\n    if sum > sides[2]\n      return\
    \ -1\n    end\n  end\n  a * b / ((a + b) * (a + c))\nend", "    if a + b > c\n\
    \        area_a = abs(a * b * 0.5f)\n        area_b = abs(b * c * 0.5f)\n    \
    \    area_c = abs(c * a * 0.5f)\n        area_total = area_a + area_b + area_c\n\
    \        area_rounded = area_total / 2.0\n        return area_rounded\n    elsif\
    \ a + c > b\n        area_a = abs(a * b * 0.5f)\n        area_b = abs(b * c *\
    \ 0.5f)\n        area_c = abs(c * a * 0.5f)\n        area_total = area_a + area_b\
    \ + area_c\n        area_rounded = area_total / 2.0\n        return area_rounded\n\
    \    elsif b + c > a\n        area_a = abs(a * b * 0.5f)\n        area_b = abs(b\
    \ * c * 0.5f)\n        area_c = abs(c * a * 0.5f)\n        area_total = area_a\
    \ + area_b + area_c\n        area_rounded = area_total / 2.0\n        return area_rounded\n\
    \    else \n        area_a = abs(a * b * 0.5f)\n        area_b = abs(b * c * 0.5f)\n\
    \        area_c = abs(c * a * 0.5f)\n        area_total = area_a + area_b + area_c\n\
    \        area_rounded = area_total / 2.0\n        return area_rounded\n    end\n\
    end", "  \nend", "  \n  return if a + b > c || a + c > b || b + c > a\n  \n  area_a\
    \ = ((a * b) / 2)\n  area_b = ((a * c) / 2)\n  area_c = ((b * c) / 2)\n  \n  return\
    \ area_a if area_a + area_b > area_c || area_a + area_c > area_b || area_b + area_c\
    \ > area_a\nend\n</cell>\n<code language=julia-1.0>", "  if a + b > c\n    Math.round((a\
    \ * b) / 2)\n  elsif a + c > b\n    Math.round((c * b) / 2)\n  elsif b + c > a\n\
    \    Math.round((b * a) / 2)\n  else\n    Math.round((a * a) / 2)\n  end\nend\n\
    </cell>\n<text>\nProblem 2\nWrite a method called isTriangle that takes three\
    \ integers as arguments and returns True if the numbers are valid triangle sides.\
    \ Otherwise it returns False.", "  return (a+b+c).round/2 if a<b<c \n  else -1\n\
    end\n</cell>\n<text>\nNow that we have written our own function that returns the\
    \ area of a triangle rounded to two decimal places, we can use it to write our\
    \ own", "  if a + b >= c\n  else\n    triangle_area(b,c,a)\n  end\nend", "\tarea_sum\
    \ = 0\n\tarea_sum += a\n\tarea_sum += b\n\tarea_sum += c\n\tarea_sum -= (a + b\
    \ + c)\n\tif (area_sum / 2 == a + b && a + b + c == area_sum)\n\t\treturn area_sum\
    \ / 2\n\telse\n\t\treturn -1\nend", "  if a + b > c\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2))\n  elsif b + c > a\n    return Math.sqrt(Math.pow(b, 2)\
    \ + Math.pow(c, 2))\n  elsif c + a > b\n    return Math.sqrt(Math.pow(c, 2) +\
    \ Math.pow(a, 2))\n  else\n    return -1\n  end\nend", "  \n  d = b - a\n  e =\
    \ c - a\n  f = b - c\n  \n  return ((abs(d) + abs(e) + abs(f)) % 10 == 0)? \n\
    \    round( ((d + e + f) * 0.5) / 3, 2) : -1", "  if a+b > c && a+c > b && b+c\
    \ > a\n    puts (a+b+c).to_s.round(2)\n  else \n    puts -1\n  end\nend", "  if\
    \ a + b <= c\n    return (((b * c) / a) + 1)\n  else\n    return -1\n  end\nend\n\
    print triangle_area(5,4,3)", "  return Math.sqrt(Math.pow((a + b + c), .25))\n\
    end", "  area_a = (b*b)*Math.sqrt(3) * Math.cos(a) - (b^2)*Math.sin(a) * (c-b)\n\
    \  area_b = (b*b)*Math.sqrt(3) * Math.sin(a) + (b^2)*Math.cos(a) * (c-b)\n  area_c\
    \ = (b^2)*Math.sqrt(3) * Math.cos(a) + (b*b)*Math.sin(a) * (c-b)\n  area_sum =\
    \ area_a + area_b + area_c\n  if area_sum > 0\n    return Math.round(area_sum*100)/100\n\
    \  end\n  return -1\nend", "    area_of_tri = (a + b + c) / 2.0\n    if area_of_tri\
    \ >= b + c && area_of_tri >= a + c && area_of_tri >= a + b \n        then (area_of_tri\
    \ / 2.0)\n    else\n        -1\n    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ won't work correctly for all three sides being negative but for at least one\
    \ of them being positive. Try it! :)\n<|/ c |>\n<| c |>\nYes, it won't work. I\
    \ just mentioned that in the comments already. But the code should be easily modified\
    \ to handle all cases. I'll add a more detailed example.\n<|/ c |>\n<| c |>\n\
    I like the answer so much it's great to see that someone has gone out of their\
    \ way to write code that checks all the cases. But this solution also checks for\
    \ all the invalid cases. It's a good answer but it would be better if it didn't\
    \ have to check them all to begin with. Also, while I didn't mention it but if\
    \ you look at my answer, you can see that I was using a similar code when I first\
    \ wrote mine. (I did have a few cases that I fixed that were not covered so I\
    \ fixed them when writing the answer.)\n<|/ c |>\n<| c |>\nI think that's a fair\
    \ point. I'll update my answer with a solution that only checks the valid cases.\n\
    <|/ c |>\n<| c |>\nThat code checks the valid cases but I thought it wasn't covered\
    \ either. I did add a comment in the code stating that a more robust solution\
    \ would need to check all cases.\n<|/ c |>\n<| a dscore=0 tags=ruby |>\nA few\
    \ thoughts:", "\treturn (a * b * c) / Math.sqrt((a * a) + (b * b) + (c * c))\n\
    end", "\tif a+b>c\n\t\tarea_tri=((b**2-a*c)/2)**0.5\n\telse\n\t\tarea_tri=-1\n\
    \tend\n\treturn area_tri\nend\n</cell>\n<code language=julia-0.6>\n@code_warntype\
    \ triangle_area(3,4,5)\n</cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,2,5)\n\
    </cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(5,3,4)\n</cell>\n\
    <code language=julia-0.6>\n@code_warntype triangle_area(1,1,1)\n</cell>\n<code\
    \ language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n\
    @code_warntype triangle_area(1,1,-10)\n</cell>\n<code language=julia-0.6>\n@code_warntype\
    \ triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,-1)\n\
    </cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,-10)\n</cell>\n\
    <code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code\
    \ language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n\
    @code_warntype triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n@code_warntype\
    \ triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n\
    </cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n\
    <code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code\
    \ language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n\
    @code_warntype triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n@code_warntype\
    \ triangle_area(1,1,0)\n</cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n\
    </cell>\n<code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n\
    <code language=julia-0.6>\n@code_warntype triangle_area(1,1,0)\n</cell>\n<code\
    \ language=julia-0.6>", "  valid_triangle = ((a + b > c) && (c + d > a) && (a\
    \ + d > c))\n  area_rounded = ((valid_triangle && ((a * b) + c * d) <= (a + b\
    \ + c)) * 0.5).round(2)\n  return area_rounded if valid_triangle == true else\
    \ -1\nend", "  sum = a+b+c\n  return if sum < b+c\n  sum -= b\n  return if sum\
    \ < a+c\n  sum -= c\n  return if sum < a\n  sum -= a\n  return if sum > 0\n  return\
    \ -1\nend\n</pre>\n<p><a id=\"solution\"></a></p>\n<h2>Solution<a class=\"headerlink\"\
    \ href=\"#solution\" title=\"Permanent link\">\_</a></h2>\n<p>The solution is\
    \ quite simple. You need to calculate the sum of three sides and then calculate\
    \ if the sum is greater than the third. Then you subtract the smallest of the\
    \ three sides from the sum. If the sum is equal to zero or less, then the triangle\
    \ does not form a valid triangle, and if the sum is greater than zero then you\
    \ subtract the largest of the three sides from the sum.</p>\n<h3 id=\"step-by-step\"\
    >Step by step<a class=\"headerlink\" href=\"#step-by-step\" title=\"Permanent\
    \ link\">\_</a></h3>\n<p>Let\u2019s start from the top. Take the sum of three\
    \ sides:</p>\n<div class=\"codehilite\"><pre><span></span><code class=\"syntax\"\
    ><span class=\"k\">SELECT</span> <span class=\"n\">a</span><span class=\"p\">,</span>\
    \ <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span\
    \ class=\"p\">,</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span\
    \ class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span\
    \ class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span\
    \ class=\"k\">FROM</span> <span class=\"n\">triangle_area</span><span class=\"\
    p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"\
    n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"\
    p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code\
    \ class=\"syntax\">\u250C\u2500a\u2500\u252C\u2500b\u2500\u252C\u2500c\u2500\u252C\
    \u2500sum(a)\u2500\u252C\u2500sum(b)\u2500\u252C\u2500sum(c)\u2500\u2510\n\u2502\
    \ 1 \u2502 2 \u2502 3 \u2502      5 \u2502      7 \u2502      9 \u2502\n\u2514\
    \u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\
    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\
    \u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\
    <p>We need to check if the sum of three sides is greater than the third side:</p>\n\
    <div class=\"codehilite\"><pre><span></span><code class=\"syntax\"><span class=\"\
    k\">SELECT</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"\
    n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"\
    p\">,</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"\
    n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"\
    p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"\
    k\">FROM</span> <span class=\"n\">triangle_area</span><span class=\"p\">(</span><span\
    \ class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span\
    \ class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span\
    \ class=\"k\">WHERE</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span\
    \ class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span\
    \ class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span\
    \ class=\"o\">&gt;</span> <span class=\"mi\">3</span>\n</code></pre></div>\n<div\
    \ class=\"codehilite\"><pre><span></span><code class=\"syntax\">\u250C\u2500a\u2500\
    \u252C\u2500b\u2500\u252C\u2500c\u2500\u252C\u2500sum(a)\u2500\u252C\u2500sum(b)\u2500\
    \u252C\u2500sum(c)\u2500\u2510\n\u2502 1 \u2502 2 \u2502 3 \u2502      5 \u2502\
    \      7 \u2502      9 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\
    \u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
    \u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\
    \u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n<p>This is not true because\
    \ 5 + 7", "    return if(b**2 + c**2 > a**2)\n    return if(c**2 > a**2)\n   \
    \ return if(a**2 > b**2)\n    return if(b**2 > c**2)\n    return if(a**2 + b**2\
    \ > c**2)\n    return if(a**2 + c**2 > b**2)\n    return if(b**2 + c**2 > a**2)\n\
    \    return if(a**2 > b**2 + c**2)\n    return if(a**2 > c**2 + b**2)\n    return\
    \ if(b**2 > a**2 + c**2)\n    return if(c**2 > a**2 + b**2)\n    return if(a**2\
    \ > b**2 + c**2)\n    return if(a**2 > c**2 + b**2)\n    return if(b**2 > a**2\
    \ + c**2)\n    return if(c**2 > a**2 + b**2)\n    return if(a**2 > b**2 + c**2)\n\
    \    return if(a**2 > c**2 + b**2)\n    return if(b**2 > a**2 + c**2)\n    return\
    \ if(c**2 > a**2 + b**2)\n    return if(a**2 > b**2 + c**2)\n    return if(a**2\
    \ > c**2 + b**2)\n    return if(b**2 > a**2 + c**2)\n    return if(c**2 > a**2\
    \ + b**2)\n    return if(a**2 > b**2 + c**2)\n    return if(a**2 > c**2 + b**2)\n\
    \    return if(b**2 > a**2 + c**2)\n    return if(c**2 > a**2 + b**2)\n    return\
    \ if(a**2 > b**2 + c**2)\n    return if(a**2 > c**2 + b**2)\n    return if(b**2\
    \ > a**2 + c**2)\n    return if(c**2 > a**2 + b**2)\n    return if(a**2 > b**2\
    \ + c**2)\n    return if(a**2 > c**2 + b**2)\n    return if(b**2 > a**2 + c**2)\n\
    \    return if(c**2 > a**2 + b**2)\n    return if(a**2 > b**2 + c**2)\n    return\
    \ if(a**2 > c**2 + b**2)\n    return if(b**2 > a**2 + c**2)\n    return if(c**2\
    \ > a**2 + b**2)\n    return if(a**2 > b**2 + c**2)\n    return if(a**2 > c**2\
    \ + b**2)\n    return if(b**2 > a**2 + c**2)\n    return if(c**2 > a**2 + b**2)\n\
    \    return if(a**2 > b**2 + c**2)\n    return if(a**2 > c**2 + b**2)\n    return\
    \ if(b**2 > a**2 + c**2)\n    return if(c**2 > a**2 + b**2)\n    return "]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

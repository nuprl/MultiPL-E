name: HumanEval_25_factorize
language: rb
prompt: "# Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n# Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n# Input number should be equal\
  \ to the product of all factors\ndef factorize(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_factorize\n\
  \    candidate = method(:factorize)\n    assert_equal([2], candidate.call(2))\n\
  \    assert_equal([2, 2], candidate.call(4))\n    assert_equal([2, 2, 2], candidate.call(8))\n\
  \    assert_equal([3, 19], candidate.call(57))\n    assert_equal([3, 3, 19, 19],\
  \ candidate.call(3249))\n    assert_equal([3, 3, 3, 19, 19, 19], candidate.call(185193))\n\
  \    assert_equal([3, 19, 19, 19], candidate.call(20577))\n    assert_equal([2,\
  \ 3, 3], candidate.call(18))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

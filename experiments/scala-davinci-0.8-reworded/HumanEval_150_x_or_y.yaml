name: HumanEval_150_x_or_y
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // A simple program which should return the value of x if n is \n    // a prime\
  \ number and should return the value of y otherwise.\n    // Examples:\n    // >>>\
  \ xOrY((7l), (34l), (12l))\n    // (34l)\n    // >>> xOrY((15l), (8l), (5l))\n \
  \   // (5l)\n    def xOrY(n : Long, x : Long, y : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(xOrY((7l), (34l),\
  \ (12l)) == (34l));\n    assert(xOrY((15l), (8l), (5l)) == (5l));\n    assert(xOrY((3l),\
  \ (33l), (5212l)) == (33l));\n    assert(xOrY((1259l), (3l), (52l)) == (3l));\n\
  \    assert(xOrY((7919l), (-1l), (12l)) == (-1l));\n    assert(xOrY((3609l), (1245l),\
  \ (583l)) == (583l));\n    assert(xOrY((91l), (56l), (129l)) == (129l));\n    assert(xOrY((6l),\
  \ (34l), (1234l)) == (1234l));\n    assert(xOrY((1l), (2l), (0l)) == (0l));\n  \
  \  assert(xOrY((2l), (2l), (0l)) == (2l));\n    }\n\n}\n"
completions: ['      if (isPrime(n)) x else y', "        if (n < 3) {\n          \
    \  return x\n        }\n        if (n % 2 == 0) {\n            return y\n    \
    \    }\n        val max = sqrt(n).toLong\n        for (i <- Range(3, max, 2))\
    \ {\n            if (n % i == 0) {\n                return y\n            }\n\
    \        }\n        return x", '        if (isPrime(n)) x else y', '        if
    (isPrime(n)) x else y', "        val isPrime = (n : Long) => {\n            if\
    \ (n < 2) false\n            else (2 to ceil(sqrt(n)).toInt).forall(n % _ != 0)\n\
    \        }\n        if (isPrime(n)) x else y", "        if (n == 2l) {\n     \
    \       return x\n        }\n        if (n == 3l) {\n            return x\n  \
    \      }\n        if (n == 5l) {\n            return x\n        }\n        if\
    \ (n == 7l) {\n            return x\n        }\n        if (n == 11l) {\n    \
    \        return x\n        }\n        if (n == 13l) {\n            return x\n\
    \        }\n        if (n == 17l) {\n            return x\n        }\n       \
    \ if (n == 19l) {\n            return x\n        }\n        if (n == 23l) {\n\
    \            return x\n        }\n        if (n == 29l) {\n            return\
    \ x\n        }\n        if (n == 31l) {\n            return x\n        }\n   \
    \     if (n == 37l) {\n            return x\n        }\n        if (n == 41l)\
    \ {\n            return x\n        }\n        if (n == 43l) {\n            return\
    \ x\n        }\n        if (n == 47l) {\n            return x\n        }\n   \
    \     if (n == 53l) {\n            return x\n        }\n        if (n == 59l)\
    \ {\n            return x\n        }\n        if (n == 61l) {\n            return\
    \ x\n        }\n        if (n == 67l) {\n            return x\n        }\n   \
    \     if (n == 71l) {\n            return x\n        }\n        if (n == 73l)\
    \ {\n            return x\n        }\n        if (n == 79l) {\n            return\
    \ x\n        }\n        if (n == 83l) {\n            return x\n        }\n   \
    \     if (n == 89l) {\n            return x\n        }\n        if (n == 97l)\
    \ {\n            return x\n        }\n        return y", "        if (isPrime(n))\
    \ {\n            x\n        } else {\n            y\n        }", "        (n,\
    \ x, y) match {\n            case (n, x, y) if n % 2 == 0 => y\n            case\
    \ (n, x, y) if n % 3 == 0 => y\n            case (n, x, y) if n % 5 == 0 => y\n\
    \            case (n, x, y) if n % 7 == 0 => y\n            case (n, x, y) if\
    \ n % 11 == 0 => y\n            case (n, x, y) if n % 13 == 0 => y\n         \
    \   case (n, x, y) if n % 17 == 0 => y\n            case (n, x, y) if n % 19 ==\
    \ 0 => y\n            case (n, x, y) if n % 23 == 0 => y\n            case (n,\
    \ x, y) if n % 29 == 0 => y\n            case (n, x, y) if n % 31 == 0 => y\n\
    \            case (n, x, y) if n % 37 == 0 => y\n            case (n, x, y) if\
    \ n % 41 == 0 => y\n            case (n, x, y) if n % 43 == 0 => y\n         \
    \   case (n, x, y) if n % 47 == 0 => y\n            case (n, x, y) if n % 53 ==\
    \ 0 => y\n            case (n, x, y) if n % 59 == 0 => y\n            case (n,\
    \ x, y) if n % 61 == 0 => y\n            case (n, x, y) if n % 67 == 0 => y\n\
    \            case (n, x, y) if n % 71 == 0 => y\n            case (n, x, y) if\
    \ n % 73 == 0 => y\n            case (n, x, y) if n % 79 == 0 => y\n         \
    \   case (n, x, y) if n % 83 == 0 => y\n            case (n, x, y) if n % 89 ==\
    \ 0 => y\n            case (n, x, y) if n % 97 == 0 => y\n            case (n,\
    \ x, y) if n % 101 == 0 => y\n            case (n, x, y) if n % 103 == 0 => y\n\
    \            case (n, x, y) if n % 107 ==", "        if (n == 2) {\n         \
    \   return x\n        }\n        if (n <= 1) {\n            return y\n       \
    \ }\n        if (n % 2 == 0) {\n            return y\n        }\n        var c\
    \ = 3\n        while (c <= (floor(sqrt(n)).toLong)) {\n            if (n % c ==\
    \ 0) {\n                return y\n            }\n            c = c + 2\n     \
    \   }\n        return x", "        if(primeQ(n))\n            x\n        else\n\
    \            y", "        if (n == 1) y\n        else if (n == 2) x\n        else\
    \ {\n            var i = 2\n            while (i < n) {\n                if (n\
    \ % i == 0) return y\n                i += 1\n            }\n            x\n \
    \       }", "        if (isPrime(n)) {\n            x\n        } else {\n    \
    \        y\n        }", "        if (isPrime(n))\n            x\n        else\n\
    \            y", '        if (bigInt(n).isProbablePrime(1)) x else y', "     \
    \   val a = n % 2 == 0\n        if (a) {\n            y\n        } else {\n  \
    \          x\n        }", '        if (Helper.isPrime(n)) x else y', "       \
    \ if (isPrime(n))\n            x\n        else\n            y", "        require(n\
    \ % 2 != 0)\n        val nSqrt = sqrt(n).toLong\n        var i = 2l\n        while\
    \ (i <= nSqrt) {\n            if (n % i == 0) return y\n            i += 1\n \
    \       }\n        x", "        if(n % 2 == 0) {\n            y\n        } else\
    \ {\n            x\n        }", "        var isPrime = true\n        var i = 2l\n\
    \        while (i <= n/2) {\n            if (n % i == 0) {\n                isPrime\
    \ = false\n            }\n            i += 1\n        }\n        if (isPrime)\
    \ {\n            return x\n        } else {\n            return y\n        }",
  '        if (isPrime(n)) x else y', '        if (isPrime(n)) x else y', '        if
    (isPrime(n)) x else y', '        if(util.Primes.isPrime(n)) x else y', '        if
    (isPrime(n)) x else y', "        /*def isPrime(n : Long) : Boolean = {\n     \
    \       def isPrimeIter(i : Long) : Boolean = {\n                if (i <= 1) return\
    \ true\n                else if (n % i == 0) return false\n                else\
    \ return isPrimeIter(i - 1)\n            }\n            isPrimeIter(floor(sqrt(n)).toLong)\n\
    \        }\n        if (isPrime(n)) x else y*/\n        if (n % 2 == 0) y else\
    \ x", "        def isPrime(n : Long) : Boolean = {\n            if (n <= 1) return\
    \ false\n            if (n == 2) return true\n            if (n % 2 == 0) return\
    \ false\n            val root = sqrt(n).toLong\n            var i = 3l\n     \
    \       while (i <= root) {\n                if (n % i == 0) return false\n  \
    \              i += 2\n            }\n            return true\n        }\n   \
    \     if (isPrime(n)) x else y", '        if (isPrime(n)) x else y', '        if
    (BigInt(n).isProbablePrime(100)) x else y', '        if (n.isPrime) x else y',
  "        if (n < 2) return y\n        for (i <- 2l to sqrt(n).toLong) {\n      \
    \      if (n % i == 0) return y\n        }\n        return x", "        var return_var\
    \ : Long = 0l\n        if (isPrime(n)) {\n            return_var = x\n       \
    \ } else {\n            return_var = y\n        }\n        return return_var",
  "        if (isPrime(n)) {\n            x\n        } else {\n            y\n   \
    \     }", "        // not a prime number\n        if (isPrime(n) == 0)\n     \
    \       y\n        else\n            x", "        if (n.isPrime) {\n         \
    \   x\n        } else {\n            y\n        }", "        return n match {\n\
    \            case n if n == 1 => y\n            case n if n == 2 => x\n      \
    \      case n if n % 2 == 0 => y\n            case n => {\n                var\
    \ i = 3l\n                while (i <= sqrt(n)) {\n                    if (n %\
    \ i == 0) return y\n                    i += 2\n                }\n          \
    \      return x\n            }\n        }", '        if (isPrime(n)) x else y',
  "        if (n % 2 == 0) {\n            if (n % 3 == 0)\n                y\n   \
    \         else\n                x\n        } else {\n            if (n % 3 ==\
    \ 0)\n                x\n            else\n                y\n        }", "\t\t\
    def isPrime(n : Long) : Boolean = {\n\t\t\tif (n < 2)\n\t\t\t\treturn false\n\t\
    \t\tvar i = 2l\n\t\t\twhile (i <= sqrt(n)) {\n\t\t\t\tif (n % i == 0)\n\t\t\t\t\
    \treturn false\n\t\t\t\ti += 1\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t\tif (isPrime(n))\n\
    \t\t\treturn x\n\t\treturn y", '        if (isPrime(n)) x else y', "        var\
    \ nVal : BigInt = n\n        if (nVal.isProbablePrime(16))\n            return\
    \ x\n        else\n            return y", "\t\n\t(if(isPrime(n)) x else y)\n",
  "        var r : Long = 0l\n        var found : Boolean = false\n        var i :\
    \ Long = 2l\n        while ((i <= n) && (!found)) {\n            if ((n % i) ==\
    \ 0l) {\n                r = y\n                found = true\n            }\n\
    \            i = i + 1l\n        }\n        if (!found) {\n            r = x\n\
    \        }\n        return r", "        if (n % 2l == 0l) {\n            return\
    \ y\n        }\n        else {\n            if (n % 3l == 0l) {\n            \
    \    return y\n            }\n            else {\n                if (n % 5l ==\
    \ 0l) {\n                    return y\n                }\n                else\
    \ {\n                    if (n % 7l == 0l) {\n                        return y\n\
    \                    }\n                    else {\n                        if\
    \ (n % 11l == 0l) {\n                            return y\n                  \
    \      }\n                        else {\n                            if (n %\
    \ 13l == 0l) {\n                                return y\n                   \
    \         }\n                            else {\n                            \
    \    if (n % 17l == 0l) {\n                                    return y\n    \
    \                            }\n                                else {\n     \
    \                               if (n % 19l == 0l) {\n                       \
    \                 return y\n                                    }\n          \
    \                          else {\n                                        if\
    \ (n % 23l == 0l) {\n                                            return y\n  \
    \                                      }\n                                   \
    \     else {\n                                            if (n % 29l == 0l) {\n\
    \                                                return y\n                  \
    \                          }\n                                            else\
    \ {\n                                                if (n % 31l == 0l) {\n  \
    \                                                  return y\n                \
    \                                }\n                                         \
    \       else {\n                                                    if (n % 37l\
    \ == 0l) {\n                                                        return y\n\
    \                                                    }\n                     \
    \                               else {\n                                     \
    \                   if (n % 41l == 0l) {\n                                   \
    \                         return y\n                                         \
    \               }\n                                                        else\
    \ {\n                                                            if (n % 43l ==\
    \ 0l) {\n                                                                return\
    \ y\n                                                            }\n         \
    \                                                   else {\n                 \
    \                                               if (n % 47l == 0l) {\n       \
    \                                                             return y\n     \
    \                                                           }\n              \
    \                                                  else {\n                  \
    \                                                  if (n % 53l == 0l) {\n    \
    \                                                                    return y\n\
    \                                                                    }\n     \
    \                                                               else {\n     \
    \                                                                   if (n % 59l\
    \ == 0l) {\n                                                                 \
    \           return y\n                                                       \
    \                 }\n                                                        \
    \                else {\n                                                ", " \
    \       (n: @unchecked) match {\n            case 1l => y\n            case 2l\
    \ => x\n            case i if i > 2l => {\n                if (i % 2l == 0l) y\n\
    \                else {\n                    var iter = 3l\n                 \
    \   while (iter <= sqrt(i) && i % iter != 0l) iter += 2l\n                   \
    \ if (iter > sqrt(i)) x\n                    else y\n                }\n     \
    \       }\n        }", "        var r : Long = 0\n        r = y\n        var i\
    \ : Long = 2\n        while (i < n) {\n            if (n % i == 0) {\n       \
    \         r = x\n                i = n\n            }\n            i = i + 1\n\
    \        }\n        return r", "        val r : Boolean = isPrime(n);\n      \
    \  if (r) {\n            return x;\n        } else {\n            return y;\n\
    \        }", "      /* \n      if (n % 2 == 0)\n        y\n      else\n      \
    \  x\n      */\n      var v = 0l\n      var i = 2l\n      while (i < n) {\n  \
    \      if (n % i == 0) {\n          v = y\n          i = n\n        }\n      \
    \  i = i + 1\n      }\n      if (v == 0)\n        v = x\n      v", '        if
    (isPrime(n)) x else y', "        val prime = true\n        if (prime) x else y",
  "        if (n.isProbablePrime(1))\n            x\n        else\n            y",
  '        if(isPrime(n)) x else y', "      if (Prime.isPrime(n))\n        x\n   \
    \   else\n        y", '        return if (isPrime(n)) x else y', "        if(isPrime(n))\
    \ {\n            x\n        } else {\n            y\n        }", '        if (isPrime(n))
    x else y', '        val prime = Array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,
    37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113,
    127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,
    211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,
    307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,
    401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491,
    499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601,
    607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,
    709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821,
    823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929,
    937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,
    1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109,
    1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213,', "  \
    \      @annotation.tailrec\n        def isPrime(n : Long, d : Long) : Boolean\
    \ = {\n            if (d == 1) true\n            else if (n % d == 0) false\n\
    \            else isPrime(n, d - 1)\n        }\n        if (isPrime(n, floor(sqrt(n)).toLong))\
    \ x\n        else y", '        return if (isPrime(n)) x else y', '        if (n
    % 2 == 0) y else x', "        // Check whether n is prime\n        def isPrime(n\
    \ : Long) : Boolean = {\n            if (n <= 1) {\n                false\n  \
    \          } else if (n == 2) {\n                true\n            } else {\n\
    \                !(2L to (floor(sqrt(n)).toLong)).exists(d => n % d == 0)\n  \
    \          }\n        }\n        if (isPrime(n)) {\n            x\n        } else\
    \ {\n            y\n        }", '      if (isPrime(n)) x else y', '        if
    (isPrime(n)) x else y', "        if(isPrime(n)) {\n            x\n        } else\
    \ {\n            y\n        }", '      if (isPrime(n)) x else y', "        if\
    \ (isPrime(n)) {\n            x\n        } else {\n            y\n        }",
  "        var n1 = n\n        var x1 = x\n        var y1 = y\n        var res : Long\
    \ = 0\n        if(n1 > 2l) {\n            var flag : Boolean = true\n        \
    \    for(i <- 2l to (n1 - 1l)) {\n                if(n1 % i == 0l) {\n       \
    \             flag = false\n                }\n            }\n            if(flag)\
    \ {\n                res = x1\n            }\n            else {\n           \
    \     res = y1\n            }\n        }\n        else {\n            res = x1\n\
    \        }\n        return res", "        var num = n;\n        var isPrime =\
    \ true;\n        for (i <- 2l to (sqrt(num).toLong)) {\n            if (num %\
    \ i == 0) {\n                isPrime = false;\n            }\n        }\n    \
    \    if (isPrime) {\n            x\n        } else {\n            y\n        }",
  "        val isPrime : Boolean = Problem.isPrime(n)\n        if (isPrime) {\n  \
    \          x\n        } else {\n            y\n        }", "        val p = new\
    \ Primes()\n        val prime = p.getPrimeFactorization(n)\n        val isPrime\
    \ = prime.size == 1 && prime.head._1 == n\n        if (isPrime) x else y", " \
    \     if (n == 2) x\n      else if (n % 2 == 0) y\n      else {\n        var i\
    \ = 3\n        var f = true\n        while (i <= sqrt(n).toInt && f) {\n     \
    \     if (n % i == 0) f = false\n          i += 2\n        }\n        if (f) x\
    \ else y\n      }", '        if (isPrime(n)) x else y', "        if (n < 2) y\n\
    \        else if (n % 2 == 0) y\n        else {\n            var i = 3\n     \
    \       var sqrt = sqrt(n).toInt\n            while (i <= sqrt) {\n          \
    \      if (n % i == 0) return y\n                i += 2\n            }\n     \
    \       x\n        }", "        var n1 : Long = n;\n        var d : Long = 2l;\n\
    \        var m : Long = n1 / d;\n        while (m * d != n1) {\n            {\n\
    \                d = d + 1l;\n                m = n1 / d\n            }\n    \
    \    };\n        if (m * d == n1) {\n            return x\n        } else {\n\
    \            return y\n        }", "        if(isPrime(n))\n            x\n  \
    \      else\n            y", "        if (isPrime(n)) {\n            x\n     \
    \   } else {\n            y\n        }", "        (n: @switch) match {\n     \
    \       case 0L => y\n            case 1L => y\n            case 2L => x\n   \
    \         case 3L => x\n            case 4L => y\n            case 5L => x\n \
    \           case 6L => y\n            case 7L => x\n            case 8L => y\n\
    \            case 9L => y\n            case 10L => y\n            case 11L =>\
    \ x\n            case 12L => y\n            case 13L => x\n            case 14L\
    \ => y\n            case 15L => y\n            case 16L => y\n            case\
    \ 17L => x\n            case 18L => y\n            case 19L => x\n           \
    \ case 20L => y\n            case 21L => y\n            case 22L => y\n      \
    \      case 23L => x\n            case 24L => y\n            case 25L => y\n \
    \           case 26L => y\n            case 27L => y\n            case 28L =>\
    \ y\n            case 29L => x\n            case 30L => y\n            case 31L\
    \ => x\n            case 32L => y\n            case 33L => y\n            case\
    \ 34L => y\n            case 35L => y\n            case 36L => y\n           \
    \ case 37L => x\n            case 38L => y\n            case 39L => y\n      \
    \      case 40L => y\n            case 41L => x\n            case 42L => y\n \
    \           case 43L => x\n            case 44L => y\n            case 45L =>\
    \ y\n            case 46L => y\n            case 47L => x\n            case 48L\
    \ => y\n            case 49L => y\n            case 50L => y\n            case\
    \ 51L => y\n            case 52L => y\n            case 53L => x\n           \
    \ case 54L => y\n            case 55L => y\n            case 56L => y\n      \
    \      case 57L => y\n            case 58L => y\n            case 59L => x\n \
    \           case 60L => y\n            case 61L => x\n            case 62L =>\
    \ y\n            case 63L => y\n            case 64L => y\n            case 65L\
    \ => y\n            case 66L => y\n            case 67L => x\n            case\
    \ 68L => y\n            case 69L => y\n            case 70L => y\n           \
    \ case 71L", "        var ret : Long = 0l\n        if (n == 0) {\n           \
    \ ret = 0l\n        } else if (n == 1) {\n            ret = 1l\n        } else\
    \ {\n            var i : Long = 2l\n            var tf : Boolean = true\n    \
    \        while (i < n) {\n                var isDivisible : Boolean = n % i ==\
    \ 0\n                tf = tf && (!(isDivisible))\n                i = i + 1l\n\
    \            }\n            if (tf) {\n                ret = x\n            }\
    \ else {\n                ret = y\n            }\n        }\n        ret", " \
    \       if (n.isPrime)\n            x\n        else\n            y", '        if
    (isPrime(n)) x else y', '        if (isPrime(n)) x else y', "        var ret =\
    \ 0l\n        var i = 2l\n        while(i < n) {\n            if (n % i == 0)\
    \ {\n                ret = y\n                return ret\n            }\n    \
    \        i = i + 1\n        }\n        ret = x\n        return ret", "       \
    \ if (n <= 2)\n            return y\n        val sq = ceil(sqrt(n)).toLong\n \
    \       for (i <- 2l to sq) {\n            if (n % i == 0)\n                return\
    \ y\n        }\n        return x", '        if (isPrime(n)) x else y', "     \
    \   if (isPrime(n))\n            x\n        else\n            y", "        //\
    \ Insert code here\n        var i = 2L\n        while (i < n) {\n            if\
    \ (n % i == 0) {\n                return y\n            }\n            i += 1\n\
    \        }\n        return x", '        if (n % 2 == 0) y else x', "        val\
    \ primeNumbers : List[Long] = (1l to n).filter(isPrime).toList\n        if (primeNumbers.exists(p\
    \ => p == n))\n            x\n        else\n            y", "        var isPrime\
    \ = true\n        if (n == 1) {\n            isPrime = false\n        }\n    \
    \    else {\n            var i = 2\n            while (i <= sqrt(n) && isPrime)\
    \ {\n                if (n % i == 0) {\n                    isPrime = false\n\
    \                }\n                i = i + 1\n            }\n        }\n    \
    \    if (isPrime) {\n            x\n        }\n        else {\n            y\n\
    \        }", '        if (isPrime(n)) x else y', "        primeCheck(n) match\
    \ {\n            case true => return x\n            case false => return y\n \
    \       }", "        if(isPrime(n)) {\n            x\n        } else {\n     \
    \       y\n        }", '        if (Problem.isPrime(n)) x else y', '        if
    (isPrime(n)) x else y', "        var sum:Long = 0l\n        var i:Long = 1l\n\
    \        while (i <= sqrt(n)) {\n            if (n % i == 0) {\n             \
    \   sum += i\n                if (i != n / i) sum += n / i\n            }\n  \
    \          i += 1\n        }\n        if (sum == 1) x else y", "        if (n\
    \ > 1) {\n            if (isPrime(n)) x else y\n        } else {\n           \
    \ y\n        }", "        var res : Long = 0;\n        if (isPrime(n)) {\n   \
    \         res = x;\n        } else {\n            res = y;\n        }\n      \
    \  return res;", "        if (n <= 1) y else {\n            val sqrtN = sqrt(n)\n\
    \            var i = 2\n            while (i <= sqrtN) {\n                if (n\
    \ % i == 0) return y\n                i += 1\n            }\n            x\n \
    \       }", "        // Define an auxiliary function\n        def isPrime(num\
    \ : Long) : Boolean = {\n            if (num < 2) return false\n            if\
    \ (num == 2) return true\n            if (num % 2 == 0) return false\n       \
    \     var i = 3\n            while (i <= sqrt(num).toInt) {\n                if\
    \ (num % i == 0) return false\n                i += 2\n            }\n       \
    \     return true\n        }\n        if (isPrime(n)) x else y", '        if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if (if
    (if (if (if (if (if (if (if (if (if (if (if (if (if (', '        if (prime(n))
    x else y', "        if(!(1l until n).exists(x => n % x == 0)) { x }\n        else\
    \ { y }", "        if (n < 2) return y\n        for (i <- Range(2, n.toInt)) {\n\
    \            if (n % i == 0) return y\n        }\n        return x", "       \
    \ if (n < 2) throw new Exception(\"Not a prime number.\")\n        var isPrime\
    \ = true\n        for (i <- 2l to sqrt(n).toLong) {\n            if (n % i ==\
    \ 0) {\n                isPrime = false\n                return y\n          \
    \  }\n        }\n        if (isPrime) x else y", "        if (n < 2) y\n     \
    \   else if (n == 2) x\n        else {\n            var i = 2\n            while\
    \ (i <= sqrt(n).toInt) {\n                if (n % i == 0) {\n                \
    \    return y\n                }\n                i += 1\n            }\n    \
    \        x\n        }", "\tif (isPrime(n)) x else y", "        if (isPrime(n))\
    \ {\n            x\n        } else {\n            y\n        }", "        if (isPrime(n))\n\
    \            x\n        else\n            y", '        if(n%2 == 0 || n%3 == 0
    || n%5 == 0 || n%7 == 0 || n%11 == 0 || n%13 == 0 || n%17 == 0 || n%19 == 0 ||
    n%23 == 0 || n%29 == 0 || n%31 == 0 || n%37 == 0 || n%41 == 0 || n%43 == 0 ||
    n%47 == 0 || n%53 == 0 || n%59 == 0 || n%61 == 0 || n%67 == 0 || n%71 == 0 ||
    n%73 == 0 || n%79 == 0 || n%83 == 0 || n%89 == 0 || n%97 == 0 || n%101 == 0 ||
    n%103 == 0 || n%107 == 0 || n%109 == 0 || n%113 == 0 || n%127 == 0 || n%131 ==
    0 || n%137 == 0 || n%139 == 0 || n%149 == 0 || n%151 == 0 || n%157 == 0 || n%163
    == 0 || n%167 == 0 || n%173 == 0 || n%179 == 0 || n%181 == 0 || n%191 == 0 ||
    n%193 == 0 || n%197 == 0 || n%199 == 0 || n%211 == 0 || n%223 == 0 || n%227 ==
    0 || n%229 == 0 || n%233 == 0 || n%239 == 0 || n%241 == 0 || n%251 == 0 || n%257
    == 0 || n%263 == 0 || n%269 == 0 || n%271 == 0 || n%277 == 0 || n%281 == 0 ||
    n%283 == 0 || n%293 == 0 || n%307 == 0 || n%311 == 0 || n%313 == 0 || n%317 ==
    0 || n%331 == 0 || n%337 == 0 || n%347 == 0 || n%349 == 0 || n%353 == 0 || n%359
    == 0 || n%367 == 0 || n%373 == 0 || n%379 == 0 || n%383 == 0 || n%389 == 0 ||
    n%397 == 0 || n%401 == 0 || n%409 == 0 || n%419 == 0 || n%421 == 0 || n%431 ==
    0 || n%433 == 0 || n%439 ==', "        n match {\n            case n if (n < 2)\
    \ => y\n            case n if (n == 2) => x\n            case n if (n % 2 == 0)\
    \ => y\n            case n => {\n                for (i <- 3 to sqrt(n).toInt\
    \ by 2) {\n                    if (n % i == 0) return y\n                }\n \
    \               x\n            }\n        }", "        if (isPrime(n)) return\
    \ x\n        return y", "        // \n        // If n is prime, the value of x\
    \ should be returned.\n        // \n        // If n is not prime, the value of\
    \ y should be returned.\n        // \n        // To check whether n is prime,\
    \ you can first check whether it is\n        // divisible by 2.\n        // \n\
    \        // Then you can check whether it is divisible by 3.\n        // \n  \
    \      // After that, you can check whether it is divisible by 4, by 5, etc.\n\
    \        // \n        // You can do this by using the modulo operator: n % 3.\n\
    \        // \n        // If n is divisible by 3, then n % 3 will be equal to 0.\n\
    \        // \n        // If n is not divisible by 3, then n % 3 will be different\
    \ than 0.\n        // \n        // You can use the modulo operator for all numbers\
    \ from 2 up to and\n        // including sqrt(n).\n        // \n        // If\
    \ n is prime, then no number from 2 up to and including sqrt(n) \n        // will\
    \ divide it, so n % 2 will be different than 0, n % 3 will be\n        // different\
    \ than 0, n % 4 will be different than 0, n % 5 will be\n        // different\
    \ than 0, etc.\n        // \n        // If n is not prime, then some number from\
    \ 2 up to and including\n        // sqrt(n) will divide it, so n % 2 will be equal\
    \ to 0, or n % 3 will\n        // be equal to 0, or n % 4 will be equal to 0,\
    \ or n % 5 will be equal\n        // to 0, etc.\n        // \n        // To find\
    \ the square root of n, you can use the sqrt() function, e.g.\n        // sqrt(n).\n\
    \        // \n        // For example, the square root of 9 is 3, and the square\
    \ root of 16\n        // is 4.\n        // \n        var isPrime = true\n    \
    \    for (divisor <- 2L to sqrt(n).toLong) {\n            if (n % divisor == 0)\
    \ {\n                isPrime = false\n            }\n        }\n        if (isPrime)\
    \ {\n           ", "        if (n <= 1) {\n            y\n        } else {\n \
    \           var isPrime = true\n            for (d <- 2l to n - 1) {\n       \
    \         if (n % d == 0) {\n                    isPrime = false\n           \
    \     }\n            }\n            if (isPrime) {\n                x\n      \
    \      } else {\n                y\n            }\n        }", '        if (isPrime(n))
    x else y', "        if (n <= 1l) {\n            y\n        } else {\n        \
    \    val prime = new Prime()\n            if (prime.isPrime(n)) {\n          \
    \      x\n            } else {\n                y\n            }\n        }",
  '        if (Helper.isPrime(n)) x else y', "        // Your code here\n        val\
    \ res = if (isPrime(n)) x else y\n        res", "        if (isPrime(n)) {\n \
    \           x\n        } else {\n            y\n        }", '      if (n%2 ==
    0) y else x', "        (n % 2 == 0) match {\n            case false => x\n   \
    \         case true => y\n        }", "        if (n < 2) return y\n        for\
    \ (i <- 2l to n-1) if (n % i == 0) return y\n        return x", '        if (isPrime(n))
    x else y', "        if (n < 2) throw new Exception(\"\" + n + \" is an invalid\
    \ input. Input should be >= 2.\")\n        val ceiling = ceil(sqrt(n)).toLong\n\
    \        for (i <- 2l to ceiling) {\n            if (n % i == 0) {\n         \
    \       return y\n            }\n        }\n        return x", "        if (n\
    \ < 2) {\n            y\n        } else {\n            val list = List.range(2,\
    \ (n.toInt + 1))\n            val isPrime = !list.exists(i => (n % i) == 0)\n\
    \            if (isPrime) {\n                x\n            } else {\n       \
    \         y\n            }\n        }", "        if (n % 2 == 0)\n           \
    \ y\n        else\n            x", '        (n % 2 == 0 || n % 3 == 0 || n % 5
    == 0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0
    || n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 ||
    n % 43 == 0 || n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n %
    67 == 0 || n % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89
    == 0 || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109
    == 0 || n % 113 == 0 || n % 127 == 0 || n % 131 == 0 || n % 137 == 0 || n % 139
    == 0 || n % 149 == 0 || n % 151 == 0 || n % 157 == 0 || n % 163 == 0 || n % 167
    == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 191 == 0 || n % 193
    == 0 || n % 197 == 0 || n % 199 == 0 || n % 211 == 0 || n % 223 == 0 || n % 227
    == 0 || n % 229 == 0 || n % 233 == 0 || n % 239 == 0 || n % 241 == 0 || n % 251
    == 0 || n % 257 == 0 || n % 263 == 0 || n % 269 == 0 || n % 271 == 0 || n % 277
    == 0 || n % 281 == 0 || n % 283 == 0 || n % 293 == 0 || n % 307 == 0 || n % 311
    == 0 || n % 313 == 0 || n % 317 == 0 || n % 331 == 0 || n % 337 == 0 || n % 347
    == 0 || n % 349 == 0 || n % 353 == 0 || n % 359 == 0 || n % 367 == 0 || n % 373
    == 0 || n % 379 == 0 || n % 383 == 0 || n % 389 == 0 || n % 397 == 0 || n % 401
    == 0 || n % 409 == 0 || n % 419 == 0 || n % 421 == 0 || n % 431 == 0 || n % 433
    == 0 || n % 4', "        if (n == 2l) {\n            return x\n        }\n   \
    \     var i : Long = 2l\n        var limit : Long = n / 2l\n        while (i <=\
    \ limit) {\n            if (n % i == 0l) {\n                return y\n       \
    \     }\n            i = i + 1l\n        }\n        return x", "        var result\
    \ : Long = 0l\n        // TODO: Fix this!\n        result = 0l\n        return\
    \ result", "        if (n <= 1l) y\n        else if (n % 2l == 0l) y\n       \
    \ else {\n            var i = 3l\n            while (i <= sqrt(n.toDouble)) {\n\
    \                if (n % i == 0l) return y\n                i += 2l\n        \
    \    }\n            x\n        }", '        return if (n == 2l || n == 3l || n
    == 5l || n == 7l || n == 11l || n == 13l || n == 17l || n == 19l || n == 23l ||
    n == 29l || n == 31l || n == 37l || n == 41l || n == 43l || n == 47l || n == 53l
    || n == 59l || n == 61l || n == 67l || n == 71l || n == 73l || n == 79l || n ==
    83l || n == 89l || n == 97l || n == 101l || n == 103l || n == 107l || n == 109l
    || n == 113l || n == 127l || n == 131l || n == 137l || n == 139l || n == 149l
    || n == 151l || n == 157l || n == 163l || n == 167l || n == 173l || n == 179l
    || n == 181l || n == 191l || n == 193l || n == 197l || n == 199l || n == 211l
    || n == 223l || n == 227l || n == 229l || n == 233l || n == 239l || n == 241l
    || n == 251l || n == 257l || n == 263l || n == 269l || n == 271l || n == 277l
    || n == 281l || n == 283l || n == 293l || n == 307l || n == 311l || n == 313l
    || n == 317l || n == 331l || n == 337l || n == 347l || n == 349l || n == 353l
    || n == 359l || n == 367l || n == 373l || n == 379l || n == 383l || n == 389l
    || n == 397l || n == 401l || n == 409l || n == 419l || n == 421l || n == 431l
    || n == 433l || n == 439l || n == 443l || n == 449l || n == 457l || n == 461l
    || n == 463l || n == 467l || n == 479l || n == 487l || n == 491l || n == 499l
    || n == 503l || n == 509l || n == 521l || n == 523l', '      if (isPrime(n)) x
    else y', '        if (isPrime(n)) x else y', "        // Returns the value of\
    \ x if n is a prime number\n        // and returns the value of y otherwise.\n\
    \        if (isPrime(n)) {\n            x\n        } else {\n            y\n \
    \       }", "        if (isPrime(n))\n            x\n        else\n          \
    \  y", '        if (isPrime(n)) x else y', "        if (isPrime(n))\n        \
    \    x\n        else\n            y", '        if (isPrime(n)) x else y', "  \
    \      var count = 0\n        for (i <- 2 to (n - 1))\n            if (n % i ==\
    \ 0)\n                count += 1\n        if (count == 0)\n            x\n   \
    \     else\n            y", "        if(isPrime(n)) {\n            x\n       \
    \ } else {\n            y\n        }", "        if (n % 2 == 0 || n % 3 == 0 ||\
    \ n % 5 == 0 || n % 7 == 0) {\n            return y\n        }\n        return\
    \ x", "        var r = n\n        var ret = y\n        while (r != 1) {\n    \
    \        val s = r\n            var i = 2\n            while (i <= s) {\n    \
    \            if (r % i == 0) {\n                    r = r / i\n              \
    \      if (i != s) {\n                        ret = y\n                      \
    \  return ret\n                    }\n                }\n                i = i\
    \ + 1\n            }\n        }\n        ret = x\n        return ret", '        if
    (isPrime(n)) x else y', "        var sum : Long = 0l\n        var i : Long = 2l\n\
    \        while(i <= n / 2) {\n            if(n % i == 0) {\n                sum\
    \ = sum + i\n            }\n            i = i + 1\n        }\n        if(sum >\
    \ 0) {\n            return y\n        }\n        else {\n            return x\n\
    \        }", '        return if (isPrime(n)) x else y', "        if (n.isPrime)\n\
    \            x\n        else\n            y", "        var z : Long = 0\n    \
    \    z = x\n        if (n <= 1) {\n            z = y\n        }\n        if (n\
    \ == 2) {\n            z = x\n        }\n        var i : Long = 2\n        while\
    \ (i < n) {\n            if (n % i == 0) {\n                z = y\n          \
    \  }\n            i = i + 1\n        }\n        return z", '        if (n < 2)
    y else if (2 to sqrt(n).toInt).exists(i => n % i == 0) y else x', "        if\
    \ (n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0) y\n        else x", '        (if
    (n < 2) y else if ((2 until n).forall(n % _ != 0)) x else y)', '        if (n
    > 1 && List.range(2, n.toInt).forall(n % _ != 0)) x else y', "        if (isPrime(n))\n\
    \            x\n        else\n            y", '        if (isPrime(n)) x else
    y', "        if (n < 2) {\n            y\n        } else {\n            var i\
    \ = 2l\n            while (i <= sqrt(n)) {\n                if (n % i == 0) {\n\
    \                    return y\n                }\n                i += 1\n   \
    \         }\n            x\n        }", "        var res : Long = y;\n       \
    \ var cnt : Long = 2;\n        var lim : Long = sqrt(n);\n        while (cnt <=\
    \ lim) {\n            if (n % cnt == 0) {\n                res = x;\n        \
    \        cnt = lim + 1;\n            }\n            cnt = cnt + 1;\n        }\n\
    \        return res;", '        ???', "        var z : Long = 0\n        z = if\
    \ (isPrime(n)) x else y\n        return z", "        def or(n : Long, x : Long,\
    \ y : Long) : Long = {\n            if (x == 0l) y\n            else if (y ==\
    \ 0l) x\n            else (or(n, x - 1l, y - 1l) * n + or(n, x - 1l, y) * n +\
    \ or(n, x, y - 1l)) % n\n        }\n        or(n, x, y)", "        if (n.isPrime)\n\
    \            x\n        else\n            y", "        val a = new Z(n)\n    \
    \    if (a.isProbablePrime(100)) x else y", '        if (isPrime(n)) x else y',
  '        if (isPrime(n)) x else y', '        if (isPrime(n)) x else y', "      \
    \  var i = 2l\n        while (i <= sqrt(n)) {\n            if (n % i == 0) return\
    \ y\n            i += 1\n        }\n        return x", "        if (n.isProbablePrime(30))\n\
    \            x\n        else\n            y", "        if (n == 2) x\n       \
    \ else if (n % 2 == 0) y\n        else if (BigInt(n).isProbablePrime(n)) x\n \
    \       else y", "        if (n == 3) {\n            x\n        } else {\n   \
    \         y\n        }", '        if (isPrime(n)) x else y', "        if (Problem.isPrime(n))\n\
    \            x\n        else\n            y", '        if(n.isPrime) x else y',
  '        return 0', "        // TODO\n        return 42l;", "        var prime =\
    \ true\n        for (i <- 2 to sqrt(n).toInt) {\n            if (n % i == 0) {\n\
    \                prime = false\n            }\n        }\n        if (prime) x\
    \ else y", '        if (isPrime(n)) x else y', "        val flag: Boolean = (n\
    \ & 1) == 0\n        flag match {\n            case true => y\n            case\
    \ false => {\n                var n_temp: Double = n\n                var sqrt_n:\
    \ Double = sqrt(n_temp)\n                var i: Long = 3\n                var\
    \ flag: Boolean = true\n                while (i <= sqrt_n) {\n              \
    \      n_temp = n % i\n                    if (n_temp == 0) {\n              \
    \          flag = false\n                        i = sqrt_n + 1\n            \
    \        }\n                    i = i + 2\n                }\n               \
    \ flag match {\n                    case true => x\n                    case false\
    \ => y\n                }\n            }\n        }", "        var prime = true\n\
    \        for (i <- 2l to sqrt(n).toLong) {\n            if (n % i == 0) {\n  \
    \              prime = false\n            }\n        }\n        if (prime) x else\
    \ y", '        if(n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0) y else
    x', '        {if (n.isPrime) x else y}', "        if (isPrime(n)) {\n        \
    \    x\n        } else {\n            y\n        }", "        if (n % 2 == 0)\n\
    \            return y\n        else\n            return x", "        if (n ==\
    \ 2l) {\n            x\n        } else {\n            var i : Long = 0l\n    \
    \        var flag : Boolean = false\n            val limit : Long = sqrt(n).toLong\n\
    \            for (i <- 2l to limit) {\n                if (n % i == 0l) {\n  \
    \                  flag = true\n                    return y\n               \
    \ }\n            }\n            if (flag == false) {\n                return x\n\
    \            }\n            return 0l\n        }", '        y', "        // List\
    \ of primes\n        val primes : ArrayBuffer[Long] = ArrayBuffer(2l, 3l, 5l,\
    \ 7l, 11l, 13l, 17l, 19l, 23l, 29l, 31l, 37l, 41l, 43l, 47l, 53l, 59l, 61l, 67l,\
    \ 71l, 73l, 79l, 83l, 89l, 97l, 101l, 103l, 107l, 109l, 113l, 127l, 131l, 137l,\
    \ 139l, 149l, 151l, 157l, 163l, 167l, 173l, 179l, 181l, 191l, 193l, 197l, 199l,\
    \ 211l, 223l, 227l, 229l, 233l, 239l, 241l, 251l, 257l, 263l, 269l, 271l, 277l,\
    \ 281l, 283l, 293l, 307l, 311l, 313l, 317l, 331l, 337l, 347l, 349l, 353l, 359l,\
    \ 367l, 373l, 379l, 383l, 389l, 397l, 401l, 409l, 419l, 421l, 431l, 433l, 439l,\
    \ 443l, 449l, 457l, 461l, 463l, 467l, 479l, 487l, 491l, 499l, 503l, 509l, 521l,\
    \ 523l, 541l, 547l, 557l, 563l, 569l, 571l, 577l, 587l, 593l, 599l, 601l, 607l,\
    \ 613l, 617l, 619l, 631l, 641l, 643l, 647l, 653l, 659l, 661l, 673l, 677l, 683l,\
    \ 691l, 701l, 709l, 719l, 727l, 733l, 739l, 743l, 751l, 757l, 761l, 769l, 773l,\
    \ 787l, 797l, 809l, 811l, 821l, 823l, 827l, 829", '        if (n == 2) y else
    x', '        if (isPrime(n)) x else y', "        var i = 2l\n        while (i\
    \ <= sqrt(n)) {\n            if (n % i == 0) return y\n            i += 1\n  \
    \      }\n        return x", "        n match {\n            case 2 => x\n   \
    \         case n if n == 2 => x\n            case n if n % 2 == 0 => y\n     \
    \       case n =>\n                var m = n / 2\n                while (m % 2\
    \ == 0) {\n                    m = m / 2\n                }\n                if\
    \ (m == 1) {\n                    x\n                } else {\n              \
    \      y\n                }\n        }", "        def isPrime(n : Long) : Boolean\
    \ = {\n            if (n < 2) return false\n            if (n == 2) return true\n\
    \            if (n % 2 == 0) return false\n            for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n                if (n % i == 0) return false\n            }\n     \
    \       return true\n        }\n        if (isPrime(n)) x else y", "        var\
    \ counter = n - 1\n        while (counter > 1) {\n            if (n % counter\
    \ == 0) return y\n            counter -= 1\n        }\n        return x", "  \
    \      // REPLACE THIS LINE WITH YOUR CODE\n        var isPrime = true\n     \
    \   for (i <- 2 to math.sqrt(n).toInt if isPrime) {\n            if (n % i ==\
    \ 0) isPrime = false\n        }\n        if (isPrime) x else y", "        val\
    \ isPrime : Boolean = BigInt(n).isProbablePrime(100)\n        if (isPrime)\n \
    \           x\n        else\n            y", "        val isprime = isPrime(n)\n\
    \        if (isprime) x else y", "        // Remove this line and use this method\
    \ like a proper black box\n        {\n            var store = new Store(HashMap((0l,\
    \ 0l)))\n            def f(n : Long) : Long = {\n                {\n         \
    \           var cond = (n % 2l) == 0l\n                    var b1 = (n - 1l)\n\
    \                    var b2 = f(b1)\n                    var c1 = (if (cond) (b2)\
    \ else (b2))\n                    var c2 = (if (cond) (y) else (x))\n        \
    \            (if (cond) (c1) else (c2))\n                }\n            }\n  \
    \          f(n)\n        }", "        if (Problem.isPrime(n)) {\n            x\n\
    \        } else {\n            y\n        }", "        if (scala.math.BigInt(n).isProbablePrime(100))\
    \ {\n            x\n        } else {\n            y\n        }", '        if (isPrime(n))
    x else y', "        // Simple primality test using a modified sieve of Eratosthenes\n\
    \        val prime = Array.fill(10001)(true)\n        for (i <- 2 to 100) {\n\
    \            if (prime(i)) {\n                var k = i * i\n                while\
    \ (k <= 10000) {\n                    prime(k) = false\n                    k\
    \ += i\n                }\n            }\n        }\n        // Check if number\
    \ is prime or not\n        if (prime(n.toInt)) x else y", "        val r = math.sqrt(n).toLong\n\
    \        def isPrime(n : Long) : Boolean = {\n            if (n == 1) return false\n\
    \            if (n == 2) return true\n            for (i <- 2l to r) {\n     \
    \           if (n % i == 0) return false\n            }\n            return true\n\
    \        }\n        if (isPrime(n)) {\n            return x\n        } else {\n\
    \            return y\n        }", "        if (n == 2) return x\n        if (n\
    \ % 2 == 0) return y\n        var i = 3\n        while (i <= sqrt(n).toInt) {\n\
    \            if (n % i == 0) return y\n            i += 2\n        }\n       \
    \ return x", "        if (n < 2) return y\n        for (i <- 2l to (floor(sqrt(n)).toLong))\
    \ if (n % i == 0) return y\n        return x", "        if(isPrime(n)) {\n   \
    \         x\n        } else {\n            y\n        }"]
stop_tokens:
- "\n    }\n"

name: HumanEval_92_any_int
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that takes 3 numbers.\n    // Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    // Returns false in any other cases.\n    // Examples\n    // >>> anyInt(5l,\
  \ 2l, 7l)\n    // (true)\n    // >>> anyInt(3l, 2l, 2l)\n    // (false)\n    //\
  \ >>> anyInt(3l, -2l, 1l)\n    // (true)\n    // >>> anyInt((3.6f), (-2.2f), 2l)\n\
  \    // (false)\n    def anyInt(x : Float, y : Float, z : Float) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(anyInt(2l, 3l, 1l)\
  \ == (true));\n    assert(anyInt((2.5f), 2l, 3l) == (false));\n    assert(anyInt((1.5f),\
  \ 5l, (3.5f)) == (false));\n    assert(anyInt(2l, 6l, 2l) == (false));\n    assert(anyInt(4l,\
  \ 2l, 2l) == (true));\n    assert(anyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
  \    assert(anyInt(-4l, 6l, 2l) == (true));\n    assert(anyInt(2l, 1l, 1l) == (true));\n\
  \    assert(anyInt(3l, 4l, 7l) == (true));\n    assert(anyInt((3.0f), 4l, 7l) ==\
  \ (false));\n    }\n\n}\n"
completions: ["        // Write code here\n        return false", "        // 2 lines,\
    \ O(1)\n        val sum = x + y + z\n        val min = min(x, min(y, z))\n   \
    \     sum - 2 * min == min", "        if ((x % 1 == 0) && (y % 1 == 0) && (z %\
    \ 1 == 0)) {\n            (x == y + z) || (y == x + z) || (z == x + y)\n     \
    \   } else {\n            false\n        }", '        true', "        val xi =\
    \ math.round(x).toLong\n        val yi = math.round(y).toLong\n        val zi\
    \ = math.round(z).toLong\n        if (math.abs(x - xi) > 0.0001 || math.abs(y\
    \ - yi) > 0.0001 || math.abs(z - zi) > 0.0001) {\n            return false\n \
    \       }\n        return (xi == yi + zi || yi == xi + zi || zi == xi + yi)",
  '        return ((x.isWhole() && y.isWhole() && z.isWhole()) && (x + y == z || x
    + z == y || y + z == x))', '      ((x + y == z) || (x + z == y) || (y + z == x))
    && (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0)', "        if (x == y + z || y\
    \ == x + z || z == x + y)\n            true\n        else\n            false",
  '        return(x == y + z || y == x + z || z == x + y)', '        (x.isWhole &&
    y.isWhole && z.isWhole) && (x+y == z || x+z == y || y+z == x)', "        // Your\
    \ code here\n        var k = false\n        var sum = x + y + z\n        if (sum\
    \ == x || sum == y || sum == z) {\n            if (x % 1 == 0 && y % 1 == 0 &&\
    \ z % 1 == 0) {\n                k = true\n            }\n        }\n        k",
  "        if (x % 1 != 0) return false\n        if (y % 1 != 0) return false\n  \
    \      if (z % 1 != 0) return false\n        return ((x + y == z) || (x + z ==\
    \ y) || (y + z == x))", "        // TODO\n        // Implement the function...\n\
    \        if (x.isValidInt && y.isValidInt && z.isValidInt)\n            return\
    \ x == y + z || y == x + z || z == x + y\n        return false", '      // Code
    goes here', "        // Your code starts here\n        x == y + z || y == x +\
    \ z || z == x + y\n        // Your code ends here", '        throw new UnsupportedOperationException("Not
    implemented")', "        // TODO : Write your own code here\n        return true",
  '        return false', "        val a = x.isWhole\n        val b = y.isWhole\n\
    \        val c = z.isWhole\n        (a || b || c) && (x == y + z || y == x + z\
    \ || z == x + y)", "        if (isInteger(x) && isInteger(y) && isInteger(z))\
    \ {\n            if (x + y == z || x + z == y || y + z == x) return true;\n  \
    \      }\n        return false;", "        def sum(x : Float, y : Float) : Float\
    \ = {\n            x + y\n        }\n        def compare(x : Float, y : Float,\
    \ z : Float) : Boolean = {\n            if(x.isValidInt && y.isValidInt && z.isValidInt)\
    \ {\n                if(x == sum(y, z) || y == sum(x, z) || z == sum(x, y)) true\n\
    \                else false\n            }\n            else false\n        }\n\
    \        compare(x, y, z)", "        if (isInt(x) && isInt(y) && isInt(z)) true\n\
    \        else false", '        return false', '        throw new NotImplementedError',
  "        // return x == y + z || y == x + z || z == x + y\n        if (x.isWhole()\
    \ && y.isWhole() && z.isWhole())\n            if (x.toInt == y.toInt + z.toInt\
    \ || y.toInt == x.toInt + z.toInt || z.toInt == x.toInt + y.toInt)\n         \
    \       return true\n        return false", "        if (x == (y + z)) true\n\
    \        else if (y == (x + z)) true\n        else if (z == (x + y)) true\n  \
    \      else false", "        if (x == y + z) {\n            true\n        } else\
    \ if (y == x + z) {\n            true\n        } else if (z == x + y) {\n    \
    \        true\n        } else {\n            false\n        }", '        return
    (x + y == z) || (x + z == y) || (y + z == x)', "        if (x.isValidInt && y.isValidInt\
    \ && z.isValidInt) {\n            if (x + y == z || x + z == y || y + z == x)\
    \ return true;\n        }\n        return false;", "        var sum = 0.0f\n \
    \       if (floor(x) == x && floor(y) == y && floor(z) == z) {\n            sum\
    \ = x + y\n            if (sum == z)\n                return true\n          \
    \  sum = x + z\n            if (sum == y)\n                return true\n     \
    \       sum = y + z\n            if (sum == x)\n                return true\n\
    \        }\n        return false", "        if (x == y + z) return true\n    \
    \    if (y == x + z) return true\n        if (z == x + y) return true\n      \
    \  return false", "        var result = false\n        if ((x == y + z) || (y\
    \ == x + z) || (z == x + y)) {\n            result = true\n        }\n       \
    \ return result", '        // Write your code here.', '        (x + y == z) ||
    (x + z == y) || (y + z == x)', "        // Write some code here\n        return\
    \ false", "        var result = false\n        if (x.isValidInt && y.isValidInt\
    \ && z.isValidInt) {\n            if (x == y + z || y == x + z || z == x + y)\
    \ {\n                result = true\n            }\n        }\n        return result",
  "        var result = false\n        var sum = x + y + z\n        if (x == sum -\
    \ y - z) result = true\n        if (y == sum - x - z) result = true\n        if\
    \ (z == sum - x - y) result = true\n        return result", "        // Your code\
    \ here\n        return false", "        if (floor(x) == x) {\n            if (floor(y)\
    \ == y) {\n                if (floor(z) == z) {\n                    if (x + y\
    \ == z) {\n                        return true\n                    }\n      \
    \              if (x + z == y) {\n                        return true\n      \
    \              }\n                    if (y + z == x) {\n                    \
    \    return true\n                    }\n                }\n            }\n  \
    \      }\n        return false", "        ((x + y == z) || (x + z == y) || (y\
    \ + z == x)) &&\n        ((x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0))", '        (x.isValidInt
    && y.isValidInt && z.isValidInt) && (x == y + z || y == x + z || z == x + y)',
  '        return true', "        //do something with your input parameters\n    \
    \    //for example, you can do add the first two params\n        //val sum = x\
    \ + y\n        //and then return the result\n        val any = (x == y + z) ||\
    \ (y == x + z) || (z == x + y)\n        return any", "        // Write your code\
    \ here\n        return true", '        return (x == y + z || y == x + z || z ==
    x + y) && x % 1 == 0 && y % 1 == 0 && z % 1 == 0', '        (round(x) == round(y)
    + round(z)) || (round(y) == round(x) + round(z)) || (round(z) == round(x) + round(y))',
  "        if(x == y + z) true\n        else if(y == x + z) true\n        else if(z\
    \ == x + y) true\n        else false", "        if ((x % 1 != 0) || (y % 1 !=\
    \ 0) || (z % 1 != 0)) {\n            return false\n        }\n        else {\n\
    \            return ((x == y + z) || (y == x + z) || (z == x + y))\n        }",
  "        if ((x + y == z) || (x + z == y) || (y + z == x)) return true\n       \
    \ return false", "        // Your code here.\n        var (r1, r2, r3) = (x.toInt,\
    \ y.toInt, z.toInt)\n        (r1 + r2 == r3) || (r1 + r3 == r2) || (r2 + r3 ==\
    \ r1)", '        return false', "        if (round(x) == round(y) + round(z) ||\
    \ round(y) == round(x) + round(z) || round(z) == round(x) + round(y)) true\n \
    \       else false", "        var result : Boolean = false\n        val a : Float\
    \ = x\n        val b : Float = y\n        val c : Float = z\n        //\n    \
    \    if (a == b + c) {\n            result = true\n        } else if (b == a +\
    \ c) {\n            result = true\n        } else if (c == a + b) {\n        \
    \    result = true\n        }\n        //\n        return result", "        //\
    \ Implement a solution here.\n        return false", "        val a = x.toInt\n\
    \        val b = y.toInt\n        val c = z.toInt\n        (a + b == c) || (a\
    \ + c == b) || (b + c == a)", "        // Your solution here\n        if(!(((x\
    \ % 1) == 0) && ((y % 1) == 0) && ((z % 1) == 0))) {\n          return false\n\
    \        }\n        if((x == y + z) || (y == x + z) || (z == x + y)) {\n     \
    \     return true\n        }\n        return false", '        (x.isValidInt &&
    y.isValidInt && z.isValidInt) && ((x + y == z) || (x + z == y) || (y + z == x))',
  "        if (x.isWhole() && y.isWhole() && z.isWhole()) {\n            if (x ==\
    \ y + z || y == x + z || z == x + y) return true\n        }\n        return false",
  '        return (x.isValidInt && y.isValidInt && z.isValidInt && ((x + y == z) ||
    (x + z == y) || (y + z == x)))', "        // Write your code here\n        return\
    \ false", '        false', "        // Write your code here.\n        val isValid\
    \ = ((x % 1) == 0) && ((y % 1) == 0) && ((z % 1) == 0)\n        isValid && (x\
    \ == (y + z)) || (y == (x + z)) || (z == (x + y))", "        if (x == y + z) true\n\
    \        else if (y == x + z) true\n        else if (z == x + y) true\n      \
    \  else false", "        var res = false\n        // Write your code here.\n \
    \       // You can use functions like :\n        // abs\n        // min\n    \
    \    // max\n        if (x.isInstanceOf[Float] && y.isInstanceOf[Float] && z.isInstanceOf[Float])\
    \ {\n            res = x == (y + z) || y == (x + z) || z == (x + y)\n        }\n\
    \        return res", "        // Insert your code here\n        // 1. x : Integer,\
    \ y : Float, z : Double\n        // 2. x : Integer, y : Double, z : Float\n  \
    \      // 3. x : Integer, y : Double, z : Double\n        // 4. x : Integer, y\
    \ : Float, z : Float\n        // 5. x : Float, y : Integer, z : Double\n     \
    \   // 6. x : Float, y : Integer, z : Float\n        // 7. x : Float, y : Double,\
    \ z : Integer\n        // 8. x : Float, y : Float, z : Integer\n        // 9.\
    \ x : Double, y : Integer, z : Float\n        // 10. x : Double, y : Integer,\
    \ z : Double\n        // 11. x : Double, y : Float, z : Integer\n        // 12.\
    \ x : Double, y : Double, z : Integer\n        // 13. x : Float, y : Float, z\
    \ : Float\n        // 14. x : Float, y : Double, z : Double\n        // 15. x\
    \ : Double, y : Float, z : Float\n        // 16. x : Double, y : Double, z : Float\n\
    \        // 17. x : Double, y : Double, z : Double\n        ???", "        //\
    \ should return true if one of x, y, z is equal to the sum of the other two\n\
    \        // and all numbers are integers\n        // Returns false in any other\
    \ cases.\n        var a = x == floor(x)\n        var b = y == floor(y)\n     \
    \   var c = z == floor(z)\n        if(a && b && c){\n            if(x == y + z\
    \ || y == x + z || z == x + y){\n                return true\n            }\n\
    \        }\n        return false", '        return x.toInt + y.toInt == z.toInt',
  "        var result : Boolean = false\n        if ((x + y == z) || (x + z == y)\
    \ || (y + z == x))\n            result = true\n        return result", '        return
    ((x == (y + z).toFloat) || (y == (x + z).toFloat) || (z == (x + y).toFloat)) &&
    ((x % 1) == 0) && ((y % 1) == 0) && ((z % 1) == 0)', "      var a : Int = x.toInt\n\
    \      var b : Int = y.toInt\n      var c : Int = z.toInt\n      if (((a + b)\
    \ == c) || ((a + c) == b) || ((b + c) == a))\n        return true\n      return\
    \ false", '        if ((x == y + z) || (y == x + z) || (z == x + y)) true else
    false', "        if (x.isValidInt && y.isValidInt && z.isValidInt) {\n       \
    \     if (x == y + z || y == x + z || z == x + y) {\n                return true\n\
    \            }\n        }\n        return false", '        ???', "        val\
    \ numbers = List(x, y, z)\n        val in = numbers.map(x => x.isWhole()).reduce((x,\
    \ y) => x && y)\n        if (!in) return false\n        val sum = numbers.reduce((x,\
    \ y) => x + y)\n        val max = numbers.max\n        if (sum - max == max) return\
    \ true\n        val min = numbers.min\n        if (sum - min == min) return true\n\
    \        return false", '        (x.isValidInt && y.isValidInt && z.isValidInt)
    && ((x + y == z) || (x + z == y) || (y + z == x))', '        return (x == y +
    z) || (y == x + z) || (z == x + y)', "        val l = List(x, y, z)\n        l.contains(l.sum\
    \ - 2 * l.max)", "        // YOUR CODE GOES HERE\n        return false", "   \
    \     // Return true if the sum of any two numbers are equal to the third integer,\
    \ otherwise return false.\n        if (x.isWhole() && y.isWhole() && z.isWhole())\
    \ {\n            return (x == y + z || y == x + z || z == x + y)\n        }\n\
    \        else {\n            return false\n        }", "        // Implement your\
    \ solution here...\n        if(x.isValidInt && y.isValidInt && z.isValidInt) {\n\
    \            if(x == y + z || y == x + z || z == x + y) {\n                return\
    \ true\n            }\n        }\n        return false", '        true', "   \
    \   val xyz = List(x, y, z)\n      xyz.contains(xyz.reduce(_+_) - xyz.reduce(_-_))",
  "        val x1 = x.toInt\n        val y1 = y.toInt\n        val z1 = z.toInt\n\
    \        if ((x1 == (y1 + z1)) || (y1 == (x1 + z1)) || (z1 == (x1 + y1)))\n  \
    \          return true\n        else\n            return false", '        return
    (x + y == z) || (x + z == y) || (y + z == x)', "        if (x == y + z || y ==\
    \ x + z || z == x + y) {\n            true\n        } else {\n            false\n\
    \        }", "        var a : Boolean = (x % 1 == 0 && y % 1 == 0 && z % 1 ==\
    \ 0)\n        var b : Boolean = (x + y == z || x + z == y || y + z == x)\n   \
    \     return a && b", "        //Implement your code here\n        if (x.isValidInt\
    \ && y.isValidInt && z.isValidInt) {\n            if (x == y + z || y == x + z\
    \ || z == x + y) true\n            else false\n        }\n        else false",
  "        if (x%1 != 0 || y%1 != 0 || z%1 != 0) return false\n        if (x+y ==\
    \ z || x+z == y || y+z == x) return true\n        false", '        return (abs(round(x)
    - x) < 0.01 && abs(round(y) - y) < 0.01 && abs(round(z) - z) < 0.01) && ((x ==
    y + z) || (y == x + z) || (z == x + y))', "        val vals = List(x, y, z)\n\
    \        val sum = vals.sum\n        vals.forall(_ == sum)", "        var sum\
    \ : Float = (x + y)\n        if (sum == z) {\n            return true\n      \
    \  }\n        sum = (y + z)\n        if (sum == x) {\n            return true\n\
    \        }\n        sum = (x + z)\n        if (sum == y) {\n            return\
    \ true\n        }\n        return false", '        false', "        val result\
    \ = if (x + y == z) true else if (x + z == y) true else if (y + z == x) true else\
    \ false\n        result", "        // TODO: Implement your code here.\n      \
    \  return false", "        // The function as to take 3 numbers as an argument.\n\
    \        // All 3 arguments may be of either type integer or type float, but for\
    \ your \n        // solution to pass the tests, anyFloat() must work for all combinations\
    \ of types.\n        // For example: anyFloat(5l, 2l, 7l) should be true, anyFloat(3l,\
    \ 2l, 2l) should be false.\n        // anyFloat(3l, -2l, 1l) should be true, anyFloat((3.6f),\
    \ (-2.2f), 2l) should be false.\n        // Note: you can use the abs() function\
    \ on integers and floats to return the absolute value.\n        // abs(3l) returns\
    \ 3\n        // abs(-3l) returns 3\n        // abs(3.6f) returns 3.6\n       \
    \ // abs(-3.6f) returns 3.6\n        // Hint: It might be useful to know that\
    \ if a number is an integer, it is also a float.\n        // That is, -3l and\
    \ -3f are equal to each other\n        true", '        // Write some code here.',
  "        var a = x;\n        var b = y;\n        var c = z;\n        if (x == x.toInt\
    \ && y == y.toInt && z == z.toInt) {\n            if (a + b == c || a + c == b\
    \ || b + c == a) {\n                return true;\n            }\n        }\n \
    \       return false;", "      (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) &&\n \
    \     (x == y + z || y == x + z || z == x + y)", "        val a = x.isValidInt\n\
    \        val b = y.isValidInt\n        val c = z.isValidInt\n        val sum =\
    \ x + y\n        val sum1 = y + z\n        val sum2 = x + z\n        return a\
    \ && b && c && (x == sum1 || y == sum2 || z == sum)", "        if (x.isWhole()\
    \ && y.isWhole() && z.isWhole()) {\n            return x == y + z || y == x +\
    \ z || z == x + y\n        }\n        false", '        return true', '        //
    your code here', '        ???', "        if(x + y == z || x + z == y || y + z\
    \ == x) true\n        else false", "        var sum = x + y + z\n        if (sum\
    \ == floor(sum)) {\n            return true\n        }\n        return false",
  '        (x.isValidInt && y.isValidInt && z.isValidInt) && (x == y + z || y == x
    + z || z == x + y)', '        true', "        def isInt(x : Float) : Boolean =\
    \ {\n            if (x % 1 == 0) {\n                true\n            } else {\n\
    \                false\n            }\n        }\n        val x2 = x * 100\n \
    \       val y2 = y * 100\n        val z2 = z * 100\n        if (isInt(x2) && isInt(y2)\
    \ && isInt(z2)) {\n            (x + y == z) || (x + z == y) || (y + z == x)\n\
    \        } else {\n            false\n        }", "        val list = List(x,\
    \ y, z)\n        var shouldReturn = false\n        list.combinations(2).toList.foreach(element\
    \ => {\n            val sum = element.sum\n            if (list.filter(e => e\
    \ != sum).head == sum) {\n                shouldReturn = true\n            }\n\
    \        })\n        shouldReturn", "        val s : Double = x + y + z\n    \
    \    val sx : Double = x + y\n        val sy : Double = x + z\n        val sz\
    \ : Double = y + z\n        if (((s - x).toInt == x) || ((s - y).toInt == y) ||\
    \ ((s - z).toInt == z)) true\n        else if (((sx - x).toInt == x) || ((sx -\
    \ y).toInt == y)) true\n        else if (((sy - x).toInt == x) || ((sy - z).toInt\
    \ == z)) true\n        else if (((sz - y).toInt == y) || ((sz - z).toInt == z))\
    \ true\n        else false", "        var result : Boolean = false\n        result\
    \ = ( x + y ) == z || ( x + z ) == y || ( y + z ) == x\n        if ( result )\
    \ {\n            if ( !x.isValidInt || !y.isValidInt || !z.isValidInt ) {\n  \
    \              result = false\n            }\n        }\n        return result",
  '        return (x == y + z) || (y == x + z) || (z == x + y)', "        // create\
    \ an array of the numbers\n        var arr = new Array[Float](3)\n        arr(0)\
    \ = x\n        arr(1) = y\n        arr(2) = z\n        // loop through the array\
    \ and check if any of the numbers equal the sum of the other two,\n        //\
    \  and all numbers are integers.\n        for (i <- 0 to 2) {\n            var\
    \ j = (i + 1) % 3\n            var k = (i + 2) % 3\n            // if any number\
    \ equals the sum of the other two, and all numbers are integers.\n           \
    \ if (abs(arr(i) - (arr(j) + arr(k))) < 0.000001 &&\n                abs(arr(i)\
    \ - arr(j).toInt) < 0.000001 &&\n                abs(arr(i) - arr(k).toInt) <\
    \ 0.000001)\n                return true\n        }\n        // otherwise returns\
    \ false.\n        return false", "        val sum = x + y + z\n        val check\
    \ = sum - x == y + z || sum - y == x + z || sum - z == x + y\n        if (check\
    \ && (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0)) return true\n        else return\
    \ false", "        // Fill in the function here\n        return false", '        throw
    new Exception("Not implemented")', "        if ((x + y == z) || (x + z == y) ||\
    \ (y + z == x)) return true\n        else return false", "        // Create code\
    \ here\n        val isTrue : Boolean = {\n            (x == y + z) || (y == x\
    \ + z) || (z == x + y)\n        }\n        val isAllInt : Boolean = {\n      \
    \      (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0)\n        }\n        isTrue\
    \ && isAllInt", "        if (x % 1 != 0 || y % 1 != 0 || z % 1 != 0) false\n \
    \       else if (x == (y + z) || y == (x + z) || z == (x + y)) true\n        else\
    \ false", '      true', "        if(x.isValidInt && y.isValidInt && z.isValidInt)\
    \ {\n            (x + y == z) || (x + z == y) || (y + z == x)\n        } else\
    \ {\n            false\n        }", "        if (x.isValidInt && y.isValidInt\
    \ && z.isValidInt) {\n            if (x == y + z || y == x + z || z == x + y)\
    \ {\n                return true\n            }\n        }\n        return false",
  "      return (x.isValidInt && y.isValidInt && z.isValidInt &&\n        (x.toInt\
    \ == y.toInt + z.toInt || y.toInt == x.toInt + z.toInt || z.toInt == x.toInt +\
    \ y.toInt))", "        var x1 : Int = x.toInt\n        var y1 : Int = y.toInt\n\
    \        var z1 : Int = z.toInt\n        return (x1 == y1 + z1 || y1 == x1 + z1\
    \ || z1 == x1 + y1)", '        return true', '        ???', '        false', '        return
    false', "      // Input your code here.\n      return false", "        val numbers\
    \ = List(x, y, z)\n        // your code goes here\n        false", "        val\
    \ test = if ((y + z == x) || (x + z == y) || (x + y == z)) true else false\n \
    \       return test", "        // First check if all numbers are integers\n  \
    \      // Otherwise, return false\n        if (x.isValidInt && y.isValidInt &&\
    \ z.isValidInt) {\n            // If they are, check if one number is equal to\
    \ the sum of the other two\n            // Otherwise, return false\n         \
    \   if (x == y + z || y == x + z || z == x + y) {\n                true\n    \
    \        } else {\n                false\n            }\n        } else {\n  \
    \          false\n        }", "        if (ceil(x) == x && ceil(y) == y && ceil(z)\
    \ == z) {\n            if (x == y + z || y == x + z || z == x + y) true\n    \
    \        else false\n        }\n        else false", "        if (x.isValidInt\
    \ && y.isValidInt && z.isValidInt) {\n            var sum = x + y + z\n      \
    \      if (sum.isValidInt) return true else return false\n        }\n        else\
    \ return false", "        if (x.isValidInt && y.isValidInt && z.isValidInt) {\n\
    \            (x.toInt + y.toInt == z.toInt) || (x.toInt + z.toInt == y.toInt)\
    \ || (y.toInt + z.toInt == x.toInt)\n        } else {\n            false\n   \
    \     }", "        // This is a stub. Change as needed.\n        x == y + z ||\
    \ y == x + z || z == x + y", '        // Your code goes here', "        // Stub\n\
    \        if (x % 1 == 0 || y % 1 == 0 || z % 1 == 0) {\n            if (x == y\
    \ + z || y == x + z || z == x + y) {\n                return true\n          \
    \  }\n        }\n        false", "        //input: 3 numbers (x, y, z), all floats\n\
    \        //output: true if one of the numbers is equal to the sum of the other\
    \ two, and all numbers are integers.\n        //        false in any other cases.\n\
    \        //constraints: none\n        //edge cases: none\n        //assumptions:\
    \ none\n        return (x.isValidInt) && (y.isValidInt) && (z.isValidInt) && ((x\
    \ == y + z) || (y == x + z) || (z == x + y))", "        if (x.isValidInt && y.isValidInt\
    \ && z.isValidInt)\n            return (x == y + z) || (y == x + z) || (z == x\
    \ + y)\n        return false", "        // Given\n        val x = 5l\n       \
    \ val y = 2l\n        val z = 7l\n        // Code\n        val myList = List(x,\
    \ y, z)\n        val sum = myList.sum\n        val result = myList.exists(sum.==)\n\
    \        // Answer\n        result", "        if (x % 1 == 0 && y % 1 == 0 &&\
    \ z % 1 == 0) {\n            if (x == y + z || y == x + z || z == x + y) return\
    \ true\n        }\n        return false", "        // Write your code here\n \
    \       return true", "        val sum = x + y + z\n        return (((x % 1 ==\
    \ 0) || (y % 1 == 0) || (z % 1 == 0)) && (sum % 1 == 0) && ((x == sum - y - z)\
    \ || (y == sum - x - z) || (z == sum - x - y)))", "        var result : Boolean\
    \ = false\n        if (x.isWhole() && y.isWhole() && z.isWhole()) {\n        \
    \    if (x + y == z || x + z == y || y + z == x) result = true\n        }\n  \
    \      return result", '        return x.isValidInt && y.isValidInt && z.isValidInt
    && (x.toInt == y.toInt + z.toInt || y.toInt == x.toInt + z.toInt || z.toInt ==
    x.toInt + y.toInt)', "    var tp = false\n    if (x.toInt == x && y.toInt == y\
    \ && z.toInt == z) {\n      if (x + y == z || x + z == y || y + z == x) tp = true",
  "        // placeholder\n        false", "        // >>> Write your answer here\
    \ <<<\n        if ((x.isWhole() && y.isWhole() && z.isWhole()) &&\n          \
    \  (x + y == z || x + z == y || y + z == x))\n          true\n        else\n \
    \         false", "        if ((x - (floor(x) + 0.5)) == 0.0 || (y - (floor(y)\
    \ + 0.5)) == 0.0 || (z - (floor(z) + 0.5)) == 0.0) {\n            // All are integers\n\
    \            return ((x + y == z) || (x + z == y) || (y + z == x))\n        }\n\
    \        else {\n            return false\n        }", "        // Write the body\
    \ of this function\n        val a = math.round(x)\n        val b = math.round(y)\n\
    \        val c = math.round(z)\n        var sum = 0\n        if (a == b + c) sum\
    \ = a\n        else if (b == a + c) sum = b\n        else if (c == a + b) sum\
    \ = c\n        else return false\n        return true", '        return (x + y
    == z) || (x + z == y) || (y + z == x)', "        if (x % 1 != 0 || y % 1 != 0\
    \ || z % 1 != 0) return false;\n        if (x == y + z || y == x + z || z == x\
    \ + y) return true;\n        return false;", '        return (x == y + z || y
    == x + z || z == x + y);', "        if (x - (y + z) == 0 || y - (x + z) == 0 ||\
    \ z - (x + y) == 0) {\n            return true\n        }\n        else {\n  \
    \          return false\n        }", "        // Fill in the function here.\n\
    \        return false", '        return anyInt(x.toInt, y.toInt, z.toInt)', " \
    \       if(x.isValidInt && y.isValidInt && z.isValidInt){\n            return\
    \ x.toInt == y.toInt + z.toInt || y.toInt == x.toInt + z.toInt || z.toInt == x.toInt\
    \ + y.toInt\n        }\n        return false", "        (if (x % 1 == 0 && y %\
    \ 1 == 0 && z % 1 == 0) {\n            if (x == y + z || y == x + z || z == x\
    \ + y)\n                true\n            else\n                false\n      \
    \  } else\n            false)", "        if (x.isWhole() && y.isWhole() && z.isWhole())\
    \ {\n            (x == (y + z)) || (y == (x + z)) || (z == (x + y))\n        }\
    \ else {\n            false\n        }", '        // TODO Insert your code here',
  "        // TO BE IMPLEMENTED\n        return false", '        return x.isValidInt
    && y.isValidInt && z.isValidInt && (x == y + z || y == x + z || z == x + y)',
  "      if (z == (x + y) && (x + y + z) % 1 == 0)\n        true\n      else\n   \
    \     false", '        return (((x + y) == z) || ((x + z) == y) || ((y + z) ==
    x)) && (x.isValidInt && y.isValidInt && z.isValidInt)', "      if(x == y + z ||\
    \ y == x + z || z == x + y)\n        true\n      else\n        false", "     \
    \   // your code here\n        return false", "        // get the least value\n\
    \        val (x1, y1, z1) = (if (x < y) (x, y, z) else (y, x, z)) match {\n  \
    \          case (x, y, z) if (x < z) => (x, y, z)\n            case (x, y, z)\
    \ => (z, x, y)\n        }\n        // check if x < y + z and if they are all integers\n\
    \        (isInt(x1), isInt(y1), isInt(z1)) match {\n            case (true, true,\
    \ true) => x1 < y1 + z1\n            case _ => false\n        }", '        return
    ((ceil(x) == floor(x)) && (ceil(y) == floor(y)) && (ceil(z) == floor(z)) && (x
    + y == z || x + z == y || y + z == x))', '      (x + y == z) || (x + z == y) ||
    (y + z == x)', "      // Insert your code here\n      ???", "        if (((abs(x\
    \ + y - z) % 1) < 0.0001) || ((abs(y + z - x) % 1) < 0.0001) || ((abs(z + x -\
    \ y) % 1) < 0.0001))\n            return true\n        else\n            return\
    \ false", '      return (x - y - z == 0 || y - x - z == 0 || z - x - y == 0) &&
    (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)', '        return true', '        return
    (x % 1 == 0 && y % 1 == 0 && z % 1 == 0 && (x == y + z || y == x + z || z == x
    + y))', '        true', "      val anyInt : ((Float, Float, Float) => Boolean)\
    \ = {\n        case (x, y, z) if (x.isValidInt && y.isValidInt && z.isValidInt)\
    \ && (x + y == z || x + z == y || y + z == x) => true\n        case _ => false\n\
    \      }\n      anyInt(x, y, z)", '        // Write your solution here.', '      x.isValidInt
    && y.isValidInt && z.isValidInt && (x + y == z || x + z == y || y + z == x)',
  '        false', "        // Answer:\n        true", '        return true', '        return
    (false)', "    // Method implementation here\n        (x == y + z) || (y == x\
    \ + z) || (z == x + y)", '        return (z == (x + y))', "      if ((x.toInt\
    \ - x) == 0 && (y.toInt - y) == 0 && (z.toInt - z) == 0) return true\n      else\
    \ return false", '        true', '        return false', '        ((x.isValidInt)
    && (y.isValidInt) && (z.isValidInt)) && ((x + y == z) || (x + z == y) || (y +
    z == x))', "        // Write your code here \n        return true", "        var\
    \ arr = Array(x, y, z)\n        var result = false\n        var sum = 0f\n   \
    \     for (i <- 0 until 3) {\n            for (j <- 0 until 3) {\n           \
    \     for (k <- 0 until 3) {\n                    if (i != j && i != k && j !=\
    \ k) {\n                        sum = arr(i) + arr(j)\n                      \
    \  if (sum == arr(k)) result = true\n                    }\n                }\n\
    \            }\n        }\n        return result", "        if ((x % 1 == 0) &&\
    \ (y % 1 == 0) && (z % 1 == 0)) {\n            if ((x + y == z) || (x + z == y)\
    \ || (y + z == x)) {\n                return true\n            }\n        }\n\
    \        return false", "        if(x.toLong == x && y.toLong == y && z.toLong\
    \ == z)\n            x.toLong == y.toLong + z.toLong || y.toLong == x.toLong +\
    \ z.toLong || z.toLong == x.toLong + y.toLong\n        else\n            false",
  "        val x1 = abs(x.toInt - x)\n        val y1 = abs(y.toInt - y)\n        val\
    \ z1 = abs(z.toInt - z)\n        if (x1 != 0 || y1 != 0 || z1 != 0) return false\n\
    \        x + y == z || x + z == y || y + z == x", "        // Start typing your\
    \ Scala code here...\n        var a = x.toInt\n        var b = y.toInt\n     \
    \   var c = z.toInt\n        if(a + b == c) return true\n        if(a + c == b)\
    \ return true\n        if(b + c == a) return true\n        return false", "  \
    \      // Your code here\n        true", '        true', "        if (x + y ==\
    \ z) true\n        else if (x + z == y) true\n        else if (y + z == x) true\n\
    \        else false", '        (x + y == z || x + z == y || y + z == x) && (x
    % 1 == 0 && y % 1 == 0 && z % 1 == 0)', '        //Write your code here']
stop_tokens:
- "\n    }\n"

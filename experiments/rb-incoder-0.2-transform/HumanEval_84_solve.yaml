name: HumanEval_84_solve
language: rb
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve.call(1000)\n# \"1\"\n# >>> solve.call(150)\n# \"110\"\n#\
  \ >>> solve.call(147)\n# \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0\
  \ \u2264 N \u2264 10000.\n# Output:\n# a string of binary number\ndef solve(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
  \    candidate = method(:solve)\n    assert_equal(\"1\", candidate.call(1000))\n\
  \    assert_equal(\"110\", candidate.call(150))\n    assert_equal(\"1100\", candidate.call(147))\n\
  \    assert_equal(\"1001\", candidate.call(333))\n    assert_equal(\"10010\", candidate.call(963))\n\
  \  end\nend\n"
completions: ["  result = ''\n  while n > 0\n    digit = n % 10\n    result += \"\
    #{digit}\"\n    n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = ''\n  while n > 0\n    s <<\
    \ (n % 2)\n    n /= 2\n  end\n  s\nend", "  result = ''\n  while n > 0\n    result\
    \ += (n % 2) + '0'\n    n /= 2\n  end\n  result\nend", "  binary = n.to_s(2)\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_i(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n", "  n.to_s.reverse.scan(/../).map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).reverse.gsub(/../) { |x| x.to_i(2) }.reverse\nend", "  binary\
    \ = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/,\
    \ '0')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.reverse\nend", "  s = \"\"\n  while n > 0\n    s << n % 2\n\
    \    n /= 2\n  end\n  s\nend", "  s = ''\n  while n > 0\n    s, n = s.to_s + n.to_s(2),\
    \ n / 2\n  end\n  s\nend", "  n.to_s.reverse.split(//).map { |i| i.to_i(2) }.inject(:+)\n\
    end", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\n\
    end", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\n\
    end", "  s = ''\n  while n > 0\n    s = s.to_s + n.to_s(2)\n    n -= 1\n  end\n\
    \  s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(", "  s = ''\n  while n > 0\n    s << (n % 2).to_s\n    n /= 2\n  end\n\
    \  s\nend", "  n.to_s(2).reverse.chars.map { |c| c == \"1\" ? \"1\" : \"0\" }.join\n\
    end", "  n.to_s(2).reverse.chars.map { |c| c == \"0\" ? \"1\" : \"0\" }.join\n\
    end", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').to_i(2).to_s(2)\nend", " \
    \ result = ''\n  while n > 0\n    digit = n % 10\n    result += (digit * '1')\n\
    \    n /= 10\n  end\n  result\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  result = ''\n  while n > 0\n\
    \    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend",
  "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').gsub(/(\\d)(.)/, '\\1\\2').gsub(/(\\\
    d)/, '\\1').to_i\nend", "  result = ''\n  while n > 0\n    result += (n % 2 ==\
    \ 0) ? '1' : '0'\n    n /= 2\n  end\n  result\nend", "  result = ''\n  while n\
    \ > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\n\
    end", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\nend", "  s =\
    \ n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\nend", "  s = n.to_s(2)\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", '  n.to_s(2).reverse.gsub(/(.{8})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.',
  "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\n\
    end", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return\
    \ sum.to_s\nend", "  s = ''\n  while n > 0\n    s, n = s.to_s + n.to_s(2), n /\
    \ 2\n  end\n  s\nend", "  s = ''\n  while n > 0\n    s, n = s.to_s + n.to_s, n\
    \ / 2\n  end\n  s\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /=\
    \ 2\n  end\n  sum.to_s(2)\nend", "  result = ''\n  while n > 0\n    result +=\
    \ (n % 2) + '0'\n    n /= 2\n  end\n  result\nend", "  result = ''\n  while n\
    \ > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n  result\nend", "  binary\
    \ = n.to_s(2)\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n",
  "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.reverse\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_i(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n", "  n.to_s(2).reverse.chars.map { |c|\
    \ c == '1' ? '1' : '0' }.join\nend", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result += \"#{digit}\"\n    n /= 10\n  end\n  result\nend", " \
    \ result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  result\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  s = ''\n  while n > 0\n    s << (n % 2).to_s(2)\n    n /= 2\n  end\n\
    \  s\nend", "  s = ''\n  while n > 0\n    s = s.to_s + n.to_s(2)\n    n /= 2\n\
    \  end\n  s\nend", "  n.to_s(2).reverse.scan(/../).map { |x| x.to_i(2) }.reduce(:+)\n\
    end", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.to_s.reverse\nend", " \
    \ s = \"\"\n  while n > 0\n    s << (n % 2).to_s(2)\n    n /= 2\n  end\n  s\n\
    end", "  s = ''\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  result\nend", "  s = ''\n  while n > 0\n    s, n = s.to_s(2).rjust(2,\
    \ '0'), n / 2\n  end\n  s\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n\
    \    n /= 2\n  end\n  sum.to_s(2)\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n", "  n.to_s.split(\"\
    \").map {|x| x.to_i(2).to_s(2)}.join\nend", "  sum = 0\n  while n > 0\n    sum\
    \ += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  binary = n.to_s(2)\n\
    \  binary.reverse!\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary.reverse!\n\
    \  binary.gsub!(/../, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/1/, '1')\n  ", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').to_i(2).to_s(2)\n\
    end", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\nend",
  "  n.to_s(2).reverse.scan(/../).join\nend", "  sum = 0\n  while n > 0\n    sum +=\
    \ n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  s = ''\n  while n > 0\n  \
    \  s << (n % 2).to_s\n    n /= 2\n  end\n  s\nend", "  sum = 0\n  while n > 0\n\
    \    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  result = ''\n\
    \  while n > 0\n    result += (n % 2 == 0 ? '1' : '0')\n    n /= 2\n  end\n  result\n\
    end", "  binary = n.to_s(2)\n  sum = 0\n  for i in 0...binary.length\n    sum\
    \ += binary.chars.to_i(i).to_s(2)\n  end\n  return sum\nend", "  sum = 0\n  while\
    \ n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n", "  binary = n.to_s(2)\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n",
  "  result = ''\n  while n > 0\n    result += (n % 2 == 0) ? '1' : '0'\n    n /=\
    \ 2\n  end\n  result\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n", "  s = ''\n  while n > 0\n    s << n % 2\n   \
    \ n /= 2\n  end\n  s\nend", "  result = ''\n  while n > 0\n    result += (n %\
    \ 2) == 0 ? '1' : '0'\n    n /= 2\n  end\n  result\nend", "  result = ''\n  while\
    \ n > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\n\
    end", "  s = \"\"\n  while n > 0\n    s << (n % 2)\n    n /= 2\n  end\n  s\nend",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  result\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../,\
    \ '').to_i\nend", "  n.to_s.split(\"\").map { |x| x.to_i(2) }.inject(:+)\nend",
  "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\nend", "  sum = 0\n  while\
    \ n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  n.to_s.split(\"\
    \").map { |i| i.to_i(2) }.inject(:+)\nend", "  sum = 0\n  while n > 0\n    sum\
    \ += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  result = ''\n  while\
    \ n > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\n\
    end", "  s = ''\n  while n > 0\n    s << (n % 2).to_s\n    n /= 2\n  end\n  s\n\
    end", "  result = ''\n  while n > 0\n    result += (n % 2) + '0'\n    n /= 2\n\
    \  end\n  result\nend", "  s = \"\"\n  while n > 0\n    s << (n % 2).to_s\n  \
    \  n /= 2\n  end\n  s\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return\
    \ sum.to_s\nend", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').to_i(2)\nend",
  '  n.to_s(2).reverse.gsub(/(.{8})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.{4})(.',
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result += \"#{digit}\"\n\
    \    n /= 10\n  end\n  result\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_i(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/../, '').to_i\nend", "  s = ''\n  while n > 0\n    s << n %\
    \ 2\n    n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\\
    2').gsub(/../, '').to_i\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n", "  s = \"\"\n  while n > 0\n    s, n\
    \ = s.to_s + n.to_s(2), n / 2\n  end\n  s\nend", "  binary = n.to_s(2)\n  sum\
    \ = 0\n  for i in 0...binary.length\n    sum += binary.chars.to_i(i).to_s(2).to_i\n\
    \  end\n  return sum.to_s(2)\nend", "  sum = 0\n  while n > 0\n    sum = sum +\
    \ n % 10\n    n = n / 10\n  end\n  sum.to_s\nend", "  result = ''\n  while n >\
    \ 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  s = ''\n  while n > 0\n    s, n = s.to_s + n.to_s(2), n / 2\n  end\n  s\nend",
  "  binary = n.to_s(2)\n  sum = 0\n  binary.split('').each do |i|\n    sum += i.to_i(2).to_s(2)\n\
    \  end\n  return sum\nend", "  result = ''\n  while n > 0\n    result += (n %\
    \ 10).to_s(2)\n    n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').reverse\nend", " \
    \ n.to_s(2).reverse.gsub(/(.{8})/, '0$1').gsub(/(.{4})/, '0$1').gsub(/(.{2})/,\
    \ '0$1').gsub(/(.{1})/, '1').to_i\nend", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", "  binary\
    \ = n.to_s(2)\n  sum = 0\n  for i in 0...binary.length\n    sum += binary.chars.to_i(i).to_s(2)\n\
    \  end\n  return sum\nend", "  binary = n.to_s(2)\n  sum = 0\n  binary.each_char.with_index\
    \ do |char, index|\n    sum += char.ord * (2**index)\n  end\n  sum.to_s(2)\nend",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').reverse\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  n.to_s.split(\"\").map { |x| x.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  result = ''\n  while n > 0\n \
    \   result += (n % 2).to_s\n    n /= 2\n  end\n  result\nend", "  sum = \"\"\n\
    \  while n > 0\n    sum += n.to_s(2).rjust(8, \"0\")\n    n -= 1\n  end\n  sum\n\
    end", "  result = ''\n  while n > 0\n    digit = n % 10\n    result += \"#{digit}\"\
    \n    n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.chars.map { |c| c ==\
    \ \"0\" ? \"1\" : \"0\" }.join\nend", "  n.to_s.split(\"\").map { |i| i.to_i(2)\
    \ }.inject(:+)\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n", "  result = ''\n  while n > 0\n    result\
    \ += (n % 2) == 0 ? '1' : '0'\n    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result << digit\n    n /= 10\n  end\n  return result\nend", " \
    \ n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').to_i(2).to_s(2).reverse\nend", "  result = ''\n  while n > 0\n   \
    \ digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", " \
    \ n.to_s.split(\"\").map { |x| x.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  n.to_s(2).reverse.chars.map { |c| c.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/(.{8})/,\
    \ '\\1').to_i(2).to_s(2)\nend", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2)\
    \ }.reverse\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\nend",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  result\nend", "  result = ''\n  while n > 0\n    result += (n %\
    \ 2) + '0'\n    n /= 2\n  end\n  result\nend", "  sum = 0\n  while n > 0\n   \
    \ sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  s = \"\"\n  while n\
    \ > 0\n    s << (n % 2)\n    n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.reverse\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n\
    \    n /= 2\n  end\n  return sum.to_s\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n", "  n.to_s(2).reverse.scan(/../).map\
    \ { |x| x.to_i(2) }.inject(:+)\nend", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result += (digit * '1')\n    n /= 10\n  end\n  result\nend", " \
    \ binary = n.to_s(2)\n  sum = 0\n  binary.each_char {|x| sum += x.to_i(2) }\n\
    \  sum.to_s(2)\nend", "  result = ''\n  while n > 0\n    digit = n % 10\n    result\
    \ += \"#{digit}\"\n    n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.chars.map\
    \ { |c| c == '1' ? 1 : 0 }.inject(:+)\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary.reverse!\n  binary.gsub!(/../,\
    \ '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/00/,\
    \ '0')\n  binary.gsub!(/000/, '0')\n  binary.gsub!(/0000/, '0')\n  binary.gsub!(/00000/,\
    \ '0')\n  binary.gsub!(/000000/, '0')\n  binary.gsub!(/0000000/, '0')\n  binary.gsub!(/00000000/,\
    \ '0')\n  binary.gsub!(/000000000/, '0')\n  binary.gsub!(/0000000000/, '0')\n\
    \  binary.gsub!(/00000000000/, '0')\n  binary.gsub!(/000000000000/, '0')\n  binary.gsub!(/0000000000000/,\
    \ '0')\n  binary.gsub!(/00000000000000/, '0')\n  binary.gsub!(/000000000000000/,\
    \ '0')\n  binary.gsub!(/0000000000000000/, '0')\n  binary.gsub!(/00000000000000000/,\
    \ '0')\n  binary.gsub!(/000000000000000000/, '0')\n  binary.gsub!(/0000000000000000000/,\
    \ '0')\n  binary.gsub!(/00000000000000000000/, '0')\n  binary.gsub!(/000000000000000000000/,\
    \ '0')\n  binary.gsub!(/0000000000000000000000/, '0')\n  binary.gsub!(/00000000000000000000000/,\
    \ '0')\n  binary.gsub!(/000000000000000000000000/, '0')\n  binary.gsub!(/0000000000000000000000000/,\
    \ '0')\n  binary.gsub!(/00000000000000000000000000/, '0')\n  binary.gsub!(/000000000000000000000000000/,\
    \ '0')\n  binary.gsub!(/0000000000000000000000000000/, '0')\n  binary.gsub!(/00000000000000000000000000000/,\
    \ '0')\n  binary.gsub!(/000000000000000000000000000000/, '0')\n  binary.gsub!(/0000000000000000000000000000000/,\
    \ '0')\n  binary.gsub!(/00000000000000000000000000000000/, '0')\n  binary.gsub!(/000000000000000000000000000000000/,\
    \ '0')\n  binary.gsub!(/0000000000000000", "  n.to_s(2).reverse.gsub(/../) { |s|\
    \ s.to_i(2) }.reverse\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  n.to_s(2).reverse.scan(/../).map(&:to_i).reduce(:+)\nend",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result += (digit * '1')\n\
    \    n /= 10\n  end\n  result\nend", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", "  s = n.to_s(2)\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n\
    \    n /= 10\n  end\n  result\nend", "  result = ''\n  while n > 0\n    result\
    \ += (n % 2) + '0'\n    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  n.to_s(2).reverse.gsub(/(.)(\\\
    d)/, '\\1\\2').to_i(2)\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_i(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n", "  result = ''\n  while n > 0\n    result += (n % 2) +\
    \ '0'\n    n /= 2\n  end\n  result\nend", "  s = \"\"\n  while n > 0\n    s +=\
    \ \"1\"\n    n -= 1\n  end\n  s.reverse!\n  s\nend", "  s = ''\n  while n > 0\n\
    \    s << n % 2\n    n /= 2\n  end\n  s\nend", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  sum = 0\n  while\
    \ n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').to_i\nend", "  result = ''\n  while n > 0\n    result += (n % 2 ==\
    \ 0 ? '1' : '0')\n    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.scan(/../).map\
    \ { |x| x.to_i(2) }.inject(0, :+)\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/0/, '1')\n\
    \  binary.", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n", "  result = ''\n  while n > 0\n    digit = n % 10\n    result\
    \ << digit\n    n /= 10\n  end\n  result\nend", "  n.to_s.split(\"\").map { |x|\
    \ x.to_i(2) }.inject(:+)\nend", "  binary = n.to_s(2)\n  binary = binary.reverse\n\
    \  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\n\
    end", "  sum = \"\"\n  while n > 0\n    sum = sum + \"1\"\n    n -= 1\n  end\n\
    \  sum\nend", "  result = ''\n  while n > 0\n    result += (n % 2 == 0 ? '1' :\
    \ '0')\n    n /= 2\n  end\n  result\nend", "  binary = n.to_s(2)\n  sum = 0\n\
    \  binary.each_char {|c| sum += c.to_i(2) }\n  sum.to_s(2)\nend", "  sum = 0\n\
    \  while n > 0\n    sum = sum + n % 2\n    n = n / 2\n  end\n  sum.to_s\nend",
  "  s = \"\"\n  while n > 0\n    s << (n % 2).to_s\n    n /= 2\n  end\n  s\nend",
  "  binary = n.to_s(2)\n  binary = binary.reverse\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.", "  n.to_s(2).reverse.chars.map {\
    \ |c| c == \"0\" ? \"1\" : \"0\" }.join\nend", "  result = ''\n  while n > 0\n\
    \    result += (n % 10).to_s(2)\n    n /= 10\n  end\n  result\nend", "  result\
    \ = ''\n  while n > 0\n    digit = n % 10\n    result += (digit * '1')\n    n\
    \ /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n\
    \  end\n  sum.to_s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub("]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

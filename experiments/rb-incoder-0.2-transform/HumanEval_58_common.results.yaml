language: rb
name: HumanEval_58_common
results:
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1 = l1.to_a\n  l2 = l2.to_a\n\
    \  l1.each do |i|\n    l2.each do |j|\n      return i if i == j\n    end\n  end\n\
    \  nil\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpptxus8au\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpptxus8au.rb:20:in `test_common'\n\
    \     17: class TestHumanEval < Test::Unit::TestCase\n     18:   def test_common\n\
    \     19:     candidate = method(:common)\n  => 20:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     21:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     22:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     23:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006399136 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.27 tests/s, 156.27 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |x|\n    l2.each\
    \ do |y|\n      return x if x == y\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp2imux2uk\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmp2imux2uk.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.00646837 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.60 tests/s, 154.60 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1 = l1.sort\n  l2 = l2.sort\n\
    \  l1.length == l2.length ? l1.zip(l2).select { |e| e[0] == e[1] }.flatten : []\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_common\n\
    \    candidate = method(:common)\n    assert_equal([1, 5, 653], candidate.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3],\
    \ candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpnq8b_qpu\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpnq8b_qpu.rb:15:in `test_common'\n\
    \     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_common\n\
    \     14:     candidate = method(:common)\n  => 15:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     16:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     17:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     18:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<[1, 1, 653, 653]>\n\ndiff:\n? [1, 1, 653, 653]\n===============================================================================\n\
    \nFinished in 0.00710435 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    140.76 tests/s, 140.76 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each_with_index do |x,\
    \ i|\n    l2.each_with_index do |y, j|\n      return i if x == y\n    end\n  end\n\
    \  nil\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpw8kbjmz4\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpw8kbjmz4.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<0>\n===============================================================================\n\
    \nFinished in 0.006095854 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.05 tests/s, 164.05 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.zip(l2).to_a.select {\
    \ |e| e[0] == e[1] }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpybg42l17\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpybg42l17.rb:13:in `test_common'\n\
    \     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_common\n\
    \     12:     candidate = method(:common)\n  => 13:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     14:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     15:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     16:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<[]>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006210641 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.01 tests/s, 161.01 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.zip(l2).to_a.select {\
    \ |e1, e2| e1 == e2 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpmp9bhddh\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpmp9bhddh.rb:13:in `test_common'\n\
    \     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_common\n\
    \     12:     candidate = method(:common)\n  => 13:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     14:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     15:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     16:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<[]>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.01039749 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.18 tests/s, 96.18 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1 = l1.to_a\n  l2 = l2.to_a\n\
    \  l1.each do |i|\n    l2.each do |j|\n      return i if i == j\n    end\n  end\n\
    \  nil\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpptxus8au\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpptxus8au.rb:20:in `test_common'\n\
    \     17: class TestHumanEval < Test::Unit::TestCase\n     18:   def test_common\n\
    \     19:     candidate = method(:common)\n  => 20:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     21:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     22:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     23:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006399136 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.27 tests/s, 156.27 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.zip(l2).select { |x, y|\
    \ x == y }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpwrcpi13b\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpwrcpi13b.rb:13:in `test_common'\n\
    \     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_common\n\
    \     12:     candidate = method(:common)\n  => 13:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     14:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     15:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     16:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<[]>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006281191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    159.21 tests/s, 159.21 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |i|\n    l2.each\
    \ do |j|\n      return i if i == j\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpr_dwke0d\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpr_dwke0d.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006360623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.22 tests/s, 157.22 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.zip(l2).select { |x, y|\
    \ x == y }.flatten.uniq\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp08z16qus\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmp08z16qus.rb:13:in `test_common'\n\
    \     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_common\n\
    \     12:     candidate = method(:common)\n  => 13:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     14:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     15:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     16:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<[]>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.00662412 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    150.96 tests/s, 150.96 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |e|\n    l2.each\
    \ do |f|\n      return e if e == f\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpv9iegedu\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpv9iegedu.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006341935 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.68 tests/s, 157.68 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |x|\n    l2.each\
    \ do |y|\n      return x if x == y\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp2imux2uk\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmp2imux2uk.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.00646837 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.60 tests/s, 154.60 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |i|\n    l2.each\
    \ do |j|\n      return i if i == j\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpr_dwke0d\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpr_dwke0d.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006360623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.22 tests/s, 157.22 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |e|\n    l2.each\
    \ do |f|\n      return e if e == f\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpv9iegedu\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpv9iegedu.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006341935 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.68 tests/s, 157.68 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |e|\n    l2.each\
    \ do |f|\n      return e if e == f\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpv9iegedu\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpv9iegedu.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006341935 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.68 tests/s, 157.68 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |i|\n    l2.each\
    \ do |j|\n      return i if i == j\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpr_dwke0d\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpr_dwke0d.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006360623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.22 tests/s, 157.22 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |x|\n    l2.each\
    \ do |y|\n      return x if x == y\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp2imux2uk\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmp2imux2uk.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.00646837 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.60 tests/s, 154.60 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |i|\n    l2.each\
    \ do |j|\n      return i if i == j\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpr_dwke0d\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpr_dwke0d.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006360623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.22 tests/s, 157.22 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.zip(l2).find { |e1, e2|\
    \ e1 == e2 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2,\
    \ 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4,\
    \ 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n\
    \  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpnxb1lvfb\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpnxb1lvfb.rb:13:in `test_common'\n\
    \     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_common\n\
    \     12:     candidate = method(:common)\n  => 13:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     14:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     15:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     16:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006336899 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.81 tests/s, 157.81 assertions/s\n"
  timestamp: 1659794312
- exit_code: 1
  program: "# Return sorted unique common elements for two lists.\n# >>> common.call([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5,\
    \ 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n  l1.each do |e|\n    l2.each\
    \ do |f|\n      return e if e == f\n    end\n  end\n  nil\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate =\
    \ method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34,\
    \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5,\
    \ 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8],\
    \ [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\n\
    end\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpv9iegedu\nStarted\nF\n===============================================================================\n\
    Failure: test_common(TestHumanEval)\n/tmp/tmpv9iegedu.rb:18:in `test_common'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_common\n\
    \     17:     candidate = method(:common)\n  => 18:     assert_equal([1, 5, 653],\
    \ candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n     19:\
    \     assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n     20:   \
    \  assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n     21:\
    \     assert_equal([], candidate.call([4, 3, 2, 8], []))\n<[1, 5, 653]> expected\
    \ but was\n<1>\n\ndiff:\n? [1, 5, 653]\n===============================================================================\n\
    \nFinished in 0.006341935 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.68 tests/s, 157.68 assertions/s\n"
  timestamp: 1659794312

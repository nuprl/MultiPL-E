name: HumanEval_102_choose_num
language: rb
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num.call(12,\
  \ 15)\n# 14\n# >>> choose_num.call(13, 12)\n# -1\ndef choose_num(x, y)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_choose_num\n\
  \    candidate = method(:choose_num)\n    assert_equal(14, candidate.call(12, 15))\n\
  \    assert_equal(-1, candidate.call(13, 12))\n    assert_equal(12354, candidate.call(33,\
  \ 12354))\n    assert_equal(-1, candidate.call(5234, 5233))\n    assert_equal(28,\
  \ candidate.call(6, 29))\n    assert_equal(-1, candidate.call(27, 10))\n    assert_equal(-1,\
  \ candidate.call(7, 7))\n    assert_equal(546, candidate.call(546, 546))\n  end\n\
  end\n"
completions: ["  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x\
    \ <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    x += 1\n  end\n  \n  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n     \
    \ return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  if x > y\n \
    \   x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n   \
    \   return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<text>\nThe function choose_num\
    \ takes two positive numbers x and y and returns the biggest even integer number\
    \ that is in the range [x, y] inclusive. If there's no such number, then the function\
    \ should return -1.", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x ==\
    \ y || x == y - 1 || (y == x - 1 && x % 2 == 0) || y == x + 1 || (y == x - 1 &&\
    \ x % 2 == 1) ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n  \
    \  x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n   \
    \   return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n\
    \      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x\
    \ > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return\
    \ x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n \
    \   x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  even = x % 2 == 0\n\
    \  even = even ? x : y\n  even = even ? even : -1\nend", "  x = x.to_i\n  y =\
    \ y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    return\
    \ x if x % 2 == 0 then x else -1\n  end\n  -1\nend\n</code>\n<|/ a tags=ruby |>\n\
    <| c |>\nThis doesn't work if you call it with `choose_num.call(12, 15)`.\n<|/\
    \ c |>\n<| c |>\nI fixed the bug. Thanks.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 ||\
    \ y == -1 ? -1 : x + y % 2\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <=\
    \ y\n    \n    biggest = x if x % 2 == 0 else x + 1\n    \n    if biggest > y\n\
    \      return -1\n    \n    x += 1\n  end\n  \n  x\nend\n</cell>\n<cell>\nchoose_num.call(12,\
    \ 15)\n</cell>\n<cell>\nchoose_num.call(13, 12)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 13)\n</cell>\n<cell>\nchoose_num.call(13, 14)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 15)\n</cell>\n<cell>\nchoose_num.call(13, 16)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 17)\n</cell>\n<cell>\nchoose_num.call(13, 18)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 19)\n</cell>\n<cell>\nchoose_num.call(13, 20)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 21)\n</cell>\n<cell>\nchoose_num.call(13, 22)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 23)\n</cell>\n<cell>\nchoose_num.call(13, 24)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 25)\n</cell>\n<cell>\nchoose_num.call(13, 26)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 27)\n</cell>\n<cell>\nchoose_num.call(13, 28)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 29)\n</cell>\n<cell>\nchoose_num.call(13, 30)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 31)\n</cell>\n<cell>\nchoose_num.call(13, 32)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 33)\n</cell>\n<cell>\nchoose_num.call(13, 34)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 35)\n</cell>\n<cell>\nchoose_num.call(13, 36)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 37)\n</cell>\n<cell>\nchoose_num.call(13, 38)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 39)\n</cell>", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n   \
    \ if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x\
    \ <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x < y\n \
    \   min = x\n    max = y\n  else\n    min = y\n    max = x\n  end\n  \n  while\
    \ min < max\n    mid = (min + max) / 2\n    if mid % 2 == 0\n      return mid\n\
    \    else\n      if mid > max\n        max = mid - 1\n      else\n        min\
    \ = mid + 1\n      end\n    end\n  end\n  \n  return -1\nend\n</cell>\n<text>\n\
    Now let's test our function by calling it with the arguments we defined earlier:",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y\
    \ || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x : -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n\
    \    break if x % 2 == 0\n  end\n  \n  while y < x\n    y -= 1\n    \n    break\
    \ if y % 2 == 0\n  end\n  \n  return x if x > y\n  \n  return -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x\
    \ <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nNow let's write a function that checks if a number is\
    \ even or odd.", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n\
    \    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n \
    \ if x > y\n    x, y = y, x\n  end\n  \n  while x < y\n    x += 1\n    \n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x <\
    \ y || x == y || x > y ? x : -1\nend", "  if x > y\n    x, y = y, x\n  \n  while\
    \ x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    \n  return\
    \ -1\nend", "  if x > y\n    x, y = y, x\n  \n  while x != y\n    x, y = y, x\
    \ % y\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n\
    \  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while\
    \ x <= y\n    x += 1\n    return x if x % 2 == 0 && !(x % 4 == 0)\n    x -= 1\n\
    \    return x if x % 2 == 0 && !(x % 4 == 0)\n  end\n  return -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x == -1  || y == -1 ||\
    \ y == x || x == -1\n  \n  # The code below is just to show how it works. \n \
    \ # It is not part of the solution.\n  even = x % 2 == 0\n  \n  if even\n    x\
    \ /= 2\n  else\n    y /= 2\n  end\n  \n  while x > y\n    x /= 2\n  end\n  \n\
    \  while y > x\n    y /= 2\n  end\n  \n  return x if even\n  \n  y\nend\n</cell>\n\
    <text>\nNow let's test our function by calling it with the numbers 12, 15 and\
    \ 13 and see what we get:", "  ((x > y) ? x : y).to_i\nend", "  x = x.to_i\n \
    \ y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  \n  while x <= y\n    if x %\
    \ 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  \n    if x % 2 == 0\n      return x\n    end\n    \n    x = x + 2\n  end\n\
    \  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ x and returns its \nfactorial number.\nFor example:\n>>> factorial.call(5)\n\
    120\n>>> factorial.call(10)\n3628800\n>>> factorial.call(100)\n15511210043330985984000000\n\
    >>> factorial.call(1000)\n2432902008176640000\n>>> factorial.call(10000)\n121645100408832000\n\
    >>> factorial.call(100000)\n362880067194376000\n>>> factorial.call(1000000)\n\
    15511210043330985984000000\n>>> factorial.call(10000000)\n2432902008176640000\n\
    >>> factorial.call(100000000)\n121645100408832000\n>>> factorial.call(1000000000)\n\
    362880067194376000\n>>> factorial.call(10000000000)\n15511210043330985984000000\n\
    >>> factorial.call(100000000000)\n2432902008176640000\n>>> factorial.call(1000000000000)\n\
    121645100408832000\n>>> factorial.call(10000000000000)\n362880067194376000\n>>>\
    \ factorial.call(100000000000000)\n15511210043330985984000000\n>>> factorial.call(1000000000000000)\n\
    2432902008176640000\n>>> factorial.call(10000000000000000)\n121645100408832000\n\
    >>> factorial.call(100000000000000000)\n362880067194376000\n>>> factorial.call(1000000000000000000)\n\
    15511210043330985984000000\n>>> factorial.call(10000000000000000000)\n2432902008176640000\n\
    >>> factorial.call(100000000000000000000)\n121645100408832000\n>>> factorial.call(1000000000000000000000)\n\
    362880067194376000\n>>> factorial.call(10000000000000000000000)\n15511210043330985984000000\n\
    >>> factorial.call(100000000000000000000000)\n2432902008176640000\n>>> factorial.call(1000000000000000000000000)\n\
    121645100408832000\n", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x == y || x < y ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  if x > y\n    x, y\
    \ = y, x\n  elsif x == y\n    return x\n  elsif x % 2 == 0\n    x += 1\n  elsif\
    \ y % 2 == 0\n    y -= 1\n  else\n    x -= 1\n    y += 1\n  end\n  while x % 2\
    \ == 0\n    x -= 1\n  end\n  while y % 2 == 0\n    y += 1\n  end\n  while x <\
    \ y\n    x += 1\n    y -= 1\n  end\n  while x > y\n    x -= 1\n    y += 1\n  end\n\
    \  return x\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-4 |>\n\
    <| c |>\nI believe this answer should be the accepted one. While the other answers\
    \ provide some good ideas and are correct, they don't actually answer the question.\
    \ While the other answers do provide some good ideas, they don't actually answer\
    \ the question and are therefore not useful to anyone else who comes across this\
    \ question. Instead, they just provide some additional information that may help\
    \ someone else who comes across this question in the future.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  if x < y\n    min = x\n    max\
    \ = y\n  else\n    min = y\n    max = x\n  end\n  \n  while min < max\n    mid\
    \ = (min + max) / 2\n    if mid % 2 == 0\n      return mid\n    else\n      if\
    \ mid > max\n        max = mid\n      else\n        min = mid\n      end\n   \
    \ end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x <\
    \ y\n    min = x\n    max = y\n  else\n    min = y\n    max = x\n  end\n  \n \
    \ while min <= max\n    mid = (min + max) / 2\n    \n    if mid % 2 == 0\n   \
    \   min = mid + 1\n    else\n      max = mid\n    end\n  end\n  \n  min\nend\n\
    </cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(12, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y\
    \ || x == y - 1 || (x == y - 1 && y % 2 == 0) || y == y - 1\n  -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif x < y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    x += 1\n    y -= 1\n    if x % 2 == 0\n\
    \      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  return x if x < y && x % 2 == 0 && y % 2 == 0 else -1\nend\n</code>\n<|/ a\
    \ tags=ruby |>\n<| a tags=ruby |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x == y || x > y ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    y -=\
    \ 1\n    if x % 2 == 0\n      return x\n  return -1\nend", "  if x > y\n    x,\
    \ y = y, x\n  elsif x == y\n    return x\n  elsif x % 2 == 0\n    x /= 2\n   \
    \ y /= 2\n    choose_num(x, y)\n  else\n    y /= 2\n    choose_num(x, y)\n  end\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work for `choose_num.call(12,\
    \ 15)` which should return `14`.\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for `choose_num.call(12, 15)` which should\
    \ return `14`.\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c |>\n<| c |>\n\
    This doesn't work for `choose_num.call(12, 15)` which should return `14`.\n<|/\
    \ c |>\n<| a |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x\
    \ += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend", "  if x >\
    \ y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n\
    \      return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    \n    if x % 2 == 0\n      x = x + 1\n    else \n      x = x - 1\n\
    \    end\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(13, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(13, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 16)\n</cell>\n<cell>\nchoose_num.call(13, 17)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 18)\n</cell>\n<cell>\nchoose_num.call(13, 19)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 20)\n</cell>\n<cell>\nchoose_num.call(13, 21)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 22)\n</cell>\n<cell>\nchoose_num.call(13, 23)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 24)\n</cell>\n<cell>\nchoose_num.call(13, 25)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 26)\n</cell>\n<cell>\nchoose_num.call(13, 27)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 28)\n</cell>\n<cell>\nchoose_num.call(13, 29)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 30)\n</cell>\n<cell>\nchoose_num.call(13, 31)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 32)\n</cell>\n<cell>\nchoose_num.call(13, 33)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 34)\n</cell>\n<cell>\nchoose_num.call(13, 35)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 36)\n</cell>\n<cell>\nchoose_num.call(13, 37)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 38)\n</cell>\n<cell>\nchoose_num.call(13, 39)", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x < y\n    x, y = y, x\n  while x <= y\n    x += 1\n    y\
    \ -= 1\n    return x if x % 2 == 0 and y % 2 == 0 else -1\n  end\n  -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n \
    \   x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x\
    \ > y\n    x, y = y, x\n  end\n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    end\n    x += 1\n  end\n  -1\nend", "  if x > y\n    x, y = y, x\n  \n\
    \  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    \n \
    \ return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x %\
    \ 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\nbiggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such number,\
    \ then the function should return -1.\nFor example:\n>>> choose_num.call(12, 15)\n\
    14\n>>> choose_num.call(13, 12)\n-1\n</text>\n<code language=julia-1.5>", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 ==\
    \ 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  if x > y\n    x,\
    \ y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    break if x % 2 == 0\n    x +=\
    \ 2\n  end\n  \n  x -= 1 if x > y\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    \n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n\
    <code language=julia-1.5>\n", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n\
    \    x += 1\n    \n    return x if x % 2 == 0 \n    \n    return -1 if x % 2 ==\
    \ 1\n  end\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<text>\nThe function choose_num takes two positive numbers x and\
    \ y and returns the biggest even integer number that is in the range [x, y] inclusive.\
    \ If there's no such number, then the function should return -1.", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x < y && x % 2 == 0 && y % 2 == 0 else -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x < y || x == y || x >\
    \ y ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n \
    \   x += 1\n  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  while\
    \ x != y\n    x, y = y, x % y\n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n     \
    \ return x\n    end\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</cell>",
  "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x % y == 0 ? x : -1\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if `x` is negative\
    \ and `y` is positive.\n<|/ c |>\n<| c |>\n: I added a comment to the question\
    \ to clarify that case.\n<|/ c |>\n<| c |>\nI see what you mean, but I still think\
    \ this answer should be updated to include that case.\n<|/ c |>\n<| c |>\n: I\
    \ added a comment to the question to clarify that case.\n<|/ c |>\n<| c |>\n:\
    \ I added a comment to the question to clarify that case.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  \n  while\
    \ x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x ==\
    \ 0 || y == 0 || y % 2 == 0 || (x % 2 == 0 && y % 2 == 0) || x % 2 == y % 2 ?\
    \ x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2\
    \ == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend", "  even = x\
    \ % 2 == 0\n  even = even ? x : x + 1\n  odd = y % 2 == 0\n  odd = odd ? y : y\
    \ + 1\n  \n  while even && odd\n    even = even ? even + 1 : even\n    odd = odd\
    \ ? odd + 1 : odd\n  end\n  \n  return even > odd ? even : -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif x < y\n    x, y = y, x\n \
    \ end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 ==\
    \ 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 2\n    \n  \
    \  if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x != y\n    x,\
    \ y = y, x % y\n  end\n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer number x and returns\
    \ its factorial. \nThe factorial of a number n is the product of all positive\
    \ integers less than or equal to n. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\
    \ \nThe function should work for negative numbers as well. \nFor example, -1!\
    \ = -1 x -2 x -3 x -4 x -5 x -6 = -360.", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    break if x % 2 == 0\n\
    \    x += 1\n  end\n  \n  while y >= x\n    break if y % 2 == 0\n    y -= 1\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y,\
    \ x\n  while x != y\n    if x % 2 == 0\n      x = x / 2\n    else\n      x = x\
    \ * 3 + 1\n    end\n  end\n  x\nend", "  x = x.to_i\n  y = y.to_i\n  return x\
    \ if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x : -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x == 0 ||\
    \ y == 0 || y == -1 ? -1 : (x + (y - x) / 2).floor\nend", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x > y\n    x, y = y, x\n  \n  while x <= y\n    if x % 2 ==\
    \ 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x < y\n    min = x\n    max = y\n  else\n    min = y\n\
    \    max = x\n  end\n  \n  while min <= max\n    mid = (min + max) / 2\n    if\
    \ mid % 2 == 0\n      min = mid + 1\n    else\n      max = mid\n    end\n  end\n\
    \  \n  return min\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n   \
    \   return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x\
    \ - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  while y\
    \ > x\n    if y % 2 == 0\n      return y\n    y -= 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 16)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 18)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 19)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 21)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 22)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 24)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.0>\n\
    choose_", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x\
    \ <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n \
    \   x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n  \
    \    return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x\
    \ % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n\
    \  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if\
    \ x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n    \n    if\
    \ x == y\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    \n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    \n    if x % 2 == 0\n      return x\n \
    \   end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y =\
    \ y.to_i\n  if x > y\n    x, y = y, x\n  end\n  while x <= y\n    if x % 2 ==\
    \ 0\n      return x\n    end\n    x += 1\n  end\n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n\
    \    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend",
  "  even = x % 2 == 0\n  even = even ? x : y\n  even = even ? y : x\n  even = even\
    \ ? x : y\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n\
    \  even = even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even =\
    \ even ? y : x\n  even = even ? y : x\n  even = even ? y : x\n  even = even ?\
    \ y : x\n", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x ==\
    \ y - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y != x + 1) || y\
    \ == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y != x + 1) ||\
    \ y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y != x + 1)\
    \ || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y != x +\
    \ 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y !=\
    \ x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x && y\
    \ != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x &&\
    \ y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y != x\
    \ && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y !=\
    \ x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 || (y\
    \ != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1 ||\
    \ (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x + 1\
    \ || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y == x\
    \ + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y ==\
    \ x + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) || y\
    \ == x + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1) ||\
    \ y == x + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x - 1)\
    \ || y == x + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y != x -\
    \ 1) || y == x + 1 || (y != x && y != x + 1) || y == x - 1 || (y != x && y !=\
    \ x - 1) || y == x + 1 || (y != x && y != ", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  while x <= y\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n      x =\
    \ x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n      x\
    \ = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n     \
    \ x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n   \
    \   x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n \
    \     x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      ", "  x = x.to_i\n \
    \ y = y.to_i\n  \n  while x < y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n\
    \      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x :\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x < y\n    min = x\n    max = y\n\
    \  else\n    min = y\n    max = x\n  end\n  while min <= max\n    mid = min +\
    \ (max - min) / 2\n    if mid % 2 == 0\n      min = mid + 1\n    else\n      max\
    \ = mid\n    end\n  end\n  return min\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    I like your solution, but I wonder why you chose to implement it this way. Why\
    \ not just use an `if` statement?\n<|/ c |>\n<| c |>\nI thought about it but decided\
    \ against it. I think it's more readable and easier to understand what's going\
    \ on. Also, it's more efficient since it doesn't need to call `to_i` on every\
    \ iteration.\n<|/ c |>\n<| c |>\nI agree with you. Your solution is more readable\
    \ and easier to understand. I'm just wondering why you chose to implement it this\
    \ way. Why not just use an `if` statement?\n<|/ c |>\n<| c |>\nI added an explanation\
    \ to the answer. Hope it helps!\n<|/ c |>\n<| c |>\nI added an explanation to\
    \ the answer. Hope it helps!\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 || y == -1 ||\
    \ y > x || y > 0 ? (x % 2 == 0 ? x : -1) : -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(13, 13)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num.call(13, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 16)\n</cell>\n<cell>\nchoose_num.call(13, 17)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 18)\n</cell>\n<cell>\nchoose_num.call(13, 19)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 20)\n</cell>\n<cell>\nchoose_num.call(13, 21)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 22)\n</cell>\n<cell>\nchoose_num.call(13, 23)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 24)\n</cell>\n<cell>\nchoose_num.call(13, 25)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 26)\n</cell>\n<cell>\nchoose_num.call(13, 27)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 28)\n</cell>\n<cell>\nchoose_num.call(13, 29)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 30)\n</cell>\n<cell>\nchoose_num.call(13, 31)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 32)\n</cell>\n<cell>\nchoose_num.call(13, 33)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 34)\n</cell>\n<cell>\nchoose_num.call(13, 35)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 36)\n</cell>\n<cell>\nchoose_num.call(13, 37)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 38)\n</cell>\n<cell>\nchoose_num.call(13, 39)\n</cell>\n<cell>", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    \n    num = x + (y - (x + (y - (x + (y\
    \ - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x +\
    \ (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x\
    \ + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y -\
    \ (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y\
    \ - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x +\
    \ (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x\
    \ + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y -\
    \ (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y\
    \ - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x +\
    \ (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x\
    \ + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y -\
    \ (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y\
    \ - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x +\
    \ (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x\
    \ + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y - (x + (y -\
    \ (x + (y - (x + (y - (x + (y - (x ", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    end\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<cell>", "  x\
    \ = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif x == y\n    return\
    \ x\n  elsif x % 2 == 0\n    x -= 1\n  else\n    y -= 1\n  end\n  while x % 2\
    \ == 0\n    x -= 1\n  end\n  while y % 2 == 0\n    y -= 1\n  end\n  while x <\
    \ y\n    x += 1\n    y -= 1\n  end\n  while x > y\n    x -= 1\n    y += 1\n  end\n\
    \  return x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n \
    \   \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  if x >\
    \ y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n\
    \      return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n     \
    \ return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n   \
    \ x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n    \
    \  x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n  \
    \    x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + ", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 ==\
    \ 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend\n</cell>\n<cell>\nchoose_num.call(12,\
    \ 15)\n</cell>\n<cell>\nchoose_num.call(13, 12)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 13)\n</cell>\n<cell>\nchoose_num.call(13, 14)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 15)\n</cell>\n<cell>\nchoose_num.call(13, 16)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 17)\n</cell>\n<cell>\nchoose_num.call(13, 18)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 19)\n</cell>\n<cell>\nchoose_num.call(13, 20)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 21)\n</cell>\n<cell>\nchoose_num.call(13, 22)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 23)\n</cell>\n<cell>\nchoose_num.call(13, 24)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 25)\n</cell>\n<cell>\nchoose_num.call(13, 26)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 27)\n</cell>\n<cell>\nchoose_num.call(13, 28)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 29)\n</cell>\n<cell>\nchoose_num.call(13, 30)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 31)\n</cell>\n<cell>\nchoose_num.call(13, 32)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 33)\n</cell>\n<cell>\nchoose_num.call(13, 34)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 35)\n</cell>\n<cell>\nchoose_num.call(13, 36)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 37)\n</cell>\n<cell>\nchoose_num.call(13, 38)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 39)\n</cell>\n<cell>\nchoose_num.call(13, 40)\n</cell>", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  if x < y\n    min = x\n    max = y\n  else\n    min = y\n  \
    \  max = x\n  end\n  \n  while min <= max\n    mid = (min + max) / 2\n    if mid\
    \ % 2 == 0\n      min = mid + 1\n    else\n      max = mid\n    end\n  end\n \
    \ \n  return min\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n   \
    \   return x\n    end\n  end\n  \n  return -1\nend", "  if x > y\n    x, y = y,\
    \ x\n  \n  while x <= y\n    x += 1\n    \n    return x if x % 2 == 0 else -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    break if x % 2 == 0\n    x += 1\n  end\n  \n  while y > x\n    break\
    \ if y % 2 == 0\n    y -= 1\n  end\n  \n  x\nend", "  if x > y\n    x, y = y,\
    \ x\n  elsif x == y\n    return x\n  elsif x % 2 == 0\n    x -= 1\n  elsif y %\
    \ 2 == 0\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  else\n\
    \    x -= 1\n    y -= 1\n  end\n  while x % 2 == 0\n    x -= 1\n  end\n  while\
    \ y % 2 == 0\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n    y -=\
    \ 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 == x % 2\n\
    \    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 ==\
    \ x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while\
    \ y % 2 == x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n\
    \  while y % 2 == x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n\
    \  end\n  while y % 2 == x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n  \
    \  x -= 1\n  end\n  while y % 2 == x % 2\n    y -= 1\n  end\n  while x % 2 ==\
    \ y % 2\n    x -= 1\n  end\n  while y % 2 == x % 2\n    y -= 1\n  end\n  while\
    \ x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 == x % 2\n    y -= 1\n  end\n\
    \  while x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 == x % 2\n    y -= 1\n\
    \  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 == x % 2\n  \
    \  y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while y % 2 ==\
    \ x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n  while\
    \ y % 2 == x % 2\n    y -= 1\n  end\n  while x % 2 == y % 2\n    x -= 1\n  end\n\
    \  while y % 2 == x % 2\n    y -= 1\n  end\n  ", "  x = x.to_i\n  y = y.to_i\n\
    \  return x if x > y || x == y || x % 2 == 0 && y % 2 == 0 \n  \n  # Find the\
    \ biggest even number between x and y\n  biggest_even = x if x > y || x == y ||\
    \ x % 2 == 0 && y % 2 == 0 \n  \n  # Find the smallest even number between x and\
    \ y\n  smallest_even = y if x > y || x == y || x % 2 == 0 && y % 2 == 0 \n  \n\
    \  # Find the biggest odd number between x and y\n  biggest_odd = x if x > y ||\
    \ x == y || x % 2 != 0 && y % 2 != 0 \n  \n  # Find the smallest odd number between\
    \ x and y\n  smallest_odd = y if x > y || x == y || x % 2 != 0 && y % 2 != 0 \n\
    \  \n  # Return the biggest even number that is in the range [x, y] inclusive\n\
    \  return biggest_even if biggest_even % 2 == 0 \n  \n  # Return the smallest\
    \ even number that is in the range [x, y] inclusive\n  return smallest_even if\
    \ smallest_even % 2 == 0 \n  \n  # Return the biggest odd number that is in the\
    \ range [x, y] inclusive\n  return biggest_odd if biggest_odd % 2 != 0 \n  \n\
    \  # Return the smallest odd number that is in the range [x, y] inclusive\n  return\
    \ smallest_odd if smallest_odd % 2 != 0 \nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x < y\n    min = x\n    max = y\n  else\n    min = y\n    max = x\n\
    \  end\n  \n  while min <= max\n    mid = (min + max) / 2\n    if mid % 2 == 0\n\
    \      min = mid + 1\n    else\n      max = mid\n    end\n  end\n  \n  return\
    \ min\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 ==\
    \ 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y,\
    \ x\n  while x <= y\n    x += 1\n    y -= 1\n    if x % 2 == 0\n      return x\n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if\
    \ x < y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n    \
    \  return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x - 1\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  return x.even? && y.even?\
    \ ? x : (x.odd? && y.odd? ? y : -1)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thanks for your answer! I understand that your code is more efficient than mine,\
    \ but I still don't understand why my code doesn't work. Could you please explain\
    \ why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation to the\
    \ answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation! I still\
    \ don't understand why my code doesn't work. Could you please explain why my code\
    \ doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation to the answer. Hope\
    \ it helps.\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\nThe reason why your code\
    \ doesn't work is that you're trying to call choose_num with two arguments, but\
    \ you defined it only with one argument. \n<code>", "  x = x.to_i\n  y = y.to_i\n\
    \  return x if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 ==\
    \ 0) ? -1 : (x % 2 == 0 && y % 2 != 0) ? x : y\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    break if x % 2 == 0\n    x += 1\n  end\n \
    \ \n  while y >= x\n    break if y % 2 == 0\n    y -= 1\n  end\n  \n  x -= 1 if\
    \ x > y\n  \n  x\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\n\
    choose_num.call(13, 12)\n</cell>\n<cell>\nchoose_num.call(15, 12)\n</cell>\n<cell>\n\
    choose_num.call(15, 15)\n</cell>\n<cell>\nchoose_num.call(15, 13)\n</cell>\n<cell>\n\
    choose_num.call(15, 14)\n</cell>\n<cell>\nchoose_num.call(15, 15)\n</cell>\n<cell>\n\
    choose_num.call(15, 16)\n</cell>\n<cell>\nchoose_num.call(15, 17)\n</cell>\n<cell>\n\
    choose_num.call(15, 18)\n</cell>\n<cell>\nchoose_num.call(15, 19)\n</cell>\n<cell>\n\
    choose_num.call(15, 20)\n</cell>\n<cell>\nchoose_num.call(15, 21)\n</cell>\n<cell>\n\
    choose_num.call(15, 22)\n</cell>\n<cell>\nchoose_num.call(15, 23)\n</cell>\n<cell>\n\
    choose_num.call(15, 24)\n</cell>\n<cell>\nchoose_num.call(15, 25)\n</cell>\n<cell>\n\
    choose_num.call(15, 26)\n</cell>\n<cell>\nchoose_num.call(15, 27)\n</cell>\n<cell>\n\
    choose_num.call(15, 28)\n</cell>\n<cell>\nchoose_num.call(15, 29)\n</cell>\n<cell>\n\
    choose_num.call(15, 30)\n</cell>\n<cell>\nchoose_num.call(15, 31)\n</cell>\n<cell>\n\
    choose_num.call(15, 32)\n</cell>\n<cell>\nchoose_num.call(15, 33)\n</cell>\n<cell>\n\
    choose_num.call(15, 34)\n</cell>\n<cell>\nchoose_num.call(15, 35)\n</cell>\n<cell>\n\
    choose_num.call(15, ", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x ==\
    \ y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x : -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend", "  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x +=\
    \ 1\n    \n    if x % 2 == 0\n      return x\n    \n  return -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x > 0\n    x -= 2\n\
    \    y -= 2\n    if y >= 0\n      return x if x % 2 == 0 then y else -1\n    end\n\
    \  end\n  return -1\nend\n</code>\n<|/ a tags=ruby |>\n<| c |>\nI like your solution,\
    \ but I believe it can be improved. For example, `choose_num.call(12, 15)` returns\
    \ `14` instead of `-1`. Also, `choose_num.call(13, 12)` returns `-1` instead of\
    \ `-1`. Also, `choose_num.call(13, 13)` returns `-1` instead of `-1`.\n<|/ c |>\n\
    <| c |>\nThanks for your comment. I fixed the bugs. I believe that my code can\
    \ handle all cases. Please let me know if there are any more bugs.\n<|/ c |>\n\
    <| c |>\nI believe your code is correct, but I believe it can be improved. For\
    \ example, `choose_num.call(12, 15)` returns `14` instead of `-1`. Also, `choose_num.call(13,\
    \ 12)` returns `-1` instead of `-1`. Also, `choose_num.call(13, 13)` returns `-1`\
    \ instead of `-1`.\n<|/ c |>\n<| c |>\nI believe your code is correct, but I believe\
    \ it can be improved. For example, `choose_num.call(12, 15)` returns `14` instead\
    \ of `-1`. Also, `choose_num.call(13, 12)` returns `-1` instead of `-1`. Also,\
    \ `choose_num.call(13, 13)` returns `-1` instead of `-1`.\n<|/ c |>\n<| c |>\n\
    I believe your code is correct, but I believe it can be improved. For example,\
    \ `choose_num.call(12, 15)` returns `14` instead of `-1`. Also, `choose_num.call(13,\
    \ 12)` returns `-1` instead of `-1`. Also, `choose_num.call(13, 13)` returns `-1`\
    \ instead of `-1`.\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x\
    \ += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  while x != y\n    x, y = y, x % y\n  x\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n \
    \   x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n  \
    \    return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 2\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n\
    \    x += 1\n    return x if x % 2 == 0 then x else -1\n  end\n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x +=\
    \ 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n \
    \   x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    \n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<cell>", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n\
    \  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x %\
    \ 2 == 0\n      x = x + 1\n    else\n      x = x - 1\n    end\n    \n    if x\
    \ % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<code\
    \ language=julia-1.4>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\nbiggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such number,\
    \ then the function should return -1.\nFor example:\n>>> choose_num.call(12, 15)\n\
    14\n>>> choose_num.call(13, 12)\n-1\n</text>\n<code language=julia-1.4>", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if x % 2 ==\
    \ 0\n      return x\n    end\n  end\n  \n  -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x % 2 == 0\n      x\
    \ = x + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  return x\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x :\
    \ -1\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  elsif x == y\n    return x\n  elsif x %\
    \ 2 == 0\n    return choose_num(x / 2, y)\n  else\n    return choose_num(x / 2,\
    \ y + 1)\n  end\nend\n</code>\n<|/ a tags=ruby,recursion |>\n<| c |>\nI like this\
    \ solution, but I wonder if there is a way to do it without using an explicit\
    \ return statement.\n<|/ c |>\n<| c |>\nI added a version without an explicit\
    \ return statement\n<|/ c |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to do it without using an explicit return statement.\n<|/ c |>\n<|\
    \ c |>\nI added a version without an explicit return statement\n<|/ c |>\n<| a\
    \ tags=ruby,recursion |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  while x\
    \ <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n \
    \ \n  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n\
    \  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if\
    \ x > y || x == y || x == y - 1 || (y == x - 1 && x % 2 == 0) || y == x + 1 ||\
    \ (y == x - 1 && x % 2 == 1) ? x : -1\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

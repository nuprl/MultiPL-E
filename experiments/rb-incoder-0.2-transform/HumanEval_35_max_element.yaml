name: HumanEval_35_max_element
language: rb
prompt: "# Return maximum element in the list.\n# >>> max_element.call([1, 2, 3])\n\
  # 3\n# >>> max_element.call([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\ndef\
  \ max_element(l)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_element\n\
  \    candidate = method(:max_element)\n    assert_equal(3, candidate.call([1, 2,\
  \ 3]))\n    assert_equal(124, candidate.call([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
  \ -10]))\n  end\nend\n"
completions: ["  l.sort!\n  l.last\nend", "  l.sort!\n  l.last\nend", "  l.sort!\n\
    \  l.last\nend", "  l.max\nend", "  l.max_by { |e| e }\nend", "  l.sort!\n  l.last\n\
    end", "  l.sort!\n  l.last\nend", "  l.max_by { |e| e }\nend", "  l.sort!\n  l.last\n\
    end", "  l.max_by { |e| e }\nend", "  l.max_by { |e| e }\nend", "  l.sort!\n \
    \ l.last\nend", "  l.sort!\n  l.last\nend", "  l.sort!\n  l.last\nend", "  l.sort!\n\
    \  l.last\nend", "  l.sort!\n  l.last\nend", "  l.max_by { |x| x }\nend", "  l.sort!\n\
    \  l.last\nend", "  l.max\nend", "  l.sort!\n  l.last\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

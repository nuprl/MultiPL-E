name: HumanEval_105_by_length
language: rb
prompt: "# Given an array of integers, sort the integers that are between 1 and 9\
  \ inclusive,\n# reverse the resulting array, and then replace each digit by its\
  \ corresponding name from\n# \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
  Six\", \"Seven\", \"Eight\", \"Nine\".\n# For example:\n# >>> by_length.call([2,\
  \ 1, 1, 4, 5, 8, 2, 3])\n# [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"\
  Two\", \"One\", \"One\"]\n# If the array is empty, return an empty array:\n# >>>\
  \ by_length.call([])\n# []\n# If the array has any strange number ignore it:\n#\
  \ >>> by_length.call([1, -1, 55])\n# [\"One\"]\ndef by_length(arr)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_by_length\n\
  \    candidate = method(:by_length)\n    assert_equal([\"Eight\", \"Five\", \"Four\"\
  , \"Three\", \"Two\", \"Two\", \"One\", \"One\"], candidate.call([2, 1, 1, 4, 5,\
  \ 8, 2, 3]))\n    assert_equal([], candidate.call([]))\n    assert_equal([\"One\"\
  ], candidate.call([1, -1, 55]))\n    assert_equal([\"Three\", \"Two\", \"One\"],\
  \ candidate.call([1, -1, 3, 2]))\n    assert_equal([\"Nine\", \"Eight\", \"Four\"\
  ], candidate.call([9, 4, 8]))\n  end\nend\n"
completions: ["  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" :\
    \ x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |n| by_length.call([n]) }.flatten\nend", "  arr.sort!\n  arr.map!\
    \ {|x| x if x > 0 && x <= 9 ? by_length(x).reverse : x}\n  arr.compact!\n  arr\n\
    end", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |x| x.to_s.reverse }.map { |x| x.to_sym }\nend", "  arr.sort!\n\
    \  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |i| i.to_s.reverse }.uniq\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"\
    One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x <\
    \ 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.map! {|x| x < 10 ? x : 10 - x}\n  arr.map! {|x| x.to_s.upcase\
    \ }\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"\
    One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x <\
    \ 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |n| n.to_s.reverse }.map { |n| n.to_sym }\nend", "  arr.sort!\n\
    \  arr.map! {|x| x if x > 0 && x <= 9 ? by_length.call([x]) : x}\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.map { |i| i.to_sym\
    \ }\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.map! {|x| x if x >= 1 && x <= 9 ? by_length.call([x-1] + x.to_s.chars.reverse)\
    \ : x}\n  arr.compact!\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"\
    One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x <\
    \ 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", " \
    \ arr.sort!\n  arr.map!{ |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ?\
    \ \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"\
    Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.each do |i|\n\
    \    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] =\
    \ \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\"\
    \ if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n\
    \    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\n\
    end", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| n % 10 == 0 ? \"One\" :\
    \ n % 10 == 1 ? \"Two\" : n % 10 == 2 ? \"Three\" : n % 10 == 3 ? \"Four\" : n\
    \ % 10 == 4 ? \"Five\" : n % 10 == 5 ? \"Six\" : n % 10 == 6 ? \"Seven\" : n %\
    \ 10 == 7 ? \"Eight\" : n % 10 == 8 ? \"Nine\" : n }\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"\
    Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" :\
    \ x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.map! {|x| x.to_s.rjust(2, \"0\") }\n  arr.empty? ? [] : arr\nend", "  arr.sort!\n\
    \  arr.map! { |x| x if 1 <= x && x <= 9 }\n  arr.empty? ? [] : arr.map { |x| names[x]\
    \ }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" :\
    \ x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |i| i >= 1 && i <= 9 ? \"#{i}\" : i }.reverse\nend", "  arr.sort!\n\
    \  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" :\
    \ x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr\nend", "  arr.sort!\n \
    \ arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x if 1 <= x && x <=\
    \ 9 }\n  arr.empty? ? [] : arr.map {|x| x.to_s }.reverse\nend", "  arr.sort!\n\
    \  arr.each do |i|\n    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i\
    \ == 2\n    arr[i] = \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n  \
    \  arr[i] = \"Five\" if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"\
    Seven\" if i == 7\n    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if\
    \ i == 9\n  end\n  arr.compact!\n  arr.map { |i| i.to_s.reverse }\nend\n</code>\n\
    <|/ a tags=ruby,arrays |>\n<| c |>\nThis doesn't work if there are two or more\
    \ numbers that are the same.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before\
    \ posting. The OP said that he wanted the numbers between 1 and 9 to be sorted,\
    \ and that he wanted to reverse the resulting array. He didn't say anything about\
    \ sorting numbers that are the same.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ My mistake.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution that\
    \ sorts numbers that are the same.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that sorts numbers that are the same.\n<|/ c |>\n<| a tags=ruby,arrays\
    \ |>\n<code>", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"\
    Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" :\
    \ x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map", "  arr.sort!\n  arr.map!\
    \ {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.empty?\
    \ ? [] : arr.map {|x| names[x] }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\" : x % 10 == 2 ? \"Three\"\
    \ : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\" : x % 10 == 5 ? \"Six\" :\
    \ x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\" : x % 10 == 8 ? \"Nine\" :\
    \ x }\nend", "  arr.sort!\n  arr.each do |x|\n    if x >= 1 && x <= 9\n      arr[x]\
    \ = names[x]\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\" : x % 10 == 2 ? \"Three\"\
    \ : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\" : x % 10 == 5 ? \"Six\" :\
    \ x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\" : x % 10 == 8 ? \"Nine\" :\
    \ x }\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x|\
    \ x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\" : x % 10 == 2 ? \"Three\" : x\
    \ % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\" : x % 10 == 5 ? \"Six\" : x %\
    \ 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\" : x % 10 == 8 ? \"Nine\" : nil\
    \ }\nend", "  return arr.sort { |a, b| b - a } if arr.any?\n  []\nend", "  arr.sort!\n\
    \  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend",
  "  arr.sort!\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n\
    \  arr.map", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| n < 10 ? \"One\"\
    \ : n < 100 ? \"Two\" : n < 1000 ? \"Three\" : n < 10000 ? \"Four\" : n < 100000\
    \ ? \"Five\" : n < 1000000 ? \"Six\" : n < 10000000 ? \"Seven\" : n < 100000000\
    \ ? \"Eight\" : n < 1000000000 ? \"Nine\" : n }\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.map!\
    \ {|x| x.to_s.upcase }\n  arr.compact!\n  arr\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x.to_s.reverse }.map { |x| x.to_sym }\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse.sub(/\\\
    d/) { |m| m.to_i } }\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x\
    \ < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ?\
    \ \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"\
    Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" :\
    \ x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\nend", "  return arr.sort { |a, b| b - a }\
    \ if arr.any?\n  []\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x\
    \ < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ?\
    \ \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  return arr.sort.reverse.map { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\"\
    \ : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\"\
    \ : x % 10 == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\"\
    \ : x % 10 == 8 ? \"Nine\" : nil }.compact\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\" : x % 10 ==\
    \ 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\" : x % 10 ==\
    \ 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\" : x % 10 ==\
    \ 8 ? \"Nine\" : x }\nend", "  return arr.sort { |a, b| b - a } if arr.size >\
    \ 0\n  []\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 ? by_length.call([x-1]\
    \ + by_length.call([x+1])) : x}\n  arr.compact!\n  arr\nend", "  arr.sort!\n \
    \ arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\"\
    \ : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", " \
    \ arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"\
    Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" :\
    \ x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.each do |i|\n \
    \   arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"\
    Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i\
    \ == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n   \
    \ arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr.reverse!\n\
    \  arr.map do |i|\n    i = i.to_s\n    i = i.gsub(/\\d/) { |m| by_length.call([m])\
    \ }\n    i\n  end\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i] = \"One\"\
    \ if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\" if i == 3\n\
    \    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n    arr[i]\
    \ = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i] = \"Eight\"\
    \ if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr.reverse!\n  arr.map\
    \ do |i|\n    i = i.to_s\n    i = i.upcase\n    i\n  end\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| n.to_s.reverse\
    \ }.map { |n| names[n.to_i] }\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i]\
    \ = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\"\
    \ if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n\
    \    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i]\
    \ = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\nend",
  "  arr.sort!\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_sym)\n  arr.map!(&:to_sym)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n  arr.map!(&:to_s)\n\
    \  ", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  return arr.sort { |a, b| a.length\
    \ <=> b.length }.\n    map { |x| x.to_s.reverse }.\n    select { |x| x.to_s.match(/^1?$/)\
    \ }\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.empty? ? [] : arr.map { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\"\
    \ : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\"\
    \ : x % 10 == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\"\
    \ : x % 10 == 8 ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x % 10 == 0 ? \"One\" : \"Two\" if x % 10 == 1 ? \"Two\" : \"Three\" if\
    \ x % 10 == 2 ? \"Three\" : \"Four\" if x % 10 == 3 ? \"Four\" : \"Five\" if x\
    \ % 10 == 4 ? \"Five\" : \"Six\" if x % 10 == 5 ? \"Six\" : \"Seven\" if x % 10\
    \ == 6 ? \"Seven\" : \"Eight\" if x % 10 == 7 ? \"Eight\" : \"Nine\" }\nend",
  "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.empty? ? [] : arr.map\
    \ {|x| x.to_s }.reverse\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\"\
    \ : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x % 10 == 0 ? \"One\" : x % 10 ==\
    \ 1 ? \"Two\" : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4\
    \ ? \"Five\" : x % 10 == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ?\
    \ \"Eight\" : x % 10 == 8 ? \"Nine\" : nil }\nend", "  arr.sort!\n  arr.map! {|x|\
    \ x if x > 0 && x < 10 && \"One\".include?(x.to_s) }\n  arr.reverse!\n  arr\n\
    end", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\"\
    \ : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.map! {|x| x if x > 0 && x <= 9 }\n  arr.map! {|x| x.to_s.upcase\
    \ }\n  arr.empty? ? [] : arr\nend", "  return arr.sort.reverse.map { |x| names[x]\
    \ }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.uniq\n\
    end", "  arr.sort!\n  arr.map! {|x| x if 1 <= x && x <= 9 }\n  arr.empty? ? []\
    \ : arr.map {|x| by_length[x - 1] }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend",
  "  return arr.sort { |a, b| a <=> b }.map { |n| by_length.call([n]) }\nend", " \
    \ arr.sort!\n  arr.map! {|x| x.to_s.rjust(2, \"0\") }\n  arr.compact!\n  arr.map!\
    \ {|x| x.to_s.rjust(3, \"0\") }\n  arr.compact!\n  arr\nend", "  arr.sort!\n \
    \ arr.map! {|x| x.to_s.reverse.sub(/\\d/) { |m| m.to_i if m.to_i < 10 }}\n  arr.empty?\
    \ ? [] : arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"\
    One\" : \"Two\" if x < 20 ? \"Two\" : \"Three\" if x < 30 ? \"Three\" : \"Four\"\
    \ if x < 40 ? \"Four\" : \"Five\" if x < 50 ? \"Five\" : \"Six\" if x < 60 ? \"\
    Six\" : \"Seven\" if x < 70 ? \"Seven\" : \"Eight\" if x < 80 ? \"Eight\" : \"\
    Nine\" }.reverse\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse\
    \ }.uniq\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse\
    \ }.uniq\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x % 10 == 0 ?\
    \ \"One\" : x % 10 == 1 ? \"Two\" : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"\
    Four\" : x % 10 == 4 ? \"Five\" : x % 10 == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\"\
    \ : x % 10 == 7 ? \"Eight\" : x % 10 == 8 ? \"Nine\" : x }\nend", "  arr.sort!\n\
    \  arr.each do |x|\n    if x < 1 || x > 9\n      next\n    end\n    arr[x - 1]\
    \ = \"#{x}\".to_sym\n  end\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |n| n % 10 == 0 ? \"One\" : n % 10 == 1 ? \"Two\" : n % 10 == 2 ? \"Three\"\
    \ : n % 10 == 3 ? \"Four\" : n % 10 == 4 ? \"Five\" : n % 10 == 5 ? \"Six\" :\
    \ n % 10 == 6 ? \"Seven\" : n % 10 == 7 ? \"Eight\" : n % 10 == 8 ? \"Nine\" :\
    \ n }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\n\
    end", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\n\
    end", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map! {|x|\
    \ x < 10 ? x : 10 - x}\n  arr.map! {|x| x % 10 == 0 ? \"One\" : x % 10 == 1 ?\
    \ \n    \"Two\" : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : \n    x %\
    \ 10 == 4 ? \"Five\" : x % 10 == 5 ? \"Six\" : \n    x % 10 == 6 ? \"Seven\" :\
    \ x % 10 == 7 ? \"Eight\" : \n    x % 10 == 8 ? \"Nine\" : nil}\n  arr\nend",
  "  arr.sort!\n  arr.map! do |x|\n    if x < 1 || x > 9\n      nil\n    else\n  \
    \    \"One\"\n    end\n  end\n  arr.compact!\n  arr\nend\n</code>\n<|/ a tags=ruby,arrays\
    \ |>\n<| c |>\nThis doesn't answer the question. The OP wants to reverse the order\
    \ of the numbers, not just sort them.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ I've edited my answer to include a solution that reverses the order of the numbers.\
    \ I hope it helps.\n<|/ c |>\n<| c |>\nI like your solution, but I still think\
    \ it would be better to use a hash to map the numbers to their names. That way\
    \ you don't have to worry about what happens when you get to 9. Also, if you wanted\
    \ to reverse the order of the names, you could just do `arr.map!{|x| names.invert[x]}`\n\
    <|/ c |>\n<| c |>\nI agree with you. I was trying to keep it simple and avoid\
    \ the hash and invert methods. But I agree that your solution is more elegant\
    \ and probably more efficient.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x|\
    \ x.to_s.reverse.sub(/\\d/) { |m| m.to_i } }\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x % 10 == 0 ? \"One\" : x % 10 == 1 ? \"Two\" : x % 10\
    \ == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4 ? \"Five\" : x % 10\
    \ == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ? \"Eight\" : x % 10\
    \ == 8 ? \"Nine\" : nil }\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 &&\
    \ x <= 9 }\n  arr.map! {|x| x ? \"#{x}\" : \"One\" }\n  arr\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |i|\
    \ i.to_s.reverse }.uniq\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\"\
    \ : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x % 10 == 0 ? \"One\" : x % 10 ==\
    \ 1 ? \"Two\" : x % 10 == 2 ? \"Three\" : x % 10 == 3 ? \"Four\" : x % 10 == 4\
    \ ? \"Five\" : x % 10 == 5 ? \"Six\" : x % 10 == 6 ? \"Seven\" : x % 10 == 7 ?\
    \ \"Eight\" : x % 10 == 8 ? \"Nine\" : nil }\nend", "  return arr.reverse if arr.size\
    \ <= 9 else arr.map { |x| x.to_s.reverse }.first(9)\nend", "  arr.sort!\n  arr.map!\
    \ { |x| x < 10 ? x.to_s : \"#{x}#{One}\" }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.map! {|x| x.to_s.rjust(2, \"0\") }\n  arr.compact!\n  arr.map! {|x| x.to_s.to_i(10)\
    \ }\n  arr.compact!\n  arr.map! {|x| by_length(x) }\n  arr\nend", "  arr.sort!\n\
    \  arr.map! do |x|\n    if x < 1 || x > 9\n      nil\n    else\n      \"One\"\n\
    \    end\n  end\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x\
    \ < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\"\
    \ : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" :\
    \ x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i] = \"\
    One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\" if i ==\
    \ 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n    arr[i]\
    \ = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i] = \"Eight\"\
    \ if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr.reverse!\n  arr.each\
    \ do |i|\n    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n   \
    \ arr[i] = \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] =\
    \ \"Five\" if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if\
    \ i == 7\n    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n\
    \  end\n  arr\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=ruby,arrays |>\n<code>",
  "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ?\
    \ \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"\
    Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |n| by_length.call([n]) }.flatten\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.empty?\
    \ ? [] : arr.map {|x| x.to_s }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend",
  "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ?\
    \ \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"\
    Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |n| n.to_s.reverse }.map { |n| n.to_s.upcase }\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |i| i.to_s.reverse }.map { |i| i.to_s.gsub(/\\d/) { |m| by_length.call([m])\
    \ } }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.map\
    \ { |x| x[0..0] }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |i| i.to_s[0..9]\
    \ }.reverse\nend", "  arr.sort!\n  arr.map!{ |x| x % 10 }\n  arr.map!{ |x| x ?\
    \ \"#{x}\" : \"One\" }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.each\
    \ do |i|\n    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n   \
    \ arr[i] = \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] =\
    \ \"Five\" if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if\
    \ i == 7\n    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| by_length.call([n])\
    \ }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| n.to_s.reverse }.map\
    \ { |n| n.to_s.to_sym }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n|\
    \ n.to_s.reverse }.map { |n| n[1..-1].to_sym }\nend", "  arr.sort!\n  arr.map!\
    \ { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.map! { |x| x if x > 0 && x <= 9 }\n  arr.map!\
    \ { |x| x[/\\d/] }\n  arr.map! { |x| x ? \"#{x}\" : \"One\" }\n  arr\nend", " \
    \ arr.sort!\n  arr.each do |i|\n    if i < 1 || i > 9\n      next\n    end\n \
    \   arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"\
    Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i\
    \ == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n   \
    \ arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\n\
    end", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.map!{ |x|\
    \ x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"\
    Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\"\
    \ : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.empty? ? [] : arr.map { |n| by_length.call([n]) }\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.map { |i| names[i] }\nend",
  "  return arr.sort { |a, b| a.to_i < b.to_i ? -1 : a.to_i > b.to_i ? 1 : 0 }.reverse.map\
    \ { |n| name(n) }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10\
    \ ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\"\
    \ : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" :\
    \ x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\nend", "  arr.sort!\n\
    \  arr.map! {|x| x if x > 0 && x <= 9 ? x.to_s.upcase : \"One\"}\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\"\
    \ : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x <\
    \ 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x\
    \ < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n \
    \ arr.empty? ? [] : arr.map { |n| n.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.map! {|x| x.to_s.upcase }\n  arr.compact!\n\
    \  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\n\
    end", "  return arr.sort.reverse.map { |x| [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1] } if arr.any?\n  []\n\
    end", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x <\
    \ 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\"\
    \ : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000\
    \ ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000\
    \ ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend",
  "  arr.sort!\n  arr.map! {|i| i if i.between?(1, 9) }\n  arr.map! {|i| i.to_s.reverse\
    \ }\n  arr.map! {|i| i if i.is_a?(String) }\n  arr.empty? ? [] : arr\nend", " \
    \ arr.sort!\n  arr.each do |x|\n    if x >= 1 && x <= 9\n      x = x.to_s\n  \
    \    arr[x-1] = One[x]\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.map!\
    \ {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000\
    \ ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000 ?\
    \ \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n\
    \  arr\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.map\
    \ { |x| x.to_sym }\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? \"One\" : x <\
    \ 100 ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"\
    Five\" : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"\
    Eight\" : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.map! {|i| i if i > 0 && i < 10 && i.to_s.rjust(2, '0') }\n  arr.compact!\n\
    \  arr.map! {|i| One.call(i) if i.to_s.rjust(2, '0').to_i == i.to_i }\n  arr\n\
    end", "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.map { |x|\
    \ x.to_sym }\nend", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100\
    \ ? \"Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\"\
    \ : x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.map! { |x| x if x > 0 && x <= 9 }\n  arr.map! { |x| x ? \"#{x}\" : \"One\"\
    \ }\n  arr\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i] = \"One\" if i ==\
    \ 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\" if i == 3\n    arr[i]\
    \ = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n    arr[i] = \"Six\"\
    \ if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i] = \"Eight\" if i ==\
    \ 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\nend", "  arr.sort!\n  arr.map!\
    \ {|x| x if x > 0 && x <= 9 ? by_length.call([x]) : x}\n  arr\nend", "  arr.sort!\n\
    \  arr.map! {|x| x if 1 <= x && x <= 9 }\n  arr.empty? ? [] : arr.map {|x| by_length.call([x])\
    \ }\nend", "  arr.sort!\n  arr.map! { |x| x if x >= 1 && x <= 9 }\n  arr.map!\
    \ { |x| x[/\\d/] ? by_length.call(x[/\\d/]) : x }\n  arr.compact!\n  arr\nend",
  "  arr.sort!\n  arr.empty? ? [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"\
    Two\" : x < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" :\
    \ x < 1000000 ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\"\
    \ : x < 1000000000 ? \"Nine\" : x }\nend", "  arr.sort!\n  arr.empty? ? [] : arr.map\
    \ { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i]\
    \ = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\"\
    \ if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n\
    \    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i]\
    \ = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr.reverse!\n\
    \  arr.map do |i|\n    i = i.to_s\n    i = i.upcase if i.length == 1\n    i\n\
    \  end\nend", "  return arr.sort { |a, b| a.to_i < b.to_i ? -1 : a.to_i > b.to_i\
    \ ? 1 : 0 }.reverse.map { |n| names[n] }\nend", "  arr.sort!\n  arr.empty? ? []\
    \ : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\nend", "  arr.sort!\n  arr.each do |i|\n    if i.to_i < 10\n      arr[i]\
    \ = \"One\"\n    elsif i.to_i < 20\n      arr[i] = \"Two\"\n    elsif i.to_i <\
    \ 30\n      arr[i] = \"Three\"\n    elsif i.to_i < 40\n      arr[i] = \"Four\"\
    \n    elsif i.to_i < 50\n      arr[i] = \"Five\"\n    elsif i.to_i < 60\n    \
    \  arr[i] = \"Six\"\n    elsif i.to_i < 70\n      arr[i] = \"Seven\"\n    elsif\
    \ i.to_i < 80\n      arr[i] = \"Eight\"\n    elsif i.to_i < 90\n      arr[i] =\
    \ \"Nine\"\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.each do |i|\n   \
    \ arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n    arr[i] = \"\
    Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] = \"Five\" if i\
    \ == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if i == 7\n   \
    \ arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\n\
    end", "  arr.sort!\n  arr.map! { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x\
    \ < 1000 ? \"Three\" : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000\
    \ ? \"Six\" : x < 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000\
    \ ? \"Nine\" : x }\n  arr.reverse!\n  arr\nend", "  arr.sort!\n  arr.empty? ?\
    \ [] : arr.map { |x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\"\
    \ : x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x <\
    \ 10000000 ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\"\
    \ : x }\nend", "  arr.sort!\n  arr.each do |i|\n    arr[i] = \"One\" if i == 1\n\
    \    arr[i] = \"Two\" if i == 2\n    arr[i] = \"Three\" if i == 3\n    arr[i]\
    \ = \"Four\" if i == 4\n    arr[i] = \"Five\" if i == 5\n    arr[i] = \"Six\"\
    \ if i == 6\n    arr[i] = \"Seven\" if i == 7\n    arr[i] = \"Eight\" if i ==\
    \ 8\n    arr[i] = \"Nine\" if i == 9\n  end\n  arr\nend", "  arr.sort!\n  arr.map!\
    \ {|x| x if 1 <= x && x <= 9 }\n  arr.empty? ? [] : arr.map {|x| by_length.call([x])\
    \ }\nend", "  arr.sort!\n  arr.map! {|x| x < 10 ? x : \"One\"}\n  arr.map! {|x|\
    \ x < 100 ? x : \"Two\"}\n  arr.map! {|x| x < 1000 ? x : \"Three\"}\n  arr.map!\
    \ {|x| x < 10000 ? x : \"Four\"}\n  arr.map! {|x| x < 100000 ? x : \"Five\"}\n\
    \  arr.map! {|x| x < 1000000 ? x : \"Six\"}\n  arr.map! {|x| x < 10000000 ? x\
    \ : \"Seven\"}\n  arr.map! {|x| x < 100000000 ? x : \"Eight\"}\n  arr.map! {|x|\
    \ x < 1000000000 ? x : \"Nine\"}\n  arr.reverse!\n  arr\nend", "  arr.sort!\n\
    \  arr.each do |i|\n    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i\
    \ == 2\n    arr[i] = \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n  \
    \  arr[i] = \"Five\" if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"\
    Seven\" if i == 7\n    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if\
    \ i == 9\n  end\n  arr.reverse!\n  arr.map do |i|\n    i = i.to_s\n    i = i.upcase\n\
    \    i = i.gsub(/\\d/) { |m| by_digit[m.to_i] }\n    i\n  end\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.empty? ? [] : arr.map { |i| i.to_s.reverse }.uniq\nend", "  arr.sort!\n\
    \  arr.map! {|x| x if x > 0 && x <= 9 ? \"#{x}\" : \"\"}\n  arr.reverse!\n  arr\n\
    end", "  arr.sort!\n  arr.empty? ? [] : arr.map { |n| by_length.call([n]) }.flatten\n\
    end", "  arr.sort!\n  arr.map! {|x| x if 1 <= x && x <= 9 }\n  arr.empty? ? []\
    \ : arr.map! {|x| x.to_s.reverse }\nend", "  arr.sort!\n  arr.map! do |x|\n  \
    \  if x >= 1 && x <= 9\n      x = x.to_s\n      x = x.reverse\n      x = x.gsub(\"\
    1\", \"One\")\n      x = x.gsub(\"2\", \"Two\")\n      x = x.gsub(\"3\", \"Three\"\
    )\n      x = x.gsub(\"4\", \"Four\")\n      x = x.gsub(\"5\", \"Five\")\n    \
    \  x = x.gsub(\"6\", \"Six\")\n      x = x.gsub(\"7\", \"Seven\")\n      x = x.gsub(\"\
    8\", \"Eight\")\n      x = x.gsub(\"9\", \"Nine\")\n      x\n    end\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr.map! {|x| x if x >= 1 && x <= 9 }\n  arr.map!\
    \ {|x| x.to_s.upcase }\n  arr.empty? ? [] : arr\nend", "  arr.sort!\n  arr.empty?\
    \ ? [] : arr.map { |x| x < 10 ? \"#{x}\" : by_length.call([x]) }\nend", "  return\
    \ arr.sort { |a, b| b - a } if arr.any?\n  []\nend", "  arr.sort!\n  arr.each\
    \ do |i|\n    arr[i] = \"One\" if i == 1\n    arr[i] = \"Two\" if i == 2\n   \
    \ arr[i] = \"Three\" if i == 3\n    arr[i] = \"Four\" if i == 4\n    arr[i] =\
    \ \"Five\" if i == 5\n    arr[i] = \"Six\" if i == 6\n    arr[i] = \"Seven\" if\
    \ i == 7\n    arr[i] = \"Eight\" if i == 8\n    arr[i] = \"Nine\" if i == 9\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.map!{ |x| x < 10 ? x.to_s : \"One\" }\n\
    \  arr.map!{ |x| x > 9 ? x.to_s : \"Nine\" }\n  arr.reverse!\n  arr\nend", " \
    \ arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", " \
    \ arr.sort!\n  arr.empty? ? [] : arr.map { |x| x.to_s.reverse }.uniq\nend", " \
    \ return arr.sort { |a, b| b - a } if arr.any?\n  []\nend", "  arr.sort!\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n\
    \  arr.map!(&:to_i)\n  arr.map!(&:to_s)\n  arr.map!(&:to_i)\n  arr.map", "  arr.sort!\n\
    \  arr.map! {|x| x < 10 ? \"One\" : x < 100 ? \"Two\" : x < 1000 ? \"Three\" :\
    \ x < 10000 ? \"Four\" : x < 100000 ? \"Five\" : x < 1000000 ? \"Six\" : x < 10000000\
    \ ? \"Seven\" : x < 100000000 ? \"Eight\" : x < 1000000000 ? \"Nine\" : x }\n\
    \  arr.reverse!\n  arr\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_80_is_happy
language: rb
prompt: "# You are given a string s.\n# Your task is to check if the string is happy\
  \ or not.\n# A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\n# >>> is_happy.call(a)\n# false\n# >>> is_happy.call(aa)\n\
  # false\n# >>> is_happy.call(abcd)\n# true\n# >>> is_happy.call(aabb)\n# false\n\
  # >>> is_happy.call(adb)\n# true\n# >>> is_happy.call(xyy)\n# false\ndef is_happy(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_happy\n\
  \    candidate = method(:is_happy)\n    assert_equal(false, candidate.call(\"a\"\
  ))\n    assert_equal(false, candidate.call(\"aa\"))\n    assert_equal(true, candidate.call(\"\
  abcd\"))\n    assert_equal(false, candidate.call(\"aabb\"))\n    assert_equal(true,\
  \ candidate.call(\"adb\"))\n    assert_equal(false, candidate.call(\"xyy\"))\n \
  \   assert_equal(true, candidate.call(\"iopaxpoi\"))\n    assert_equal(false, candidate.call(\"\
  iopaxioi\"))\n  end\nend\n"
completions: ["  s.chars.each_cons(3).all? { |a,b,c| a.chars.include?(b) && b.chars.include?(c)\
    \ }\nend", "  s.chars.each_cons(3).all? { |a,b,c| a == b && b == c }\nend", " \
    \ s.each_char.with_index do |char, i|\n    next if i == 0\n    next if char ==\
    \ s[i-1]\n    next if char == s[i-2]\n    next if char == s[i-3]\n    next if\
    \ char == s[i-4]\n    next if char == s[i-5]\n    next if char == s[i-6]\n   \
    \ next if char == s[i-7]\n    next if char == s[i-8]\n    next if char == s[i-9]\n\
    \    next if char == s[i-10]\n    next if char == s[i-11]\n    next if char ==\
    \ s[i-12]\n    next if char == s[i-13]\n    next if char == s[i-14]\n    next\
    \ if char == s[i-15]\n    next if char == s[i-16]\n    next if char == s[i-17]\n\
    \    next if char == s[i-18]\n    next if char == s[i-19]\n    next if char ==\
    \ s[i-20]\n    next if char == s[i-21]\n    next if char == s[i-22]\n    next\
    \ if char == s[i-23]\n    next if char == s[i-24]\n    next if char == s[i-25]\n\
    \    next if char == s[i-26]\n    next if char == s[i-27]\n    next if char ==\
    \ s[i-28]\n    next if char == s[i-29]\n    next if char == s[i-30]\n    next\
    \ if char == s[i-31]\n    next if char == s[i-32]\n    next if char == s[i-33]\n\
    \    next if char == s[i-34]\n    next if char == s[i-35]\n    next if char ==\
    \ s[i-36]\n    next if char == s[i-37]\n    next if char == s[i-38]\n    next\
    \ if char == s[i-39]\n    next if char == s[i-40]\n    next if char == s[i-41]\n\
    \    next if char == s[i-42]\n    next if char == s[i-43]\n    next if char ==\
    \ s[i-44]\n    next if char == s[i-45]\n    next if char == s[i-46]\n    next\
    \ if char == s[i-47]\n    next if char == s[i-48]\n    next if char == s[i-49]\n\
    \    next if char == s[i-50]\n    next if char == s[i-51]\n    next if char ==\
    \ s[i-52]\n    next if char", "  s.chars.each_with_index do |char, i|\n    if\
    \ i != 0 && i != s.length - 1 && char == s[i-1] && char == s[i+1]\n      return\
    \ false\n    end\n  end\n  return true\nend\n</code>\n<|/ a tags=ruby,string |>\n\
    <| c |>\nThis doesn't work. Try `is_happy.call(\"aaa\")`\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting. Try it yourself.\n<|/ c |>\n<| c |>\n\
    I tested it myself and it doesn't work. Try `is_happy.call(\"aaa\")`\n<|/ c |>\n\
    <| c |>\nI tested it myself and it doesn't work. Try `is_happy.call(\"aaa\")`\n\
    <|/ c |>\n<| c |>\nI tested it myself and it doesn't work. Try `is_happy.call(\"\
    aaa\")`\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  s.each_char.with_index.all? {\
    \ |c,i| c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' }\nend", "  s.chars.each_cons(3).all?\
    \ { |a,b,c| a.chars.all? { |x| x == b } and b.chars.all? { |x| x == c } }\nend\n\
    </code>\n<|/ a tags=ruby,string |>\n<| c |>\nThis doesn't work. Try it with `is_happy.call(\"\
    aba\")`\n<|/ c |>\n<| c |>\n: It works. `is_happy.call(\"aba\")` returns `false`\
    \ as expected.\n<|/ c |>\n<| c |>\nIt doesn't work if you try it with `is_happy.call(\"\
    aba\")`\n<|/ c |>\n<| c |>\n: It works fine for me. `is_happy.call(\"aba\")` returns\
    \ `false` as expected.\n<|/ c |>\n<| c |>\n: It works fine for me too. `is_happy.call(\"\
    aba\")` returns `false` as expected.\n<|/ c |>\n<| a |>\n<code>", "  s.each_char.with_index\
    \ do |char, i|\n    if i % 3 == 0 && char == char\n      puts \"false\"\n    \
    \  break\n    end\n  end\n  puts \"true\"\nend", "  s.chars.each_cons(3).all?\
    \ do |chars|\n    chars.uniq.size == chars.size\n  end\nend\n</code>\n<|/ a tags=ruby,string\
    \ |>\n<| c |>\nThis doesn't work. Try `is_happy.call(\"aa\")`.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try `is_happy.call(\"aa\")`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try `is_happy.call(\"aa\")`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ `is_happy.call(\"aa\")`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try `is_happy.call(\"\
    aa\")`.\n<|/ c |>\n<| a tags=ruby,string |>\n<code>", "  s.each_char.with_index\
    \ do |char, i|\n    next if i == 0\n    next if char == char\n    next if char\
    \ == char.next\n    next if char == char.next.next\n    next if char == char.next.next.next\n\
    \    next if char == char.next.next.next.next\n    next if char == char.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next\n    next if char == char.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next\n    next if\
    \ char == char.next.next.next.next.next.next.next.next.next\n    next if char\
    \ == char.next.next.next.next.next.next.next.next.next.next\n    next if char\
    \ == char.next.next.next.next.next.next.next.next.next.next.next\n    next if\
    \ char == char.next.next.next.next.next.next.next.next.next.next.next.next\n \
    \   next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next\n\
    \    next if char == char.", "  s.chars.each_cons(3).all? { |a,b,c| a.chars.all?\
    \ { |x| x != b && x != c } }\nend", "  s.each_char.with_index do |char,i|\n  \
    \  next if i == 0\n    next if char == s[i-1]\n    next if char == s[i-2]\n  \
    \  next if char == s[i-3]\n    next if char == s[i-4]\n    next if char == s[i-5]\n\
    \    next if char == s[i-6]\n    next if char == s[i-7]\n    next if char == s[i-8]\n\
    \    next if char == s[i-9]\n    next if char == s[i-10]\n    next if char ==\
    \ s[i-11]\n    next if char == s[i-12]\n    next if char == s[i-13]\n    next\
    \ if char == s[i-14]\n    next if char == s[i-15]\n    next if char == s[i-16]\n\
    \    next if char == s[i-17]\n    next if char == s[i-18]\n    next if char ==\
    \ s[i-19]\n    next if char == s[i-20]\n    next if char == s[i-21]\n    next\
    \ if char == s[i-22]\n    next if char == s[i-23]\n    next if char == s[i-24]\n\
    \    next if char == s[i-25]\n    next if char == s[i-26]\n    next if char ==\
    \ s[i-27]\n    next if char == s[i-28]\n    next if char == s[i-29]\n    next\
    \ if char == s[i-30]\n    next if char == s[i-31]\n    next if char == s[i-32]\n\
    \    next if char == s[i-33]\n    next if char == s[i-34]\n    next if char ==\
    \ s[i-35]\n    next if char == s[i-36]\n    next if char == s[i-37]\n    next\
    \ if char == s[i-38]\n    next if char == s[i-39]\n    next if char == s[i-40]\n\
    \    next if char == s[i-41]\n    next if char == s[i-42]\n    next if char ==\
    \ s[i-43]\n    next if char == s[i-44]\n    next if char == s[i-45]\n    next\
    \ if char == s[i-46]\n    next if char == s[i-47]\n    next if char == s[i-48]\n\
    \    next if char == s[i-49]\n    next if char == s[i-50]\n    next if char ==\
    \ s[i-51]\n    next if char == s[i-52]\n    next if ", "  s.each_char.with_index\
    \ do |char, i|\n    next if i == 0\n    next if char == s[i-1]\n    next if char\
    \ == s[i-2]\n    next if char == s[i-3]\n    next if char == s[i-4]\n    next\
    \ if char == s[i-5]\n    next if char == s[i-6]\n    next if char == s[i-7]\n\
    \    next if char == s[i-8]\n    next if char == s[i-9]\n    next if char == s[i-10]\n\
    \    next if char == s[i-11]\n    next if char == s[i-12]\n    next if char ==\
    \ s[i-13]\n    next if char == s[i-14]\n    next if char == s[i-15]\n    next\
    \ if char == s[i-16]\n    next if char == s[i-17]\n    next if char == s[i-18]\n\
    \    next if char == s[i-19]\n    next if char == s[i-20]\n    next if char ==\
    \ s[i-21]\n    next if char == s[i-22]\n    next if char == s[i-23]\n    next\
    \ if char == s[i-24]\n    next if char == s[i-25]\n    next if char == s[i-26]\n\
    \    next if char == s[i-27]\n    next if char == s[i-28]\n    next if char ==\
    \ s[i-29]\n    next if char == s[i-30]\n    next if char == s[i-31]\n    next\
    \ if char == s[i-32]\n    next if char == s[i-33]\n    next if char == s[i-34]\n\
    \    next if char == s[i-35]\n    next if char == s[i-36]\n    next if char ==\
    \ s[i-37]\n    next if char == s[i-38]\n    next if char == s[i-39]\n    next\
    \ if char == s[i-40]\n    next if char == s[i-41]\n    next if char == s[i-42]\n\
    \    next if char == s[i-43]\n    next if char == s[i-44]\n    next if char ==\
    \ s[i-45]\n    next if char == s[i-46]\n    next if char == s[i-47]\n    next\
    \ if char == s[i-48]\n    next if char == s[i-49]\n    next if char == s[i-50]\n\
    \    next if char == s[i-51]\n    next if char == s[i-52]\n    next if char",
  "  s.each_char.with_index do |char, index|\n    next if index == 0\n    next if\
    \ char == s[index-1]\n    next if char == s[index-2]\n    next if char == s[index-3]\n\
    \    next if char == s[index-4]\n    next if char == s[index-5]\n    next if char\
    \ == s[index-6]\n    next if char == s[index-7]\n    next if char == s[index-8]\n\
    \    next if char == s[index-9]\n    next if char == s[index-10]\n    next if\
    \ char == s[index-11]\n    next if char == s[index-12]\n    next if char == s[index-13]\n\
    \    next if char == s[index-14]\n    next if char == s[index-15]\n    next if\
    \ char == s[index-16]\n    next if char == s[index-17]\n    next if char == s[index-18]\n\
    \    next if char == s[index-19]\n    next if char == s[index-20]\n    next if\
    \ char == s[index-21]\n    next if char == s[index-22]\n    next if char == s[index-23]\n\
    \    next if char == s[index-24]\n    next if char == s[index-25]\n    next if\
    \ char == s[index-26]\n    next if char == s[index-27]\n    next if char == s[index-28]\n\
    \    next if char == s[index-29]\n    next if char == s[index-30]\n    next if\
    \ char == s[index-31]\n    next if char == s[index-32]\n    next if char == s[index-33]\n\
    \    next if char == s[index-34]\n    next if char == s[index-35]\n    next if\
    \ char == s[index-36]\n    next if char == s[index-37]\n    next if char == s[index-38]\n\
    \    next if char == s[index-39]\n    next if char == s[index-40]\n    next if\
    \ char == s[index-41]\n    next if char == s[index-42]\n    next if char == s[index-43]\n\
    \    next if char == s[index-44]\n    next if char == s[index-45]\n    next if\
    \ char == s[index-46]\n    next if char == s[index-47]\n    next if char == s[index-48]\n\
    \    next if char == s[index-49]\n    next if char == s[index-50]\n    next if\
    \ char == s[index-51]\n    next if char == s[index-52]\n    next if char", " \
    \ s.each_char.with_index do |char, i|\n    next if i == 0\n    next if char ==\
    \ char\n    next if char == char + char\n    next if char == char + char + char\n\
    \    next if char == char + char + char + char\n    next if char == char + char\
    \ + char + char + char\n    next if char == char + char + char + char + char +\
    \ char\n    next if char == char + char + char + char + char + char + char\n \
    \   next if char == char + char + char + char + char + char + char + char\n  \
    \  next if char == char + char + char + char + char + char + char + char + char\n\
    \    next if char == char + char + char + char + char + char + char + char + char\
    \ + char\n    next if char == char + char + char + char + char + char + char +\
    \ char + char + char + char\n    next if char == char + char + char + char + char\
    \ + char + char + char + char + char + char + char\n    next if char == char +\
    \ char + char + char + char + char + char + char + char + char + char + char +\
    \ char\n    next if char == char + char + char + char + char + char + char + char\
    \ + char + char + char + char + char + char\n    next if char == char + char +\
    \ char + char + char + char + char + char + char + char + char + char + char +\
    \ char\n    next if char == char + char + char + char + char + char + char + char\
    \ + char + char + char + char + char + char + char\n    next if char == char +\
    \ char + char + char + char + char + char + char + char + char + char + char +\
    \ char + char + char + char\n    next if char == char + char + char + char + char\
    \ + char + char + char + char + char + char + char + char + char + char + char\n\
    \    next if char == char + char + char + char + char + char + char + char + char\
    \ + char + char + char + char + char + char + char\n    next if char == char +\
    \ char + char + char + char + char + char + char + char + char + char + char +\
    \ char + char + char", "  s.each_char.with_index do |char, i|\n    if i % 3 ==\
    \ 0 && i != 0\n      char == s[i - 1]\n    end\n  end\nend", "  s.gsub(/./).length\
    \ >= 3 and s.gsub(/./).each_cons(3).all? { |a| a.uniq.length == 0 }\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't work for `is_happy.call(\"aa\"\
    )` because `each_cons(3)` returns `[\"aa\", \"aa\", \"aa\"]` instead of `[\"aa\"\
    , \"aa\", \"ab\"]`.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I fixed\
    \ it by changing the regex to `/./`.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ `is_happy.call(\"aa\")` because `each_cons(3)` returns `[\"aa\", \"aa\", \"\
    aa\"]` instead of `[\"aa\", \"aa\", \"ab\"]`.\n<|/ c |>\n<| c |>\n: Thanks for\
    \ pointing that out. I fixed it by changing the regex to `/./`.\n<|/ c |>\n<|\
    \ a tags=ruby,regex |>\n<code>", "  s.chars.each_with_index do |char, i|\n   \
    \ next if char == char\n    next if char == char\n    next if char == char\n \
    \   next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next if char == char\n\
    \    next if char == char\n    next if char == char\n    next ", "  s.each_char.with_index\
    \ do |char,i|\n    if char != s[i-1]\n      return false\n    end\n  end\n  return\
    \ true\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try `is_happy.call(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for pointing that out.\
    \ I've updated my answer.\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  s.each_char.with_index\
    \ do |char, i|\n    next if i == 0\n    next if char == s[i-1]\n    next if char\
    \ == s[i-2]\n    next if char == s[i-3]\n    next if char == s[i-4]\n    next\
    \ if char == s[i-5]\n    next if char == s[i-6]\n    next if char == s[i-7]\n\
    \    next if char == s[i-8]\n    next if char == s[i-9]\n    next if char == s[i-10]\n\
    \    next if char == s[i-11]\n    next if char == s[i-12]\n    next if char ==\
    \ s[i-13]\n    next if char == s[i-14]\n    next if char == s[i-15]\n    next\
    \ if char == s[i-16]\n    next if char == s[i-17]\n    next if char == s[i-18]\n\
    \    next if char == s[i-19]\n    next if char == s[i-20]\n    next if char ==\
    \ s[i-21]\n    next if char == s[i-22]\n    next if char == s[i-23]\n    next\
    \ if char == s[i-24]\n    next if char == s[i-25]\n    next if char == s[i-26]\n\
    \    next if char == s[i-27]\n    next if char == s[i-28]\n    next if char ==\
    \ s[i-29]\n    next if char == s[i-30]\n    next if char == s[i-31]\n    next\
    \ if char == s[i-32]\n    next if char == s[i-33]\n    next if char == s[i-34]\n\
    \    next if char == s[i-35]\n    next if char == s[i-36]\n    next if char ==\
    \ s[i-37]\n    next if char == s[i-38]\n    next if char == s[i-39]\n    next\
    \ if char == s[i-40]\n    next if char == s[i-41]\n    next if char == s[i-42]\n\
    \    next if char == s[i-43]\n    next if char == s[i-44]\n    next if char ==\
    \ s[i-45]\n    next if char == s[i-46]\n    next if char == s[i-47]\n    next\
    \ if char == s[i-48]\n    next if char == s[i-49]\n    next if char == s[i-50]\n\
    \    next if char == s[i-51]\n    next if char == s[i-52]\n    next if char",
  "  s.chars.each_with_index.all? do |char,i|\n    char == chars[i+1] && char == chars[i+2]\
    \ && char != chars[i+3]\n  end\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c\
    \ |>\nThis doesn't work. Try it with `a = \"abcabc\"`\n<|/ c |>\n<| c |>\n: I\
    \ didn't notice that requirement. Fixed now.\n<|/ c |>\n<| c |>\n: I added a more\
    \ efficient solution that doesn't require a loop. Hope it helps.\n<|/ c |>\n<|\
    \ c |>\n: I added a more efficient solution that doesn't require a loop. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\n: I added a more efficient solution that doesn't\
    \ require a loop. Hope it helps.\n<|/ c |>\n<| a dscore=2 |>\n<code>"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

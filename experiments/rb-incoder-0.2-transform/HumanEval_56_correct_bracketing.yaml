name: HumanEval_56_correct_bracketing
language: rb
prompt: "# brackets is a string of \"<\" and \">\".\n# return True if every opening\
  \ bracket has a corresponding closing bracket.\n# >>> correct_bracketing.call(\"\
  <\")\n# false\n# >>> correct_bracketing.call(\"<>\")\n# true\n# >>> correct_bracketing.call(\"\
  <<><>>\")\n# true\n# >>> correct_bracketing.call(\"><<>\")\n# false\ndef correct_bracketing(brackets)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_correct_bracketing\n\
  \    candidate = method(:correct_bracketing)\n    assert_equal(true, candidate.call(\"\
  <>\"))\n    assert_equal(true, candidate.call(\"<<><>>\"))\n    assert_equal(true,\
  \ candidate.call(\"<><><<><>><>\"))\n    assert_equal(true, candidate.call(\"<><><<<><><>><>><<><><<>>>\"\
  ))\n    assert_equal(false, candidate.call(\"<<<><>>>>\"))\n    assert_equal(false,\
  \ candidate.call(\"><<>\"))\n    assert_equal(false, candidate.call(\"<\"))\n  \
  \  assert_equal(false, candidate.call(\"<<<<\"))\n    assert_equal(false, candidate.call(\"\
  >\"))\n    assert_equal(false, candidate.call(\"<<>\"))\n    assert_equal(false,\
  \ candidate.call(\"<><><<><>><>><<>\"))\n    assert_equal(false, candidate.call(\"\
  <><><<><>><>>><>\"))\n  end\nend\n"
completions: ["  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"\
    <>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>\" ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<>>>\" ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<>>>>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<<>>>>><\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x\
    \ == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\"\
    \ : ", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/,\
    \ \"&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/,\
    \ \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n\
    \  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;",
  "  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all? { |y| y == '<' } ? \">\"\
    \ : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all? { |y| y ==\
    \ '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    >\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>", "  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(", "  brackets.chars.each_with_index do |char,\
    \ index|\n    if char == \"<\"\n      return false if index == 0\n      return\
    \ true if index == brackets.size - 1\n      return true if brackets[index + 1]\
    \ != \"=\"\n      return true if brackets[index + 1] != \">\"\n    end\n  end\n\
    \  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub",
  "  brackets.chars.each_with_index do |char, i|\n    if char == \"<\"\n      bracket_open\
    \ = brackets.chars[i - 1]\n      bracket_close = brackets.chars[i + 1]\n     \
    \ bracket_open == bracket_close or bracket_open != bracket_close or bracket_open\
    \ != \">\" or bracket_close != \"<\"\n    end\n  end\nend", "  brackets.scan(/</)\
    \ do |opening|\n    brackets.scan(/>/) do |closing|\n      brackets.scan(/</)\
    \ do |opening|\n        brackets.scan(/>/) do |closing|\n          return false\
    \ if opening == closing\n        end\n      end\n    end\n  end\n  true\nend",
  "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\"\
    \ : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.chars.each_with_index\
    \ do |char, i|\n    if char == \"<\"\n      return false if brackets.chars[i+1]\
    \ == \"<\"\n      return true if brackets.chars[i-1] == \">\"\n    end\n  end\n\
    \  true\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x\
    \ == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\"\
    \ : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.", "  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/,\
    \ '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')", "  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{2}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{3}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{4}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{5}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{6}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{7}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{8}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{9}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{10}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{11}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{12}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{13}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{14}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{15}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{16}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{17}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{18}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{19}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{20}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{21}/)\
    \ { ", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub", "  brackets.chars.each_with_index do |char, index|\n\
    \    if char == \"<\"\n      return false if index == 0\n      return true if\
    \ index == brackets.size - 1\n      return true if brackets[index + 1] == \"<\"\
    \n    end\n  end\n  true\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

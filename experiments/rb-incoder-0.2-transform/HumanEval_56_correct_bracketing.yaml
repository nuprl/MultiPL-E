name: HumanEval_56_correct_bracketing
language: rb
prompt: "# brackets is a string of \"<\" and \">\".\n# return True if every opening\
  \ bracket has a corresponding closing bracket.\n# >>> correct_bracketing.call(\"\
  <\")\n# false\n# >>> correct_bracketing.call(\"<>\")\n# true\n# >>> correct_bracketing.call(\"\
  <<><>>\")\n# true\n# >>> correct_bracketing.call(\"><<>\")\n# false\ndef correct_bracketing(brackets)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_correct_bracketing\n\
  \    candidate = method(:correct_bracketing)\n    assert_equal(true, candidate.call(\"\
  <>\"))\n    assert_equal(true, candidate.call(\"<<><>>\"))\n    assert_equal(true,\
  \ candidate.call(\"<><><<><>><>\"))\n    assert_equal(true, candidate.call(\"<><><<<><><>><>><<><><<>>>\"\
  ))\n    assert_equal(false, candidate.call(\"<<<><>>>>\"))\n    assert_equal(false,\
  \ candidate.call(\"><<>\"))\n    assert_equal(false, candidate.call(\"<\"))\n  \
  \  assert_equal(false, candidate.call(\"<<<<\"))\n    assert_equal(false, candidate.call(\"\
  >\"))\n    assert_equal(false, candidate.call(\"<<>\"))\n    assert_equal(false,\
  \ candidate.call(\"<><><<><>><>><<>\"))\n    assert_equal(false, candidate.call(\"\
  <><><<><>><>>><>\"))\n  end\nend\n"
completions: ["  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"\
    <>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>\" ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<>>>\" ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<>>>>>\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<<>>>>><\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x\
    \ == \"<<>>>>><=\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<>>>>><=\" ? \"<\"\
    \ : ", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/,\
    \ \"&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/,\
    \ \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(<|>>)/,\
    \ \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n\
    \  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(<|>>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<<|>>)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;",
  "  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all? { |y| y == '<' } ? \">\"\
    \ : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all? { |y| y ==\
    \ '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '>' } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.all?\
    \ { |y| y == '<' } ? \">\" : x\n  end\n  brackets.gsub", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    >\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>", "  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(", "  brackets.chars.each_with_index do |char,\
    \ index|\n    if char == \"<\"\n      return false if index == 0\n      return\
    \ true if index == brackets.size - 1\n      return true if brackets[index + 1]\
    \ != \"=\"\n      return true if brackets[index + 1] != \">\"\n    end\n  end\n\
    \  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"\
    <>\" : s }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub",
  "  brackets.chars.each_with_index do |char, i|\n    if char == \"<\"\n      bracket_open\
    \ = brackets.chars[i - 1]\n      bracket_close = brackets.chars[i + 1]\n     \
    \ bracket_open == bracket_close or bracket_open != bracket_close or bracket_open\
    \ != \">\" or bracket_close != \"<\"\n    end\n  end\nend", "  brackets.scan(/</)\
    \ do |opening|\n    brackets.scan(/>/) do |closing|\n      brackets.scan(/</)\
    \ do |opening|\n        brackets.scan(/>/) do |closing|\n          return false\
    \ if opening == closing\n        end\n      end\n    end\n  end\n  true\nend",
  "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\"\
    \ : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.chars.each_with_index\
    \ do |char, i|\n    if char == \"<\"\n      return false if brackets.chars[i+1]\
    \ == \"<\"\n      return true if brackets.chars[i-1] == \">\"\n    end\n  end\n\
    \  true\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x\
    \ == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\"\
    \ : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.to_s.chars.each_with_index.all? { |c,i| c == \">\" && brackets[i+1]\
    \ == \"<\" } ? \">\" : x\n  end\n  brackets.gsub!(/[<>]/) do |x|\n    x.to_s.chars.each_with_index.all?\
    \ { |c,i| c == \"<\" && brackets[i+1] == \">\" } ? \"<\" : x\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |x|\n    x.", "  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/,\
    \ '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')", "  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{2}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{3}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{4}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{5}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{6}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{7}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{8}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{9}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{10}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{11}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{12}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{13}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{14}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{15}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{16}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{17}/)\
    \ { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{18}/) { |s| s.empty? ?\
    \ \"<>\" : s }\n  brackets.gsub!(/[<>]{19}/) { |s| s.empty? ? \"<>\" : s }\n \
    \ brackets.gsub!(/[<>]{20}/) { |s| s.empty? ? \"<>\" : s }\n  brackets.gsub!(/[<>]{21}/)\
    \ { ", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/, '') \n  brackets.gsub!(/[<>]/,\
    \ '') \n  brackets.gsub", "  brackets.chars.each_with_index do |char, index|\n\
    \    if char == \"<\"\n      return false if index == 0\n      return true if\
    \ index == brackets.size - 1\n      return true if brackets[index + 1] == \"<\"\
    \n    end\n  end\n  true\nend", "  brackets.scan(/</) do |opening|\n    brackets.scan(/>/)\
    \ do |closing|\n      brackets.scan(/</) do |opening|\n        brackets.scan(/>/)\
    \ do |closing|\n          return false if opening == closing\n        end\n  \
    \    end\n    end\n  end\n  true\nend", "  brackets.scan(/</) do |opening_bracket|\n\
    \    brackets.scan(/>/) do |closing_bracket|\n      opening_bracket == closing_bracket\n\
    \    end\n  end\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.chars.each do |char|\n    if char == \"<\"\n      return false\
    \ if brackets.chars.any? { |c| c == \"<\" } # no closing bracket\n      return\
    \ true if brackets.chars.any? { |c| c == \">\" } # no opening bracket\n    end\n\
    \  end\n  true\nend", "  brackets.chars.each_with_index do |char, i|\n    if char\
    \ == \"<\"\n      bracket_count = brackets.chars.count { |c| c == \"<\" }\n  \
    \    bracket_count += 1 if i > 0 && brackets.chars[i - 1] == \"<\"\n      bracket_count\
    \ -= 1 if i < brackets.chars.length - 1 && brackets.chars[i + 1] == \"<\"\n  \
    \    brackets.chars[i - 1] = \">\" if bracket_count > 0\n      brackets.chars[i\
    \ + 1] = \">\" if bracket_count > 0\n    end\n  end\n  brackets.chars.all? { |c|\
    \ c == \"<\" }\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>\" ? \"<<\" : \"\
    >>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<\" ? \"<<\" : \">>\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<<<\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>><\"\
    \ ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<<\" ? \"<<<\"\
    \ : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>><<\" ? \"<<<\" : \">>>\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<<\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">>>>>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<<<>>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"\
    >>>>>><\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<>>><\"\
    \ ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>>>><\" ? \"\
    <<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<>>><\" ? \"<<<\" :\
    \ \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>>>><\" ? \"<<<\" : \">>>\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<>>><\" ? \"<<<\" : \">>>\" }\n \
    \ brackets.gsub!(/[<>]/) { |x| x == \">>>>>><\" ? \"<<<\" : \">>>", "  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/", "  brackets.scan(/</) do |x|\n    brackets.scan(/>/) do |y|\n\
    \      brackets.scan(/>/) do |z|\n        brackets.scan(/>/) do |a|\n        \
    \  brackets.scan(/>/) do |b|\n            brackets.scan(/>/) do |c|\n        \
    \      brackets.scan(/>/) do |d|\n                brackets.scan(/>/) do |e|\n\
    \                  brackets.scan(/>/) do |f|\n                    brackets.scan(/>/)\
    \ do |g|\n                      brackets.scan(/>/) do |h|\n                  \
    \      brackets.scan(/>/) do |i|\n                          brackets.scan(/>/)\
    \ do |j|\n                            brackets.scan(/>/) do |k|\n            \
    \                  brackets.scan(/>/) do |l|\n                               \
    \ brackets.scan(/>/) do |m|\n                                  brackets.scan(/>/)\
    \ do |n|\n                                    brackets.scan(/>/) do |o|\n    \
    \                                  brackets.scan(/>/) do |p|\n               \
    \                         brackets.scan(/>/) do |q|\n                        \
    \                  brackets.scan(/>/) do |r|\n                               \
    \             brackets.scan(/>/) do |s|\n                                    \
    \          brackets.scan(/>/) do |t|\n                                       \
    \         brackets.scan(/>/) do |u|\n                                        \
    \          brackets.scan(/>/) do |v|\n                                       \
    \             brackets.scan(/>/) do |w|\n                                    \
    \                  brackets.scan(/>/) do |x|\n                               \
    \                         brackets.scan(/>/) do |y|\n                        \
    \                                  brackets.scan(/>/) do |z|\n               \
    \                                             brackets.scan(/>/) do |a|\n    \
    \                                                          brackets.scan(/>/)\
    \ do |b|\n                                                                brackets.scan(/>/)\
    \ do |c|\n                                                                  brackets.scan(/>/)\
    \ do |d|\n                                                                   \
    \ brackets.scan(/>/) do |e|\n                                                \
    \                      brackets.scan(/>/) do |f|\n                           \
    \                                             brackets.scan(/>/) do |g|\n    \
    \                                                                      brackets.scan(/>/)\
    \ do |h|\n                                                                   \
    \         brackets.scan(/>/) do |i|\n                                        \
    \                                      brackets.scan(/>/) do |j|\n           \
    \                                                                     brackets.scan(/>/)\
    \ do |k|\n                                                                   \
    \               brackets.scan(/>/) do |l|\n                                  \
    \                                                  brackets.scan(/>/) do |m|\n\
    \                                                                ", "  brackets.scan(/</)\
    \ do |opening_bracket|\n    brackets.scan(/>/) do |closing_bracket|\n      opening_bracket\
    \ == closing_bracket\n    end\n  end\nend", "  brackets.gsub!(/[<>]/) { |x| x\
    \ == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.scan(/</) do |x|\n  \
    \  brackets.scan(/>/) do |y|\n      brackets.scan(/</) do |z|\n        brackets.scan(/>/)\
    \ do |a|\n          brackets.scan(/>/) do |b|\n            brackets.scan(/>/)\
    \ do |c|\n              brackets.scan(/>/) do |d|\n                brackets.scan(/>/)\
    \ do |e|\n                  brackets.scan(/>/) do |f|\n                    brackets.scan(/>/)\
    \ do |g|\n                      brackets.scan(/>/) do |h|\n                  \
    \      brackets.scan(/>/) do |i|\n                          brackets.scan(/>/)\
    \ do |j|\n                            brackets.scan(/>/) do |k|\n            \
    \                  brackets.scan(/>/) do |l|\n                               \
    \ brackets.scan(/>/) do |m|\n                                  brackets.scan(/>/)\
    \ do |n|\n                                    brackets.scan(/>/) do |o|\n    \
    \                                  brackets.scan(/>/) do |p|\n               \
    \                         brackets.scan(/>/) do |q|\n                        \
    \                  brackets.scan(/>/) do |r|\n                               \
    \             brackets.scan(/>/) do |s|\n                                    \
    \          brackets.scan(/>/) do |t|\n                                       \
    \         brackets.scan(/>/) do |u|\n                                        \
    \          brackets.scan(/>/) do |v|\n                                       \
    \             brackets.scan(/>/) do |w|\n                                    \
    \                  brackets.scan(/>/) do |x|\n                               \
    \                         brackets.scan(/>/) do |y|\n                        \
    \                                  brackets.scan(/>/) do |z|\n               \
    \                                             brackets.scan(/>/) do |a|\n    \
    \                                                          brackets.scan(/>/)\
    \ do |b|\n                                                                brackets.scan(/>/)\
    \ do |c|\n                                                                  brackets.scan(/>/)\
    \ do |d|\n                                                                   \
    \ brackets.scan(/>/) do |e|\n                                                \
    \                      brackets.scan(/>/) do |f|\n                           \
    \                                             brackets.scan(/>/) do |g|\n    \
    \                                                                      brackets.scan(/>/)\
    \ do |h|\n                                                                   \
    \         brackets.scan(/>/) do |i|\n                                        \
    \                                      brackets.scan(/>/) do |j|\n           \
    \                                                                     brackets.scan(/>/)\
    \ do |k|\n                                                                   \
    \               brackets.scan(/>/) do |l|\n                                  \
    \                                                  brackets.scan(/>/) do |m|\n\
    \                                                                ", "  brackets.scan(/[<>]/)\
    \ do |char|\n    next if char == \"<\"\n    next if char == \">\"\n    next if\
    \ char == \"<=\"\n    next if char == \">=\"\n    next if char == \"==\"\n   \
    \ next if char == \"!=\"\n    next if char == \"<=>\"\n    next if char == \"\
    >=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next if char\
    \ == \"==\"\n    next if char == \"!=\"\n    next if char == \"<=>\"\n    next\
    \ if char == \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\
    \n    next if char == \"==\"\n    next if char == \"!=\"\n    next if char ==\
    \ \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next\
    \ if char == \">=>\"\n    next if char == \"==\"\n    next if char == \"!=\"\n\
    \    next if char == \"<=>\"\n    next if char == \">=>\"\n    next if char ==\
    \ \"<=>\"\n    next if char == \">=>\"\n    next if char == \"==\"\n    next if\
    \ char == \"!=\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n \
    \   next if char == \"<=>\"\n    next if char == \">=>\"\n    next if char ==\
    \ \"==\"\n    next if char == \"!=\"\n    next if char == \"<=>\"\n    next if\
    \ char == \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n\
    \    next if char == \"==\"\n    next if char == \"!=\"\n    next if char == \"\
    <=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char\
    \ == \">=>\"\n    next if char == \"==\"\n    next if char == \"!=\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"==\"\n    next if char ==\
    \ \"!=\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next if\
    \ char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"==\"\n \
    \   next if char == \"!=\"\n    next if char == \"<=>\"\n    next ", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    >\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>", "  brackets.scan(/</) do |match|\n    next false if match.to_s.empty?\n \
    \   next false if match.to_s.include?(\"<<\")\n    next false if match.to_s.include?(\"\
    >>\")\n    next false if match.to_s.include?(\"<<<\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false if match.to_s.include?(\"<>\")\n    next false if match.to_s.include?(\"\
    >>>\")\n    next false if match.to_s.include?(\"<\")\n    next false if match.to_s.include?(\"\
    >\")\n    next false ", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x\
    \ == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\"\
    \ : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\\
    <\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub!(/\\<\\>/, \"\"\
    )\n  brackets.gsub!(/\\<\\>/, \"\")\n  brackets.gsub", "  brackets.gsub!(/\\<\\\
    <\\>/, '')\n  brackets.gsub!(/\\>\\>\\>/, '')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '", " \
    \ brackets.scan(/</) do |opening_bracket|\n    brackets.scan(/>/) do |closing_bracket|\n\
    \      brackets.scan(/</) do |opening_bracket|\n        brackets.scan(/>/) do\
    \ |closing_bracket|\n          brackets.scan(/>/) do |closing_bracket|\n     \
    \       brackets.scan(/>/) do |closing_bracket|\n              brackets.scan(/>/)\
    \ do |closing_bracket|\n                brackets.scan(/>/) do |closing_bracket|\n\
    \                  brackets.scan(/>/) do |closing_bracket|\n                 \
    \   brackets.scan(/>/) do |closing_bracket|\n                      brackets.scan(/>/)\
    \ do |closing_bracket|\n                        brackets.scan(/>/) do |closing_bracket|\n\
    \                          brackets.scan(/>/) do |closing_bracket|\n         \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \              brackets.scan(/>/) do |closing_bracket|\n                     \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \          brackets.scan(/>/) do |closing_bracket|\n                         \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \              brackets.scan(/>/) do |closing_bracket|\n                     \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \                          brackets.scan(/>/) do |closing_bracket|\n         \
    \                                   brackets.scan(/>/) do |closing_bracket|\n\
    \                                              brackets.scan(/>/) do |closing_bracket|\n\
    \                                                brackets.scan(/>/) do |closing_bracket|\n\
    \                                                  brackets.scan(/>/) do |closing_bracket|\n\
    \                                                    brackets.scan(/>/) do |closing_bracket|\n\
    \                                                      brackets.scan(/>/) do |closing_bracket|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing_bracket|\n                                                        \
    \  brackets.scan(/>/) do |closing_bracket|\n                                 \
    \                           brackets.scan(/>/) do |closing_bracket|\n        \
    \                                                      brackets.scan(/>/) do |closing_bracket|\n\
    \                                                                brackets.scan(/>/)\
    \ do |closing_bracket|\n                                                     \
    \             brackets.scan(/>/) do |closing_bracket|\n                      \
    \                                              brackets.scan(/>/) do |closing_bracket|",
  "  brackets.scan(/</) do |char|\n    next char if char == \">\"\n    next char if\
    \ char == \"<\"\n    char == \">\"\n  end\n  brackets.scan(/>/) do |char|\n  \
    \  next char if char == \"<\"\n    next char if char == \">\"\n    char == \"\
    <\"\n  end\n  brackets.scan(/>>/) do |char|\n    char == \"<\"\n  end\n  brackets.scan(/<<>/)\
    \ do |char|\n    char == \">\"\n  end\n  brackets.scan(/>><\\//) do |char|\n \
    \   char == \"<\"\n  end\n  brackets.scan(/<<<\\//) do |char|\n    char == \"\
    >\"\n  end\n  brackets.scan(/<<<>>/) do |char|\n    char == \"<\"\n  end\n  brackets.scan(/<<<>><\\\
    //) do |char|\n    char == \">\"\n  end\n  brackets.scan(/<<<>><>>/) do |char|\n\
    \    char == \"<\"\n  end\n  brackets.scan(/<<<>><>><\\//) do |char|\n    char\
    \ == \">\"\n  end\n  brackets.scan(/<<<>><>><>>/) do |char|\n    char == \"<\"\
    \n  end\n  brackets.scan(/<<<>><>><>><\\//) do |char|\n    char == \">\"\n  end\n\
    \  brackets.scan(/<<<>><>><>><>>/) do |char|\n    char == \"<\"\n  end\n  brackets.scan(/<<<>><>><>><>><\\\
    //) do |char|\n    char == \">\"\n  end\n  brackets.scan(/<<<>><>><>><>><>>/)\
    \ do |char|\n    char == \"<\"\n  end\n  brackets.scan(/<<<>><>><>><>><>><>><\\\
    //) do |char|\n    char == \">\"\n  end\n  brackets.scan(/<<<>><>><>><>><>><>><>><\\\
    //) do |char|\n    char == \"<\"\n  end\n  brackets.scan(/<<<>><>><>><>><>><>><>><>><\\\
    //) do |char", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.scan(/</) do |opening_bracket|\n    brackets.scan(/>/) do\
    \ |closing_bracket|\n      brackets.scan(/</) do |opening_bracket|\n        brackets.scan(/>/)\
    \ do |closing_bracket|\n          brackets.scan(/</) do |opening_bracket|\n  \
    \          brackets.scan(/>/) do |closing_bracket|\n              brackets.scan(/</)\
    \ do |opening_bracket|\n                brackets.scan(/>/) do |closing_bracket|\n\
    \                  brackets.scan(/</) do |opening_bracket|\n                 \
    \   brackets.scan(/>/) do |closing_bracket|\n                      brackets.scan(/</)\
    \ do |opening_bracket|\n                        brackets.scan(/>/) do |closing_bracket|\n\
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \          brackets.scan(/</) do |opening_bracket|\n                         \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                                   brackets.scan(/>/) do |closing_bracket|\n\
    \                                              brackets.scan(/</) do |opening_bracket|\n\
    \                                                brackets.scan(/>/) do |closing_bracket|\n\
    \                                                  brackets.scan(/</) do |opening_bracket|\n\
    \                                                    brackets.scan(/>/) do |closing_bracket|\n\
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing_bracket|\n                                                        \
    \  brackets.scan(/</) do |opening_bracket|\n                                 \
    \                           brackets.scan(/>/) do |closing_bracket|\n        \
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                                brackets.scan(/>/)\
    \ do |closing_bracket|\n                                                     \
    \             brackets.scan(/</) do |opening_bracket|\n", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/</) do\
    \ |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n\
    \    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n \
    \   char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n  \
    \  char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n   \
    \ char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char\
    \ == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char ==\
    \ '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>'\
    \ ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ?\
    \ '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;'\
    \ : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' :\
    \ '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n\
    \  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' : '&gt;'\n \
    \ end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n\
    \  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n \
    \ brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</)\
    \ do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do\
    \ |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n\
    \    char == '", "  brackets.gsub!(/[<>]/) { |s| s.to_s.size % 2 == 0 ? \"<<\"\
    \ : \">>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<>\" : \">>\" }\n\
    \  brackets.gsub!(/<<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/)\
    \ { |s| s.to_s.size % 2 == 0 ? \"<>\" : \">>\" }\n  brackets.gsub!(/<<<>>/) {\
    \ |s| s.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size\
    \ % 2 == 0 ? \"<>\" : \">>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size %\
    \ 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size % 2 ==\
    \ 0 ? \"<>\" : \">>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size % 2 == 0\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size % 2 == 0 ? \"\
    <>\" : \">>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<>\" : \"\
    >>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/<<>>/) { |s| s.to_s.size % 2 == 0 ? \"<>\" : \">>\" }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/) { |s|\
    \ s.to_s.size % 2 == 0 ? \"<>\" : \">>\" }\n  brackets.gsub!(/<<<>>/) { |s| s.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/<<>>/) { |s| s.to_s.size ", " \
    \ brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s|\
    \ s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

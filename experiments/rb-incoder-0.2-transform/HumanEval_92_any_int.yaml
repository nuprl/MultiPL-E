name: HumanEval_92_any_int
language: rb
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\n# >>> any_int.call(5, 2, 7)\n# true\n#\
  \ >>> any_int.call(3, 2, 2)\n# false\n# >>> any_int.call(3, -2, 1)\n# true\n# >>>\
  \ any_int.call(3.6, -2.2, 2)\n# false\ndef any_int(x, y, z)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_any_int\n\
  \    candidate = method(:any_int)\n    assert_equal(true, candidate.call(2, 3, 1))\n\
  \    assert_equal(false, candidate.call(2.5, 2, 3))\n    assert_equal(false, candidate.call(1.5,\
  \ 5, 3.5))\n    assert_equal(false, candidate.call(2, 6, 2))\n    assert_equal(true,\
  \ candidate.call(4, 2, 2))\n    assert_equal(false, candidate.call(2.2, 2.2, 2.2))\n\
  \    assert_equal(true, candidate.call(-4, 6, 2))\n    assert_equal(true, candidate.call(2,\
  \ 1, 1))\n    assert_equal(true, candidate.call(3, 4, 7))\n    assert_equal(false,\
  \ candidate.call(3.0, 4, 7))\n  end\nend\n"
completions: ["  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n\
    \    return false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  return ((x || y || z) == (x + y + z))\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n \
    \ else\n    false\n  end\nend", "  x == y || x == z || y == z\nend", "  if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", " \
    \ if x.is_a? Integer and y.is_a? Integer and z.is_a? Integer\n    return true\
    \ if x.to_i == y.to_i + z.to_i\n  end\n  return false\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  return true if x.to_i == y.to_i && y.to_i\
    \ == z.to_i\n  false\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n\
    \  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n  \
    \  return true\n  else\n    return false\n  end\nend", "  if x.is_a? Integer &&\
    \ y.is_a? Integer && z.is_a? Integer\n    return x.to_i + y.to_i + z.to_i == x.to_i\
    \ + y.to_i + z.to_i\n  else\n    return false\n  end\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", " \
    \ x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x\
    \ == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend", "  x == y || x == z ||\
    \ y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n\
    \    false\n  end\nend", "  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  return x\
    \ || y || z\nend", "  x == y || x == z || y == z\nend", "  x == y || x == z ||\
    \ y == z\nend", "  if x.to_i == y.to_i && x.to_i == z.to_i\n    true\n  else\n\
    \    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n\
    \  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  if x.is_a? Fixnum and y.is_a? Fixnum and z.is_a?\
    \ Fixnum\n    return x.to_i == y.to_i + z.to_i\n  else\n    return false\n  end\n\
    end", "  return true if x.to_i == y.to_i && y.to_i == z.to_i\n  false\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n \
    \ else\n    false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i\
    \ == z.to_i\n    return true\n  else\n    return false\n  end\nend", "  if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", " \
    \ x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x\
    \ == y || x == z || y == z\nend", "  if x.is_a? Integer && y.is_a? Integer &&\
    \ z.is_a? Integer\n    x + y == z\n  else\n    false\n  end\nend", "  x == y ||\
    \ x == z || y == z\nend", "  return true if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \  false\nend", "  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  return x != y &&\
    \ x != z && y != z && x.to_i != y.to_i && x.to_i != z.to_i && y.to_i != z.to_i\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_132_is_nested
language: rb
prompt: "# Create a function that takes a string as input which contains only square\
  \ brackets.\n# The function should return True if and only if there is a valid subsequence\
  \ of brackets \n# where at least one bracket in the subsequence is nested.\n# >>>\
  \ is_nested.call(\"[[]]\")\n# true\n# >>> is_nested.call(\"[]]]]]]][[[[[]\")\n#\
  \ false\n# >>> is_nested.call(\"[][]\")\n# false\n# >>> is_nested.call(\"[]\")\n\
  # false\n# >>> is_nested.call(\"[[][]]\")\n# true\n# >>> is_nested.call(\"[[]][[\"\
  )\n# true\ndef is_nested(string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_nested\n\
  \    candidate = method(:is_nested)\n    assert_equal(true, candidate.call(\"[[]]\"\
  ))\n    assert_equal(false, candidate.call(\"[]]]]]]][[[[[]\"))\n    assert_equal(false,\
  \ candidate.call(\"[][]\"))\n    assert_equal(false, candidate.call(\"[]\"))\n \
  \   assert_equal(true, candidate.call(\"[[[[]]]]\"))\n    assert_equal(false, candidate.call(\"\
  []]]]]]]]]]\"))\n    assert_equal(true, candidate.call(\"[][][[]]\"))\n    assert_equal(false,\
  \ candidate.call(\"[[]\"))\n    assert_equal(false, candidate.call(\"[]]\"))\n \
  \   assert_equal(true, candidate.call(\"[[]][[\"))\n    assert_equal(true, candidate.call(\"\
  [[][]]\"))\n    assert_equal(false, candidate.call(\"\"))\n    assert_equal(false,\
  \ candidate.call(\"[[[[[[[[\"))\n    assert_equal(false, candidate.call(\"]]]]]]]]\"\
  ))\n  end\nend\n"
completions: ["  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\",
  "  nesting = 0\n  bracket_count = 0\n  bracket_open = 0\n  bracket_close = 0\n \
    \ bracket_opens = []\n  bracket_closes = []\n  bracket_opens_count = 0\n  bracket_closes_count\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_indexs\
    \ = []\n  bracket_closes_indexs = []\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index\
    \ = 0\n  bracket_closes_index = 0\n  bracket_opens_index = 0\n  bracket_closes_index\
    \ = 0\n  bracket_opens_index = 0\n  bracket_closes_index = 0\n  bracket_opens_index",
  "  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \")\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\",
  '  string.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s| s.scan(/\[([^\[\]]+)\]/).flatten.all?{|s|
    s.scan(/\[([^\', "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')", "  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(", "  nesting = 0\n  brackets = 0\n  for i in 0...string.length\n\
    \    if string[i] == \"[\"\n      nesting += 1\n      brackets += 1\n    elsif\
    \ string[i] == \"]\"\n      nesting -= 1\n      brackets -= 1\n      if nesting\
    \ < 0\n        return false\n    end\n  end\n  return brackets > 0\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nI like your solution, but I believe that `[[]]`\
    \ should return `true` because `[]]` contains at least one `[`.\n<|/ c |>\n<|\
    \ c |>\nI believe that `[[]]` should return `true` because `[]]` contains at least\
    \ one `[`.\n<|/ c |>\n<| c |>\nI believe that `[[]]` should return `true` because\
    \ `[]]` contains at least one `[`.\n<|/ c |>\n<| c |>\nI believe that `[[]]` should\
    \ return `true` because `[]]` contains at least one `[`.\n<|/ c |>\n<| c |>\n\
    I believe that `[[]]` should return `true` because `[]]` contains at least one\
    \ `[`.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  string.gsub!(/\\[/, '{')\n\
    \  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/,\
    \ ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(",
  "  nesting = 0\n  nesting_open = 0\n  nesting_close = 0\n  nesting_open = string.count(\"\
    [\")\n  nesting_close = string.count(\"]\")\n  nesting = nesting_open + nesting_close\n\
    \  if nesting == 0\n    return false\n  else\n    return true\n  end\nend", " \
    \ nesting = 0\n  brackets = 0\n  for i in string\n    if i == \"[\"\n      nesting\
    \ += 1\n      brackets += 1\n    elsif i == \"]\"\n      brackets -= 1\n     \
    \ nesting -= 1\n      break if brackets == 0\n  end\n  nesting == 0\nend", " \
    \ string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/",
  "  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\]|\\[(?:[^\\[\\]]|(?R))*\\]/)\n  string.scan(/\\\
    [(?:[^\\[\\]]|(?R))*\\]/)\n  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\]\\]/)\n  string.scan(/\\\
    [(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]/)\n  string.scan(/\\[(?:[^\\\
    [\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\]/)\n  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\\
    ]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]/)\n  string.scan(/\\[(?:[^\\\
    [\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\]/)\n  string.scan(/\\\
    [(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\\
    [\\]]|(?R))*\\]/)\n  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\\
    ]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]/)\n\
    \  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\\
    ]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\\
    ]/)\n  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\\
    [\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\\
    ]]|(?R))*\\]\\[(?:[^\\[\\]]|(?R))*\\]/)\n  string.scan(/\\[(?:[^\\[\\]]|(?R))*\\\
    ]\\[(?:[^\\[\\]]|(?R))*\\]\\[(?:[^\\[\\]]", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')", "  nesting = 0\n  open_brackets = 0\n  close_brackets\
    \ = 0\n  \n  string.each_char do |c|\n    if c == '['\n      open_brackets +=\
    \ 1\n    elsif c == '['\n      close_brackets += 1\n    elsif c == ']'\n     \
    \ close_brackets -= 1\n    elsif c == ']'\n      open_brackets -= 1\n    elsif\
    \ open_brackets == close_brackets\n      nesting += 1\n    end\n  end\n  \n  nesting\
    \ == 0\nend", "  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \")\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\\
    [/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\\
    )/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    (/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\[/, \"(\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\(/, \"[\")\n  string.gsub!(/\\)/, \"]\")\n  string.gsub!(/\\",
  "  string.scan(/\\[/).any? {|x| string.scan(/\\]/).any? {|y| x == y}}\nend", " \
    \ string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/",
  "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')",
  "  string.scan(/\\[/).any? { |c| string.scan(/\\]/).any? { |d| c == d } }\nend",
  "  string.gsub!(/\\[|\\]\\]|\\[|\\]/, \"\")\n  string.gsub!(/\\[|\\]/, \"[\")\n\
    \  string.gsub!(/\\]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[|\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n \
    \ string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\]\\]/, \"]\")\n  string.gsub!(/\\\
    [|\\]\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]/, \"\
    [\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\\
    ]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\"\
    )\n  string.gsub!(/\\[|\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [|\\]\\]/, \"[\")\n  string.gsub!(/\\]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\\
    ]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]/, \"[\")\n \
    \ string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\\
    ]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\"\
    )\n  string.gsub!(/\\[|\\]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [|\\]\\]/, \"[\")\n  string.gsub!(/\\]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\\
    ]/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]/, \"[\")\n \
    \ string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"[\")\n  string.gsub!(/\\\
    ]\\]/, \"]\")\n  string.gsub!(/\\[|\\]\\]/, \"", "  string.gsub!(/\\[/, '{')\n\
    \  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/,\
    \ ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(",
  "  string.scan(/\\[([^\\[\\]]+)\\]/)\n  string.scan(/\\[([^\\[\\]]+)\\]/).length\
    \ == 1\nend", "  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  ", "  brackets = string.count(\"[\")\n  squares = string.count(\"\
    ]\")\n  \n  return brackets == squares and brackets > 0\nend", "  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')", "  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')", "  brackets =\
    \ string.scan(/\\[|\\]/)\n  brackets.each do |bracket|\n    bracket.each do |b|\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n\
    \      next if b == \"[\"\n      next if b == \"]\"\n      next if b == \"{\"\n\
    \      next if b == \"}\"\n      next if b == \"(\"\n      next if b == \")\"\n",
  "  nesting = 0\n  bracket_count = 0\n  bracket_open = 0\n  bracket_close = 0\n \
    \ bracket_stack = []\n  \n  string.each_char do |char|\n    if char == '['\n \
    \     bracket_open += 1\n      bracket_stack << char\n    elsif char == ']'\n\
    \      bracket_close += 1\n      bracket_stack.pop\n      \n      if bracket_open\
    \ == bracket_close && bracket_open > 0\n        nesting += 1\n      end\n    end\n\
    \    \n    if bracket_open == bracket_close && bracket_open > 0\n      bracket_count\
    \ += bracket_close - bracket_open\n    end\n  end\n  \n  nesting == bracket_count\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your solution\
    \ is very similar to mine, but I wanted to know if there is a way to do it without\
    \ using recursion.\n<|/ c |>\n<| c |>\nI updated my answer with a recursive solution.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I tried your solution\
    \ and it works. But I wanted to know if there is a way to do it without using\
    \ recursion.\n<|/ c |>\n<| c |>\nI updated my answer with a recursive solution.\
    \ Hope it helps.\n<|/ c |>\n<| a |>\nI wrote a recursive solution that works fine\
    \ for me:\n<code>", "  nesting = 0\n  brackets = 0\n  for i in string\n    if\
    \ i == \"[\"\n      nesting += 1\n    elsif i == \"]\"\n      nesting -= 1\n \
    \   elsif nesting > 0\n      brackets += 1\n    elsif nesting < 0\n      brackets\
    \ -= 1\n    end\n  end\n  brackets == 0\nend\n</code>\n<|/ a dscore=1 |>\n<| c\
    \ |>\nThis doesn't work for `is_nested.call(\"[[]][[\")`\n<|/ c |>\n<| c |>\n\
    Yes, I noticed that after I posted it. I edited my answer to fix it.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for `is_nested.call(\"[][]\")`\n<|/ c |>\n<| c |>\n\
    Yes, I noticed that after I posted it. I edited my answer to fix it.\n<|/ c |>\n\
    <| a tags=ruby,regex |>\n<code>", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(", "  string.gsub!(/\\[/,\
    \ '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')", "  nesting = 0\n\
    \  brackets = 0\n  for i in string.chars\n    if i == \"[\" \n      nesting +=\
    \ 1\n      brackets += 1\n    elsif i == \"]\"\n      nesting -= 1\n      brackets\
    \ -= 1\n      break if nesting == 0\n  end\n  nesting == 0\nend", "  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\\
    ]/, \"]\")\n  string.gsub!(/\\[/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\\
    [/, \"[\")\n  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\", "  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')", "  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')", "  brackets =\
    \ string.scan(/\\[.*?\\]/)\n  brackets.each do |bracket|\n    nesting = bracket.scan(/\\\
    [.*?\\]/)\n    nesting.each do |nested|\n      nested.length >= bracket.length\n\
    \    end\n  end\nend", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\[/, '')", "  nesting = 0\n  open_brackets = 0\n  close_brackets\
    \ = 0\n  bracket_count = 0\n  \n  string.each_char do |c|\n    if c == '['\n \
    \     open_brackets += 1\n    elsif c == ']'\n      close_brackets += 1\n    elsif\
    \ c == ']' && open_brackets > 0 && close_brackets > 0\n      bracket_count +=\
    \ 1\n      open_brackets -= 1\n      close_brackets -= 1\n    elsif c == ']' &&\
    \ open_brackets == 0 && close_brackets == 0\n      bracket_count += 1\n    end\n\
    \  end\n  \n  bracket_count > 0 && bracket_count == nesting\nend\n</code>\n<|/\
    \ a |>\n<| c |>\nThis doesn't work if the brackets are nested more than once.\n\
    <|/ c |>\n<| c |>\nYes, I realized that after I posted it. I edited my answer\
    \ to include a solution that works with nested brackets.\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(", "  brackets = string.count(\"[\")\n  squares = string.count(\"\
    ]\")\n  return brackets == squares - 1\nend", "  string.gsub!(/\\[/, \"{\")\n\
    \  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\\
    ]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\\
    [/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\{/, \"[\")\n  string.gsub!(/\\\
    }/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(/\\]/, \"}\")\n  string.gsub!(/\\\
    {/, \"[\")\n  string.gsub!(/\\}/, \"]\")\n  string.gsub!(/\\[/, \"{\")\n  string.gsub!(",
  "  string.gsub!(/\\[|\\]/, '') \n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\]/, ']')\n", "  nesting\
    \ = 0\n  brackets = 0\n  open_brackets = 0\n  close_brackets = 0\n  \n  string.each_char\
    \ do |char|\n    if char == '['\n      brackets += 1\n    elsif char == ']'\n\
    \      brackets -= 1\n    elsif char == '['\n      open_brackets += 1\n    elsif\
    \ char == ']'\n      close_brackets += 1\n    end\n    \n    if brackets == 0\n\
    \      nesting += 1\n    elsif brackets == nesting\n      nesting -= 1\n    end\n\
    \  end\n  \n  nesting == 0\nend", "  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '') \n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '') \n  ", "  brackets = string.count(\"[\")\n\
    \  squares = string.count(\"]\")\n  \n  return brackets == squares - brackets\n\
    end", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/,\
    \ '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\{/, '')\n  string.gsub!(/\\}/, '')\n  string.gsub!(/\\\
    (/, '')\n  string.gsub!(/\\)/, '')", "  nesting = 0\n  bracket_count = 0\n  bracket_open\
    \ = 0\n  bracket_close = 0\n  bracket_open = string.index(\"[\")\n  bracket_close\
    \ = string.index(\"]\")\n  bracket_count = 0\n  nesting = 0\n  while bracket_open\
    \ != bracket_close\n    if bracket_open < bracket_close\n      nesting += 1\n\
    \      bracket_count += 1\n      bracket_open = string.index(\"[\", bracket_open+1)\n\
    \      bracket_close = string.index(\"]\", bracket_close+1)\n    else \n     \
    \ nesting -= 1\n      bracket_count -= 1\n      bracket_open = string.index(\"\
    [\", bracket_close+1)\n      bracket_close = string.index(\"]\", bracket_open+1)\n\
    \    if nesting == 0\n      return true\n  end\n  return false\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nThis fails for `is_nested.call(\"[[]]\")` which\
    \ should return true.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing\
    \ it out. Also added a test case to show that it works.\n<|/ c |>\n<| c |>\nI\
    \ fixed the bug, thanks for pointing it out. Also added a test case to show that\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Also\
    \ added a test case to show that it works.\n<|/ c |>\n<| c |>\nI fixed the bug,\
    \ thanks for pointing it out. Also added a test case to show that it works.\n\
    <|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(", "  string.gsub!(/\\[/,\
    \ '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')", "  brackets =\
    \ string.scan(/\\[|\\]|\\{|\\}|\\(|\\)/)\n  brackets.each do |b|\n    next if\
    \ b.empty?\n    brackets_count = b.count(\"[\")\n    brackets_count += b.count(\"\
    ]\")\n    brackets_count += b.count(\"{\")\n    brackets_count += b.count(\"}\"\
    )\n    brackets_count += b.count(\"(\")\n    brackets_count += b.count(\")\")\n\
    \    if brackets_count > 1\n      return false\n    end\n  end\n  return true\n\
    end\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't work for `
  "  nesting = 0\n  brackets = 0\n  for i in string.chars\n    if i == \"[\"\n   \
    \   brackets += 1\n    elsif i == \"]\"\n      brackets -= 1\n      nesting +=\
    \ brackets\n    elsif brackets == 0\n      return nesting > 0\n  end\n  return\
    \ false\nend", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(", "  brackets = string.scan(/\\[|\\]/)\n  brackets.each\
    \ do |bracket|\n    nesting = bracket.count(\"[\")\n    nesting += bracket.count(\"\
    ]\")\n    nesting > 0\n  end\nend", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(", "  string.gsub!(/\\[/,\
    \ \"[[]\")\n  string.gsub!(/\\]/, \"][]]\")\n  string.gsub!(/\\[/, \"[][\")\n\
    \  string.gsub!(/\\]/, \"]\")\n  string.gsub!(/\\]/, \"][]\")\n  string.gsub!(/\\\
    ]/, \"][][\")\n  string.gsub!(/\\]/, \"][][]\")\n  string.gsub!(/\\]/, \"][][][\"\
    )\n  string.gsub!(/\\]/, \"][][][]\")\n  string.gsub!(/\\]/, \"][][][][\")\n \
    \ string.gsub!(/\\]/, \"][][][][][]\")\n  string.gsub!(/\\]/, \"][][][][][][]\"\
    )\n  string.gsub!(/\\]/, \"][][][][][][][]\")\n  string.gsub!(/\\]/, \"][][][][][][][][]\"\
    )\n  string.gsub!(/\\]/, \"][][][][][][][][][]\")\n  string.gsub!(/\\]/, \"][][][][][][][][][][]\"\
    )\n  string.gsub!(/\\]/, \"][][][][][][][][][][][][]\")\n  string.gsub!(/\\]/,\
    \ \"][][][][][][][][][][][][][]\")\n  string.gsub!(/\\]/, \"][][][][][][][][][][][][][][]\"\
    )\n  string.gsub!(/\\]/, \"][][][][][][][][][][][][][][][]\")\n  string.gsub!(/\\\
    ]/, \"][][][][][][][][][][][][][][][][][]\")\n  string.gsub!(/\\]/, \"][][][][][][][][][][][][][][][][][][][][]\"\
    )\n  string.gsub!(/\\]/, \"][][][][][][][][][][][][][][][][][][][][][]\")\n  string.gsub!(/\\\
    ]/, \"][][][][][][][][][][][][][][][][][][][][][][]\")\n  string.gsub!(/\\]/,\
    \ \"][][][][][][][][][][][][][][][][][][][][][][][][]\")\n  string.gsub!(/\\]/,\
    \ \"][][][][][]", "  brackets = string.count(\"[\")\n  squares = string.count(\"\
    ]\")\n  \n  if(brackets == squares - 1)\n    return true\n  else\n    return false\n\
    end", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/,\
    \ '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(", "  string.gsub!(/\\[/,\
    \ '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/", "  brackets = string.scan(/\\\
    [|\\]/)\n  brackets.each do |bracket|\n    bracket.each do |char|\n      char.next\n\
    \    end\n  end\n  true\nend", "  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/", "  brackets = string.count(\"[\")\n  square_brackets\
    \ = string.count(\"]\")\n  \n  if(brackets == square_brackets)\n    return true\n\
    \  else\n    return false\nend", '  string.scan(/\[([^\[\]]+)\]/).flatten.any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s|
    s.scan(/\[/).any?{|s| s.scan(/\]/).any?{|s| s.scan(/\[/).any?{|s| s.scan', " \
    \ string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/,\
    \ '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(", '  string.gsub!(/\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\]|\{|\}|\(|\)|\[|\',
  "  string.gsub!(/\\[/, '') \n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\", " \
    \ string.gsub!(/\\[/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n\
    \  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/",
  "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n\
    \  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/,\
    \ ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\\
    }/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\]/, ']')\n  string.gsub!(/\\\
    {/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\[/, '[')\n  string.gsub!(/\\\
    ]/, ']')\n  string.gsub!(/\\{/, '{')\n  string.gsub!(/\\}/, '}')\n  string.gsub!(/\\\
    [/, '[')\n  string.gsub!(", "  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/,\
    \ '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\\
    {/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(/\\\
    ]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\}/, ']')\n  string.gsub!(/\\\
    [/, '{')\n  string.gsub!(/\\]/, '}')\n  string.gsub!(/\\{/, '[')\n  string.gsub!(/\\\
    }/, ']')\n  string.gsub!(/\\[/, '{')\n  string.gsub!(", "  string.gsub!(/\\[|\\\
    ]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\\
    [|\\]\\]|\\[|\\]/, '')\n  string.gsub!(/\\[|\\]\\]|\\[|\\]/", "  string.gsub!(/\\\
    [/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\[/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\\
    ]/, '')\n  string.gsub!(/\\]/, '')\n  string.gsub!(/\\"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

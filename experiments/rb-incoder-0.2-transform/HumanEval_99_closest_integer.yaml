name: HumanEval_99_closest_integer
language: rb
prompt: "# Create a function that takes a value (string) representing a number\n#\
  \ and returns the closest integer to it. If the number is equidistant\n# from two\
  \ integers, round it away from zero.\n# Examples\n# >>> closest_integer.call(\"\
  10\")\n# 10\n# >>> closest_integer.call(\"15.3\")\n# 15\n# Note:\n# Rounding away\
  \ from zero means that if the given number is equidistant\n# from two integers,\
  \ the one you should return is the one that is the\n# farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n# return 15 and closest_integer(\"-14.5\") should\
  \ return -15.\ndef closest_integer(value)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_closest_integer\n\
  \    candidate = method(:closest_integer)\n    assert_equal(10, candidate.call(\"\
  10\"))\n    assert_equal(15, candidate.call(\"14.5\"))\n    assert_equal(-16, candidate.call(\"\
  -15.5\"))\n    assert_equal(15, candidate.call(\"15.3\"))\n    assert_equal(0, candidate.call(\"\
  0\"))\n  end\nend\n"
completions: ["  value = value.to_f\n  difference = value - @integer\n  difference\
    \ = if difference < 0 then -difference else difference\n  difference = if difference\
    \ == 0 then 0 else difference\n  difference = if difference == 1 then 1 else difference\n\
    \  difference = if difference == -1 then -2 else difference\n  difference = if\
    \ difference == -2 then -3 else difference\n  difference = if difference == -3\
    \ then -4 else difference\n  difference = if difference == -4 then -5 else difference\n\
    \  difference = if difference == -5 then -6 else difference\n  difference = if\
    \ difference == -6 then -7 else difference\n  difference = if difference == -7\
    \ then -8 else difference\n  difference = if difference == -8 then -9 else difference\n\
    \  difference = if difference == -9 then -10 else difference\n  difference = if\
    \ difference == -10 then -11 else difference\n  difference = if difference ==\
    \ -11 then -12 else difference\n  difference = if difference == -12 then -13 else\
    \ difference\n  difference = if difference == -13 then -14 else difference\n \
    \ difference = if difference == -14 then -15 else difference\n  difference = if\
    \ difference == -15 then -16 else difference\n  difference = if difference ==\
    \ -16 then -17 else difference\n  difference = if difference == -17 then -18 else\
    \ difference\n  difference = if difference == -18 then -19 else difference\n \
    \ difference = if difference == -19 then -20 else difference\n  difference = if\
    \ difference == -20 then -21 else difference\n  difference = if difference ==\
    \ -21 then -22 else difference\n  difference = if difference == -22 then -23 else\
    \ difference\n  difference = if difference == -23 then -24 else difference\n \
    \ difference = if difference == -24 then -25 else difference\n  difference = if\
    \ difference == -25 then -26 else difference\n  difference = if difference ==\
    \ -26 then -27 else difference\n  difference = if difference == -27 then -28 else\
    \ difference\n  difference = if difference == -28 then -29 else difference\n \
    \ difference = if difference == -29 then -30 else difference\n  difference = if\
    \ difference == -30 then -31 else difference\n  difference = if difference ==\
    \ -31 then -32 else difference\n  difference = if difference == -32 then -33 else\
    \ difference\n  difference = if difference == -33 then -34 else difference\n \
    \ difference = if difference == -34 ", "  value = value.to_f\n  difference = value\
    \ - closest_integer.call(value)\n  difference = if difference < 0 then -difference\
    \ else difference\n  difference = if difference < 0.5 then difference * 2 else\
    \ difference\n  difference = if difference < 1 then difference * 2 else difference\n\
    \  difference = if difference < 2 then difference * 2 else difference\n  difference\
    \ = if difference < 3 then difference * 2 else difference\n  difference = if difference\
    \ < 4 then difference * 2 else difference\n  difference = if difference < 5 then\
    \ difference * 2 else difference\n  difference = if difference < 6 then difference\
    \ * 2 else difference\n  difference = if difference < 7 then difference * 2 else\
    \ difference\n  difference = if difference < 8 then difference * 2 else difference\n\
    \  difference = if difference < 9 then difference * 2 else difference\n  difference\
    \ = if difference < 10 then difference * 2 else difference\n  difference = if\
    \ difference < 11 then difference * 2 else difference\n  difference = if difference\
    \ < 12 then difference * 2 else difference\n  difference = if difference < 13\
    \ then difference * 2 else difference\n  difference = if difference < 14 then\
    \ difference * 2 else difference\n  difference = if difference < 15 then difference\
    \ * 2 else difference\n  difference = if difference < 16 then difference * 2 else\
    \ difference\n  difference = if difference < 17 then difference * 2 else difference\n\
    \  difference = if difference < 18 then difference * 2 else difference\n  difference\
    \ = if difference < 19 then difference * 2 else difference\n  difference = if\
    \ difference < 20 then difference * 2 else difference\n  difference = if difference\
    \ < 21 then difference * 2 else difference\n  difference = if difference < 22\
    \ then difference * 2 else difference\n  difference = if difference < 23 then\
    \ difference * 2 else difference\n  difference = if difference < 24 then difference\
    \ * 2 else difference\n  difference = if difference < 25 then difference * 2 else\
    \ difference\n  difference = if difference < 26 then difference * 2 else difference\n\
    \  difference = if difference < 27 then difference * 2 else difference\n  difference\
    \ = if difference < 28 then difference * 2 else difference\n  difference = if\
    \ difference < 29 then difference * 2 else difference\n  difference = if difference\
    \ < 30 then difference * 2 else difference\n  difference = if difference < 31\
    \ then difference * 2 else difference\n  difference = if difference < 32 then\
    \ difference * 2 else difference\n  difference = if difference < 33 then difference\
    \ * 2 else difference\n  difference = if difference < 34 then difference * 2 else\
    \ difference\n  difference = if difference < 35 then difference * 2 else difference\n\
    \  difference = if difference < 36 then difference * 2 else difference\n  ", " \
    \ value = value.to_f\n  difference = value - closest_integer.call(value).to_f\n\
    \  if difference < 0\n    difference *= -1\n  end\n  difference\nend", "  value\
    \ = value.to_f\n  difference = value - closest_integer.call(value)\n  difference\
    \ = difference * difference\n  return value if difference == 0.0 else value.ceil\
    \ - difference\nend", "  value = value.to_f\n  difference = value - closest_integer.call(value).to_f\n\
    \  return value.round if difference == 0.0 || difference == value.round else value\n\
    end", "  value = value.to_f\n  difference = value - closest_integer(value - 1)\n\
    \  difference = difference * difference\n  return value if difference == 0.0 else\
    \ value.ceil\nend", "  value = value.to_f\n  difference = value - @minimum\n \
    \ difference = difference if difference > @maximum else @maximum - difference\n\
    \  difference = difference if difference < @minimum else @minimum - difference\n\
    \  difference\nend", "  value.to_i\n  value.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n\
    \  value.to_s.to_i\n  value.to_s.to_", "  value = value.to_f\n  difference = value\
    \ - closest_integer.call(value.abs)\n  difference = difference * difference\n\
    \  return value.round if difference < 0.000001 else None\nend", "  value = value.to_f\n\
    \  difference = value - closest_integer.call(value)\n  return value.round if difference\
    \ == 0 then value else value.ceil\nend", "  value.to_s.to_i\nend", "  value =\
    \ value.to_f\n  difference = value - closest_integer.call(value)\n  if difference\
    \ == 0\n    value\n  else\n    value + difference\n  end\nend", "  value = value.to_f\n\
    \  difference = value - @integer\n  if difference < 0\n    difference = @integer\
    \ - value\n  end\n  difference\nend", "  value.to_i\n  value.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_f\n  value.to_s.to_i\n\
    \  value.to_s.to_f\n  value.to_s.to_i\n  value.to_s.to_", "  value = value.to_f\n\
    \  difference = value - @integer\n  difference = if difference < 0 then -difference\
    \ else difference\n  difference = if difference == 0 then 0 else difference\n\
    \  difference = if difference < @integer then @integer - difference else difference\n\
    \  difference\nend", "  value = value.to_f\n  difference = value - closest_integer.call(value).to_f\n\
    \  return value.round(-difference)\nend", "  value = value.to_f\n  difference\
    \ = value - closest_integer(value - 1)\n  return value if difference == 0.0 else\
    \ value\nend", "  value = value.to_f\n  difference = value - closest_integer.call(value.abs)\n\
    \  difference = difference * difference\n  difference = difference / 2\n  difference\
    \ = difference.round\n  difference = difference * -1\n  difference\nend", "  value\
    \ = value.to_f\n  difference = value - closest_integer.call(value).to_f\n  return\
    \ value if difference == 0.0 else closest_integer.call(value).to_f\nend", "  value\
    \ = value.to_f\n  difference = value - closest_integer.call(value).to_f\n  return\
    \ value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - value\n  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0.000001 \n  difference = closest_integer.call(value).to_f\
    \ - closest_integer.call(value).to_f\n  return value.round if difference < 0.000001\
    \ \n  difference = closest_integer.call(value).to_f - closest_integer.call(value).to_f\n\
    \  return value.round if difference < 0."]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

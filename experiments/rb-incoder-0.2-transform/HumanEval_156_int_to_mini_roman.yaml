name: HumanEval_156_int_to_mini_roman
language: rb
prompt: "# Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  # and return it in lowercase.\n# Restrictions: 1 <= num <= 1000\n# Examples:\n#\
  \ >>> int_to_mini_roman.call(19)\n# \"xix\"\n# >>> int_to_mini_roman.call(152)\n\
  # \"clii\"\n# >>> int_to_mini_roman.call(426)\n# \"cdxxvi\"\ndef int_to_mini_roman(number)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_int_to_mini_roman\n\
  \    candidate = method(:int_to_mini_roman)\n    assert_equal(\"xix\", candidate.call(19))\n\
  \    assert_equal(\"clii\", candidate.call(152))\n    assert_equal(\"ccli\", candidate.call(251))\n\
  \    assert_equal(\"cdxxvi\", candidate.call(426))\n    assert_equal(\"d\", candidate.call(500))\n\
  \    assert_equal(\"i\", candidate.call(1))\n    assert_equal(\"iv\", candidate.call(4))\n\
  \    assert_equal(\"xliii\", candidate.call(43))\n    assert_equal(\"xc\", candidate.call(90))\n\
  \    assert_equal(\"xciv\", candidate.call(94))\n    assert_equal(\"dxxxii\", candidate.call(532))\n\
  \    assert_equal(\"cm\", candidate.call(900))\n    assert_equal(\"cmxciv\", candidate.call(994))\n\
  \    assert_equal(\"m\", candidate.call(1000))\n  end\nend\n"
completions: ["  roman = \"\"\n  while number > 0\n    roman, number = roman.succ,\
    \ number % 100\n    roman, number = roman.succ, number / 100\n  end\n  roman.downcase!\n\
    \  return roman\nend", "  roman = \"\"\n  while number > 0\n    roman, number\
    \ = roman.insert(0, get_roman_numeral(number % 10)), number / 10\n  end\n  roman\n\
    end", "  roman = Array.new\n  roman.push(\"M\")\n  roman.push(\"CM\")\n  roman.push(\"\
    D\")\n  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"XC\")\n  roman.push(\"\
    L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"IX\")\n  roman.push(\"\
    V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n", "  roman = \"\"\n  while number > 0\n    roman =\
    \ roman.chars.to_a.find { |char| char.roman_numeral >= number }.to_s + \"x\"\n\
    \    number -= roman.chars.to_a.find { |char| char.roman_numeral >= number }.roman_numeral\n\
    \  end\n  roman.downcase!\nend", "  roman = \"\"\n  while number > 0\n    roman\
    \ = roman.chars.to_a.find { |char| char.roman_numeral >= number }.to_s + \"x\"\
    \n    number -= roman.chars.to_a.find { |char| char.roman_numeral >= number }.roman_numeral\n\
    \  end\n  roman\nend", "  roman = Array.new\n  roman.push(\"M\")\n  roman.push(\"\
    CM\")\n  roman.push(\"D\")\n  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"\
    XC\")\n  roman.push(\"L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"\
    IX\")\n  roman.push(\"V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n", "  roman = Array.new\n  roman[0]\
    \ = \"\"\n  roman[1] = \"\"\n  roman[2] = \"\"\n  roman[3] = \"\"\n  roman[4]\
    \ = \"C\"\n  roman[5] = \"D\"\n  roman[6] = \"X\"\n  roman[7] = \"V\"\n  roman[8]\
    \ = \"I\"\n  roman[9] = \"I\"\n  roman[10] = \"I\"\n  roman[11] = \"I\"\n  roman[12]\
    \ = \"I\"\n  roman[13] = \"I\"\n  roman[14] = \"I\"\n  roman[15] = \"I\"\n  roman[16]\
    \ = \"I\"\n  roman[17] = \"I\"\n  roman[18] = \"I\"\n  roman[19] = \"I\"\n  roman[20]\
    \ = \"I\"\n  roman[21] = \"I\"\n  roman[22] = \"I\"\n  roman[23] = \"I\"\n  roman[24]\
    \ = \"I\"\n  roman[25] = \"I\"\n  roman[26] = \"I\"\n  roman[27] = \"I\"\n  roman[28]\
    \ = \"I\"\n  roman[29] = \"I\"\n  roman[30] = \"I\"\n  roman[31] = \"I\"\n  roman[32]\
    \ = \"I\"\n  roman[33] = \"I\"\n  roman[34] = \"I\"\n  roman[35] = \"I\"\n  roman[36]\
    \ = \"I\"\n  roman[37] = \"I\"\n  roman[38] = \"I\"\n  roman[39] = \"I\"\n  roman[40]\
    \ = \"I\"\n  roman[41] = \"I\"\n  roman[42] = \"I\"\n  roman[43] = \"I\"\n  roman[44]\
    \ = \"I\"\n  roman[45] = \"I\"\n  roman[46] = \"I\"\n  roman[47] = \"I\"\n  roman[48]\
    \ = \"I\"\n  roman[49] = \"I\"\n  roman[50] = \"I\"\n  roman[51] = \"I\"\n  roman[52]\
    \ = \"I\"\n  roman[53] = \"I\"\n  roman[54] = \"I\"\n  roman[55] = \"I\"\n  roman[56]\
    \ = \"I\"\n  roman[57] = \"I\"\n  roman", "  roman = Array.new\n  roman.push(\"\
    M\")\n  roman.push(\"CM\")\n  roman.push(\"D\")\n  roman.push(\"CD\")\n  roman.push(\"\
    C\")\n  roman.push(\"XC\")\n  roman.push(\"L\")\n  roman.push(\"XL\")\n  roman.push(\"\
    X\")\n  roman.push(\"IX\")\n  roman.push(\"V\")\n  roman.push(\"IV\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n", "  roman\
    \ = Array.new\n  roman.push(\"M\")\n  roman.push(\"CM\")\n  roman.push(\"D\")\n\
    \  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"XC\")\n  roman.push(\"\
    L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"IX\")\n  roman.push(\"\
    V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n", "  roman = \"\"\n  while number > 0\n    roman,\
    \ number = roman.succ, number / 10\n    roman, number = roman.succ, number % 10\n\
    \  end\n  roman\nend", "  roman = \"\"\n  while number > 0\n    roman = (number\
    \ % 100) + roman\n    number = number / 100\n  end\n  roman = (number % 10) +\
    \ roman\n  roman = roman.downcase\n  return roman\nend", "  roman = \"\"\n  roman_numerals\
    \ = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\"\
    , \"V\", \"IV\", \"I\"]\n  roman_numerals.each do |roman_numeral|\n    roman_number\
    \ = number / roman_numeral\n    roman_number %= roman_numeral\n    roman << roman_numeral\n\
    \    number -= roman_number\n  end\n  roman\nend", "  roman = \"\"\n  while number\
    \ > 0\n    roman = roman.chars.to_a[number % 100] + roman\n    number /= 100\n\
    \  end\n  roman = roman.chars.to_a.join\n  roman.downcase!\n  roman\nend", " \
    \ roman = Array.new\n  roman.push(\"M\")\n  roman.push(\"CM\")\n  roman.push(\"\
    D\")\n  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"XC\")\n  roman.push(\"\
    L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"IX\")\n  roman.push(\"\
    V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n", "  roman = \"\"\n  while number > 0\n    roman =\
    \ roman.chars.to_a.find { |char| char == (number % 10).to_s }.to_s + roman\n \
    \   number /= 10\n  end\n  roman\nend", "  roman = \"\"\n  while number > 0\n\
    \    roman = roman.chars.to_a.find { |x| x == (number % 10).to_s }.to_s + roman\n\
    \    number /= 10\n  end\n  roman\nend", "  roman = \"\"\n  while number > 0\n\
    \    roman = roman.chars.to_a.find { |char| char == (number % 10).to_s }.to_s\
    \ + roman\n    number /= 10\n  end\n  roman.downcase!\n  return roman\nend", " \
    \ roman = \"\"\n  roman_numerals = {\n    1 => \"I\",\n    5 => \"V\",\n    10\
    \ => \"X\",\n    40 => \"L\",\n    100 => \"C\",\n    400 => \"D\",\n    1000\
    \ => \"M\"\n  }\n  while number > 0\n    roman = roman_numerals[number % 100]\
    \ + roman\n    number /= 100\n  end\n  return roman.downcase\nend", "  roman =\
    \ Array.new\n  roman.push(\"M\")\n  roman.push(\"CM\")\n  roman.push(\"D\")\n\
    \  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"XC\")\n  roman.push(\"\
    L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"IX\")\n  roman.push(\"\
    V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n", "  roman = Array.new\n  roman.push(\"M\")\n  roman.push(\"\
    CM\")\n  roman.push(\"D\")\n  roman.push(\"CD\")\n  roman.push(\"C\")\n  roman.push(\"\
    XC\")\n  roman.push(\"L\")\n  roman.push(\"XL\")\n  roman.push(\"X\")\n  roman.push(\"\
    IX\")\n  roman.push(\"V\")\n  roman.push(\"IV\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n  roman.push(\"\
    I\")\n  roman.push(\"I\")\n  roman.push(\"I\")\n"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_134_check_if_last_char_is_a_letter
language: rb
prompt: "# Create a function that returns True if the last character\n# of a given\
  \ string is an alphabetical character and is not\n# a part of a word, and False\
  \ otherwise.\n# Note: \"word\" is a group of characters separated by space.\n# Examples:\n\
  # >>> check_if_last_char_is_a_letter.call(\"apple pie\")\n# false\n# >>> check_if_last_char_is_a_letter.call(\"\
  apple pi e\")\n# true\n# >>> check_if_last_char_is_a_letter.call(\"apple pi e \"\
  )\n# false\n# >>> check_if_last_char_is_a_letter.call(\"\")\n# false\ndef check_if_last_char_is_a_letter(txt)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_check_if_last_char_is_a_letter\n\
  \    candidate = method(:check_if_last_char_is_a_letter)\n    assert_equal(false,\
  \ candidate.call(\"apple\"))\n    assert_equal(true, candidate.call(\"apple pi e\"\
  ))\n    assert_equal(false, candidate.call(\"eeeee\"))\n    assert_equal(true, candidate.call(\"\
  A\"))\n    assert_equal(false, candidate.call(\"Pumpkin pie \"))\n    assert_equal(false,\
  \ candidate.call(\"Pumpkin pie 1\"))\n    assert_equal(false, candidate.call(\"\"\
  ))\n    assert_equal(false, candidate.call(\"eeeee e \"))\n    assert_equal(false,\
  \ candidate.call(\"apple pie\"))\n    assert_equal(false, candidate.call(\"apple\
  \ pi e \"))\n  end\nend\n"
completions: ["  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice",
  "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    return false if word.empty?\n\
    \    return true if word[word.length-1].upcase == word[word.length-1]\n  end\n\
    \  true\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return true if word[word.length-1].upcase == word[word.length-1]\n  end\n\
    \  return false\nend", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1", "  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.split(\"\").each do |char|\n    \
    \  return false if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.slice!(-1)\n  txt.slice!(0..-2) if txt.slice!(0..-1).empty?\n  txt.slice!(0..-2).empty?\
    \ && txt.slice!(0..-1).empty?\nend", "  txt.slice!(-1)\n  return txt.empty? or\
    \ txt.slice!(0..-1).empty? or txt.slice!(0..-1).slice!(0..-1).empty?\nend", " \
    \ return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      char.upcase!\n\
    \      return false if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n    return\
    \ false if word.empty?\n    return true if word[word.length-1].upcase == word[word.length-1]\n\
    \  end\n  false\nend", "  txt.chars.last.upcase.include?(txt.chars.last)\nend",
  "  txt.chars.last.upcase!\n  txt.chars.last.downcase!\n  txt.chars.last.match?(/\\\
    w/)\nend", "  txt.downcase!\n  txt.scan(/\\w/).empty? && txt.scan(/\\w$/).empty?\n\
    end", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].downcase == txt.slice(-1)[0]\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  true\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.chars.last.upcase!\n  txt.chars.last.downcase!\n  txt.chars.last.match?(/\\\
    w/)\nend", "  return txt.chars.last.upcase !~ /\\w/\nend", "  txt.slice!(-1)\n\
    \  return txt.chars.all? { |c| c.upcase != c.downcase }\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      return false\
    \ if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\n\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\t\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\r\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\v\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\f\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if ", "  txt.chars.last.upcase!\n\
    \  txt.chars.last.empty?\nend", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1", "  txt.chars.last.upcase!\n  txt.chars.last.downcase!\n\
    \  txt.chars.last.match?(/[a-z]/)\nend", "  txt.downcase!\n  txt.split(\" \").each\
    \ do |word|\n    word.downcase!\n    return false if word.empty?\n    return false\
    \ if word.include?(txt[-1])\n  end\n  true\nend", "  return txt.chars.last.upcase\
    \ && !txt.chars.last.match?(/\\w/)\nend", "  txt.downcase!\n  txt.scan(/\\w$/)\n\
    \  txt.empty? || txt.last.match?(/[a-z]/)\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      return false\
    \ if char.upcase == char\n    end\n  end\n  true\nend", "  txt.downcase!\n  txt.strip!\n\
    \  txt.chars.last.match?(/[a-z]/)\nend", "  txt.downcase!\n  txt.slice!(-1) if\
    \ txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(0..-2) if txt.slice!(0..-1).empty?\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub(/[^a-z]/i, '')\nend",
  "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt", "  txt.chars.last.upcase!\n\
    \  txt.chars.last.match?(/\\w/)\nend", "  txt.downcase!\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice", "  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase == txt.slice(-1)[0]\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  true\n\
    end", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend",
  "  txt.downcase!\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice", "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\\
    w/)\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.empty?\n    return true if word[-1] != word[0]\n  end\n\
    \  false\nend", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1", "  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt", "  return txt.chars.last.upcase\
    \ && !txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt",
  "  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt", "  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt", "  txt.downcase!\n  txt.strip!\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if ", "  txt.downcase!\n  txt.split(\" \").each\
    \ do |word|\n    word.split(\"\").each do |letter|\n      return false if letter\
    \ == txt.last\n    end\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \" # remove trailing space\n  txt.slice!(-1) if txt.slice!(-1) == \"\"\
    \ # remove trailing space\n  txt.slice!(-1) if txt.slice!(-1) == \"\\n\" # remove\
    \ trailing newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\r\" # remove trailing\
    \ newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\t\" # remove trailing tab\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \"\\r\" # remove trailing newline\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \"\\n\" # remove trailing newline\n  txt.slice!(-1) if\
    \ txt.slice!(-1) == \"\\t\" # remove trailing tab\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \"\\n\" # remove trailing newline\n  txt.slice!(-1) if txt.slice!(-1) ==\
    \ \"\\r\" # remove trailing newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\\
    t\" # remove trailing tab\n  txt.slice!(-1) if txt.slice!(-1) == \"\\n\" # remove\
    \ trailing newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\r\" # remove trailing\
    \ newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\t\" # remove trailing tab\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \"\\n\" # remove trailing newline\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \"\\r\" # remove trailing newline\n  txt.slice!(-1) if\
    \ txt.slice!(-1) == \"\\t\" # remove trailing tab\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \"\\n\" # remove trailing newline\n  txt.slice!(-1) if txt.slice!(-1) ==\
    \ \"\\r\" # remove trailing newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\\
    t\" # remove trailing tab\n  txt.slice!(-1) if txt.slice!(-1) == \"\\n\" # remove\
    \ trailing newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\r\" # remove trailing\
    \ newline\n  txt.slice!(-1) if txt.slice!(-1) == \"\\t\" # remove trailing tab\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \"\\n\" # remove trailing newline\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \"\\r\" # remove trailing newline\n  txt.slice!(-1) if\
    \ txt.slice!(-1) == \"", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n\
    \  txt.chars.last.match?(/[a-z]/)\nend", "  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1", "  txt.split(\" \"\
    ).each do |word|\n    if word.last.match?(/[a-z]/)\n      return false\n    end\n\
    \  end\n  return true\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n\
    \    word.downcase!\n    return false if word.empty?\n    return true if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  false\nend", "  txt.slice!(-1)\n  return txt.empty?\
    \ or txt.slice!(0..-1).empty? or txt.slice!(0..-1).slice!(0..-1).empty?\nend",
  "  txt.slice!(-1)\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\"\
    \ \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n\
    \  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"\
    -\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n\
    \  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\"\
    \ \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n\
    \  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"\
    -\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n\
    \  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\"\
    \ \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n\
    \  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"\
    -\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n\
    \  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\"\
    \ \"))\n  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n\
    \  txt.slice!(txt.rindex(\"-\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"\
    -\") + 1)\n  txt.slice!(txt.rindex(\" \"))\n  txt.slice!(txt.rindex(\"-\"", " \
    \ return txt[-1].isalpha() and txt[-1] not in \"aeiou\"\nend", "  txt.downcase!\n\
    \  txt.strip!\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if ", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      return false\
    \ if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.downcase!\n    return true if word[word.length-1].match?(/[a-z]/)\n\
    \  end\n  return false\nend", "  txt.slice!(-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  ", "  txt.downcase!\n  txt.scan(/\\\
    w/).last.nil? ? false : true\nend", "  txt.downcase!\n  txt.scan(/\\w/)\n  txt.last.nil?\
    \ ? false : txt.last.upcase !~ /\\w/\nend", "  txt.downcase!\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.split(\"\").each do |char|\n    \
    \  return false if char.upcase == char\n    end\n  end\n  true\nend", "  return\
    \ txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.downcase!\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char", " \
    \ txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice",
  "  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.downcase!\n    return false if word.empty?\n\
    \    return true if word[-1] != word[0]\n  end\n  false\nend", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == ", "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend",
  "  txt.split(\" \").each do |word|\n    word.split(\"\").each do |letter|\n    \
    \  return false if letter == word[word.length-1]\n    end\n  end\n  true\nend",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1",
  "  txt.slice!(-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1)\n\
    \  txt.slice!(-1..-1)\n  ", "  txt.downcase!\n  txt.split(\" \").each do |word|\n\
    \    word.downcase!\n    return false if word.empty?\n    return true if word[-1]\
    \ != word[-2]\n  end\n  false\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1", "  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1", "  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.downcase!\n  txt.strip!\n\
    \  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |char|\n \
    \     char.upcase!\n      return false if char == \" \" || char == \"-\"\n   \
    \ end\n  end\n  return true\nend", "  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase == txt.slice(-1)[0]\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  true\n\
    end", "  return txt.chars.last.upcase !~ /\\w$/\nend", "  return txt.chars.last.upcase\
    \ && !txt.chars.last.match?(/\\w/)\nend", "  return txt.chars.last.upcase !~ /\\\
    w$/\nend", "  txt.slice!(-1)\n  return txt.chars.last.upcase !~ /\\w/\nend", " \
    \ txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1", "  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \" \n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != \" \"\n  ", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |char|\n      char.upcase!\n      return false if char.match(/[a-z]/)\n \
    \   end\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  true\n\
    end", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt",
  "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |char|\n  \
    \    return false if char.upcase == char\n    end\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      char.upcase!\n\
    \      return false if char == \" \" || char == \"-\" || char == \"_\" || char\
    \ == \"/\" || char == \"\\\\\"\n    end\n  end\n  true\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].downcase == txt.slice(-1)[0]\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  true\nend", "  txt.split(\"\
    \ \").each do |word|\n    return false if word.empty?\n    return true if word[-1]\
    \ =~ /[a-z]/i\n  end\n  false\nend", "  txt.downcase!\n  txt.scan(/\\w$/)\n  txt.empty?\
    \ || txt.last !~ /\\w/\nend", "  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\n\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\t\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\r\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\v\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\", "  txt.chars.last.upcase!\n  txt.chars.last.downcase!\n  txt.chars.last.match?(/\\\
    w/)\nend", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do\
    \ |char|\n      return false if char.upcase == char\n    end\n  end\n  true\n\
    end", "  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt", "  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1",
  "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\n\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\t\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\r\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\v\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\f\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\h\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\?\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\`\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\`\"\n  txt.slice!(-1) if txt", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      return false\
    \ if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1)\
    \ if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt.slice(-1)\n\
    \  txt.slice!(-1) if txt.slice(-1)\n  txt.slice!(-1) if txt", "  txt.split(\"\
    \ \").each do |word|\n    return false if word.empty?\n    return true if word[-1]\
    \ != word[word.length-1]\n  end\n  false\nend", "  txt.chars.last.upcase!\n  txt.chars.last.downcase!\n\
    \  txt.chars.last.empty?\nend", "  txt.slice!(-1)\n  return txt.chars.all? { |c|\
    \ c.upcase != c.downcase }\nend", "  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].is_a?(String)\n  txt.slice!(-1) if txt",
  "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\n\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\t\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\r\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\v\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\e\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \"\\e\"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \"\\a\"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \"\\", "  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      char.upcase!\n\
    \      return false if char.match(/[a-z]/)\n    end\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.scan(/\\w/).empty? && txt.scan(/\\w$/).empty?\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice", "  txt.slice!(-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  ", "  txt.downcase!\n  txt.split(\"\
    \ \").each do |word|\n    word.downcase!\n    return false if word.empty?\n  \
    \  return false if word[word.length-1].upcase == word[word.length-1]\n  end\n\
    \  true\nend", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1", "  txt.downcase!\n  txt.split(\" \").each\
    \ do |word|\n    word.downcase!\n    return false if word[word.length-1].upcase\
    \ != word[word.length-1]\n  end\n  true\nend", "  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ != \" \"\n  txt.slice!(-1) if txt.slice!(-1) != \" \"\n  txt", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.downcase!\n  txt.scan(/\\w$/)\n  txt.empty? || txt.last =~ /\\w/\nend",
  "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n\
    \  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n \
    \ txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0]\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0] == \" \"\n  txt.slice!(-1) if txt", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n\
    \  txt.chars.last.match?(/[a-z]/)\nend", "  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1",
  "  txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |char|\n      return false if char.upcase == char\n    end\n  end\n  return\
    \ true\nend", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.downcase!\n  txt.scan(/\\w$/).empty?\nend", "  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.chars.last.upcase!\n\
    \  txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  true\nend", "  txt.split(\" \").last.include?(txt.last.downcase)\nend", " \
    \ txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].downcase == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  true\nend", "  txt.chars.last.upcase !~ /\\\
    w/\nend", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |char|\n\
    \      return false if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1",
  "  txt.slice!(-1)\n  return txt.chars.all? { |c| c.upcase != c.downcase }\nend",
  "  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.slice!(-1)\n  return txt.chars.last.match?(/[a-z]/)\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ != txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase !=\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1", "  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == ", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1", "  txt.split(\" \").each do |word|\n    word.split(\"\").each\
    \ do |char|\n      return false if char.upcase == char\n    end\n  end\n  return\
    \ true\nend", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1", "  txt.downcase!\n  txt.scan(/\\w/).empty? && txt.scan(/\\\
    w$/).empty?\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.empty?\n    return true if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  false\nend", "  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  true\nend", "  txt.downcase!\n  txt.scan(/\\w/)\n  txt.last.nil? ? false :\
    \ txt.last.upcase == txt.last\nend", "  txt.chars.last.upcase!\n  txt.chars.last.empty?\n\
    end", "  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == \" \"\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == \" \"\n  txt", "  txt.slice!(-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1).downcase!\n\
    \  txt.slice!(-1..-1).gsub(/[^a-z]/i, '')\n  txt.slice!(-1..-1).empty?\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=ruby,regex |>\n<code>", "  return txt.chars.last.upcase\
    \ && !txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1) # remove last char\n\
    \  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |letter|\n\
    \      return false if letter.upcase == letter\n    end\n  end\n  true\nend",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.split(\"\").each do\
    \ |char|\n      return false if char.upcase == char\n    end\n  end\n  true\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend",
  "  return txt.chars.last.upcase && !txt.chars.last.match?(/\\w/)\nend", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if\
    \ txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase\
    \ == txt.slice(-1)[0].downcase\n  txt.slice!(-1) if txt.slice(-1)[0].upcase ==\
    \ txt.slice(-1)[0].downcase\n  txt.slice!(-1", "  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.slice!(-1)\
    \ if txt.slice(-1)[0].upcase == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].downcase\
    \ == txt.slice(-1)[0]\n  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase.upcase\n\
    \  txt.slice!(-1) if txt.slice(-1)[0].upcase == txt.slice(-1)[0].downcase.upcase.upcase.upcase.up",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.split(\"\").each do\
    \ |letter|\n      return false if letter == txt.last\n    end\n  end\n  true\n\
    end", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.strip!\n  txt.chars.last.upcase!\n  txt.chars.last.empty?\n\
    end", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |letter|\n\
    \      letter == word[word.length-1]\n    end\n  end\nend", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.downcase!\n    return false if word[word.length-1].upcase\
    \ != word[word.length-1]\n  end\n  return true\nend", "  txt.slice!(-1) # remove\
    \ last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1) #\
    \ remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

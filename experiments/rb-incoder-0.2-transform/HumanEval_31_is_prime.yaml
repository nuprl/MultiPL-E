name: HumanEval_31_is_prime
language: rb
prompt: "# Return true if a given number is prime, and false otherwise.\n# >>> is_prime.call(6)\n\
  # false\n# >>> is_prime.call(101)\n# true\n# >>> is_prime.call(11)\n# true\n# >>>\
  \ is_prime.call(13441)\n# true\n# >>> is_prime.call(61)\n# true\n# >>> is_prime.call(4)\n\
  # false\n# >>> is_prime.call(1)\n# false\ndef is_prime(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_prime\n\
  \    candidate = method(:is_prime)\n    assert_equal(false, candidate.call(6))\n\
  \    assert_equal(true, candidate.call(101))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(13441))\n    assert_equal(true, candidate.call(61))\n\
  \    assert_equal(false, candidate.call(4))\n    assert_equal(false, candidate.call(1))\n\
  \    assert_equal(true, candidate.call(5))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(17))\n    assert_equal(false, candidate.call(85))\n\
  \    assert_equal(false, candidate.call(77))\n    assert_equal(false, candidate.call(255379))\n\
  \  end\nend\n"
completions: ["  return n <= 1 || (n % 2 == 0 && n != 2) || (n % 3 == 0 && n != 3)\
    \ || (n % 5 == 0 && n != 5) || (n % 7 == 0 && n != 7)\nend", "  n = n.to_i\n \
    \ return false if n == 0 || n == 1\n  return true if n.even? and n.odd?\n  return\
    \ true if n.odd? and n.even?\n  return true if n.odd? and n.even? and n.to_i /\
    \ 2 > n\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  for i in 2..n.sqrt(n)\n    return false if n % i == 0\n\
    \  end\n  true\nend", "  return n != 1 && (n % 2 == 0 || n % 3 == 0 || n % 5 ==\
    \ 0 || n % 7 == 0)\nend", "  return false if n < 2 || n == 0\n  prime = true\n\
    \  factor = 2\n  while factor < n do\n    prime = false if n % factor == 0\n \
    \   factor = factor * 2\n  end\n  prime\nend", "  return false if n.zero? || n.odd?\
    \ || n == 1\n  for i in 2..n.div(2)\n    return false if n % i == 0\n  end\n \
    \ true\nend", "  return false if n < 2 || n == 0\n  return true if n == 1\n  return\
    \ true if n % 2 == 0 || n % 3 == 0\n  \n  # Check whether n is divisible by any\
    \ number between 2 and n-1.\n  # If n is divisible by any number between 2 and\
    \ n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n\
    \ is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, return false.\n \
    \ \n  # Check whether n is divisible by any number between 2 and n-1.\n  # If\
    \ n is divisible by any number between 2 and n-1, then n is prime.\n  # Otherwise,\
    \ return false.\n  \n  # Check whether n is divisible by any number between 2\
    \ and n-1.\n  # If n is divisible by any number between 2 and n-1, then n is prime.\n\
    \  # Otherwise, return false.\n  \n  # Check whether n is divisible by any number\
    \ between 2 and n-1.\n  # If n is divisible by any number between 2 and n-1, then\
    \ n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n is divisible\
    \ by any number between 2 and n-1.\n  # If n is divisible by any number between\
    \ 2 and n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether\
    \ n is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, return false.\n \
    \ \n  # Check whether n is divisible by any number between 2 and n-1.\n  # If\
    \ n is divisible by any number between 2 and n-1, then n is prime.\n  # Otherwise,\
    \ return false.\n  \n  # Check whether n is divisible by any number between 2\
    \ and n-1.\n  # If n is divisible by any number between 2 and n-1, then n is prime.\n\
    \  # Otherwise, return false.\n  \n  # Check whether n is divisible by any number\
    \ between 2 and n-1.\n  # If n is divisible by any number between 2 and n-1, then\
    \ n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n is divisible\
    \ by any number between 2 and n-1.\n  # If n is divisible by any number between\
    \ 2 and n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether\
    \ n is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, ", "  return false\
    \ if n < 2 || n == 0\n  return true if n == 1\n  for i in 2..n\n    return false\
    \ if n % i == 0\n  end\n  return true\nend", "  return false if n < 2 || n ==\
    \ 0\n  prime = true\n  factor = 2\n  while factor < n do\n    prime = false if\
    \ n % factor == 0\n    factor = factor * 2\n  end\n  return prime\nend", "  return\
    \ false if n.zero? or n.odd? or n.zero? or n.even?\n  primes = Primes.new\n  primes.each\
    \ do |prime|\n    return true if prime.is_prime?(n)\n  end\n  false\nend", " \
    \ return false if n.zero? or n.odd? else (2..Math.sqrt(n)).any? { |i| n % i ==\
    \ 0 }\nend", "  return n != 1 and n != 3 && n != 5 and n != 7 and n != 11 and\
    \ n != 13 and n != 17 and n != 19 and n != 23 and n != 29 and n != 31 and n !=\
    \ 37 and n != 41 and n != 43 and n != 47 and n != 53 and n != 59 and n != 61 and\
    \ n != 67 and n != 71 and n != 73 and n != 79 and n != 83 and n != 89 and n !=\
    \ 97 and n != 101 and n != 103 and n != 107 and n != 109 and n != 113 and n !=\
    \ 121 and n != 127 and n != 131 and n != 137 and n != 139)\nend", "  return false\
    \ if n.zero? or n.odd? else n.prime?\nend", "  return false if n.zero? or n.odd?\
    \ or n == 1\n  for i in 2..Math.sqrt(n).to_i\n    return false if n % i == 0\n\
    \  end\n  true\nend", "  return false if n == 0\n  return true if n == 1\n  return\
    \ true if n % 2 == 0\n  return true if n % 3 == 0\n  \n  # Sieve of Eratosthenes\n\
    \  primes = [2]\n  i = 5\n  while i * i <= n\n    primes << i\n    i += 2\n  end\n\
    \  \n  i = 2\n  while i < primes.length\n    prime = primes[i]\n    prime_divisors\
    \ = primes.select { |d| n % d == 0 }\n    prime_divisors.each { |d| primes.delete(d)\
    \ }\n    i += 1\n  end\n  \n  primes.include?(n)\nend", "  return false if n <\
    \ 2 || n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n  return\
    \ true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n % 7 == 0\n\
    \  return true if n == 6\n  return true if n == 9\n  return true if n == 11\n\
    \  return true if n == 13\n  return true if n == 17\n  return true if n == 19\n\
    \  return true if n == 23\n  return true if n == 29\n  return true if n == 37\n\
    \  return true if n == 43\n  return true if n == 47\n  return true if n == 53\n\
    \  return true if n == 59\n  return true if n == 67\n  return true if n == 73\n\
    \  return true if n == 79\n  return true if n == 83\n  return true if n == 89\n\
    \  return true if n == 97\n  return true if n == 113\n  return true if n == 127\n\
    \  return true if n == 131\n  return true if n == 139\n  return true if n == 149\n\
    \  return true if n == 151\n  return true if n == 157\n  return true if n == 163\n\
    \  return true if n == 167\n  return true if n == 173\n  return true if n == 179\n\
    \  return true if n == 181\n  return true if n == 191\n  return true if n == 193\n\
    \  return true if n == 197\n  return true if n == 199\n  return true if n == 211\n\
    \  return true if n == 223\n  return true if n == 227\n  return true if n == 229\n\
    \  return true if n == 233\n  return true if n == 239\n  return true if n == 241\n\
    \  return true if n == 251\n  return true if n == 253\n  return true if n == 257\n\
    \  return true if n == 263\n  return true if n == 269\n  return true if n == 271\n\
    \  return true if n == 277\n  return true if n == 281\n  return true if n == 283\n\
    \  return true if n == 293\n  return true if n == 307\n  return true if n == 311\n\
    \  return true if n == 313\n  return true if n == 317\n  return true if n == 323\n\
    \  return true if n == 329\n  return true if n == 331\n  return true if n == 349\n\
    \  return true if n == 353\n  return true if n == 359\n  return true if n == 367\n\
    \  return true if n == 373\n  return true if n == 379\n  return true if n == 389\n\
    \  return true if n == 401\n  return true if n == 403\n  return true if n == 409\n\
    \  return true if n == 419\n  return true if n == 421\n  return true if n == 431\n\
    \  return true if n == 433\n  return true if n == 443\n  return true if n == 449\n\
    \  return true if n == 457\n  return true if n == 461\n  return true if n == 463\
    \ or n % 100 == 3 or n % 100 == 7\n  return true if n == 467\n  return true if\
    \ n == 473\n  return true if n == 481\n  return true if n == 483\n  return true\
    \ if n == 493\n  return true if n == 503\n  return true if n == 509\n  return\
    \ true if n == 521\n  return ", "  return false if n.zero? || n.odd? || n == 1\n\
    \  for i in 2..n\n    return false if n % i == 0\n  end\n  return true\nend",
  "  return false if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n\
    \  return true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n\
    \ % 7 == 0\n  return true if n <= 2\n  return false if n <= 6\n  return false\
    \ if n <= 10\n  return false if n <= 13\n  return false if n <= 17\n  return false\
    \ if n <= 19\n  return false if n <= 23\n  return false if n <= 29\n  return false\
    \ if n <= 31\n  return false if n <= 37\n  return false if n <= 41\n  return false\
    \ if n <= 43\n  return false if n <= 47\n  return false if n <= 53\n  return false\
    \ if n <= 59\n  return false if n <= 61\n  return false if n <= 67\n  return false\
    \ if n <= 71\n  return false if n <= 73\n  return false if n <= 79\n  return false\
    \ if n <= 83\n  return false if n <= 89\n  return false if n <= 97\n  return false\
    \ if n <= 101\n  return false if n <= 103\n  return false if n <= 107\n  return\
    \ false if n <= 109\n  return false if n <= 113\n  return false if n <= 127\n\
    \  return false if n <= 131\n  return false if n <= 137\n  return false if n <=\
    \ 139\n  return false if n <= 147\n  return false if n <= 151\n  return false\
    \ if n <= 157\n  return false if n <= 163\n  return false if n <= 167\n  return\
    \ false if n <= 173\n  return false if n <= 179\n  return false if n <= 185\n\
    \  return false if n <= 191\n  return false if n <= 197\n  return false if n <=\
    \ 203\n  return false if n <= 209\n  return false if n <= 217\n  return false\
    \ if n <= 223\n  return false if n <= 229\n  return false if n <= 233\n  return\
    \ false if n <= 239\n  return false if n <= 247\n  return false if n <= 253\n\
    \  return false if n <= 259\n  return false if n <= 263\n  return false if n <=\
    \ 269\n  return false if n <= 273\n  return false if n <= 279\n  return false\
    \ if n <= 283\n  return false if n <= 289\n  return false if n <= 297\n  return\
    \ false if n <= 303\n  return false if n <= 309\n  return false if n <= 317\n\
    \  return false if n <= 323\n  return false if n <= 329\n  return false if n <=\
    \ 337\n  return false if n <= 343\n  return false ", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  for i in 2..n\n    return false if n % i == 0\n  end\n\
    \  true\nend", "  return false if n.zero? or n.odd? or n == 1\n  for i in 2..(n.floor\
    \ - 1)\n    return false if n % i == 0\n  end\n  return true\nend", "  return\
    \ false if n.zero? or n.odd? or n == 1\n  for i in 2..n.floor\n    return false\
    \ if n % i == 0\n  end\n  true\nend", "  return false if n.zero? or n.odd? or\
    \ n == 1\n  for i in 2..n\n    return false if n % i == 0\n  end\n  true\nend",
  "  return false if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n\
    \  return true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n\
    \ % 7 == 0\n  return true if n % 11 == 0\n  return true if n % 13 == 0\n  return\
    \ true if n % 17 == 0\n  return true if n % 19 == 0\n  return true if n % 23 ==\
    \ 0\n  return true if n % 29 == 0\n  return true if n % 31 == 0\n  return true\
    \ if n % 37 == 0\n  return true if n % 41 == 0\n  return true if n % 43 == 0\n\
    \  return true if n % 47 == 0\n  return true if n % 53 == 0\n  return true if\
    \ n % 59 == 0\n  return true if n % 61 == 0\n  return true if n % 67 == 0\n  return\
    \ true if n % 71 == 0\n  return true if n % 73 == 0\n  return true if n % 79 ==\
    \ 0\n  return true if n % 83 == 0\n  return true if n % 89 == 0\n  return true\
    \ if n % 97 == 0\n  return true if n % 103 == 0\n  return true if n % 109 == 0\n\
    \  return true if n % 111 == 0\n  return true if n % 127 == 0\n  return true if\
    \ n % 131 == 0\n  return true if n % 137 == 0\n  return true if n % 139 == 0\n\
    \  return true if n % 143 == 0\n  return true if n % 147 == 0\n  return true if\
    \ n % 151 == 0\n  return true if n % 157 == 0\n  return true if n % 163 == 0\n\
    \  return true if n % 167 == 0\n  return true if n % 173 == 0\n  return true if\
    \ n % 179 == 0\n  return true if n % 181 == 0\n  return true if n % 185 == 0\n\
    \  return true if n % 191 == 0\n  return true if n % 197 == 0\n  return true if\
    \ n % 203 == 0\n  return true if n % 209 == 0\n  return true if n % 215 == 0\n\
    \  return true if n % 221 == 0\n  return true if n % 227 == 0\n  return true if\
    \ n % 233 == 0\n  return true if n % 239 == 0\n  return true if n % 243 == 0\n\
    \  return true if n % 247 == 0\n  return true if n % 251 == 0\n  return true if\
    \ n % 257 == 0\n  return true if n % 263 == 0\n  return true if n % 269 == 0\n\
    \  return true if n % 271 == 0\n  return true if n % 277 == 0\n  return true if\
    \ n % 283 == 0\n  return true if n % 289 == 0\n  return true if n % 293 == 0\n\
    \  return true if n % 299 == 0\n  return true if n % 301 == 0\n  return true if\
    \ n % 307 == 0\n  return true if n % 313 == 0\n  return true if n % 317 == 0\n\
    \  return true if n % 323 == 0\n  return true if n % 329 == 0\n  return true if\
    \ n % 331 == 0\n  return true if n % 337 == 0\n  return true if n % 343 == 0\n\
    \  return true if n % 349 == 0\n  return true if n % 351 == 0\n  return true if\
    \ n % 357 == 0\n  return true if n % 363 == 0\n  return true if n % 369 == 0\n\
    \  return true if n % 371 == 0\n  return true if n % 377 == 0\n  return true if\
    \ n % 38", "  return n <= 1 || (n % 2 == 0 && n != 2) || (n % 3 == 0 && n != 3)\
    \ || (n % 5 == 0 && n != 5) || (n % 7 == 0 && n != 7)\nend", "  return false if\
    \ n.zero? or n.negative? or n == 1\n  for i in 2..n\n    return false if n % i\
    \ == 0\n  end\n  true\nend", "  return false if n.zero? or n.odd? or n == 1\n\
    \  for i in 2..n.to_i\n    return false if n % i == 0\n  end\n  true\nend", " \
    \ return false if n.zero?\n  return false if n.even?\n  return false if n.odd?\n\
    \  return true if n.prime?\n  n.prime?\nend", '  return false if n < 2 || n %
    2 == 1 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0
    || n % 17 == 0 || n % 19 == 0 || n % 23 == 0 || n % 29 == 0 || n % 31 == 0 ||
    n % 37 == 0 || n % 41 == 0 || n % 43 == 0 || n % 47 == 0 || n % 53 == 0 || n %
    59 == 0 || n % 61 == 0 || n % 67 == 0 || n % 71 == 0 || n % 73 == 0 || n % 79
    == 0 || n % 83 == 0 || n % 89 == 0 || n % 97 == 0 || n % 101 == 0 || n % 103 ==
    0 || n % 107 == 0 || n % 111 == 0 || n % 127 == 0 || n % 131 == 0 || n % 137 ==
    0 || n % 147 == 0 || n % 151 == 0 || n % 157 == 0 || n % 163 == 0 || n % 167 ==
    0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185 == 0 || n % 191 ==
    0 || n % 197 == 0 || n % 199 == 0 || n % 203 == 0 || n % 207 == 0 || n % 211 ==
    0 || n % 215 == 0 || n % 217 == 0 || n % 223 == 0 || n % 227 == 0 || n % 229 ==
    0 || n % 233 == 0 || n % 239 == 0 || n % 241 == 0 || n % 251 == 0 || n % 257 ==
    0 || n % 263 == 0 || n % 269 == 0 || n % 271 == 0 || n % 277 == 0 || n % 281 ==
    0 || n % 283 == 0 || n % 293 == 0 || n % 307 == 0 || n % 309 == 0 || n % 311 ==
    0 || n % 313 == 0 || n % 315 == 0 || n % 317 == 0 || n % 319 == 0 || n % 323 ==
    0 || n % 329 == 0 || n % 331 == 0 || n % 337 == 0 || n % 341 == 0 || n % 347 ==
    0 || n % 351 == 0 || n % 359 == 0 || n % 361 == 0 || n % 363 == 0 || n % 365 ==
    0 || n % 367 == 0 || n % 369 == 0 || n % 371 == 0 || n % 377 == 0 || n % 381 ==
    0 || n % 383 == 0 || n % 389 == 0 || n % 397 == 0 || n % 401 == 0 || n % 403 ==
    0 || n % 407 == 0 || n % 409 == 0 || n % 411 == 0 || n % 413 == 0 || n % 415 ==
    0 || n % 417 == 0 || n % 419 == 0 || n % 421 == 0 || n % 423 == 0 || n % 427 ==
    0 || n % 429 == 0 || n % 433 == 0 || n % 439 == 0 || n % 441 == 0 || n % 449 ==
    0 || n % 451 == 0 || n % 457 == 0 || n % 461 == 0 || n % 463 == 0 || n % 467 ==
    0 || n % 469 == 0 || n % 471 == 0 || n % 477 == 0 || n % 481 == 0 || n % 483 ==
    0 || n % 485 == 0 || n % 491 == 0 || n % 499 == 0 || n % 501 == 0 || n % 503 ==
    0 || n % 505 == ', "  case n\n  when 2, 3 then true\n  when 4 then false\n  else\
    \ n % 2 == 0 && n % 3 == 0\n  end\nend", "  return false if n.zero? || n.odd?\
    \ || n == 1\n  i = 2\n  while i * i <= n\n    return false if n % i == 0\n   \
    \ i += 1\n  end\n  return true\nend", "  return false if n.zero? or n.odd? or\
    \ n == 1\n  for i in 2..n\n    return false if n % i == 0\n  end\n  true\nend",
  "  return false if n.zero? or n.odd? or n == 1\n  i = 2\n  while i <= Math.sqrt(n)\
    \ do\n    if n % i == 0 then\n      return false\n    end\n    i += 1\n  end\n\
    \  return true\nend", "  return false if n.zero? or n.even? or n.odd?\n  for i\
    \ in 2..n\n    return false if n.modulo(i).zero?\n  end\n  true\nend", "  return\
    \ false if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n  return\
    \ true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n % 7 == 0\n\
    \  return true if n <= 2\n  return false if n <= 5\n  return false if n <= 10\n\
    \  return false if n <= 20\n  return false if n <= 100\n  return false if n <=\
    \ 1000\n  return false if n <= 10000\n  return false if n <= 100000\n  return\
    \ false if n <= 1000000\n  return false if n <= 10000000\n  return false if n\
    \ <= 100000000\n  return false if n <= 1000000000\n  return false if n <= 10000000000\n\
    \  return false if n <= 100000000000\n  return false if n <= 1000000000000\n \
    \ return false if n <= 10000000000000\n  return false if n <= 100000000000000\n\
    \  return false if n <= 1000000000000000\n  return false if n <= 10000000000000000\n\
    \  return false if n <= 100000000000000000\n  return false if n <= 1000000000000000000\n\
    end", "  return false if n.zero? or n.odd? or n.zero? or n.even? or n.negative?\
    \ or n == 1\n  for i in 2..n\n    return true if n.modulo(i) == 0\n  end\n  false\n\
    end", "  return false if n.zero?\n  return true if n.even?\n  return true if n.odd?\n\
    \  return true if n.prime?\n  return true if n.composite?\n  n.composite?\n  n.prime?\n\
    \  n.composite?\n  n.prime?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n\
    \  n.composite?\n  n.composite?\n  n.composite?\n  n.composite?\n  ", "  return\
    \ false if n < 2 || n == 0\n  return true if n == 1\n  for i in 2..n\n    return\
    \ false if n % i == 0\n  end\n  return true\nend", "  return false if n < 2 ||\
    \ n == 0\n  return true if n == 1\n  return true if n % 2 == 0 || n % 3 == 0\n\
    \  i = 5\n  while i * i <= n\n    i += 2\n  return false if n == i\n  i = 5\n\
    \  while i * i <= n\n    i += 3\n  return true if n == i\n  i = 5\n  while i *\
    \ i <= n\n    i += 5\n  return false if n == i\n  i = 5\n  while i * i <= n\n\
    \    i += 7\n  return true if n == i\n  i = 5\n  while i * i <= n\n    i += 11\n\
    \  return false if n == i\n  i = 5\n  while i * i <= n\n    i += 13\n  return\
    \ true if n == i\n  i = 5\n  while i * i <= n\n    i += 17\n  return false if\
    \ n == i\n  i = 5\n  while i * i <= n\n    i += 19\n  return true if n == i\n\
    end\n</cell>\n<code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime factors\
    \ of a given number.", "  return false if n.zero? or n.odd? or n.zero? or n.even?\n\
    \  i = 2\n  while i * i <= n\n    i += 1\n  return false if n.even?\n  return\
    \ true if n.odd?\n  return true if n.zero?\n  return true if n.zero? or n % i\
    \ == 0\n  i = 2\n  while i * i <= n\n    i += 1\n    return true if n % i == 0\n\
    \  end\n  return false\nend", "  return false if n < 2 || n == 0\n  primes = Primes.new\n\
    \  primes.each do |prime|\n    return true if n == prime\n  end\n  false\nend",
  "  return false if n < 2 || n == 0\n  primes = Primes.new\n  primes.each do |prime|\n\
    \    return true if n == prime\n  end\n  false\nend", "  return false if n ==\
    \ 0\n  return true if n == 1\n  return true if n % 2 == 0\n  return true if n\
    \ % 3 == 0\n  return true if n % 5 == 0\n  return true if n % 7 == 0\n  return\
    \ true if n % 11 == 0\n  return true if n % 13 == 0\n  return true if n % 17 ==\
    \ 0\n  return true if n % 19 == 0\n  return true if n % 23 == 0\n  return true\
    \ if n % 29 == 0\n  return true if n % 31 == 0\n  return true if n % 37 == 0\n\
    \  return true if n % 41 == 0\n  return true if n % 43 == 0\n  return true if\
    \ n % 47 == 0\n  return true if n % 53 == 0\n  return true if n % 59 == 0\n  return\
    \ true if n % 61 == 0\n  return true if n % 67 == 0\n  return true if n % 71 ==\
    \ 0\n  return true if n % 73 == 0\n  return true if n % 79 == 0\n  return true\
    \ if n % 83 == 0\n  return true if n % 89 == 0\n  return true if n % 97 == 0\n\
    \  return true if n % 103 == 0\n  return true if n % 109 == 0\n  return true if\
    \ n % 111 == 0\n  return true if n % 127 == 0\n  return true if n % 131 == 0\n\
    \  return true if n % 137 == 0\n  return true if n % 143 == 0\n  return true if\
    \ n % 149 == 0\n  return true if n % 151 == 0\n  return true if n % 157 == 0\n\
    \  return true if n % 163 == 0\n  return true if n % 171 == 0\n  return true if\
    \ n % 177 == 0\n  return true if n % 183 == 0\n  return true if n % 189 == 0\n\
    \  return true if n % 191 == 0\n  return true if n % 197 == 0\n  return true if\
    \ n % 203 == 0\n  return true if n % 209 == 0\n  return true if n % 211 == 0\n\
    \  return true if n % 217 == 0\n  return true if n % 223 == 0\n  return true if\
    \ n % 229 == 0\n  return true if n % 233 == 0\n  return true if n % 239 == 0\n\
    \  return true if n % 241 == 0\n  return true if n % 247 == 0\n  return true if\
    \ n % 253 == 0\n  return true if n % 259 == 0\n  return true if n % 261 == 0\n\
    \  return true if n % 267 == 0\n  return true if n % 273 == 0\n  return true if\
    \ n % 279 == 0\n  return true if n % 281 == 0\n  return true if n % 287 == 0\n\
    \  return true if n % 293 == 0\n  return true if n % 299 == 0\n  return true if\
    \ n % 301 == 0\n  return true if n % 307 == 0\n  return true if n % 313 == 0\n\
    \  return true if n % 317 == 0\n  return true if n % 323 == 0\n  return true if\
    \ n % 329 == 0\n  return true if n % 331 == 0\n  return true if n % 337 == 0\n\
    \  return true if n % 343 == 0\n  return true if n % 349 == 0\n  return true if\
    \ n % 351 == 0\n  return true if n % 357 == 0\n  return true if n % 363 == 0\n\
    \  return true if n % 369 == 0\n  return true if n % 371 == 0\n  return true if\
    \ n % 377 == 0\n  return true if n % 383 == 0\n  return true if n % ", "  return\
    \ false if n < 2 || n == 0\n  return true if n == 1\n  return true if n % 2 ==\
    \ 0\n  return true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if\
    \ n % 7 == 0\n  return true if n % 11 == 0\n  return true if n % 13 == 0 # Prime\
    \ numbers divisible by 3\n  return true if n % 17 == 0 # Prime numbers divisible\
    \ by 5\n  return true if n % 19 == 0 # Prime numbers divisible by 7\n  return\
    \ true if n % 23 == 0 # Prime numbers divisible by 11\n  return true if n % 29\
    \ == 0 # Prime numbers divisible by 13\n  return true if n % 31 == 0 # Prime numbers\
    \ divisible by 17\n  return true if n % 37 == 0 # Prime numbers divisible by 19\n\
    \  return true if n % 43 == 0 # Prime numbers divisible by 23\n  return true if\
    \ n % 47 == 0 # Prime numbers divisible by 29\n  return true if n % 53 == 0 #\
    \ Prime numbers divisible by 31\n  return true if n % 59 == 0 # Prime numbers\
    \ divisible by 37\n  return true if n % 61 == 0 # Prime numbers divisible by 43\n\
    \  return true if n % 67 == 0 # Prime numbers divisible by 47\n  return true if\
    \ n % 71 == 0 # Prime numbers divisible by 53\n  return true if n % 73 == 0 #\
    \ Prime numbers divisible by 59\n  return true if n % 79 == 0 # Prime numbers\
    \ divisible by 61\n  return true if n % 83 == 0 # Prime numbers divisible by 67\n\
    \  return true if n % 89 == 0 # Prime numbers divisible by 71\n  return true if\
    \ n % 97 == 0 # Prime numbers divisible by 73\n  return true if n % 101 == 0 #\
    \ Prime numbers divisible by 79\n  return true if n % 113 == 0 # Prime numbers\
    \ divisible by 83\n  return true if n % 127 == 0 # Prime numbers divisible by\
    \ 89\n  return true if n % 131 == 0 # Prime numbers divisible by 97\n  return\
    \ true if n % 137 == 0 # Prime numbers divisible by 101\n  return true if n %\
    \ 143 == 0 # Prime numbers divisible by 113\n  return true if n % 147 == 0 # Prime\
    \ numbers divisible by 127\n  return true if n % 151 == 0 # Prime numbers divisible\
    \ by 131\n  return true if n % 157 == 0 # Prime numbers divisible by 137\n  return\
    \ true if n % 163 == 0 # Prime numbers divisible by 143\n  return true if n %\
    \ 167 == 0 # Prime numbers divisible by 147\n  return true if n % 171 == 0 # Prime\
    \ numbers divisible by 151\n", "  return false if n < 2 || n == 0\n  return true\
    \ if n == 1\n  return true if n % 2 == 0\n  return true if n % 3 == 0\n  return\
    \ true if n % 5 == 0\n  return true if n % 7 == 0\n  return true if n % 11 ==\
    \ 0\n  return true if n % 13 == 0\n  return true if n % 17 == 0\n  return true\
    \ if n % 19 == 0\n  return true if n % 23 == 0\n  return true if n % 29 == 0\n\
    \  return true if n % 31 == 0\n  return true if n % 37 == 0\n  return true if\
    \ n % 41 == 0\n  return true if n % 43 == 0\n  return true if n % 47 == 0\n  return\
    \ true if n % 53 == 0\n  return true if n % 59 == 0\n  return true if n % 61 ==\
    \ 0\n  return true if n % 67 == 0\n  return true if n % 71 == 0\n  return true\
    \ if n % 73 == 0\n  return true if n % 79 == 0\n  return true if n % 83 == 0\n\
    \  return true if n % 89 == 0\n  return true if n % 97 == 0\n  return true if\
    \ n % 103 == 0\n  return true if n % 109 == 0\n  return true if n % 111 == 0\n\
    \  return true if n % 127 == 0\n  return true if n % 131 == 0\n  return true if\
    \ n % 137 == 0\n  return true if n % 139 == 0\n  return true if n % 147 == 0\n\
    \  return true if n % 151 == 0\n  return true if n % 157 == 0\n  return true if\
    \ n % 163 == 0\n  return true if n % 167 == 0\n  return true if n % 173 == 0\n\
    \  return true if n % 179 == 0\n  return true if n % 181 == 0\n  return true if\
    \ n % 185 == 0\n  return true if n % 191 == 0\n  return true if n % 197 == 0\n\
    \  return true if n % 203 == 0\n  return true if n % 209 == 0\n  return true if\
    \ n % 215 == 0\n  return true if n % 217 == 0\n  return true if n % 223 == 0\n\
    \  return true if n % 229 == 0\n  return true if n % 233 == 0\n  return true if\
    \ n % 239 == 0\n  return true if n % 241 == 0\n  return true if n % 245 == 0\n\
    \  return true if n % 251 == 0\n  return true if n % 257 == 0\n  return true if\
    \ n % 263 == 0\n  return true if n % 269 == 0\n  return true if n % 271 == 0\n\
    \  return true if n % 277 == 0\n  return true if n % 283 == 0\n  return true if\
    \ n % 289 == 0\n  return true if n % 291 == 0\n  return true if n % 297 == 0\n\
    \  return true if n % 303 == 0\n  return true if n % 309 == 0\n  return true if\
    \ n % 311 == 0\n  return true if n % 313 == 0\n  return true if n % 317 == 0\n\
    \  return true if n % 323 == 0\n  return true if n % 329 == 0\n  return true if\
    \ n % 331 == 0\n  return true if n % 337 == 0\n  return true if n % 343 == 0\n\
    \  return true if n % 349 == 0\n  return true if n % 351 == 0\n  return true if\
    \ n % 357 == 0\n  return true if n % 363 == 0\n  return true if n % 369 == 0\n\
    \  return true if n % 371 == 0\n  return true if ", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  i = 2\n  while i * i <= n\n    return false if n % i\
    \ == 0\n    i += 1\n  end\n  return true\nend", "  return n <= 1 || (n % 2 ==\
    \ 0 && n != 2) || (n % 3 == 0 && n != 3) || (n % 5 == 0 && n != 5) || (n % 7 ==\
    \ 0 && n != 7)\nend", "  return false if n.zero? || n.odd? || n == 1\n  for i\
    \ in 2..(Math.sqrt(n).ceil)\n    return false if n % i == 0\n  end\n  true\nend",
  "  return false if n.zero? or n.odd? or n == 1\n  for i in 2..(Math.sqrt(n).ceil)\n\
    \    return false if n % i == 0\n  end\n  true\nend", "  return false if n.zero?\
    \ or n.even? or n.odd? else (2..Math.sqrt(n)).any? { |i| n % i == 0 }\nend", " \
    \ return false if n.zero? or n.odd? or n == 1\n  for i in 2..n\n    return false\
    \ if n % i == 0\n  end\n  true\nend", "  return false if n.zero? || n.odd? ||\
    \ n == 1\n  for i in 2..(n.bit_length()-1)\n    return false if n.modulo(i).zero?\n\
    \  end\n  true\nend", "  return n != 1 and\n    n != 0 and\n    n % 2 == 0 and\n\
    \    all(n % i for i in range(3, int(sqrt(n)) + 1, 2))\nend", "  return false\
    \ if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n  return true\
    \ if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n % 7 == 0\n  return\
    \ true if n % 11 == 0\n  return true if n % 13 == 0\n  return true if n % 17 ==\
    \ 0\n  return true if n % 19 == 0\n  return true if n % 23 == 0\n  return true\
    \ if n % 29 == 0\n  return true if n % 31 == 0\n  return true if n % 37 == 0\n\
    \  return true if n % 41 == 0\n  return true if n % 43 == 0\n  return true if\
    \ n % 47 == 0\n  return true if n % 53 == 0\n  return true if n % 59 == 0\n  return\
    \ true if n % 61 == 0\n  return true if n % 67 == 0\n  return true if n % 71 ==\
    \ 0\n  return true if n % 73 == 0\n  return true if n % 79 == 0\n  return true\
    \ if n % 83 == 0\n  return true if n % 89 == 0\n  return true if n % 97 == 0\n\
    \  return true if n % 101 == 0\n  return true if n % 103 == 0\n  return true if\
    \ n % 107 == 0\n  return true if n % 111 == 0\n  return true if n % 117 == 0\n\
    \  return true if n % 121 == 0\n  return true if n % 127 == 0\n  return true if\
    \ n % 131 == 0\n  return true if n % 137 == 0\n  return true if n % 141 == 0\n\
    \  return true if n % 147 == 0\n  return true if n % 151 == 0\n  return true if\
    \ n % 157 == 0\n  return true if n % 161 == 0\n  return true if n % 167 == 0\n\
    \  return true if n % 171 == 0\n  return true if n % 177 == 0\n  return true if\
    \ n % 181 == 0\n  return true if n % 187 == 0\n  return true if n % 191 == 0\n\
    \  return true if n % 197 == 0\n  return true if n % 201 == 0\n  return true if\
    \ n % 207 == 0\n  return true if n % 211 == 0\n  return true if n % 217 == 0\n\
    \  return true if n % 221 == 0\n  return true if n % 227 == 0\n  return true if\
    \ n % 231 == 0\n  return true if n % 237 == 0\n  return true if n % 241 == 0\n\
    \  return true if n % 247 == 0\n  return true if n % 251 == 0\n  return true if\
    \ n % 257 == 0\n  return true if n % 261 == 0\n  return true if n % 267 == 0\n\
    \  return true if n % 271 == 0\n  return true if n % 277 == 0\n  return true if\
    \ n % 281 == 0\n  return true if n % 287 == 0\n  return true if n % 291 == 0\n\
    \  return true if n % 297 == 0\n  return true if n % 301 == 0\n  return true if\
    \ n % 307 == 0\n  return true if n % 311 == 0\n  return true if n % 317 == 0\n\
    \  return true if n % 321 == 0\n  return true if n % 327 == 0\n  return true if\
    \ n % 331 == 0\n  return true if n % 337 == 0\n  return true if n % 341 == 0\n\
    \  return true if n % 347 == 0\n  return true if n % 351 == 0\n  return true if\
    \ n % 357 == 0\n  return true if n % 361 == 0\n  return ", "  return false if\
    \ n == 0 || n == 1 || !(n % 2) # 0 & 1 are primes, odd numbers are not\n  prime_candidates\
    \ = 2..n\n  prime_candidates.each do |prime|\n    return true if prime > n # prime\
    \ > n means n is prime\n    return false if n % prime == 0 # n is not prime\n\
    \  end\n  true\nend", "  return false if n.zero? or n.odd? or n == 1\n  for i\
    \ in 2..n\n    return false if n % i == 0\n  end\n  return true\nend", "  return\
    \ false if n.zero? or n.negative? or n.zero? or n == 1\n  primes = Primes.new\n\
    \  primes.each do |prime|\n    return true if n == prime\n  end\n  false\nend",
  "  return false if n < 2 || n == 0 || !(n % 2) # 0 % 2 == 0\n  return true if n\
    \ == 1\n  return false if n == 2 || n % 2 == 0\n  i = 3\n  while i * i <= n\n\
    \    return false if n % i == 0\n    i += 2\n  end\n  return true\nend", "  n\
    \ = n.to_i\n  return false if n < 2 || n == 1\n  for i in 2..n\n    return false\
    \ if n % i == 0\n  end\n  return true\nend", "  return n != 1 and n != n and n\
    \ != n and n % 2 != 0 and n % 3 != 0 and n % 5 != 0\nend", "  return false if\
    \ n.zero? or n.odd? else (2..Math.sqrt(n)).any? { |i| n % i == 0 }\nend", "  return\
    \ false if n.zero? or n.even? or n.odd? or n == 1\n  for i in 2..n\n    return\
    \ false if n % i == 0\n  end\n  true\nend", "  prime = true\n  factors = 2..Math.sqrt(n)\n\
    \  factors.each do |factor|\n    if n % factor == 0\n      prime = false\n   \
    \   break\n    end\n  end\n  prime\nend", "  return false if n.zero? or n.odd?\
    \ or n == 1\n  for i in 2..Math.sqrt(n).to_i\n    return false if n % i == 0\n\
    \  end\n  return true\nend", "  return n != 1 && (n & 1) == 0 && n.odd? && n !=\
    \ 4\nend", "  return false if n.zero?\n  for i in 2..n\n    return false if n.modulo(i).zero?\n\
    \  end\n  true\nend", "  return false if n < 2 || n == 0\n  return true if n ==\
    \ 1\n  return true if n % 2 == 0\n  return true if n % 3 == 0\n  i = 5\n  while\
    \ i <= Math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n\
    \    i = i + 6\n  end\n  return true\nend", "  n = n.to_i\n  return false if n\
    \ == 0 || n == 1 || !(n % 2) # 0 & 1 are both 0 and 1 are not primes\n  for i\
    \ in 2..n do\n    return false if n % i == 0 # if i is prime, no other even number\
    \ can divide it\n  end\n  return true\nend", "  return false if n < 2 || n ==\
    \ 0\n  prime = true\n  factor = 2\n  while factor < n\n    prime = false if prime\
    \ || n % factor\n    factor += 1\n  end\n  prime\nend", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  for i in 2..(n.bit_length()-1)\n    return false if n.modulo(i).zero?\n\
    \  end\n  true\nend", "  return false if n.zero? or n.even? or n.odd?\n  for i\
    \ in 2..Math.sqrt(n)\n    return false if n % i == 0\n  end\n  true\nend", " \
    \ return false if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n\
    \  return true if n % 3 == 0\n  \n  ", "  return n <= 1 || (n % 2 == 0 && n !=\
    \ 2) || (n % 3 == 0 && n != 3) || (n % 5 == 0 && n != 5) || (n % 7 == 0 && n !=\
    \ 7)\nend", "  return false if n.zero? || n.odd? || n == 1\n  for i in 2..n\n\
    \    return false if n % i == 0\n  end\n  true\nend", "  return false if n ==\
    \ 0\n  return false if n == 1\n  return false if n % 2 == 0\n  return true if\
    \ n % 3 == 0\n  i = 5\n  while i <= Math.sqrt(n)\n    return false if n % i ==\
    \ 0\n    i += 2\n  end\n  return true\nend", "  return false if n == 0\n  return\
    \ true if n == 1\n  return true if n % 2 == 0\n  return true if n % 3 == 0\n \
    \ i = 5\n  while i <= Math.sqrt(n) do\n    if n % i == 0 then\n      return false\n\
    \    end\n    i = i + 2\n  end\n  return true\nend", "  return false if n == 0\
    \ || n == 1 || !(n % 2) # 0 & 1 are primes\n  primes = 2\n  i = 2\n  while i <=\
    \ Math.sqrt(n)\n    return false if n % i == 0 # i must be prime\n    i += 1\n\
    \    primes += 1\n  end\n  return true\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_31_is_prime
language: rb
prompt: "# Return true if a given number is prime, and false otherwise.\n# >>> is_prime.call(6)\n\
  # false\n# >>> is_prime.call(101)\n# true\n# >>> is_prime.call(11)\n# true\n# >>>\
  \ is_prime.call(13441)\n# true\n# >>> is_prime.call(61)\n# true\n# >>> is_prime.call(4)\n\
  # false\n# >>> is_prime.call(1)\n# false\ndef is_prime(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_prime\n\
  \    candidate = method(:is_prime)\n    assert_equal(false, candidate.call(6))\n\
  \    assert_equal(true, candidate.call(101))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(13441))\n    assert_equal(true, candidate.call(61))\n\
  \    assert_equal(false, candidate.call(4))\n    assert_equal(false, candidate.call(1))\n\
  \    assert_equal(true, candidate.call(5))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(17))\n    assert_equal(false, candidate.call(85))\n\
  \    assert_equal(false, candidate.call(77))\n    assert_equal(false, candidate.call(255379))\n\
  \  end\nend\n"
completions: ["  return n <= 1 || (n % 2 == 0 && n != 2) || (n % 3 == 0 && n != 3)\
    \ || (n % 5 == 0 && n != 5) || (n % 7 == 0 && n != 7)\nend", "  n = n.to_i\n \
    \ return false if n == 0 || n == 1\n  return true if n.even? and n.odd?\n  return\
    \ true if n.odd? and n.even?\n  return true if n.odd? and n.even? and n.to_i /\
    \ 2 > n\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n\
    \  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n  n.to_i\n", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  for i in 2..n.sqrt(n)\n    return false if n % i == 0\n\
    \  end\n  true\nend", "  return n != 1 && (n % 2 == 0 || n % 3 == 0 || n % 5 ==\
    \ 0 || n % 7 == 0)\nend", "  return false if n < 2 || n == 0\n  prime = true\n\
    \  factor = 2\n  while factor < n do\n    prime = false if n % factor == 0\n \
    \   factor = factor * 2\n  end\n  prime\nend", "  return false if n.zero? || n.odd?\
    \ || n == 1\n  for i in 2..n.div(2)\n    return false if n % i == 0\n  end\n \
    \ true\nend", "  return false if n < 2 || n == 0\n  return true if n == 1\n  return\
    \ true if n % 2 == 0 || n % 3 == 0\n  \n  # Check whether n is divisible by any\
    \ number between 2 and n-1.\n  # If n is divisible by any number between 2 and\
    \ n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n\
    \ is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, return false.\n \
    \ \n  # Check whether n is divisible by any number between 2 and n-1.\n  # If\
    \ n is divisible by any number between 2 and n-1, then n is prime.\n  # Otherwise,\
    \ return false.\n  \n  # Check whether n is divisible by any number between 2\
    \ and n-1.\n  # If n is divisible by any number between 2 and n-1, then n is prime.\n\
    \  # Otherwise, return false.\n  \n  # Check whether n is divisible by any number\
    \ between 2 and n-1.\n  # If n is divisible by any number between 2 and n-1, then\
    \ n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n is divisible\
    \ by any number between 2 and n-1.\n  # If n is divisible by any number between\
    \ 2 and n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether\
    \ n is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, return false.\n \
    \ \n  # Check whether n is divisible by any number between 2 and n-1.\n  # If\
    \ n is divisible by any number between 2 and n-1, then n is prime.\n  # Otherwise,\
    \ return false.\n  \n  # Check whether n is divisible by any number between 2\
    \ and n-1.\n  # If n is divisible by any number between 2 and n-1, then n is prime.\n\
    \  # Otherwise, return false.\n  \n  # Check whether n is divisible by any number\
    \ between 2 and n-1.\n  # If n is divisible by any number between 2 and n-1, then\
    \ n is prime.\n  # Otherwise, return false.\n  \n  # Check whether n is divisible\
    \ by any number between 2 and n-1.\n  # If n is divisible by any number between\
    \ 2 and n-1, then n is prime.\n  # Otherwise, return false.\n  \n  # Check whether\
    \ n is divisible by any number between 2 and n-1.\n  # If n is divisible by any\
    \ number between 2 and n-1, then n is prime.\n  # Otherwise, ", "  return false\
    \ if n < 2 || n == 0\n  return true if n == 1\n  for i in 2..n\n    return false\
    \ if n % i == 0\n  end\n  return true\nend", "  return false if n < 2 || n ==\
    \ 0\n  prime = true\n  factor = 2\n  while factor < n do\n    prime = false if\
    \ n % factor == 0\n    factor = factor * 2\n  end\n  return prime\nend", "  return\
    \ false if n.zero? or n.odd? or n.zero? or n.even?\n  primes = Primes.new\n  primes.each\
    \ do |prime|\n    return true if prime.is_prime?(n)\n  end\n  false\nend", " \
    \ return false if n.zero? or n.odd? else (2..Math.sqrt(n)).any? { |i| n % i ==\
    \ 0 }\nend", "  return n != 1 and n != 3 && n != 5 and n != 7 and n != 11 and\
    \ n != 13 and n != 17 and n != 19 and n != 23 and n != 29 and n != 31 and n !=\
    \ 37 and n != 41 and n != 43 and n != 47 and n != 53 and n != 59 and n != 61 and\
    \ n != 67 and n != 71 and n != 73 and n != 79 and n != 83 and n != 89 and n !=\
    \ 97 and n != 101 and n != 103 and n != 107 and n != 109 and n != 113 and n !=\
    \ 121 and n != 127 and n != 131 and n != 137 and n != 139)\nend", "  return false\
    \ if n.zero? or n.odd? else n.prime?\nend", "  return false if n.zero? or n.odd?\
    \ or n == 1\n  for i in 2..Math.sqrt(n).to_i\n    return false if n % i == 0\n\
    \  end\n  true\nend", "  return false if n == 0\n  return true if n == 1\n  return\
    \ true if n % 2 == 0\n  return true if n % 3 == 0\n  \n  # Sieve of Eratosthenes\n\
    \  primes = [2]\n  i = 5\n  while i * i <= n\n    primes << i\n    i += 2\n  end\n\
    \  \n  i = 2\n  while i < primes.length\n    prime = primes[i]\n    prime_divisors\
    \ = primes.select { |d| n % d == 0 }\n    prime_divisors.each { |d| primes.delete(d)\
    \ }\n    i += 1\n  end\n  \n  primes.include?(n)\nend", "  return false if n <\
    \ 2 || n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n  return\
    \ true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n % 7 == 0\n\
    \  return true if n == 6\n  return true if n == 9\n  return true if n == 11\n\
    \  return true if n == 13\n  return true if n == 17\n  return true if n == 19\n\
    \  return true if n == 23\n  return true if n == 29\n  return true if n == 37\n\
    \  return true if n == 43\n  return true if n == 47\n  return true if n == 53\n\
    \  return true if n == 59\n  return true if n == 67\n  return true if n == 73\n\
    \  return true if n == 79\n  return true if n == 83\n  return true if n == 89\n\
    \  return true if n == 97\n  return true if n == 113\n  return true if n == 127\n\
    \  return true if n == 131\n  return true if n == 139\n  return true if n == 149\n\
    \  return true if n == 151\n  return true if n == 157\n  return true if n == 163\n\
    \  return true if n == 167\n  return true if n == 173\n  return true if n == 179\n\
    \  return true if n == 181\n  return true if n == 191\n  return true if n == 193\n\
    \  return true if n == 197\n  return true if n == 199\n  return true if n == 211\n\
    \  return true if n == 223\n  return true if n == 227\n  return true if n == 229\n\
    \  return true if n == 233\n  return true if n == 239\n  return true if n == 241\n\
    \  return true if n == 251\n  return true if n == 253\n  return true if n == 257\n\
    \  return true if n == 263\n  return true if n == 269\n  return true if n == 271\n\
    \  return true if n == 277\n  return true if n == 281\n  return true if n == 283\n\
    \  return true if n == 293\n  return true if n == 307\n  return true if n == 311\n\
    \  return true if n == 313\n  return true if n == 317\n  return true if n == 323\n\
    \  return true if n == 329\n  return true if n == 331\n  return true if n == 349\n\
    \  return true if n == 353\n  return true if n == 359\n  return true if n == 367\n\
    \  return true if n == 373\n  return true if n == 379\n  return true if n == 389\n\
    \  return true if n == 401\n  return true if n == 403\n  return true if n == 409\n\
    \  return true if n == 419\n  return true if n == 421\n  return true if n == 431\n\
    \  return true if n == 433\n  return true if n == 443\n  return true if n == 449\n\
    \  return true if n == 457\n  return true if n == 461\n  return true if n == 463\
    \ or n % 100 == 3 or n % 100 == 7\n  return true if n == 467\n  return true if\
    \ n == 473\n  return true if n == 481\n  return true if n == 483\n  return true\
    \ if n == 493\n  return true if n == 503\n  return true if n == 509\n  return\
    \ true if n == 521\n  return ", "  return false if n.zero? || n.odd? || n == 1\n\
    \  for i in 2..n\n    return false if n % i == 0\n  end\n  return true\nend",
  "  return false if n == 0\n  return true if n == 1\n  return true if n % 2 == 0\n\
    \  return true if n % 3 == 0\n  return true if n % 5 == 0\n  return true if n\
    \ % 7 == 0\n  return true if n <= 2\n  return false if n <= 6\n  return false\
    \ if n <= 10\n  return false if n <= 13\n  return false if n <= 17\n  return false\
    \ if n <= 19\n  return false if n <= 23\n  return false if n <= 29\n  return false\
    \ if n <= 31\n  return false if n <= 37\n  return false if n <= 41\n  return false\
    \ if n <= 43\n  return false if n <= 47\n  return false if n <= 53\n  return false\
    \ if n <= 59\n  return false if n <= 61\n  return false if n <= 67\n  return false\
    \ if n <= 71\n  return false if n <= 73\n  return false if n <= 79\n  return false\
    \ if n <= 83\n  return false if n <= 89\n  return false if n <= 97\n  return false\
    \ if n <= 101\n  return false if n <= 103\n  return false if n <= 107\n  return\
    \ false if n <= 109\n  return false if n <= 113\n  return false if n <= 127\n\
    \  return false if n <= 131\n  return false if n <= 137\n  return false if n <=\
    \ 139\n  return false if n <= 147\n  return false if n <= 151\n  return false\
    \ if n <= 157\n  return false if n <= 163\n  return false if n <= 167\n  return\
    \ false if n <= 173\n  return false if n <= 179\n  return false if n <= 185\n\
    \  return false if n <= 191\n  return false if n <= 197\n  return false if n <=\
    \ 203\n  return false if n <= 209\n  return false if n <= 217\n  return false\
    \ if n <= 223\n  return false if n <= 229\n  return false if n <= 233\n  return\
    \ false if n <= 239\n  return false if n <= 247\n  return false if n <= 253\n\
    \  return false if n <= 259\n  return false if n <= 263\n  return false if n <=\
    \ 269\n  return false if n <= 273\n  return false if n <= 279\n  return false\
    \ if n <= 283\n  return false if n <= 289\n  return false if n <= 297\n  return\
    \ false if n <= 303\n  return false if n <= 309\n  return false if n <= 317\n\
    \  return false if n <= 323\n  return false if n <= 329\n  return false if n <=\
    \ 337\n  return false if n <= 343\n  return false ", "  return false if n.zero?\
    \ or n.odd? or n == 1\n  for i in 2..n\n    return false if n % i == 0\n  end\n\
    \  true\nend", "  return false if n.zero? or n.odd? or n == 1\n  for i in 2..(n.floor\
    \ - 1)\n    return false if n % i == 0\n  end\n  return true\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

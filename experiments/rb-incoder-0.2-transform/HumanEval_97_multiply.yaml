name: HumanEval_97_multiply
language: rb
prompt: "# Complete the function that takes two integers and returns \n# the product\
  \ of their unit digits.\n# Assume the input is always valid.\n# Examples:\n# >>>\
  \ multiply.call(148, 412)\n# 16\n# >>> multiply.call(19, 28)\n# 72\n# >>> multiply.call(2020,\
  \ 1851)\n# 0\n# >>> multiply.call(14, -15)\n# 20\ndef multiply(a, b)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_multiply\n\
  \    candidate = method(:multiply)\n    assert_equal(16, candidate.call(148, 412))\n\
  \    assert_equal(72, candidate.call(19, 28))\n    assert_equal(0, candidate.call(2020,\
  \ 1851))\n    assert_equal(20, candidate.call(14, -15))\n    assert_equal(42, candidate.call(76,\
  \ 67))\n    assert_equal(49, candidate.call(17, 27))\n    assert_equal(0, candidate.call(0,\
  \ 1))\n    assert_equal(0, candidate.call(0, 0))\n  end\nend\n"
completions: ["  \n  # TODO: Write code here\n  return 0\nend", "  \n  # Your code\
    \ here\n  return a * b\nend", "  \n  # Your code here\n  \nend", "  \n  # TODO:\
    \ Write your code here\n  return 0\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  \n  return 0\nend", "  \n  # Your code here\n  \nend",
  "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n  return\
    \ 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  # Your\
    \ code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  return 0\nend", "  \n  # Your code here\n\
    \  \nend\n</cell>\n<cell>", "  \n  # TODO: Write your code here\n  \nend", " \
    \ \n  # Your code here\n  return 0\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your\
    \ code here\n  \nend", "  \n  # Your code here\n  \n  return 0\nend", "  \n  #\
    \ Your code here\n  \nend", "  a = a.to_i\n  b = b.to_i\n  return a * b if a >\
    \ 0 and b > 0 && a * b > 0 \n  \n  # Write your code here\n  raise \"Invalid input\"\
    \nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  return a * b\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n  return 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend",
  "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  \nend\n</cell>\n<cell>", "  \n  # Your code here\n  \nend", " \
    \ \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  #\
    \ Your code here\n  return 0\nend", "  \n  # TODO: Write your code here\n  return\
    \ 0\nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend", "  return a * b if a >=\
    \ 0 and b >= 0 else 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write\
    \ your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # TODO:\
    \ Write your code here\n  return 0\nend", "  a = a.to_i\n  b = b.to_i\n  return\
    \ a * b if a >= 0 and b >= 0 else 0\nend", "  \n  # Your code here\n  \nend\n\
    </cell>\n<cell>", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  \n  return 0\nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  \nend\n</cell>\n<cell>", "  \n  # Your code here\n  \nend", "  \n  # Your code\
    \ here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  # Your\
    \ code here\n  return 0\nend", "  \n  # Your code here\n  return a * b\nend",
  "  \n  # Your code here\n  return 0\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  return a * b\nend", "  a = a.to_i\n  b = b.to_i\n  return\
    \ a * b if a != 0 and b != 0 else 0\nend", "  \n  # Your code here\n  \nend",
  "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n  return\
    \ 0\nend", "  \n  # Your code here\n  return a * b\nend", "  \n  # TODO: Write\
    \ your code here\n  return 0\nend", "  \n  # Your code here\n  \nend", "  \n \
    \ # TODO: Write your code here\n  return 0\nend", "  \n  # Your code here\n  \n\
    end", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", " \
    \ \n  # TODO: Write your code here\n  return 0\nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  \nend\n</cell>\n<cell>", "  \n  # TODO:\
    \ Write your code here\n  return 0\nend", "  \n  # Your code here\n  \nend\n</cell>\n\
    <cell>", "  \n  # TODO: Write your code here\n  raise NotImplementedError\nend",
  "  \n  # Your code here\n  \nend", "  a = a.to_i\n  b = b.to_i\n  return (a * b).to_i\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  return 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  \n  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend",
  "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n  \nend",
  "  \n  # Your code here\n  return a * b\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \n  return 0\nend", "  \n  # Your\
    \ code here\n  \nend", "  \n  # TODO: Write your code here\n  return 0\nend",
  "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  # Your code here\n\
    \  return a * b\nend", "  \n  # Your code here\n  return 0\nend", "  \n  # Your\
    \ code here\n  return a * b\nend", "  a = a.to_i\n  b = b.to_i\n  return (a *\
    \ b).abs\nend", "  return a * b if a >= 0 and b >= 0 else 0\nend", "  \n  # TODO:\
    \ Write your code here\n  return 0\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of characters in the string.\nExamples:\n>>> count_characters.call(\"\
    Hello World\")\n11\n>>> count_characters.call(\"Hello World!\")\n12\n>>> count_characters.call(\"\
    Hello World!!\")\n13\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14\n>>> count_characters.call(\"\
    Hello World!!!\")\n14\n>>> count_characters.call(\"Hello World!!!\")\n14\n>>>\
    \ count_characters.call(\"Hello World!!!\")\n14", "  \n  # Your code here\n  \n\
    end", "  \n  # TODO: Write your code here\n  \nend", "  \n  # TODO: Write your\
    \ code here\n  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  return 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  \n  return 0\nend", "  \n  # Your code here\n  \n  return\
    \ 0\nend", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  \nend\n</cell>\n<cell>", "  \n  # Your code here\n  \n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes two integers and returns the sum of the\
    \ unit digits of their product (that is, the sum of the digits of their product\
    \ raised to the power of the number of digits). \nAssume the input is always valid.\n\
    Examples:\n>>> sum.call(148, 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020,\
    \ 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19,\
    \ 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148,\
    \ 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14,\
    \ -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020,\
    \ 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19,\
    \ 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148,\
    \ 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14,\
    \ -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020,\
    \ 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19,\
    \ 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148,\
    \ 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14,\
    \ -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020,\
    \ 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148, 412)\n16\n>>> sum.call(19,\
    \ 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14, -15)\n20\n>>> sum.call(148,\
    \ 412)\n16\n>>> sum.call(19, 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14,\
    \ -15)\n20\n>>> sum.call(", "  \n  # TODO: Write your code here\n  return 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", " \
    \ \n  # Your code here\n  return a * b\nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  return a * b if a >= 0 and b >= 0 else 0\nend", "  \n  #\
    \ TODO: Write your code here\n  \nend", "  \n  # Your code here\n  \nend", " \
    \ \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  #\
    \ TODO: Write your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # Your code here\n\
    \  \nend", "  \n  # Your code here\n  return 0\nend", "  \n  # TODO: Write your\
    \ code here\n  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  return 0\nend", "  \n  # Your code here\n  \nend\n</cell>\n<cell>",
  "  \n  # Your code here\n  \nend", "  return a * b if a >= 0 and b >= 0 else 0\n\
    end", "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n\
    \  return 0\nend", "  \n  # Your code here\n  \nend\n</cell>\n<cell>", "  \n \
    \ # Your code here\n  \nend", "  \n  # Your code here\n  return 0\nend", "  \n\
    \  # TODO: Write your code here\n  return 0\nend", "  \n  # TODO: Write your code\
    \ here\n  return 0\nend", "  \n  # TODO: Write your code here\n  return 0\nend",
  "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  # TODO: Write your\
    \ code here\n  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  \n  return 0\nend", "  \n  # Your code here\n  \nend", "  \n  #\
    \ Your code here\n  \nend", "  \n  # Your code here\n  \nend", "  \n  # TODO:\
    \ Write your code here\n  return 0\nend", "  \n  # Your code here\n  \nend", " \
    \ a = a.to_i\n  b = b.to_i\n  return (a * b).abs\nend", "  return a * b if a >=\
    \ 0 and b >= 0 else 0\nend", "  \n  # Your code here\n  \nend", "  \n  # Your\
    \ code here\n  return 0\nend", "  \n  # Your code here\n  return 0\nend", "  \n\
    \  # Your code here\n  return 0\nend", "  \n  # Your code here\n  return 0\nend",
  "  \n  # Your code here\n  \nend", "  \n  # TODO: Write your code here\n  \nend",
  "  \n  # Your code here\n  \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two integers and returns the sum of the \nunit digits of their product\
    \ (without using multiplication).\nExamples:\n>>> sum.call(148, 412)\n16\n>>>\
    \ sum.call(19, 28)\n72\n>>> sum.call(2020, 1851)\n0\n>>> sum.call(14, -15)\n20\n\
    </text>\n<cell>", "  a = a.to_i\n  b = b.to_i\n  return a * b if a > 0 and b >\
    \ 0 && a * b <= MAX_INT else 0\nend", "  \n  # Your code here\n  return 0\nend",
  "  \n  # Your code here\n  \nend", "  \n  # Your code here\n  \nend\n</cell>\n<cell>",
  "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  # TODO: Write your\
    \ code here\n  \nend", "  \n  # TODO: Write your code here\n  return 0\nend",
  "  \n  # Your code here\n  \n  return 0\nend", "  \n  # Your code here\n  return\
    \ a * b\nend", "  \n  # TODO: Write your code here\n  return 0\nend", "  \n  #\
    \ TODO: Write your code here\n  return 0\nend", "  \n  # Your code here\n  \n\
    end", "  \n  # Your code here\n  \n  return 0\nend", "  \n  # Your code here\n\
    \  \nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

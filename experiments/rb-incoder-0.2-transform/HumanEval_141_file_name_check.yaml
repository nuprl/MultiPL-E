name: HumanEval_141_file_name_check
language: rb
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# >>> file_name_check.call(\"example.txt\"\
  )\n# \"Yes\"\n# >>> file_name_check.call(\"1example.dll\")\n# \"No\"\ndef file_name_check(file_name)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_file_name_check\n\
  \    candidate = method(:file_name_check)\n    assert_equal(\"Yes\", candidate.call(\"\
  example.txt\"))\n    assert_equal(\"No\", candidate.call(\"1example.dll\"))\n  \
  \  assert_equal(\"No\", candidate.call(\"s1sdf3.asd\"))\n    assert_equal(\"Yes\"\
  , candidate.call(\"K.dll\"))\n    assert_equal(\"Yes\", candidate.call(\"MY16FILE3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"His12FILE94.exe\"))\n    assert_equal(\"\
  No\", candidate.call(\"_Y.txt\"))\n    assert_equal(\"No\", candidate.call(\"?aREYA.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"/this_is_valid.dll\"))\n    assert_equal(\"\
  No\", candidate.call(\"this_is_valid.wow\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  this_is_valid.txt\"))\n    assert_equal(\"No\", candidate.call(\"this_is_valid.txtexe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"#this2_i4s_5valid.ten\"))\n    assert_equal(\"\
  No\", candidate.call(\"@this1_is6_valid.exe\"))\n    assert_equal(\"No\", candidate.call(\"\
  this_is_12valid.6exe4.txt\"))\n    assert_equal(\"No\", candidate.call(\"all.exe.txt\"\
  ))\n    assert_equal(\"Yes\", candidate.call(\"I563_No.exe\"))\n    assert_equal(\"\
  Yes\", candidate.call(\"Is3youfault.txt\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  no_one#knows.dll\"))\n    assert_equal(\"No\", candidate.call(\"1I563_Yes3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"I563_Yes3.txtt\"))\n    assert_equal(\"\
  No\", candidate.call(\"final..txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  final132\"))\n    assert_equal(\"No\", candidate.call(\"_f4indsartal132.\"))\n \
  \   assert_equal(\"No\", candidate.call(\".txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  s.\"))\n  end\nend\n"
completions: ["  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ < 3 || file_name_split[0].empty? || file_name_split[0].start_with?(LATIN_CHARS)\
    \ || file_name_split[1].empty? || file_name_split[1].start_with?(LATIN_CHARS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?(LATIN_CHARS) or file_name_split[1].empty?\
    \ or file_name_split[1].start_with?(FILE_EXTENSIONS)\n    \"No\"\n  else\n   \
    \ \"Yes\"\n  end\nend", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/\\.[^\\.]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[A-Z]/, '')\n  file_name = file_name.gsub(/^[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9A-Za-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Za-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[0-9a-zA-Z0-9a-z]/, '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[0-9a-zA-Z0-9A-Z", "  file_name_split =\
    \ file_name.split('.')\n  file_name_split = file_name_split[0].split('0')\n  file_name_split\
    \ = file_name_split[0].split('9')\n  file_name_split = file_name_split[0].split('a')\n\
    \  file_name_split = file_name_split[0].split('z')\n  file_name_split = file_name_split[0].split('A')\n\
    \  file_name_split = file_name_split[0].split('Z')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name", "  file_name_split = file_name.split('.')\n \
    \ if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/\\\
    ./, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z",
  "  file_name_split = file_name.split('.')\n  if file_name_split.size != 2 or file_name_split[0].empty?\
    \ or \n    file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or \n    file_name_split[1].empty? or file_name_split[1].end_with?('txt') or\
    \ \n    file_name_split[1].end_with?('exe') or file_name_split[1].end_with?('dll')\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.g",
  "  file_name_length = file_name.length\n  dot_count = file_name_length.count(\"\
    .\")\n  \n  if dot_count > 3 or dot_count == 0\n    return \"No\"\n  \n  first_letter\
    \ = file_name.first\n  \n  if first_letter.nil? or first_letter.length < 1 or\
    \ first_letter !~ /[a-z]/\n    return \"No\"\n  \n  last_letter = file_name.last\n\
    \  \n  if last_letter.nil? or last_letter.length < 1 or last_letter !~ /[a-z]/\n\
    \    return \"No\"\n  \n  dot_index = file_name.index(\".\")\n  \n  if dot_index\
    \ == nil\n    return \"No\"\n  \n  dot_before = file_name[dot_index-1]\n  \n \
    \ if dot_before.nil? or dot_before.length < 1 or dot_before !~ /[a-z]/\n    return\
    \ \"No\"\n  \n  dot_after = file_name[dot_index+1]\n  \n  if dot_after.nil? or\
    \ dot_after.length < 1 or dot_after !~ /[a-z]/\n    return \"No\"\n  \n  if dot_before\
    \ == dot_after\n    return \"No\"\n  \n  return \"Yes\"\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.gsub!(/\\.+/, \".\")\n  file_name.start_with?(\"a\") &&\
    \ file_name.end_with?(\"z\") && file_name.start_with?(\"A\") && file_name.end_with?(\"\
    Z\")\n  file_name.include?(\".\") && file_name.split(\".\").length == 1\nend\n\
    </code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly for me. Can you please explain me the regex you used? I mean\
    \ what does it mean by `/[^0-9\\.]/, \"\"` and what does it mean by `/\\.+/, \"\
    .\"`\n<|/ c |>\n<| c |>\nI added some explanation to the answer.\n<|/ c |>\n<|\
    \ c |>\nThanks for your explanation. Now I understand what `/[^0-9\\.]/, \"\"\
    ` means.\n<|/ c |>\n<| a |>\n<code>", "  file_name_check_regexp = /[0-9]{3}\\\
    .[a-z][a-z]*/\n  file_name_check_match = file_name.match(file_name_check_regexp)\n\
    \  if file_name_check_match != nil\n    return \"Yes\"\n  else\n    return \"\
    No\"\n  end\nend", "  file_name_split = file_name.split('.')\n  file_name_split_size\
    \ = file_name_split.length\n  if file_name_split_size < 3 || file_name_split_size\
    \ > 4\n    return \"No\"\n  else\n    file_name_split_index = 0\n    while file_name_split_index\
    \ < file_name_split_size\n      file_name_split_index += 1\n      if file_name_split[file_name_split_index].empty?\n\
    \        return \"No\"\n      end\n      if file_name_split[file_name_split_index].start_with?(\"\
    a\") || file_name_split[file_name_split_index].start_with?(\"A\")\n        return\
    \ \"No\"\n      end\n      if file_name_split[file_name_split_index].end_with?(\"\
    txt\") || file_name_split[file_name_split_index].end_with?(\"exe\") || file_name_split[file_name_split_index].end_with?(\"\
    dll\")\n        return \"Yes\"\n      end\n    end\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.size != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  else\n    dot_index = file_name_split.index('.') + 1\n \
    \   if dot_index > file_name_split.size - 1\n      return \"No\"\n    else\n \
    \     file_type = file_name_split[dot_index]\n      if file_type != \"txt\" or\
    \ file_type != \"exe\" or file_type != \"dll\"\n        return \"No\"\n      else\n\
    \        return \"Yes\"\n      end\n    end\n  end\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.gsub!(/[^0-9\\.]/, '')\n  file_name = file_name.gsub!(/\\\
    .\\z/, '')\n  file_name = file_name.gsub!(/^[a-z]/, '')\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub!(/\\.$/, '')\n  return file_name =~\
    \ /^[0-9]{3}$/\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't\
    \ seem to work. `file_name_check.call(\"1example.dll\")` returns `\"No\"`.\n<|/\
    \ c |>\n<| c |>\nI edited the answer to fix the regex. Now it works.\n<|/ c |>\n\
    <| c |>\nI edited the answer to fix the regex. Now it works.\n<|/ c |>\n<| c |>\n\
    I edited the answer to fix the regex. Now it works.\n<|/ c |>\n<| c |>\nI edited\
    \ the answer to fix the regex. Now it works.\n<|/ c |>\n<| a tags=ruby,regex |>\n\
    <code>", "  file_name_parts = file_name.split('.')\n  \n  if file_name_parts.length\
    \ < 3 or file_name_parts[0].empty? or file_name_parts[0].start_with?(LATIN_CHARS)\
    \ or file_name_parts[1].empty? or file_name_parts[1].start_with?(LATIN_CHARS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.gsub!(/[^0-9\\.]/, '')\n  file_name = file_name.gsub!(/^\\\
    ./, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')", "  file_name_split = file_name.split('.')\n  if file_name_split.size\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A') or\
    \ file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_ext\
    \ = file_name_split[1]\n    if file_name_ext.empty? or file_name_ext !~ /txt|exe|dll/\n\
    \      return \"No\"\n    else\n      return \"Yes\"\n    end\n  end\nend", " \
    \ file_name_split = file_name.split('.')\n  if file_name_split.length != 2 or\
    \ file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  if file_name_split[1].empty? or file_name_split[1].start_with?('0')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('z')\
    \ or file_name_split[1].start_with?('Z')\n    return \"No\"\n  end\n  if file_name_split[1].end_with?('txt')\
    \ or file_name_split[1].end_with?('exe') or file_name_split[1].end_with?('dll')\n\
    \    return \"Yes\"\n  end\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_split.each\
    \ do |file_name_part|\n      if file_name_part.start_with?('0') or file_name_part.start_with?('9')\
    \ or file_name_part.start_with?('A') or file_name_part.start_with?('Z')\n    \
    \    return \"No\"\n      end\n    end\n    return \"Yes\"\n  end\nend", "  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n\
    \  \n  file_name = file_name.strip\n  \n  file_name = file_name.strip\n  \n  file_name\
    \ = file_name.strip\n  ", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A') or\
    \ file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_split\
    \ = file_name_split[0].split('')\n    if file_name_split.length != 1 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \      return \"No\"\n    else\n      file_name_split = file_name_split[0].split('')\n\
    \      if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n        return \"No\"\n      else\n\
    \        return \"Yes\"\n      end\n    end\n  end\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length\
    \ < 3 or file_name_split[0].empty? or file_name_split[0].upcase !~ /^[a-z_]+$/\
    \ or file_name_split[1] !~ /^(exe|dll)$/\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(FILE_EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_check_regexp\
    \ = /[0-9]{3}\\.[a-z][a-z][a-z]/\n  file_name_check_regexp.match(file_name)\n\
    end", "  \n  # Initialize a variable 'is_valid' to 'No'.\n  is_valid = 'No'\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n", "  file_name_parts = file_name.split('.')\n  if\
    \ file_name_parts.length != 2 or file_name_parts[0] == '' or file_name_parts[0].start_with?('0')\
    \ or file_name_parts[0].start_with?('9')\n    return 'No'\n  else\n    file_name_parts.each\
    \ do |file_name_part|\n      if file_name_part.start_with?('0') or file_name_part.start_with?('9')\n\
    \        return 'No'\n      end\n    end\n    return 'Yes'\n  end\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't work if you have a file named\
    \ \"0example.txt\"\n<|/ c |>\n<| c |>\n, thanks for pointing that out. I've updated\
    \ my answer to account for that case.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>",
  "  file_name_split = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  else\n    file_name_ext = file_name_split[1]\n    if file_name_ext.empty?\
    \ or file_name_ext !~ /txt|exe|dll/\n      return \"No\"\n    else\n      return\
    \ \"Yes\"\n    end\n  end\nend", "  \n  # Initialize a boolean variable 'is_valid'\
    \ to 'False'.\n  is_valid = False\n  \n  # Initialize a variable 'file_name_length'\
    \ to '0'.\n  file_name_length = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'first_letter'\
    \ to 'None'.\n  first_letter = None\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable 'dot_position'\
    \ to '-1'.\n  dot_position = ", "  file_name_split = file_name.split('.')\n  file_name_split_size\
    \ = file_name_split.length\n  \n  if file_name_split_size < 3 or file_name_split_size\
    \ > 3\n    return \"No\"\n  \n  file_name_split_first_letter = file_name_split[0]\n\
    \  \n  if file_name_split_first_letter.length < 1 or file_name_split_first_letter.length\
    \ > 1\n    return \"No\"\n  \n  file_name_split_first_letter_lower = file_name_split_first_letter.downcase\n\
    \  \n  if file_name_split_first_letter_lower !~ /^[a-z]$/\n    return \"No\"\n\
    \  \n  file_name_split_last_letter = file_name_split[file_name_split_size-1]\n\
    \  \n  if file_name_split_last_letter.length < 1 or file_name_split_last_letter.length\
    \ > 1\n    return \"No\"\n  \n  file_name_split_last_letter_lower = file_name_split_last_letter.downcase\n\
    \  \n  if file_name_split_last_letter_lower !~ /^[a-z]$/\n    return \"No\"\n\
    \  \n  if file_name_split_first_letter_lower == file_name_split_last_letter_lower\n\
    \    return \"No\"\n  \n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length < 3 or file_name_split[0].length < 1 or file_name_split[0].upcase\
    \ != 'A' or file_name_split[0].downcase != 'A' or file_name_split[1].length <\
    \ 1 or file_name_split[1].upcase != 'A' or file_name_split[1].downcase != 'A'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name = file_name.strip\n\
    \  \n  file_name_length = file_name.length\n  \n  if file_name_length < 3 \n \
    \   puts \"The file's name should contain at least three digits.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 0 \n    puts \"The file's name should\
    \ not be empty.\"\n    return \"No\"\n  end\n  \n  if file_name_length == 1\n\
    \    puts \"The file's name should contain exactly one dot.\"\n    return \"No\"\
    \n  end\n  \n  if file_name_length == 2 \n    puts \"The file's name should contain\
    \ exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length == 3\
    \ \n    puts \"The file's name should contain exactly one dot.\"\n    return \"\
    No\"\n  end\n  \n  if file_name_length == 4 \n    puts \"The file's name should\
    \ contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 5 \n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 6 \n    puts \"The file's name should\
    \ contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 7 \n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 8 \n    puts \"The file's name should\
    \ contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 9\n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 10 \n    puts \"The file's name\
    \ should contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 11\n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 12\n    puts \"The file's name should\
    \ contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 13\n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name_length == 14\n    puts \"The file's name should\
    \ contain exactly one dot.\"\n    return \"No\"\n  end\n  \n  if file_name_length\
    \ == 15\n    puts \"The file's name should contain exactly one dot.\"\n    return\
    \ \"No\"\n  end\n  \n  if ", "  file_name_split = file_name.split('.')\n  \n \
    \ if(file_name_split.length < 3)\n    return \"No\"\n  \n  if(file_name_split[0].empty?)\n\
    \    return \"No\"\n  \n  if(file_name_split[0].start_with?('a'..'z'))\n    return\
    \ \"No\"\n  \n  if(file_name_split[0].start_with?('A'..'Z'))\n    return \"No\"\
    \n  \n  if(file_name_split[1].empty?)\n    return \"No\"\n  \n  if(file_name_split[1].start_with?('txt'..'exe'..'dll'))\n\
    \    return \"No\"\n  \n  return \"Yes\"\nend\n</cell>\n<cell>", "  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/)\n\
    \  file_name.scan(/\\.[a-z]{1}/)\n  file_name.scan(/^[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n", "  file_name = file_name.strip\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z]\", \"\")\n  file_name = file_name.downcase\n  file_name = file_name.gsub(\"\
    0\", \"\")\n  file_name = file_name.gsub(\"9\", \"\")\n  file_name = file_name.gsub(\"\
    \\.\", \"\")\n  file_name = file_name.gsub(\"^\", \"\")\n  file_name = file_name.g",
  "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length < 3 or\
    \ file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  \n  if file_name_split[1] == 'exe' or file_name_split[1]\
    \ == 'dll'\n    return \"Yes\"\n  end\n  \n  return \"No\"\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].end_with?('txt')\
    \ or file_name_split[0].end_with?('exe') or file_name_split[0].end_with?('dll')\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name = file_name.strip\n\
    \  \n  if file_name.nil? or file_name.empty?\n    return \"No\"\n  end\n  \n \
    \ if file_name.size < 3\n    return \"No\"\n  end\n  \n  if file_name.include?(\"\
    .\") != true\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n   \
    \ return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n\
    \  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return\
    \ \"No\"\n  end\n  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n\
    \  \n  if file_name[0,1] != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,1]\
    \ != \".\"\n    return \"No\"\n  end\n  \n  if file_name[0,", "  file_name_array\
    \ = file_name.split('.')\n  if file_name_array.length != 2 or file_name_array[0].length\
    \ != 1 or file_name_array[0].upcase != 'A' or file_name_array[0].downcase != 'A'\
    \ or file_name_array[0].upcase != 'Z' or file_name_array[0].downcase != 'Z'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('.')\n    return \"No\"\n  else\n    file_name_ext\
    \ = file_name_split[1]\n    if file_name_ext == \"txt\" or file_name_ext == \"\
    exe\" or file_name_ext == \"dll\"\n      return \"Yes\"\n    else\n      return\
    \ \"No\"\n    end\n  end\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/)\n\
    \  file_name.scan(/\\.[^\\.]+/)\n  file_name.scan(/[^a-z][^\\.]+/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z][^\\.]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  if file_name_split[1].empty? or file_name_split[1].start_with?('0')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('z')\
    \ or file_name_split[1].start_with?('Z') or file_name_split[1].end_with?('txt')\
    \ or file_name_split[1].end_with?('exe') or file_name_split[1].end_with?('dll')\n\
    \    return \"No\"\n  end\n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  \n  if file_name_split.length < 3 or file_name_split[0].length < 1 or file_name_split[0].upcase\
    \ != 'A' or file_name_split[0].downcase != 'A' or file_name_split[0].length !=\
    \ 1 or file_name_split[1].length < 1 or file_name_split[1].upcase != 'A' or file_name_split[1].downcase\
    \ != 'A' or file_name_split[1].length != 1 or file_name_split[2].length < 1 or\
    \ file_name_split[2].upcase != 'A' or file_name_split[2].downcase != 'A' or file_name_split[2].length\
    \ != 1\n    return 'No'\n  else\n    return 'Yes'\n  end\nend\n</code>\n<|/ a\
    \ tags=ruby |>\n<| c |>\n`file_name_check.call(\"example.txt\")` returns `\"No\"\
    ` instead of `\"Yes\"`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've\
    \ edited the answer to fix the problem.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "  file_name = file_name.strip\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/^0+/, '')\n  file_name = file_name.gsub(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[A-Z]/,\
    \ '')\n  return file_name =~ /^[0-9]{3}\\.[a-z]{3,4}$/i\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  if file_name_split[1].empty? or file_name_split[1].start_with?('0')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('z')\
    \ or file_name_split[1].start_with?('Z') or file_name_split[1].end_with?('txt')\
    \ or file_name_split[1].end_with?('exe') or file_name_split[1].end_with?('dll')\n\
    \    return \"No\"\n  end\n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].length != 1 or file_name_split[0].upcase\
    \ != 'A' or file_name_split[0].downcase != 'Z' or file_name_split[1].upcase !=\
    \ 'A' or file_name_split[1].downcase != 'Z'\n    return 'No'\n  else\n    return\
    \ 'Yes'\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.size != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  else\n    file_name_ext = file_name_split[1]\n    if file_name_ext\
    \ == \"txt\" or file_name_ext == \"exe\" or file_name_ext == \"dll\"\n      return\
    \ \"Yes\"\n    else\n      return \"No\"\n    end\n  end\nend", "  file_name =\
    \ file_name.strip\n  file_name = file_name.gsub!(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub!(/\\.+/, '')\n  file_name = file_name.gsub!(/^[a-z]/, '')\n\
    \  file_name = file_name.gsub!(/^[A-Z]/, '')\n  file_name.downcase!\n  file_name.include?('.')\n\
    \  file_name.include?('.txt')\n  file_name.include?('.exe')\n  file_name.include?('.dll')\n\
    end", "  file_name_split = file_name.split('.')\n  if file_name_split.length !=\
    \ 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  \n  if file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('txt') or file_name_split[1].start_with?('exe')\
    \ or file_name_split[1].start_with?('dll')\n    return \"No\"\n  end\n  \n  return\
    \ \"Yes\"\nend", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_split\
    \ = file_name.split('.')\n  file_name_split = file_name_split[0].split('0')\n\
    \  file_name_split = file_name_split[0].split('9')\n  file_name_split = file_name_split[0].split('a')\n\
    \  file_name_split = file_name_split[0].split('z')\n  file_name_split = file_name_split[0].split('A')\n\
    \  file_name_split = file_name_split[0].split('Z')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name_split[0].split('-')\n  file_name_split = file_name_split[0].split('-')\n\
    \  file_name_split = file_name", "  file_name_array = file_name.split('.')\n \
    \ if file_name_array.length != 2 or file_name_array[0].length != 1 or file_name_array[0].upcase\
    \ !~ /^[a-z_]+$/ or file_name_array[1].upcase !~ /^(txt|exe|dll)$/\n    return\
    \ \"No\"\n  else\n    return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_split\
    \ = file_name_split[0].split('')\n    if file_name_split.size != 1 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \      return \"No\"\n    else\n      if file_name_split[0].end_with?('txt') or\
    \ file_name_split[0].end_with?('exe') or file_name_split[0].end_with?('dll')\n\
    \        return \"Yes\"\n      else\n        return \"No\"\n      end\n    end\n\
    \  end\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.size\
    \ != 2 or file_name_split[0].empty? or \n    file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or \n    file_name_split[1].empty? or\
    \ file_name_split[1].end_with?('txt') or \n    file_name_split[1].end_with?('exe')\
    \ or file_name_split[1].end_with?('dll')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend\n</code>\n<|/ a tags=ruby |>\n<| c |>\nThanks for your answer.\
    \ Your code works well for me. Thanks for your help and time.\n<|/ c |>\n<| c\
    \ |>\nYou're welcome. I'm glad it helped you.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name_split = file_name.split('.')\n\
    \  \n  # Check that the file's name contains exactly one dot '.'\n  if file_name_split.length\
    \ != 2 or file_name_split[0].length != 1 or file_name_split[1].length != 1\n \
    \   return \"No\"\n  \n  # Check that the substring before the dot should not\
    \ be empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \  if file_name_split[0].length == 0 or file_name_split[0][0].upcase != \"A\"\
    \ or file_name_split[0][0].downcase != \"Z\"\n    return \"No\"\n  \n  # Check\
    \ that the substring after the dot should be one of these: ['txt', 'exe', 'dll']\n\
    \  if file_name_split[1].length != 3 or file_name_split[1][1] != \"t\" or file_name_split[1][2]\
    \ != \"x\" or file_name_split[1][3] != \"e\" or file_name_split[1][4] != \"r\"\
    \n    return \"No\"\n  \n  # Check that the file's name contains only digits and\
    \ '0'-'9'\n  if file_name_split[0].upcase != \"A\" or file_name_split[0].downcase\
    \ != \"Z\" or file_name_split[0].to_s.to_i > 0\n    return \"No\"\n  \n  # Check\
    \ that the file's name contains only digits and '0'-'9'\n  if file_name_split[1].to_s.to_i\
    \ > 0\n    return \"No\"\n  \n  # Check that the file's name contains only digits\
    \ and '0'-'9'\n  if file_name_split[2].to_s.to_i > 0\n    return \"No\"\n  \n\
    \  # Check that the file's name contains only digits and '0'-'9'\n  if file_name_split[3].to_s.to_i\
    \ > 0\n    return \"No\"\n  \n  # Check that the file's name contains only digits\
    \ and '0'-'9'\n  if file_name_split[4].to_s.to_i > 0\n    return \"No\"\n  \n\
    \  # Check that the file's name contains only digits and '0'-'9'\n  if file_name_split[5].to_s.to_i\
    \ > 0\n    return \"No\"\n  \n  # Check that the file's name contains only digits\
    \ and '0'-'9'\n  if file_name_split[6].to_s.to_i > 0\n    return \"No\"\n  \n\
    \  # Check that the file's name contains only digits and '0'-'9'\n  if file_name_split[7].to_s.to_i\
    \ > 0\n    return \"No\"\n  \n  # Check that the file's name contains only digits\
    \ and '0'-'9'\n  if file_name_split[8].to_s.to_i > 0\n    return \"No\"\n  \n\
    \  # Check that the file's name contains only ", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(FILE_EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  \n  if file_name_split.length < 3 or file_name_split[0].length\
    \ < 1 or file_name_split[0].upcase != 'A' or file_name_split[0].downcase != 'A'\
    \ or file_name_split[0].upcase != 'Z' or file_name_split[0].downcase != 'Z'\n\
    \    return 'No'\n  \n  dot_index = file_name_split.length - 1\n  \n  while dot_index\
    \ >= 0\n    if file_name_split[dot_index].downcase != 'txt' or file_name_split[dot_index].downcase\
    \ != 'exe' or file_name_split[dot_index].downcase != 'dll'\n      return 'No'\n\
    \    dot_index -= 1\n  end\n  \n  return 'Yes'\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name.downcase!\n  file_name.chomp!\n  file_name.scan(/[0-9]{3}/).empty?\n\
    \  file_name.scan(/\\.\\./).empty?\n  file_name.scan(/[a-z][a-z]/).empty?\n  file_name.scan(/[a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\n\
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z",
  "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length != 2\
    \ or file_name_split[0].length != 1 or file_name_split[0].upcase != 'A'..'Z' or\
    \ file_name_split[1].upcase != 'a'..'z'\n    return 'No'\n  else\n    return 'Yes'\n\
    \  end\nend\n</code>\n<|/ a tags=ruby |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to know if there are any files with names like `1example.dll` or `example1.dll`\
    \ or `example1.txt`.\n<|/ c |>\n<| c |>\nI agree with you. I just wanted to show\
    \ how to solve the problem with regex. He can easily modify it to fit his needs.\n\
    <|/ c |>\n<| c |>\nI added a solution that uses `Regexp#match`.\n<|/ c |>\n<|\
    \ c |>\nThank you for the answer. I will try it out and let you know if it works.\n\
    <|/ c |>\n<| c |>\nI added a solution that uses `Regexp#match`.\n<|/ c |>\n<|\
    \ a tags=ruby |>\n<code>", "  file_name_split = file_name.split('.')\n  \n  if\
    \ file_name_split.length < 3 \n    return 'No'\n  \n  if file_name_split[0].empty?\n\
    \    return 'No'\n  \n  if file_name_split[0].upcase !~ /[a-Z]/\n    return 'No'\n\
    \  \n  if file_name_split[1].empty?\n    return 'No'\n  \n  if file_name_split[1].downcase\
    \ !~ /[txt|exe|dll]/\n    return 'No'\n  \n  return 'Yes'\nend", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match!(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\n\
    \  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n\
    \  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\\
    .[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\\
    .[a-z][a-z]$/)\n  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n\
    \  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\\
    .[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n\
    \  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z]\\\
    .[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/)\n\
    \  file_name.match!(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/\\\
    .+/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  ", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  \n  # Initialize\
    \ a variable named 'valid' to 'No'.\n  valid = 'No'\n  \n  # Initialize a variable\
    \ named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize a variable\
    \ named 'file_name_length' to '0'.\n  file_name_length = 0\n  \n  # Initialize\
    \ a variable named 'file_name_char' to '0'.\n  file_name_char = 0\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n  dot_position = -1\n  \n  # Initialize\
    \ a variable named 'dot_position' to '-1'.\n", "  file_name_check_regexp = /[0-9]{3}\\\
    .[a-z][a-z][a-z]\\.txt|[0-9]{3}\\.[a-z][a-z][a-z]\\.exe|[0-9]{3}\\.[a-z][a-z][a-z]\\\
    .dll/\n  if file_name_check_regexp.match(file_name) == nil\n    return \"No\"\n\
    \  else\n    return \"Yes\"\n  end\nend", "  file_name_parts = file_name.split('.')\n\
    \  if file_name_parts.length != 2 or file_name_parts[0].length != 1 or file_name_parts[0].upcase\
    \ != 'A' or file_name_parts[0].downcase != 'A' or file_name_parts[1].length !=\
    \ 1 or file_name_parts[1].upcase != 'A' or file_name_parts[1].downcase != 'A'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    ./, '')\n  file_name = file_name.gsub(/\\.[^a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n  file_name = file_name.gsub(/\\.\\./, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '')\n", "  file_name_split = file_name.split('.')\n  if file_name_split.size\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(FILE_EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_check_regexp\
    \ = /^[0-9]{3}\\.[a-z][a-z]$/i\n  if file_name_check_regexp.match(file_name) ==\
    \ nil\n    return \"No\"\n  end\n  \n  dot_index = file_name.index(\".\")\n  if\
    \ dot_index == nil\n    return \"No\"\n  end\n  \n  first_letter = file_name[dot_index-1]\n\
    \  if first_letter != nil && first_letter !~ /^[a-z]$/i\n    return \"No\"\n \
    \ end\n  \n  dot_index = file_name.index(\".\")\n  if dot_index == nil\n    return\
    \ \"No\"\n  end\n  \n  last_letter = file_name[dot_index-1]\n  if last_letter\
    \ != nil && last_letter !~ /^[a-z]$/i\n    return \"No\"\n  end\n  \n  return\
    \ \"Yes\"\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('A') or file_name_split[0].start_with?('z') or\
    \ file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  elsif file_name_split[1].empty? or file_name_split[1].start_with?('0')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('z')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('Z')\n\
    \    return \"No\"\n  elsif file_name_split[1].include?('txt') or file_name_split[1].include?('exe')\
    \ or file_name_split[1].include?('dll')\n    return \"Yes\"\n  else\n    return\
    \ \"No\"\n  end\nend", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length < 3 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') \n    or file_name_split[0].end_with?('9')\
    \ \n    or file_name_split[1].empty? or file_name_split[1].start_with?('a')\n\
    \    or file_name_split[1].end_with?('z') \n    or file_name_split[2].empty? or\
    \ file_name_split[2].start_with?('A')\n    or file_name_split[2].end_with?('Z')\n\
    \  else\n    \"No\"\n  end\nend", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_split = file_name.split('.')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('')\n  file_name_split = file_name_split[0].split('')\n\
    \  file_name_split = file_name_split[0].split('", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length < 3 or file_name_split[0].length < 1 or file_name_split[0].upcase\
    \ != 'A' or file_name_split[0].downcase != 'A' or file_name_split[1].length <\
    \ 1 or file_name_split[1].upcase != 'A' or file_name_split[1].downcase != 'A'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name_split = file_name.split('.')\n\
    \  \n  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('z')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  \n  if file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('0') or file_name_split[1].start_with?('A')\
    \ or file_name_split[1].start_with?('z') or file_name_split[1].start_with?('Z')\
    \ or file_name_split[1].end_with?('txt') or file_name_split[1].end_with?('exe')\
    \ or file_name_split[1].end_with?('dll')\n    return \"No\"\n  end\n  \n  return\
    \ \"Yes\"\nend", "  file_name_split = file_name.split('.')\n  file_name_split_size\
    \ = file_name_split.length\n  \n  if file_name_split_size < 3 \n    return \"\
    No\"\n  \n  file_name_split_first_char = file_name_split[0]\n  file_name_split_first_char_lower\
    \ = file_name_split_first_char.downcase\n  \n  if file_name_split_first_char_lower\
    \ !~ /^[a-z]+$/ \n    return \"No\"\n  \n  file_name_split_last_char = file_name_split[file_name_split_size-1]\n\
    \  file_name_split_last_char_lower = file_name_split_last_char.downcase\n  \n\
    \  if file_name_split_last_char_lower !~ /^[a-z]+$/ \n    return \"No\"\n  \n\
    \  file_name_split_first_char_upper = file_name_split_first_char.upcase\n  \n\
    \  if file_name_split_first_char_upper !~ /^[A-Z]+$/ \n    return \"No\"\n  \n\
    \  file_name_split_last_char_upper = file_name_split_last_char.upcase\n  \n  if\
    \ file_name_split_last_char_upper !~ /^[A-Z]+$/ \n    return \"No\"\n  \n  if\
    \ file_name_split_first_char_upper == file_name_split_last_char_upper\n    return\
    \ \"No\"\n  \n  if file_name_split_first_char_upper != file_name_split_last_char_upper\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower == file_name_split_last_char_lower\n\
    \    return \"No\"\n  \n  if file_name_split_first_char_lower != file_name_split_last_char_lower\n\
    \    return \"No\"", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_array\
    \ = file_name.split('.')\n  if file_name_array.length != 2 or file_name_array[0].length\
    \ < 2 or file_name_array[0][0].upcase != 'A' or file_name_array[0][0].downcase\
    \ != 'A' or file_name_array[0][-1] != '.' or file_name_array[1].length < 3 or\
    \ file_name_array[1][0] != '0' or file_name_array[1][-1] != '9'\n    return 'No'\n\
    \  else\n    return 'Yes'\nend", "  file_name_split = file_name.split('.')\n \
    \ if file_name_split.length < 3 or file_name_split[0].empty? or \n    file_name_split[0].upcase\
    \ !~ /^[[:alpha:]]/ or \n    file_name_split[1].empty? or \n    file_name_split[1]\
    \ !~ /^[[:alpha:]]/ or \n    file_name_split[2] !~ /^[[:alpha:]]/ or \n    file_name_split[2]\
    \ !~ /\\.(txt|exe|dll)$/\n    return \"No\"\n  else\n    return \"Yes\"\n  end\n\
    end", "  file_name_check_regexp = /^[0-9]{3}\\.[a-z][a-z]$/\n  file_name_check_regexp.match(file_name)\n\
    end", "  file_name_array = file_name.split('.')\n  \n  if file_name_array.length\
    \ != 2 or file_name_array[0].length != 1 or file_name_array[0].upcase != 'A' or\
    \ file_name_array[0].downcase != 'A' or file_name_array[1].upcase != 'Z' or file_name_array[1].downcase\
    \ != 'Z'\n    return 'No'\n  \n  else\n    return 'Yes'\nend", "  file_name =\
    \ file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.strip\n  file_name = file_name.strip!\n  file_name\
    \ = file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  file_name = file_name.strip!\n\
    \  file_name = file_name.strip!\n  file_name = file_name.strip!\n  file_name =\
    \ file_name.strip!\n  file_name = file_name.strip!\n  ", "  file_name_split =\
    \ file_name.split('.')\n  \n  if file_name_split.length < 3 or file_name_split[0].length\
    \ < 1 or file_name_split[0].upcase < 'A' or file_name_split[0].upcase > 'Z' or\
    \ file_name_split[1].upcase < 'a' or file_name_split[1].upcase > 'z'\n    return\
    \ 'No'\n  else\n    return 'Yes'\n  end\nend\n</cell>\n<cell>", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.split(//)\n  file_name.size.should == 1\n  file_name.include?(\"\
    .\").should == false\n  file_name.start_with?(\"a\").should == false\n  file_name.end_with?(\"\
    txt\").should == true\n  file_name.include?(\"exe\").should == false\n  file_name.include?(\"\
    dll\").should == true\nend", "  file_name_check_regexp = /[0-9]{3}\\.[a-z][a-z][a-z]\\\
    .(txt|exe|dll)/\n  file_name_check_regexp.match(file_name)\nend", "  file_name_split\
    \ = file_name.split('.')\n  \n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?(latin_alphabet)\n    return \"No\"\n  \n \
    \ dot_index = file_name_split[0].index('.') + 1\n  \n  if dot_index > file_name_split[0].length\
    \ or dot_index == file_name_split[0].length and file_name_split[1].empty? or file_name_split[1].start_with?(extensions)\n\
    \    return \"No\"\n  \n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  file_name_split_size = file_name_split.length\n  if file_name_split_size <\
    \ 3 or file_name_split_size > 3\n    return 'No'\n  \n  file_name_split_first_char\
    \ = file_name_split[0]\n  if file_name_split_first_char.length < 1 or file_name_split_first_char.length\
    \ > 2\n    return 'No'\n  \n  file_name_split_first_char_lower = file_name_split_first_char.downcase\n\
    \  if file_name_split_first_char_lower != 'a' and file_name_split_first_char_lower\
    \ != 'b' and file_name_split_first_char_lower != 'c' and file_name_split_first_char_lower\
    \ != 'd' and file_name_split_first_char_lower != 'e' and file_name_split_first_char_lower\
    \ != 'f' and file_name_split_first_char_lower != 'g' and file_name_split_first_char_lower\
    \ != 'h' and file_name_split_first_char_lower != 'i' and file_name_split_first_char_lower\
    \ != 'j' and file_name_split_first_char_lower != 'k' and file_name_split_first_char_lower\
    \ != 'l' and file_name_split_first_char_lower != 'm' and file_name_split_first_char_lower\
    \ != 'n' and file_name_split_first_char_lower != 'o' and file_name_split_first_char_lower\
    \ != 'p' and file_name_split_first_char_lower != 'q' and file_name_split_first_char_lower\
    \ != 'r' and file_name_split_first_char_lower != 's' and file_name_split_first_char_lower\
    \ != 't' and file_name_split_first_char_lower != 'u' and file_name_split_first_char_lower\
    \ != 'v' and file_name_split_first_char_lower != 'w' and file_name_split_first_char_lower\
    \ != 'x' and file_name_split_first_char_lower != 'y' and file_name_split_first_char_lower\
    \ != 'z'\n    return 'No'\n  \n  file_name_split_last_char = file_name_split[file_name_split_size-1]\n\
    \  if file_name_split_last_char.length < 1 or file_name_split_last_char.length\
    \ > 2\n    return 'No'\n  \n  file_name_split_last_char_lower = file_name_split_last_char.downcase\n\
    \  if file_name_split_last_char_lower != 'a' and file_name_split_last_char_lower\
    \ != 'b' and file_name_split_last_char_lower != 'c' and file_name_split_last_char_lower\
    \ != 'd' and file_name_split_last_char_lower != 'e' and file_name_split_last_char_lower\
    \ != 'f' and file_name_split_last_char_lower != 'g' and file_name_split_last_char_lower\
    \ != 'h' and file_name_split_last_char_lower != 'i' and file_name_split_last_char_lower\
    \ != 'j' and file_name_split_last_char_lower != 'k' and file_name_split_last_char_lower\
    \ != 'l' and file_name_split_last_char_lower != 'm' and file_name_split_last_char_lower\
    \ != '", "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length\
    \ < 3 \n    return 'No'\n  \n  if file_name_split[0].empty? \n    return 'No'\n\
    \  \n  if file_name_split[0].start_with?('0') \n    return 'No'\n  \n  if file_name_split[0].start_with?('9')\
    \ \n    return 'No'\n  \n  if file_name_split[0].start_with?('a') \n    return\
    \ 'No'\n  \n  if file_name_split[0].start_with?('z') \n    return 'No'\n  \n \
    \ if file_name_split[0].start_with?('A') \n    return 'No'\n  \n  if file_name_split[0].start_with?('Z')\
    \ \n    return 'No'\n  \n  if file_name_split[1].empty? \n    return 'No'\n  \n\
    \  if file_name_split[1].start_with?('txt') \n    return 'No'\n  \n  if file_name_split[1].start_with?('exe')\
    \ \n    return 'No'\n  \n  if file_name_split[1].start_with?('dll') \n    return\
    \ 'No'\n  \n  return 'Yes'\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('.')\n    return \"No\"\n  else\n    file_name_split\
    \ = file_name.split('.')\n    if file_name_split[1] == 'txt' or file_name_split[1]\
    \ == 'exe' or file_name_split[1] == 'dll'\n      return \"Yes\"\n    else\n  \
    \    return \"No\"\n    end\n  end\nend", "  file_name_split = file_name.split('.')\n\
    \  \n  if file_name_split.length < 3 or file_name_split[0].length < 1 or file_name_split[1].empty?\
    \ or !file_name_split[1].include?('a'..'z') or not file_name_split[1].include?('A'..'Z')\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  file_name_length = len(file_name_split)\n  if file_name_length\
    \ < 3 or file_name_length > 3 or file_name_split[0].isalpha() or file_name_split[0].nil?\
    \ or file_name_split[0].empty?\n    return \"No\"\n  elsif file_name_split[1]\
    \ == 'exe' or file_name_split[1] == 'dll'\n    return \"Yes\"\n  else\n    return\
    \ \"No\"\n  end\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.size\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(EXTENSIONS)\n\
    \    return \"No\"\n  else\n    return \"Yes\"\n  end\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer. I'm going to try this out and see if it\
    \ works. I appreciate your help!\n<|/ c |>\n<| c |>\nI got it to work. Thanks\
    \ for your help! I appreciate it!\n<|/ c |>\n<| c |>\nGlad to hear it! If this\
    \ answer solved your problem, please mark it as accepted by clicking the check\
    \ mark next to it.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name_check_regexp\
    \ = /[0-9][0-9][0-9]\\.[a-zA-Z]+/\n  file_name_check_regexp.match(file_name)\n\
    end", "  \n  # Initialize a boolean variable 'is_valid' to 'False'\n  is_valid\
    \ = False\n  \n  # Initialize a variable 'file_extension' to an empty string\n\
    \  file_extension = \"\"\n  \n  # Initialize a variable 'file_name_length' to\
    \ an empty string\n  file_name_length = \"\"\n  \n  # Initialize a variable 'file_name_first_letter'\
    \ to an empty string\n  file_name_first_letter = \"\"\n  \n  # Initialize a variable\
    \ 'file_name_second_letter' to an empty string\n  file_name_second_letter = \"\
    \"\n  \n  # Initialize a variable 'file_name_third_letter' to an empty string\n\
    \  file_name_third_letter = \"\"\n  \n  # Initialize a variable 'file_name_fourth_letter'\
    \ to an empty string\n  file_name_fourth_letter = \"\"\n  \n  # Initialize a variable\
    \ 'file_name_fifth_letter' to an empty string\n  file_name_fifth_letter = \"\"\
    \n  \n  # Initialize a variable 'file_name_sixth_letter' to an empty string\n\
    \  file_name_sixth_letter = \"\"\n  \n  # Initialize a variable 'file_name_seventh_letter'\
    \ to an empty string\n  file_name_seventh_letter = \"\"\n  \n  # Initialize a\
    \ variable 'file_name_eighth_letter' to an empty string\n  file_name_eighth_letter\
    \ = \"\"\n  \n  # Initialize a variable 'file_name_ninth_letter' to an empty string\n\
    \  file_name_ninth_letter = \"\"\n  \n  # Initialize a variable 'file_name_tenth_letter'\
    \ to an empty string\n  file_name_tenth_letter = \"\"\n  \n  # Initialize a variable\
    \ 'file_name_eleventh_letter' to an empty string\n  file_name_eleventh_letter\
    \ = \"\"\n  \n  # Initialize a variable 'file_name_twelfth_letter' to an empty\
    \ string\n  file_name_twelfth_letter = \"\"\n  \n  # Initialize a variable 'file_name_thirteenth_letter'\
    \ to an empty string\n  file_name_thirteenth_letter = \"\"\n  \n  # Initialize\
    \ a variable 'file_name_fourteenth_letter' to an empty string\n  file_name_fourteenth_letter\
    \ = \"\"\n  \n  # Initialize a variable 'file_name_fifteenth_letter' to an empty\
    \ string\n  file_name_fifteenth_letter = \"\"\n  \n  # Initialize a variable 'file_name_sixteenth_letter'\
    \ to an empty string\n  file_name_sixteenth_letter = \"\"\n  \n  # Initialize\
    \ a variable 'file_name_seventeenth_letter' to an empty string\n  file_name_seventeenth_letter\
    \ = \"\"\n  \n  # Initialize a variable 'file_name_eighteenth_letter' to an empty\
    \ string\n  file_name_eighteenth_letter = \"\"\n  \n  # Initialize a variable\
    \ 'file_name_nine", "  \n  file_name = file_name.strip\n  \n  if file_name.nil?\
    \ or file_name.empty?\n    return \"No\"\n  end\n  \n  if file_name.size > 3\n\
    \    return \"No\"\n  end\n  \n  if file_name.include? \"..\"\n    return \"No\"\
    \n  end\n  \n  if file_name.include?(\".\") \n    return \"No\"\n  end\n  \n \
    \ if file_name.start_with?(\"..\") \n    return \"No\"\n  end\n  \n  if file_name.start_with?(\"\
    .\")\n    \n    if file_name.include?(\"txt\")\n      return \"Yes\"\n    elsif\
    \ file_name.include?(\"exe\")\n      return \"Yes\"\n    elsif file_name.include?(\"\
    dll\")\n      return \"Yes\"\n    end\n  end\n  \n  return \"No\"\nend", "  file_name_array\
    \ = file_name.split('.')\n  if file_name_array.length != 2 or file_name_array[0].length\
    \ != 1 or file_name_array[0].upcase != 'A' or file_name_array[0].downcase != 'A'\
    \ or file_name_array[0].upcase != 'a' or file_name_array[0].downcase != 'a' or\
    \ file_name_array[0].upcase != '0' or file_name_array[0].downcase != '0' or file_name_array[0].upcase\
    \ != '9' or file_name_array[0].downcase != '9'\n    return 'No'\n  else\n    return\
    \ 'Yes'\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.size\
    \ < 2\n    return \"No\"\n  \n  if file_name_split[0].empty?\n    return \"No\"\
    \n  \n  if file_name_split[0].start_with?('a')\n    return \"No\"\n  \n  if file_name_split[0].start_with?('A')\n\
    \    return \"No\"\n  \n  if file_name_split[0].start_with?('0')\n    return \"\
    No\"\n  \n  if file_name_split[0].start_with?('9')\n    return \"No\"\n  \n  if\
    \ file_name_split[0].start_with?('.')\n    return \"No\"\n  \n  if file_name_split[1].empty?\n\
    \    return \"No\"\n  \n  if file_name_split[1].start_with?('a')\n    return \"\
    No\"\n  \n  if file_name_split[1].start_with?('A')\n    return \"No\"\n  \n  if\
    \ file_name_split[1].start_with?('0')\n    return \"No\"\n  \n  if file_name_split[1].start_with?('9')\n\
    \    return \"No\"\n  \n  if file_name_split[1].start_with?('.')\n    return \"\
    No\"\n  \n  if file_name_split[1].end_with?('txt')\n    return \"Yes\"\n  \n \
    \ if file_name_split[1].end_with?('exe')\n    return \"Yes\"\n  \n  if file_name_split[1].end_with?('dll')\n\
    \    return \"Yes\"\n  \nend", "  file_name = file_name.strip\n  file_name = file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name = file_name.gsub!(/^\\./, \"\")\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, \"\")\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/", "  file_name = file_name.downcase\n  file_name\
    \ = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n\
    \  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  \n  if file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('txt') or file_name_split[1].start_with?('exe')\
    \ or file_name_split[1].start_with?('dll')\n    return \"No\"\n  end\n  \n  return\
    \ \"Yes\"\nend", "  file_name = file_name.strip\n  \n  if file_name.nil? or file_name.empty?\n\
    \    return \"No\"\n  end\n  \n  if file_name.size > 3\n    return \"No\"\n  end\n\
    \  \n  if file_name.index(\".\") == 0\n    return \"No\"\n  end\n  \n  if file_name.index(\"\
    .\") != 0\n    return \"No\"\n  end\n  \n  if file_name.index(\".\") > 1\n   \
    \ return \"No\"\n  end\n  \n  if file_name.index(\".\") < 1\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index(\".\") > file_name.size-2\n    return \"No\"\
    \n  end\n  \n  if file_name.index", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length < 3 or file_name_split[0].empty? or \n    file_name_split[0].upcase\
    \ !~ /^[[:alpha:]]/ or \n    file_name_split[1].empty? or \n    file_name_split[1].upcase\
    \ !~ /^[[:alpha:]]/ or \n    file_name_split[2] !~ /^[[:alpha:]]/ or \n    file_name_split[2]\
    \ !~ /\\.(txt|exe|dll)$/\n    return \"No\"\n  else\n    return \"Yes\"\n  end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your help but this doesn't\
    \ seem to work. I'm getting an error saying `undefined method `split' for nil:NilClass`\
    \ for the line `file_name_split = file_name.split('.')`\n<|/ c |>\n<| c |>\nI\
    \ edited the answer to include a test case that works. I tested it on Ruby 2.4.\n\
    <|/ c |>\n<| c |>\nI appreciate your help but I'm still getting an error. I'm\
    \ getting an error saying `undefined method `split' for nil:NilClass` for the\
    \ line `file_name_split = file_name.split('.')`\n<|/ c |>\n<| c |>\nI edited the\
    \ answer to include a test case that works. I tested it on Ruby 2.4.\n<|/ c |>\n\
    <| c |>\nI appreciate your help but I'm still getting an error. I'm getting an\
    \ error saying `undefined method `split' for nil:NilClass` for the line `file_name_split\
    \ = file_name.split('.')`\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>",
  "  file_name_check_regexp = /[0-9]{3}\\.txt|exe|dll/\n  file_name_check_regexp.match(file_name)\n\
    end", "  file_name_split = file_name.split('.')\n  file_name_split_size = file_name_split.size\n\
    \  if file_name_split_size < 3 or file_name_split_size > 3\n    return \"No\"\n\
    \  file_name_split_first_char = file_name_split[0]\n  if file_name_split_first_char.empty?\n\
    \    return \"No\"\n  if file_name_split_first_char.start_with?('a'..'z') or file_name_split_first_char.start_with?('A'..'Z')\n\
    \    return \"No\"\n  if file_name_split_first_char.end_with?('txt', 'exe', 'dll')\n\
    \    return \"Yes\"\nend", "  file_name_check_regexp = /^[0-9]{3}\\.[a-z][a-z][a-z]$/\n\
    \  file_name_check_regexp.match(file_name)\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].end_with?('txt') or file_name_split[0].end_with?('exe')\
    \ or file_name_split[0].end_with?('dll')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name_array = file_name.split('.')\n  if file_name_array.length\
    \ != 2 or file_name_array[0].length != 1 or file_name_array[0].upcase != 'A' or\
    \ file_name_array[0].downcase != 'A' or file_name_array[0].upcase != '0' or file_name_array[0].downcase\
    \ != '0' or file_name_array[0].upcase != '9' or file_name_array[0].downcase !=\
    \ '9'\n    return 'No'\n  else\n    return 'Yes'\nend", "  file_name_check_regexp\
    \ = /[0-9]{3}\\.[a-z][a-z][a-z]\\.txt|[0-9]{3}\\.[a-z][a-z][a-z]\\.exe|[0-9]{3}\\\
    .[a-z][a-z][a-z]\\.dll/\n  file_name_check_regexp.match(file_name)\nend", "  file_name\
    \ = file_name.downcase\n  file_name = file_name.gsub(\".\", \"\")\n  file_name\
    \ = file_name.gsub(\"^[0-9]\", \"\")\n  file_name = file_name.gsub(\"[0-9]$\"\
    , \"\")\n  file_name = file_name.gsub(\"^[a-z]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z]$\", \"\")\n  file_name = file_name.gsub(\"^[a-z0-9]\", \"\")\n  file_name\
    \ = file_name.gsub(\"[a-z0-9]$\", \"\")\n  file_name = file_name.gsub(\"^[a-z0-9A-Z]\"\
    , \"\")\n  file_name = file_name.gsub(\"[a-z0-9A-Z]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z]\", \"\")\n  file_name = file_name.gsub(\"[a-z0-9A-Za-z]$\", \"\
    \")\n  file_name = file_name.gsub(\"^[a-z0-9A-Za-z0-9]\", \"\")\n  file_name =\
    \ file_name.gsub(\"[a-z0-9A-Za-z0-9]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Z]\", \"\")\n  file_name = file_name.gsub(\"[a-z0-9A-Za-z0-9A-Z]$\"\
    , \"\")\n  file_name = file_name.gsub(\"^[a-z0-9A-Za-z0-9A-Za-z]\", \"\")\n  file_name\
    \ = file_name.gsub(\"[a-z0-9A-Za-z0-9A-Za-z]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Za-z0-9]\", \"\")\n  file_name = file_name.gsub(\"[a-z0-9A-Za-z0-9A-Za-z0-9]$\"\
    , \"\")\n  file_name = file_name.gsub(\"^[a-z0-9A-Za-z0-9A-Za-z0-9A-Z]\", \"\"\
    )\n  file_name = file_name.gsub(\"[a-z0-9A-Za-z0-9A-Za-z0-9A-Z]$\", \"\")\n  file_name\
    \ = file_name.gsub(\"^[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z]\", \"\")\n  file_name =\
    \ file_name.gsub(\"[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Z]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Z]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Za-z]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Za-z]$\", \"\")\n  file_name = file_name.gsub(\"\
    ^[a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9A-Za-z0-9]", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.strip\n  \n  file_name_length = len(file_name)\n\
    \  \n  if file_name_length < 3 or file_name_length > 10\n    return \"No\"\n \
    \ \n  if file_name.index(\".\") == 0\n    return \"No\"\n  \n  if file_name[0]\
    \ < 'a' or file_name[0] > 'z'\n    return \"No\"\n  \n  if file_name[-1] < 'a'\
    \ or file_name[-1] > 'z'\n    return \"No\"\n  \n  if file_name[-3] != '0'\n \
    \   return \"No\"\n  \n  if file_name[-4] != '0'\n    return \"No\"\n  \n  if\
    \ file_name[-5] != '0'\n    return \"No\"\n  \n  if file_name[-6] != '0'\n   \
    \ return \"No\"\n  \n  if file_name[-7] != '0'\n    return \"No\"\n  \n  if file_name[-8]\
    \ != '0'\n    return \"No\"\n  \n  if file_name[-9] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-10] != '0'\n    return \"No\"\n  \n  if file_name[-11] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-12] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-13] != '0'\n    return \"No\"\n  \n  if file_name[-14] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-15] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-16] != '0'\n    return \"No\"\n  \n  if file_name[-17] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-18] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-19] != '0'\n    return \"No\"\n  \n  if file_name[-20] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-21] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-22] != '0'\n    return \"No\"\n  \n  if file_name[-23] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-24] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-25] != '0'\n    return \"No\"\n  \n  if file_name[-26] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name[-27] != '0'\n    return \"No\"\n\
    \  \n  if file_name[-28] != '0'\n    return \"No\"\n  \n  if file_name[-29] !=\
    \ '0'\n    return \"No\"\n  \n  if file_name-30 != '0'\n    return \"No\"\n  \n\
    \  if file_name-31 != '0'\n    return \"No\"\n  \n  if file_name[-32] != '0'\n\
    \    return \"No\"\n  \n  if file_name[-33] != '0'", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or \n    file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or \n    file_name_split[1].empty? or\
    \ file_name_split[1].end_with?('txt') or \n    file_name_split[1].end_with?('exe')\
    \ or file_name_split[1].end_with?('dll')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name.downcase!\n  file_name.chomp!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.chomp!\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") && file_name.start_with?(\"A\") && file_name.end_with?(\"Z\") && file_name.include?(\"\
    .\") && file_name.split(\".\").length == 1\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_array\
    \ = file_name.split('.')\n  file_name_array_size = file_name_array.size\n  if\
    \ file_name_array_size < 3\n    return 'No'\n  else\n    file_name_array_size\
    \ = file_name_array.size\n    if file_name_array_size < 1\n      return 'No'\n\
    \    else\n      file_name_array_size = file_name_array.size\n      if file_name_array_size\
    \ < 1\n        return 'No'\n      else\n        file_name_array_size = file_name_array.size\n\
    \        if file_name_array_size < 1\n          return 'No'\n        else\n  \
    \        file_name_array_size = file_name_array.size\n          if file_name_array_size\
    \ < 1\n            return 'No'\n          else\n            file_name_array_size\
    \ = file_name_array.size\n            if file_name_array_size < 1\n          \
    \    return 'No'\n            else\n              return 'Yes'\n          end\n\
    \        end\n      end\n    end\n  end\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/\\\
    .txt|\\.exe|\\.dll/)\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your\
    \ answer. I tried your code, but I got this error `undefined method `start_with?'\
    \ for nil:NilClass`\n<|/ c |>\n<| c |>\nI forgot to add `!` after `file_name.downcase!`\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I tried your code, but I got this error\
    \ `undefined method `end_with?' for nil:NilClass`\n<|/ c |>\n<| c |>\nI forgot\
    \ to add `!` after `file_name.downcase!`\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I tried your code, but I got this error `undefined method `end_with?' for nil:NilClass`\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "  \n  # Initialize a variable named 'valid'\
    \ to 'No'.\n  valid = 'No'\n  \n  # Initialize a variable named 'dot_count' to\
    \ 0.\n  dot_count = 0\n  \n  # Initialize a variable named 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable named 'dot_length' to 0.\n\
    \  dot_length = 0\n  \n  # Initialize a variable named 'dot_string' to ''.\n \
    \ dot_string = ''\n  \n  # Initialize a variable named 'dot_string_index' to 0.\n\
    \  dot_string_index = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named 'dot_string_length'\
    \ to 0.\n  dot_string_length = 0\n  \n  # Initialize a variable named '", "  file_name_array\
    \ = file_name.split('.')\n  \n  if file_name_array.length != 2 or file_name_array[0].length\
    \ != 1 or file_name_array[0].upcase !~ /^[a-z]$/ or file_name_array[1].upcase\
    \ !~ /^[a-z]$/ or file_name_array[1].downcase !~ /^[a-z]$/\n    return \"No\"\n\
    \  else\n    return \"Yes\"\n  end\nend", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  \n  # Initialize a variable named 'valid' to 'No'.\n  valid = \"No\"",
  "  file_name = file_name.strip\n  \n  if file_name.nil? or file_name.empty?\n  \
    \  return \"No\"\n  end\n  \n  if file_name.size > 3\n    return \"No\"\n  end\n\
    \  \n  if file_name.include?(\".\") != true\n    return \"No\"\n  end\n  \n  if\
    \ file_name.split(\".\").size < 2\n    return \"No\"\n  end\n  \n  if file_name.split(\"\
    .\").first.empty?\n    return \"No\"\n  end\n  \n  if file_name.split(\".\").first.upcase\
    \ !~ /^[a-z_]+$/i\n    return \"No\"\n  end\n  \n  if file_name.split(\".\").last.downcase\
    \ !~ /^(exe|dll|txt)$/i\n    return \"No\"\n  end\n  \n  return \"Yes\"\nend",
  "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/\\.[^\\.]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '').downcase\n  \n  if file_name\
    \ =~ /^[0-9]{3}$/\n    return \"Yes\"\n  else\n    return \"No\"\n  end\nend",
  "  file_name_split = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?(LATIN_CHARS) or file_name_split[1].empty?\
    \ or file_name_split[1].start_with?(FILE_EXTENSIONS)\n    return \"No\"\n  else\n\
    \    return \"Yes\"\n  end\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\n\
    This doesn't work if you have a file named \"1example.txt\"\n<|/ c |>\n<| c |>\n\
    I added a solution that doesn't require any additional libraries.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.g", "  file_name_check_regexp = /^[0-9]{3}\\.[a-z][a-z][a-z]$/\n\
    \  file_name_check_regexp.match(file_name)\nend", "  file_name_array = file_name.split('.')\n\
    \  if file_name_array.length != 2 or file_name_array[0].length != 1 or file_name_array[0].upcase\
    \ != 'A' or file_name_array[0].downcase != 'A' or file_name_array[0] != '0' or\
    \ file_name_array[0] != '9' or file_name_array[1].length != 1 or file_name_array[1].upcase\
    \ != 'A' or file_name_array[1].downcase != 'A' or file_name_array[1] != '0' or\
    \ file_name_array[1] != '9'\n    return 'No'\n  else\n    return 'Yes'\nend",
  "  file_name_array = file_name.split('.')\n  if file_name_array.length != 2 or file_name_array[0].length\
    \ != 1 or file_name_array[0].upcase != 'A' or file_name_array[0].downcase != 'A'\
    \ or file_name_array[1].upcase != 'A' or file_name_array[1].downcase != 'A'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_array = file_name.split('.')\n  file_name_array_size = file_name_array.size\n\
    \  if file_name_array_size < 3 || file_name_array_size > 3\n    return \"No\"\n\
    \  file_name_array_size.times do |i|\n    if !file_name_array[i].match(/^[a-zA-z]$/)\n\
    \      return \"No\"\n    end\n  end\n  file_name_array_size.times do |i|\n  \
    \  if !file_name_array[i].match(/^[0-9]$/)\n      return \"No\"\n    end\n  end\n\
    \  file_name_array_size.times do |i|\n    if !file_name_array[i].match(/^\\.$/)\n\
    \      return \"No\"\n    end\n  end\n  file_name_array_size.times do |i|\n  \
    \  if !file_name_array[i].match(/^[a-zA-z]\\.$/)\n      return \"No\"\n    end\n\
    \  end\n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n  if\
    \ file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  elsif file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('txt') or file_name_split[1].start_with?('exe')\
    \ or file_name_split[1].start_with?('dll')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('A') or file_name_split[0].start_with?('z') or\
    \ file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  \n  if file_name_split[1].empty? or file_name_split[1].start_with?('txt')\
    \ or file_name_split[1].start_with?('exe') or file_name_split[1].start_with?('dll')\n\
    \    return \"No\"\n  \n  return \"Yes\"\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_check_regexp = /^[0-9]{3}\\.[a-z][a-z]$/\n  file_name_check_regexp.match(file_name)\n\
    \  file_name_check_regexp.match(file_name).nil?\nend", "  file_name_split = file_name.split('.')\n\
    \  file_name_length = len(file_name_split)\n  \n  if file_name_length < 3 or file_name_length\
    \ > 3\n    return \"No\"\n  \n  if file_name_split[0].length < 1 or file_name_split[0].length\
    \ > 1\n    return \"No\"\n  \n  if file_name_split[0].upcase != \"A\" or file_name_split[0].upcase\
    \ != \"Z\"\n    return \"No\"\n  \n  if file_name_split[1].downcase != \"txt\"\
    \ or file_name_split[1].downcase != \"exe\" or file_name_split[1].downcase !=\
    \ \"dll\"\n    return \"No\"\n  \n  return \"Yes\"\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_split = file_name.split('.')\n  if file_name_split.length !=\
    \ 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('z') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  dot_index\
    \ = file_name_split[0].index('.')\n  if dot_index == nil\n    return \"No\"\n\
    \  end\n  dot_index = dot_index[0]\n  if dot_index == nil\n    return \"No\"\n\
    \  end\n  if dot_index == '.' or dot_index == '..'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1].empty?\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'exe'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'dll'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'txt'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'zip'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'rar'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'tar'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == 'gz'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name_split[1] == '7z'\n    return \"No\"\n  end\n\
    \  if dot_index == '.' and file_name", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  if file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('txt') or file_name_split[1].start_with?('exe')\
    \ or file_name_split[1].start_with?('dll')\n    return \"No\"\n  end\n  return\
    \ \"Yes\"\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I'm\
    \ still new to Ruby and I didn't know about `start_with?`. However, I did try\
    \ your solution and it didn't work. I'm still getting \"No\" when I enter a name\
    \ that starts with \"0\" or \"9\". I'm also getting \"No\" when I enter a name\
    \ that starts with \"A\" or \"Z\". I'm still getting \"No\" when I enter a name\
    \ that starts with \"a\" or \"z\". Any ideas?\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a more complete solution. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your help. I appreciate it. I tried your solution and it didn't work.\
    \ I'm still getting \"No\" when I enter a name that starts with \"0\" or \"9\"\
    . I'm also getting \"No\" when I enter a name that starts with \"A\" or \"Z\"\
    . I'm still getting \"No\" when I enter a name that starts with \"a\" or \"z\"\
    . Any ideas?\n<|/ c |>\n<| c |>\nI edited my answer to include a more complete\
    \ solution. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help. I appreciate\
    \ it. I tried your solution and it didn't work. I'm still getting \"No\" when\
    \ I enter a name that starts with \"0\" or \"9\". I'm also getting \"No\" when\
    \ I enter a name that starts with \"A\" or \"Z\". I'm still getting \"No\" when\
    \ I enter a name that starts with \"a\" or \"z\". Any ideas?\n<|/ c |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('z')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  \n  if file_name_split[1].empty? or file_name_split[1].start_with?('0')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('z')\
    \ or file_name_split[1].start_with?('A') or file_name_split[1].start_with?('Z')\n\
    \    return \"No\"\n  end\n  \n  if file_name_split[1].end_with?('txt') or file_name_split[1].end_with?('exe')\
    \ or file_name_split[1].end_with?('dll')\n    return \"Yes\"\n  end\n  \n  return\
    \ \"No\"\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A') or\
    \ file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_ext\
    \ = file_name_split[1]\n    if file_name_ext.empty? or file_name_ext !~ /^(txt|exe|dll)$/i\n\
    \      return \"No\"\n    else\n      return \"Yes\"\n    end\n  end\nend", " \
    \ file_name_split = file_name.split('.')\n  if file_name_split.length != 2 or\
    \ file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  end\n  if file_name_split[1].empty? or file_name_split[1].start_with?('txt')\
    \ or file_name_split[1].start_with?('exe') or file_name_split[1].start_with?('dll')\n\
    \    return \"No\"\n  end\n  return \"Yes\"\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?(LATIN_CHARS)\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?(FILE_EXTENSIONS)\n\
    \    \"No\"\n  else\n    \"Yes\"\n  end\nend", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9')\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?('0') or file_name_split[1].start_with?('A')\
    \ or file_name_split[1].start_with?('9')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name.downcase!\n  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\\
    .[a-z][a-z][a-z]$/)\n  file_name.sub!(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/,\
    \ '')\n  file_name.sub!(/\\.[a-z][a-z][a-z]/, '') \n  file_name.sub!(/^[a-z][a-z][a-z]/,\
    \ '') \n  file_name.sub!(/^[a-z][a-z]/, '') \n  file_name.sub!(/^[a-z]/, '') \n\
    \  file_name.sub!(/^$/, '') \n  file_name.sub!(/\\.$/, '') \n  file_name.sub!(/\\\
    .[a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/\\.[a-z][a-z]/, '') \n  file_name.sub!(/\\.[a-z][a-z]/,\
    \ '') \n  file_name.sub!(/", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A') or\
    \ file_name_split[0].start_with?('Z')\n    return \"No\"\n  end\n  if file_name_split[1].empty?\
    \ or file_name_split[1].start_with?('txt') or file_name_split[1].start_with?('exe')\
    \ or file_name_split[1].start_with?('dll')\n    return \"No\"\n  end\n  return\
    \ \"Yes\"\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A') or\
    \ file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_split_2\
    \ = file_name_split[1].downcase.split(' ')\n    if file_name_split_2.length !=\
    \ 1 or file_name_split_2[0].empty? or file_name_split_2[0].start_with?('txt')\
    \ or file_name_split_2[0].start_with?('exe') or file_name_split_2[0].start_with?('dll')\n\
    \      return \"No\"\n    else\n      return \"Yes\"\n    end\n  end\nend", " \
    \ file_name_check_regexp = /[0-9]{3}\\.[a-z][a-z][a-z]\\.(txt|exe|dll)/i\n  file_name_check_regexp.match(file_name)\n\
    end", "  file_name_split = file_name.split('.')\n  if file_name_split.length !=\
    \ 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('.')\n\
    \    return \"No\"\n  else\n    if file_name_split[1].empty? or file_name_split[1].start_with?('txt')\
    \ or file_name_split[1].start_with?('exe') or file_name_split[1].start_with?('dll')\n\
    \      return \"Yes\"\n    else\n      return \"No\"\n    end\n  end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for the help! I appreciate it!\n<|/ c |>\n\
    <| c |>\nYou're welcome. I'm glad I could help. If you think my answer was helpful,\
    \ please consider accepting it.\n<|/ c |>\n<| c |>\nI did accept it, but I still\
    \ don't have enough reputation to upvote it yet. Thanks again for the help!\n\
    <|/ c |>\n<| c |>\nNo problem. Thanks for accepting my answer. I'm glad I could\
    \ help.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.size != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9')\
    \ or file_name_split[1].empty? or file_name_split[1].start_with?('0') or file_name_split[1].start_with?('A')\
    \ or file_name_split[1].start_with?('9')\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  file_name_check_regexp = /[0-9]{3}\\.[a-z][a-z][a-z]$/\n\
    \  file_name_check_regexp.match(file_name)\nend", "  \n  # Initialize a variable\
    \ 'valid' to 'No'.\n  valid = 'No'\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n\
    \  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize\
    \ a variable 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable\
    \ 'dot_position' to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position'\
    \ to 0.\n  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n\
    \  dot_position = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position\
    \ = 0\n  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n\
    \  \n  # Initialize a variable 'dot_position' to 0.\n  dot_position = 0\n", " \
    \ file_name_check_regexp = /[0-9]{3}\\.txt|exe|dll/\n  file_name_check_regexp.match(file_name)\n\
    end", "  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.size != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('9')\
    \ or file_name_split[0].start_with?('A') or file_name_split[0].start_with?('Z')\n\
    \    return \"No\"\n  else\n    file_name_split = file_name.split('.')\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n\
    \    file_name_split.delete_at(0)\n    file_name_split.delete_at(0)\n    file_name_",
  "  file_name = file_name.strip\n  file_name = file_name.gsub!(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub!(/\\.+/, '')\n  file_name = file_name.gsub!(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub!(/^[A-Z]/, '')\n  return file_name =~ /^[a-z0-9]+\\\
    .txt$/i\nend", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0') or\
    \ file_name_split[0].start_with?('A') or file_name_split[0].start_with?('9') or\
    \ file_name_split[0].start_with?('.')\n    return \"No\"\n  else\n    if file_name_split[1]\
    \ == 'exe' or file_name_split[1] == 'dll' or file_name_split[1] == 'txt'\n   \
    \   return \"Yes\"\n    else\n      return \"No\"\n    end\n  end\nend", "  file_name_split\
    \ = file_name.split('.')\n  if file_name_split.length != 2 or file_name_split[0].empty?\
    \ or file_name_split[0].start_with?('0') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('.')\n\
    \    return \"No\"\n  else\n    if file_name_split[1] == 'txt' or file_name_split[1]\
    \ == 'exe' or file_name_split[1] == 'dll'\n      return \"Yes\"\n    else\n  \
    \    return \"No\"\n    end\n  end\nend", "  \n  # Initialize a variable to store\
    \ the valid file name\n  valid_file_name = False\n  \n  # Initialize a variable\
    \ to store the file's extension\n  file_extension = \"\"\n  \n  # Initialize a\
    \ variable to store the file's name\n  file_name = file_name.strip()\n  \n  #\
    \ Initialize a variable to store the file's name without extension\n  file_name_without_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension = file_name\n  \n  # Initialize\
    \ a variable to store the file's name without extension\n  file_name_without_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name\n  \n  # Initialize a variable to store the file's name without\
    \ extension\n  file_name_without_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension\
    \ = file_name", "  file_name_split = file_name.split('.')\n  if file_name_split.length\
    \ < 3 or file_name_split[0].length < 1 or file_name_split[0].upcase != 'A' or\
    \ file_name_split[1].upcase != 'Z' or file_name_split[1].downcase != 'A' or file_name_split[2].length\
    \ < 1 or file_name_split[2].upcase != 'A' or file_name_split[2].downcase != 'Z'\
    \ or file_name_split[2].downcase != 'T'\n    return 'No'\n  else\n    return 'Yes'\n\
    end", "  file_name_split = file_name.split('.')\n  file_name_split_size = file_name_split.length\n\
    \  if file_name_split_size < 3 \n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n  if file_name_split_size < 1\n    file_name_split_size\
    \ = 0\n  file_name_split_size = file_name_split_size - 1\n  if file_name_split_size\
    \ < 1\n    file_name_split_size = 0\n  file_name_split_size = file_name_split_size\
    \ - 1\n  if file_name_split_size < 1\n    file_name_split_size = 0\n  file_name_split_size\
    \ = file_name_split_size - 1\n", "  file_name = file_name.strip\n  file_name =\
    \ file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_array = file_name.split('.')\n  if file_name_array.length !=\
    \ 2 or file_name_array[0].length != 1 or file_name_array[0].upcase != 'A' or file_name_array[0].downcase\
    \ != 'A' or file_name_array[1].upcase != 'A' or file_name_array[1].downcase !=\
    \ 'A'\n    return 'No'\n  else\n    return 'Yes'\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your answer. I'm sorry I didn't mention this in my question,\
    \ but I do need to use regular expressions. I edited my question to reflect this.\n\
    <|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  file_name_check_regexp = /[0-9]{3}\\\
    .[a-z][a-z][a-z]/\n  file_name_check_result = file_name.match(file_name_check_regexp)\n\
    \  if file_name_check_result\n    return \"Yes\"\n  else\n    return \"No\"\n\
    \  end\nend", "  file_name_check_regexp = /[0-9][0-9][0-9]\\.[a-zA-Z0-9]+/\n \
    \ return file_name_check_regexp.match(file_name) != nil\nend", "  file_name_check_regexp\
    \ = /[0-9]{3}\\.[a-z][a-z]/ \n  file_name_check_regexp.match(file_name)\n  file_name_check_regexp.match(file_name).nil?\n\
    \  file_name_check_regexp.match(file_name).nil? && file_name_check_regexp.match(file_name).empty?\n\
    \  file_name_check_regexp.match(file_name).nil? && file_name_check_regexp.match(file_name).empty?\
    \ && file_name_check_regexp.match(file_name).start_with?(\"a\")\nend", "  file_name\
    \ = file_name.strip\n  file_name = file_name.gsub!(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub!(/^\\./, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub!(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub!(/\\.[^\\.]+$/, '')", "  file_name =\
    \ file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub(/^0+/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name\
    \ = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[A-Z]/, '')\n\
    \  file_name = file_name.gsub(/^[a-z0-9]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/, '')\n  file_name = file_name.gsub(/^[a-z0-9A-Z]/,\
    \ '')\n  file_name = file_name.gsub(", "  file_name_split = file_name.split('.')\n\
    \  \n  if file_name_split.length < 3 or file_name_split[0].empty? or file_name_split[0].upcase\
    \ !~ /[a-Z]/\n    return \"No\"\n  \n  if file_name_split[1] == 'exe' or file_name_split[1]\
    \ == 'dll'\n    return \"No\"\n  \n  return \"Yes\"\nend", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/)\n  file_name.include?(\"\
    .\") && file_name.split(\".\").length == 1\nend", "  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[0-9]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[0-9]/,\
    \ '')\n  file_name = file_name.g", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  ", "  file_name_array\
    \ = file_name.split('.')\n  \n  if file_name_array.length != 3 or file_name_array[0].length\
    \ != 1 or file_name_array[1].length != 1 or file_name_array[0].upcase != file_name_array[0].downcase\
    \ or file_name_array[1].upcase != file_name_array[1].downcase or file_name_array[0].upcase\
    \ != file_name_array[0].downcase or file_name_array[0].upcase != file_name_array[0].downcase\
    \ or file_name_array[0].upcase != file_name_array[0].downcase\n    return \"No\"\
    \n  else\n    return \"Yes\"\nend", "  file_name = file_name.strip\n  file_name\
    \ = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  ", "  file_name_split = file_name.split('.')\n  \n  if file_name_split.length\
    \ < 3 or file_name_split[0].length < 1 or file_name_split[1].length < 1 or file_name_split[1].downcase\
    \ !~ /[a-z_]/\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", " \
    \ file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  ", "  file_name_split = file_name.split('.')\n\
    \  if file_name_split.length != 2 or file_name_split[0].empty? or file_name_split[0].start_with?('0')\
    \ or file_name_split[0].start_with?('9') or file_name_split[0].start_with?('A')\
    \ or file_name_split[0].start_with?('Z')\n    return \"No\"\n  else\n    file_name_ext\
    \ = file_name_split[1]\n    if file_name_ext.empty? or file_name_ext !~ /txt|exe|dll/\n\
    \      return \"No\"\n    else\n      return \"Yes\"\n    end\n  end\nend", " \
    \ file_name_split = file_name.split('.')\n  file_name_split_size = file_name_split.size\n\
    \  if file_name_split_size < 3 or file_name_split_size > 3\n    return \"No\"\n\
    \  file_name_split_size = file_name_split_size - 1\n  file_name_split_first =\
    \ file_name_split[0]\n  file_name_split_first_size = file_name_split_first.length\n\
    \  if file_name_split_first_size < 1 or file_name_split_first_size > 3\n    return\
    \ \"No\"\n  file_name_split_first_first_char = file_name_split_first[0]\n  if\
    \ file_name_split_first_first_char < 'a' or file_name_split_first_first_char >\
    \ 'z'\n    return \"No\"\n  file_name_split_first_second_char = file_name_split_first[1]\n\
    \  if file_name_split_first_second_char < 'a' or file_name_split_first_second_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_third_char = file_name_split_first[2]\n\
    \  if file_name_split_first_third_char < 'a' or file_name_split_first_third_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_fourth_char = file_name_split_first[3]\n\
    \  if file_name_split_first_fourth_char < 'a' or file_name_split_first_fourth_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_fifth_char = file_name_split_first[4]\n\
    \  if file_name_split_first_fifth_char < 'a' or file_name_split_first_fifth_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_sixth_char = file_name_split_first[5]\n\
    \  if file_name_split_first_sixth_char < 'a' or file_name_split_first_sixth_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_seventh_char = file_name_split_first[6]\n\
    \  if file_name_split_first_seventh_char < 'a' or file_name_split_first_seventh_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_eighth_char = file_name_split_first[7]\n\
    \  if file_name_split_first_eighth_char < 'a' or file_name_split_first_eighth_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_ninth_char = file_name_split_first[8]\n\
    \  if file_name_split_first_ninth_char < 'a' or file_name_split_first_ninth_char\
    \ > 'z'\n    return \"No\"\n  file_name_split_first_tenth_char = file_name_split_first[9]\n\
    \  if file_name_split_first_tenth_char < 'a' or file_name_split_first_tenth_char\
    \ > 'z'\n    return \"No\"\n", "  file_name.downcase!\n  file_name.chomp!\n  file_name.scan(/[^0-9\\\
    .]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n  file_name.scan(/[^a-zA-Z]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.[^\\.]/).empty?\n\
    \  file_name.scan(/[^a-zA-Z0-9\\.]/).empty?\n  file_name.scan(/\\.", "  file_name\
    \ = file_name.downcase\n  file_name = file_name.gsub(\".\", \"\")\n  file_name\
    \ = file_name.gsub(\"^\", \"\")\n  file_name = file_name.gsub(\"_\", \"\")\n \
    \ file_name = file_name.gsub(\"[0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-z]\", \"\")\n  file_name = file_name.gsub(\"[A-Z]\", \"\")\n  file_name = file_name.gsub(\"\
    [a-zA-z]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9.]\", \"\")\n  file_name\
    \ = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\"\
    , \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n\
    \  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"\
    [^a-zA-Z0-9]\", \"\")\n  file_name = file_name.gsub(\"[^a-zA-Z0-9]\", \"\")",
  "  file_name_split = file_name.split('.')\n  if file_name_split.length < 3 or file_name_split[0].length\
    \ < 1 or file_name_split[0].upcase != 'A' or file_name_split[0].downcase != 'A'\
    \ or file_name_split[1].upcase != 'A' or file_name_split[1].downcase != 'A'\n\
    \    return 'No'\n  else\n    return 'Yes'\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .+/, \".\")\n  file_name = file_name.gsub!(/^[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub!(/\\.[a-z]/, \"\")\n  ", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for your answer. Your\
    \ code works perfectly for my purposes. However, I still don't understand why\
    \ my code doesn't work. Could you please explain why my code doesn't work?\n<|/\
    \ c |>\n<| c |>\nI added some explanation to my answer. Hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThanks for your explanation. Your code works perfectly for my purposes.\
    \ However, I still don't understand why my code doesn't work. Could you please\
    \ explain why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation.\
    \ Your code works perfectly for my purposes. However, I still don't understand\
    \ why my code doesn't work. Could you please explain why my code doesn't work?\n\
    <|/ c |>\n<| a tags=ruby,regex |>\nI believe that your regex is too greedy. You\
    \ should add an extra ? to make it non-greedy.\n<code>\n/^[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\\
    .[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.", "  file_name_split = file_name.split('.')\n\
    \  file_name_length = len(file_name_split)\n  \n  if file_name_length > 3 or file_name_length\
    \ < 1 or file_name_split[0].strip == \"\" or file_name_split[0].strip[0] < 'a'\
    \ or file_name_split[0].strip[0] > 'z' or file_name_split[0].strip[1] < 'a' or\
    \ file_name_split[0].strip[1] > 'z' or file_name_split[0].strip[2] < 'a' or file_name_split[0].strip[2]\
    \ > 'z' or file_name_split[0].strip[3] < 'a' or file_name_split[0].strip[3] >\
    \ 'z' or file_name_split[0].strip[4] < 'a' or file_name_split[0].strip[4] > 'z'\
    \ or file_name_split[0].strip[5] < 'a' or file_name_split[0].strip[5] > 'z' or\
    \ file_name_split[0].strip[6] < 'a' or file_name_split[0].strip[6] > 'z' or file_name_split[0].strip[7]\
    \ < 'a' or file_name_split[0].strip[7] > 'z' or file_name_split[0].strip[8] <\
    \ 'a' or file_name_split[0].strip[8] > 'z' or file_name_split[0].strip[9] < 'a'\
    \ or file_name_split[0].strip[9] > 'z' or file_name_split[0].strip[10] < 'a' or\
    \ file_name_split[0].strip[10] > 'z' or file_name_split[0].strip[11] < 'a' or\
    \ file_name_split[0].strip[11] > 'z' or file_name_split[0].strip[12] < 'a' or\
    \ file_name_split[0].strip[12] > 'z' or file_name_split[0].strip[13] < 'a' or\
    \ file_name_split[0].strip[13] > 'z' or file_name_split[0].strip[14] < 'a' or\
    \ file_name_split[0].strip[14] > 'z' or file_name_split[0].strip[15] < 'a' or\
    \ file_name_split[0].strip[15] > 'z' or file_name_split[0].strip[16] < 'a' or\
    \ file_name_split[0].strip[16] > 'z' or file_name_split[0].strip[17] < 'a' or\
    \ file_name_split[0].strip[17] > 'z' or file_name_split[0].strip[18] < 'a' or\
    \ file_name_split[0].strip[18] > 'z' or file_name_split[0].strip[19] < 'a' or\
    \ file_name_split[0].strip[19] > 'z' or file_name_split[0].strip[20] < 'a' or\
    \ file_name_split[0].strip[20] > 'z' or file_name_split[0].strip[21] < 'a' or\
    \ file_name_split[0].strip[21] > 'z' or file_name_split[0].strip[22] < 'a' or\
    \ file_name_split", "  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  file_name = file_name.strip\n\
    \  file_name = file_name.strip\n  file_name = file_name.strip\n  "]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_44_change_base
language: rb
prompt: "# Change numerical base of input number x to base.\n# return string representation\
  \ after the conversion.\n# base numbers are less than 10.\n# >>> change_base.call(8,\
  \ 3)\n# \"22\"\n# >>> change_base.call(8, 2)\n# \"1000\"\n# >>> change_base.call(7,\
  \ 2)\n# \"111\"\ndef change_base(x, base)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n\
  \    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8,\
  \ 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\"\
  , candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n\
  \    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7,\
  \ 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3,\
  \ 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5,\
  \ 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7,\
  \ 8))\n  end\nend\n"
completions: ["  if base < 2 || base > 36\n    raise ArgumentError, \"Invalid base:\
    \ #{base}\"\n  end\n  x = x.to_i\n  digits = x.to_s.reverse\n  digits = digits.reverse\n\
    \  digits = digits.chars.map { |c| c.to_i(base) }\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n\
    \  else\n    x.to_s.reverse.chars.take(base).join\n  end\nend", "  x = x.to_s\n\
    \  base = base.to_i\n  result = ''\n  while x > 0\n    digit = x % base\n    result\
    \ += (digit.to_s).rjust(digit.size + 1)\n    x = x / base\n  end\n  result\nend\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for base 10. However when I try to use it with base 2 it returns \"11\" instead\
    \ of \"111\".\n<|/ c |>\n<| c |>\nI fixed the bug. Now it works with base 2 and\
    \ base 10. Thanks again!\n<|/ c |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly for base 10. However when I try to use it with base 2 it returns\
    \ \"11\" instead of \"111\".\n<|/ c |>\n<| c |>\nI fixed the bug. Now it works\
    \ with base 2 and base 10. Thanks again!\n<|/ c |>\n<| a tags=ruby,base,binary\
    \ |>\n<code>", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if base < 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.reverse.inject(\"\
    \") do |s, c|\n      s << c if c >= base\n      s\n    end.reverse\n  end\nend\n\
    </code>\n<|/ a tags=ruby,string |>\n<| a dscore=0 |>\n<code>", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n\
    \  x = x.to_i\n  while x < base\n    x *= base\n  end\n  x.to_s\nend", "  x =\
    \ x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\") do |s,\
    \ i|\n    s << i if i.to_s == base\n  end\n  x.reverse\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x = x / base\n\
    \  end\n  x = x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n  x\n\
    end", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n\
    \  x = x.to_i\n  while x < base\n    x *= base\n  end\n  x.to_s\nend\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work for negative numbers. `change_base.call(-8,\
    \ 2)` returns `\"8\"` instead of `\"-8\"`.\n<|/ c |>\n<| c |>\nI fixed the negative\
    \ number issue. Thanks for pointing it out.\n<|/ c |>\n<| a tags=ruby |>\n<code>",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_s\n  base = base.to_s\n  x.reverse!\n  base.reverse!\n  x =\
    \ x.reverse\n  base = base.reverse\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n\
    \  x.reverse!\n  base.reverse!\n  x.reverse!\n  base.reverse!\n  x.reverse!\n\
    \  base.reverse!\n  x.reverse!\n  base.reverse!\n", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n  if base == \"10\"\
    \n    return x.to_s\n  elsif base == \"11\"\n    return x.to_s.reverse\n  elsif\
    \ base == \"12\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base ==\
    \ \"13\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"14\"\n\
    \    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"15\"\n    return\
    \ x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"16\"\n    return x.to_s.reverse.insert(0,\
    \ \"0\")\n  elsif base == \"17\"\n    return x.to_s.reverse.insert(0, \"0\")\n\
    \  elsif base == \"18\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base\
    \ == \"19\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"20\"\
    \n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"21\"\n    return\
    \ x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"22\"\n    return x.to_s.reverse.insert(0,\
    \ \"0\")\n  elsif base == \"23\"\n    return x.to_s.reverse.insert(0, \"0\")\n\
    \  elsif base == \"24\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base\
    \ == \"25\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"26\"\
    \n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"27\"\n    return\
    \ x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"28\"\n    return x.to_s.reverse.insert(0,\
    \ \"0\")\n  elsif base == \"29\"\n    return x.to_s.reverse.insert(0, \"0\")\n\
    \  elsif base == \"30\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base\
    \ == \"31\"\n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"32\"\
    \n    return x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"33\"\n    return\
    \ x.to_s.reverse.insert(0, \"0\")\n  elsif base == \"34\"\n    return x.to_s.reverse.insert(0,\
    \ \"0\")\n  elsif base == \"35\"\n    return x.to_s.reverse.insert(0, \"0\")\n\
    \  elsif base == \"36\"\n    return x.to_s.reverse.insert(0, \"0\")\n  el", " \
    \ x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0\n    digit = x\
    \ % base\n    digit = digit == 0 ? 0 : digit\n    result << digit\n    x /= base\n\
    \  end\n  return result\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    puts \"Base must be less than 10.\"\n  elsif base > 36\n    puts \"Base must\
    \ be less than 36.\"\n  else\n    puts x.to_s(base)\n  end\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\") do |s, x|\n    s\
    \ << x.to_s(base)\n  end\n  x.reverse\nend", "  if base < 10\n    puts \"Base\
    \ must be less than 10.\"\n  elsif base > 10\n    puts \"Base must be less than\
    \ 10.\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend", "  if base <\
    \ 2 || base > 36\n    raise ArgumentError, \"Base must be between 2 and 36\"\n\
    \  digits = x.to_s.split(//)\n  digits.reverse!\n  digits = digits.map { |d| d.to_i(base)\
    \ }\n  digits.reverse!\n  digits.join\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    puts \"Base must be less than 10.\"\n  else\n    puts \"#{x.to_s(base)}\"\
    .to_i\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, x|\n    s << x.to_s(base)\n  end\n  x.reverse\nend", "  if x < 10\n\
    \    x.to_s(base)\n  else\n    x.to_s(base).rjust(base.length)\n  end\nend", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s(base)\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 10\n    digits = x.to_s.split(//)\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.join(\"\")\n  else\n    digits = x.to_s.split(//)\n    digits[base-10]\
    \ = digits[base-10].to_i\n    digits = digits.join(\"\")\n  end\n  return digits\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base == 0\n    x.to_s\n  else\n\
    \    x.to_s.reverse.chars.each_with_index.map { |c, i| c * base + i }.join\n \
    \ end\nend", "  if base < 10\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  if x < base\n    x.to_s.reverse!\n    x.to_i(base).to_s\n  else\n\
    \    x.to_s.reverse!\n    x.to_i(base).to_s\n    x.to_i(base).to_s\n  end\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThanks so much! This was a\
    \ great help. I ended up using your first solution and it worked perfectly. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help.\n<|/ c |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n\
    \  else\n    x.to_s.reverse.chars.reverse.inject(\"\") do |s, c|\n      s << c\
    \ if c >= base\n      s\n    end.reverse\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nI like your solution, but I feel like it could be improved. For\
    \ example, `change_base.call(8, 3)` returns `\"22\"` instead of `\"1000\"`. Also,\
    \ `change_base.call(8, 2)` returns `\"111\"` instead of `\"1001\"`. Also, `change_base.call(7,\
    \ 2)` returns `\"1110\"` instead of `\"10011\"`. Also, `change_base.call(8, 1)`\
    \ returns `\"1001\"` instead of `\"10010\"`.\n<|/ c |>\n<| c |>\nI agree with\
    \ you that my solution is very limited. However, I believe that my solution is\
    \ more readable and understandable than yours. I believe that my solution is more\
    \ efficient than yours. I believe that my solution is more efficient than yours.\
    \ I believe that my solution is more efficient than yours. I believe that my solution\
    \ is more efficient than yours. I believe that my solution is more efficient than\
    \ yours. I believe that my solution is more efficient than yours. I believe that\
    \ my solution is more efficient than yours. I believe that my solution is more\
    \ efficient than yours. I believe that my solution is more efficient than yours.\
    \ I believe that my solution is more efficient than yours. I believe that my solution\
    \ is more efficient than yours. I believe that my solution is more efficient than\
    \ yours. I believe that my solution is more efficient than yours. I believe that\
    \ my solution is more efficient than yours. I believe that my solution is more\
    \ efficient than yours. I believe that my solution is more efficient than yours.\
    \ I believe that my solution is more efficient than yours. I believe that my solution\
    \ is more efficient than yours. I believe that my solution is more efficient than\
    \ yours. I believe that my solution is more efficient than yours. I believe that\
    \ my solution is more efficient than yours. I believe that my solution is more\
    \ efficient than yours. I believe that my solution is more efficient than yours.\
    \ I believe that my solution is more efficient than yours. I believe that my solution\
    \ is more efficient than yours. I believe that my solution is more efficient than\
    \ yours. I believe that my solution is more efficient than yours. I believe that\
    \ my solution is ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x\
    \ = x/base\n  end\n  x = x.to_i\n  while x < base\n    x = x*base\n  end\n  x.to_s\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s(base)\nend", "  if base == 0\n    x.to_s\n\
    \  else\n    x.to_s.reverse.chars.reverse.inject(\"\") do |s, c|\n      s << case\
    \ c\n      when \"0\"\n        \"0\"\n      when \"1\"\n        \"1\"\n      when\
    \ \"2\"\n        \"10\"\n      when \"3\"\n        \"11\"\n      when \"4\"\n\
    \        \"100\"\n      when \"5\"\n        \"101\"\n      when \"6\"\n      \
    \  \"110\"\n      when \"7\"\n        \"111\"\n      when \"8\"\n        \"1000\"\
    \n      when \"9\"\n        \"1001\"\n      when \"a\"\n        \"1010\"\n   \
    \   when \"b\"\n        \"1011\"\n      when \"c\"\n        \"1100\"\n      when\
    \ \"d\"\n        \"1101\"\n      when \"e\"\n        \"1110\"\n      when \"f\"\
    \n        \"1111\"\n      end\n    end.reverse\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse.chars.reverse.each_with_index.inject(\"\") do |s, (n,\
    \ i)|\n    digit = n.to_s.rjust(base, \"0\").to_i\n    digit = digit.abs % base\n\
    \    digit = digit.to_s.rjust(base, \"0\")\n    s << digit\n  end.reverse\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for the answer. I'm a beginner in\
    \ Ruby, so I didn't know about inject and each_with_index. I'll definitely look\
    \ into it.\n<|/ c |>\n<| a |>\n<code>", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  return x.to_s(base) if base < 10 && x.to_s(base).length\
    \ < base\n  x.to_s(base)\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n\
    \  while x > base\n    x /= base\n  end\n  x = x.to_i\n  base = 10\n  while x\
    \ < base\n    x *= base\n    base /= 10\n  end\n  x.to_s\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n    puts \"Base must\
    \ be less than 10.\"\n  elsif base > 36\n    puts \"Base must be less than 36.\"\
    \n  else\n    puts x.to_s(base)\n  end\nend", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\").reverse.inject(\"\") do |s, x|\n    digit = x.to_i(base)\n\
    \    s << digit.to_s(base)\n  end\n  x.reverse\nend", "  x.to_s.reverse.chars.map\
    \ { |c| c.to_i(base) }.join\nend", "  if base < 10\n    puts \"Base must be less\
    \ than 10.\"\n  elsif base > 10\n    puts \"Base must be less than 10.\"\n  else\n\
    \    puts x.to_s(base)\n  end\nend", "  x.to_s(base)\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  while x > base\n    x = x / base\n  end\n  x = x * base\n  x\
    \ = x.to_i\n  return x.to_s(base)\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_i\n  while\
    \ x < base\n    x *= base\n  end\n  x.to_s\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  result = ''\n  while x > 0\n    digit = x % base\n    digit\
    \ = digit.to_s(base)\n    x = x / base\n    result = digit + result\n  end\n \
    \ result\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  \n  if x.to_s.length < base.to_s.length\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  if x < base\n    x.to_s.reverse!\n    x.to_i(base).to_s\n  else\n\
    \    x.to_s\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n\
    \    x.to_s\n  else\n    x.to_s.reverse.gsub(/../) { |s| s.to_i(base) }.reverse\n\
    \  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nI like this solution,\
    \ although I feel like it would be more efficient to just do `x.to_s.reverse.gsub(/../)\
    \ { |s| s.to_i(base) }.reverse` instead of `x.to_s.reverse.gsub(/../) { |s| s.to_i(base).to_s\
    \ }.reverse`.\n<|/ c |>\n<| c |>\nI agree, that would be more efficient. I was\
    \ just trying to keep it simple and avoid the extra method call.\n<|/ c |>\n<|\
    \ c |>\nI added a benchmark test to my answer. Your solution is about twice as\
    \ fast as mine.\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\nHere's a solution\
    \ using String#gsub with a block:\n<code>", "  if base < 10\n    puts \"Base must\
    \ be less than 10.\"\n  elsif base > 36\n    puts \"Base must be less than 36.\"\
    \n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend", "  if x < base\n   \
    \ x.to_s(base)\n  else\n    x.to_s(base).reverse\n  end\nend", "  x.to_s.reverse.chars.map.with_index\
    \ do |digit, index|\n    digit.to_s(base).rjust(base, '0')\n  end.join\nend",
  "  if x < base\n    x.to_s.reverse!\n    x.to_i(base)\n    x.to_s.reverse!\n  end\n\
    \  x\nend", "  if base < 10\n    puts x\n  else\n    puts x.to_s(base)\n  end\n\
    end", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0 do\n   \
    \ digit = x % base\n    digit = digit == 0 ? 0 : digit\n    result << digit\n\
    \    x /= base\n  end\n  return result\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  while x > base\n    x = x/base\n  end\n  x = x.to_i\n  while x < base\n   \
    \ x = x*base\n  end\n  x.to_s\nend", "  x.to_s.reverse.chars.map.with_index {\
    \ |c, i| base**i }.join\nend", "  x = x.to_i\n  base = base.to_i\n  \n  if x <\
    \ base\n    x.to_i\n  elsif x > base\n    x.to_i\n  else\n    x.to_i\n  end\n\
    end", "  x.to_s.reverse.chars.reverse.inject(\"\") do |s, digit|\n    digit =\
    \ digit.to_i(base)\n    s << digit.to_s(base)\n  end\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  return x.to_s(base) if base < 10 && base > 0 && (x != 0 && x\
    \ != 1) else x.to_s(10)\nend", "  if base < 10\n    x.to_s(base)\n  else\n   \
    \ x.to_s(base).reverse\n  end\nend", "  if x < 10\n    x.to_s.reverse!\n    x.to_i(base)\n\
    \    x.to_s.reverse!\n  end\n  x\nend", "  x = x.to_s\n  base = base.to_i\n  while\
    \ x > 0\n    digit = x % base\n    x = x / base\n    puts digit.to_s\n  end\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2\n\
    \    puts \"Base must be greater than 2\"\n  elsif base > 10\n    puts \"Base\
    \ must be less than 10\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| a dscore=1 |>\n<code>", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s(base)\nend", "  if x < 10\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(base.length,\
    \ \"0\")\n  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, c|\n    if c >= base\n      s << c\n    else\n      s << 0\n    end\n\
    \  end\n  x.reverse\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub(/(?<=[a-z])(?=[0-9])/)\
    \ { |m| m.to_i * base }.reverse\n  end\nend", "  if base < 10\n    puts \"Base\
    \ must be less than 10.\"\n  elsif base > 10\n    puts \"Base must be less than\
    \ 10.\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend\n</code>\n<|/ a\
    \ tags=ruby,ruby-on-rails |>\n<| a dscore=0 |>\n<code>", "  x = x.to_s\n  base\
    \ = base.to_s\n  raise ArgumentError, \"base must be less than 10\" if base >\
    \ 10\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base > x.size\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base < 0\n  raise ArgumentError, \"base must\
    \ be less than 10\" if base > x.size\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\"\
    \ if base > x.size\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ < 0\n  raise ArgumentError, \"base must be less than 10\" if base > x.size\n\
    \  raise ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n    puts \"Base must\
    \ be less than 10.\"\n  elsif base > 36\n    puts \"Base must be less than 36.\"\
    \n  else\n    puts \"#{x.to_s(base)}\"\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    x.to_s(base)\n  else\n    x.to_s(base).reverse\n  end\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_i\n  while\
    \ x < base\n    x *= base\n  end\n  x.to_s\nend", "  if base < 10\n    x.to_s(base)\n\
    \  else\n    x.to_s(10).gsub(\"0\", base.to_s).to_i\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x = x / base\n\
    \  end\n  x = x * base\n  x = x.to_i\n  return x.to_s(base)\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  \n  while x > base\n\
    \    x = x / base\n  end\n  \n  x = x.to_i\n  \n  while x < base\n    x = x *\
    \ base\n  end\n  \n  x.to_s\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\
    \")\n  base = base.split(\"\")\n  i = 0\n  while i < x.length\n    x[i] = x[i].to_i(base)\n\
    \    i += 1\n  end\n  x = x.join(\"\")\n  i = 0\n  while i < x.length\n    x[i]\
    \ = x[i].to_s(base)\n    i += 1\n  end\n  x\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  return x.to_s(base) if base < 10 && x.to_s(base).length < base.length\n  x.to_s(base)\n\
    end", "  if base < 10\n    puts \"Base must be less than 10.\"\n  elsif base >\
    \ 10\n    puts \"Base must be less than 10.\"\n  else\n    puts x.to_s(base)\n\
    \  end\nend", "  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.map\
    \ do |c, i|\n      ((base**i) * c).to_s\n    end.join\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n\
    \    x.to_s.reverse.chars.reverse.each_cons(base).map(&:join).join\n  end\nend",
  "  x = x.to_s\n  base = base.to_s\n  while x.to_s.length < base.length\n    x =\
    \ \"0\" + x\n  end\n  x = x.to_i(base)\n  x.to_s(base)\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  if base < 2 || base\
    \ > 36\n    raise ArgumentError, \"Invalid base: #{base}\"\n  end\n  result =\
    \ ''\n  while x > 0\n    digit = x % base\n    result << digit.to_s\n    x /=\
    \ base\n  end\n  result\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\
    \")\n  base = base.split(\"\")\n  i = 0\n  while i < x.length\n    digit = x[i]\n\
    \    digit = digit.to_i\n    digit = digit + base[i].to_i\n    digit = digit.to_s\n\
    \    x[i] = digit\n    i += 1\n  return x.join(\"\")\nend", "  if base < 10\n\
    \    puts \"Base must be greater than 10.\"\n  elsif base > 10\n    puts \"Base\
    \ must be less than 10.\"\n  else\n    puts x.to_s.reverse.gsub(/../) { |s| s.to_i(base)\
    \ }.reverse\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2\n    puts \"Base must\
    \ be greater than or equal to 2\"\n  elsif base > 10\n    puts \"Base must be\
    \ less than or equal to 10\"\n  else\n    puts \"#{x.to_s(base)}\"\n  end\nend",
  "  if base < 2\n    puts \"Base must be greater than or equal to 2\"\n  elsif base\
    \ > 10\n    puts \"Base must be less than or equal to 10\"\n  else\n    puts \"\
    #{x.to_s(base)}\".to_i\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  while\
    \ x > base\n    x /= base\n  end\n  x = x.to_i\n  while x < base\n    x *= base\n\
    \  end\n  x.to_s\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while\
    \ x > 0\n    digit = x % base\n    digit = digit.to_s.rjust(base, '0')\n    result\
    \ = digit + result\n    x = x / base\n  end\n  result\nend", "  if base < 2\n\
    \    puts \"Base must be greater than 2\"\n  elsif base > 10\n    puts \"Base\
    \ must be less than 10\"\n  else\n    puts x.to_s(base)\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x >= base\n    x = x/base\n \
    \ end\n  x = x.to_s\n  while x < base\n    x = \"0\" + x\n  end\n  x\nend", " \
    \ if base < 2 || base > 36\n    raise ArgumentError, \"Invalid base: #{base}\"\
    \n  end\n  x = x.to_s\n  digits = x.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits = digits.map { |d| d.to_i(base) }\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  if base < 2 || base > 36\n    raise ArgumentError, \"Invalid base:\
    \ #{base}\"\n  end\n  digits = x.to_s.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.chars.map { |c| c.to_i(base) }\n  digits.reverse!\n  digits.join\n\
    end", "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base < 10 &&\
    \ x.to_s(base).length < base.length\n  x.to_s(base)\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  if base < 2 || base > 36\n    raise ArgumentError, \"Invalid\
    \ base: #{base}\"\n  elsif base == 10\n    x.to_s\n  else\n    digits = x.to_s.reverse\n\
    \    digits = digits.reverse.gsub(/\\d/) { |d| d.to_s(base) }\n    digits.reverse\n\
    \  end\nend", "  x = x.to_s\n  base = base.to_i\n  \n  if base < 2 || base > 36\n\
    \    raise ArgumentError, \"invalid base\"\n  end\n  \n  x = x.to_i\n  \n  if\
    \ x > 0\n    digits = x.to_s(base).reverse\n  else\n    digits = x.to_s(base).reverse.chars.reverse\n\
    \  end\n  \n  digits = digits.reverse\n  \n  if digits == \"\"\n    digits = \"\
    0\"\n  end\n  \n  digits = digits.chars.reverse\n  \n  if digits == \"\"\n   \
    \ digits = \"0\"\n  end\n  \n  digits = digits.reverse\n  \n  if digits == \"\"\
    \n    digits = \"0\"\n  end\n  \n  digits = digits.to_s(base)\n  \n  if digits\
    \ == \"\"\n    digits = \"0\"\n  end\n  \n  return digits\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n\
    \  return x.to_s(base) if base < 10 && x.to_s(base).length < base.length\n  x.to_s(base)\n\
    end", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, c|\n    if c == base\n      s << c\n    else\n      s << c.to_s(base)\n\
    \    end\n  end\n  x.reverse\nend", "  if base < 2\n    puts \"Base must be greater\
    \ than or equal to 2\"\n  elsif base > 10\n    puts \"Base must be less than or\
    \ equal to 10\"\n  else\n    puts x.to_s(base)\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n\
    \    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.inject(\"\") do\
    \ |s, (c, i)|\n      s += (c / base**i).to_s.reverse\n    end\n  end\nend\n</code>\n\
    <|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThanks for your answer. Your code works\
    \ fine for base 10. But, when I try to use it for base 2, it gives me an error.\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a solution for base 2.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>", "  x = x.to_s\n  base = base.to_s\n  \n  if base\
    \ == \"10\"\n    x.to_i\n  else\n    x.to_s.split(//).map { |i| i.to_i(base) }.join\n\
    \  end\nend", "  if base < 10\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2\n\
    \    puts \"Base must be greater than 2\"\n  elsif base > 10\n    puts \"Base\
    \ must be less than 10\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `change_base.call(-8, 2)` returns `-32` instead of `-1000`.\n<|/ c\
    \ |>\n<| c |>\nI added a solution that works for negative numbers. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| a |>\n<code>", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  \n  while x >= base\n    x /= base\n  end\n  \n  x = x.to_i\n\
    \  \n  while x < base\n    x *= base\n  end\n  \n  x.to_s\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub(/(?<=[0-9])(?=[a-z])/)\
    \ { |s| s.to_i * base }.reverse\n  end\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  while x > base\n    x = x / base\n  end\n  x = x.to_s\n  while x.length <=\
    \ base\n    x = \"0\" + x\n  end\n  x\nend", "  if x < base\n    x.to_s(base)\n\
    \  else\n    x.to_s(base).rjust(base.length)\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n\
    \    x = x / base\n  end\n  x = x.to_i\n  while x < base\n    x = x * base\n \
    \ end\n  x.to_s\nend", "  if base < 2 || base > 36\n    raise ArgumentError, \"\
    Invalid base: #{base}\"\n  end\n  x = x.to_i\n  base = base.to_i\n  while x >\
    \ base\n    x /= base\n  end\n  x = x.to_i\n  base = 10\n  while x < base\n  \
    \  x *= base\n    base /= 10\n  end\n  x.to_s\nend", "  if base < 10\n    digits\
    \ = x.to_s.split(//)\n    digits.reverse!\n    digits = digits.map { |d| d.to_i(base)\
    \ }\n    digits.reverse!\n    digits.join\n  else\n    x.to_s.reverse!\n    x.to_i(base).to_s\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  \n  while x > base\n\
    \    x = x / base\n  end\n  \n  x = x.to_i\n  \n  while x < base\n    x = x *\
    \ base\n  end\n  \n  x.to_s\nend", "  x = x.to_i\n  base = base.to_i\n  digits\
    \ = x.to_s.length\n  digits = base < 10 ? digits : digits - 1\n  digits = digits\
    \ * base\n  x.to_s = x.to_s.chars.reverse.join + x.to_s[digits...]\n  x.to_i\n\
    end\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<| a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<code>", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit >= base\n    s << digit.to_s(base)\n\
    \  end\n  x.reverse\nend", "  if x < 10\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(base.length,\
    \ \"0\")\n  end\nend", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base\
    \ = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n\
    \  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base =\
    \ base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n\
    \  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base =\
    \ base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n\
    \  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base =\
    \ base.to_s\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_s\n  base = ", "  x = x.to_s\n  base = base.to_s\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse.chars.map.with_index do |c, i|\n    if c >= base\n   \
    \   x.to_s.reverse.chars.map.with_index { |c2, i2| c2 if i2 != i }.join\n    else\n\
    \      c\n    end\n  end.join + x.to_s.reverse.chars.map.with_index { |c, i| c\
    \ if i != x.to_s.reverse.chars.size - 1 }.join\nend", "  if base < 10\n    puts\
    \ \"Base must be less than 10.\"\n  elsif base > 10\n    puts \"Base must be less\
    \ than 10.\"\n  else\n    puts \"#{x.to_s(base)}\"\n  end\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\") do |s, x|\n    s\
    \ += (x.to_s.to_i(base)).to_s\n  end\n  x.reverse\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  case base\n  when \"0\"\n    return x.reverse\n  when \"1\"\n\
    \    return x.reverse.to_i(10)\n  when \"2\"\n    return x.reverse.to_i(10)*10\n\
    \  when \"3\"\n    return x.reverse.to_i(10)*100\n  when \"4\"\n    return x.reverse.to_i(10)*1000\n\
    \  when \"5\"\n    return x.reverse.to_i(10)*10000\n  when \"6\"\n    return x.reverse.to_i(10)*100000\n\
    \  when \"7\"\n    return x.reverse.to_i(10)*1000000\n  when \"8\"\n    return\
    \ x.reverse.to_i(10)*10000000\n  when \"9\"\n    return x.reverse.to_i(10)*100000000\n\
    \  else\n    raise ArgumentError, \"Invalid base: #{base}\"\n  end\nend", "  if\
    \ base < 10\n    puts \"Base must be less than 10.\"\n  elsif base > 36\n    puts\
    \ \"Base must be less than 36.\"\n  else\n    puts x.to_s.reverse.gsub(/../) {\
    \ |s| s.to_i(base) }.reverse\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nI like your solution, however it fails for bases greater than 36.\
    \ For example, `change_base.call(8, 36)` returns `Base must be less than 36.`.\n\
    <|/ c |>\n<| c |>\nI added a solution that works for bases greater than 36. Thanks\
    \ for the suggestion.\n<|/ c |>\n<| c |>\nI like the way you solved it but I'm\
    \ wondering if there is a way to do it without using gsub. I'm still new to ruby\
    \ so I'm just wondering if there is a way to do it without using gsub. Thanks\
    \ again for the help.\n<|/ c |>\n<| c |>\nI added a solution without gsub. Thanks\
    \ for the suggestion.\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", " \
    \ if base < 10\n    digits = x.to_s.split(//).map { |d| d.to_i(base) }\n    digits.join\n\
    \  else\n    x.to_s.split(//).map { |d| d.to_i(base) }.join\n  end\nend\n</code>\n\
    <|/ a tags=ruby,ruby-on-rails |>\n<| a dscore=0 |>\n<code>", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.map\
    \ { |c| c.to_i(base) }.join\n  end\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't work for negative numbers. Try `change_base.call(-8, 2)`.\n<|/ c\
    \ |>\n<| c |>\nI added a solution that works for negative numbers. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  x = x.to_s\n  base\
    \ = base.to_i\n  result = ''\n  while x != 0\n    digit = x % base\n    result\
    \ += (digit.to_s).rjust(base, '0')\n    x = x / base\n  end\n  result\nend", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_i\n\
    \  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  if base < 2\n    puts \"Base must be greater than 2\"\
    \n  elsif base > 10\n    puts \"Base must be less than 10\"\n  else\n    puts\
    \ x.to_s(base)\n  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\
    \").reverse.inject(\"\") do |s, digit|\n    digit = digit.to_i(base)\n    s <<\
    \ digit.to_s(base)\n  end\n  x.reverse\nend", "  x.to_s.reverse.chars.each_with_index.inject(\"\
    \") do |s, (n, i)|\n    digit = n.to_s.rjust(base, \"0\")\n    digit = digit.ljust(base,\
    \ \"0\")\n    s << digit\n  end.reverse\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2\n\
    \    puts \"Base must be greater than or equal to 2\"\n  elsif base > 10\n   \
    \ puts \"Base must be less than or equal to 10\"\n  else\n    puts x.to_s(base)\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if x < 10\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(len(x.to_s(base)),\
    \ \"0\")\n  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    digit = digit.to_i(base)\n    s << digit.to_s(base)\n \
    \ end\n  x.reverse!\n  x.join(\"\")\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.map\
    \ do |digit, index|\n      digit = digit.to_i\n      digit = digit * base % base\n\
    \      digit = digit.to_i\n      digit\n    end.join\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

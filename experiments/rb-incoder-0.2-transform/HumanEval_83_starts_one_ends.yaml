name: HumanEval_83_starts_one_ends
language: rb
prompt: "# Given a positive integer n, return the count of the numbers of n-digit\n\
  # positive integers that start or end with 1.\ndef starts_one_ends(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_starts_one_ends\n\
  \    candidate = method(:starts_one_ends)\n    assert_equal(1, candidate.call(1))\n\
  \    assert_equal(18, candidate.call(2))\n    assert_equal(180, candidate.call(3))\n\
  \    assert_equal(1800, candidate.call(4))\n    assert_equal(18000, candidate.call(5))\n\
  \  end\nend\n"
completions: ["  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    if n % 10 == 1\n      count\
    \ += 1\n    end\n  end\n  count\nend", "  count = 0\n  while n > 0\n    n -= 1\n\
    \    count += 1\n    n /= 10\n  end\n  count\nend", "  count = 0\n  while n >\
    \ 0\n    n -= 1\n    count += 1 if n % 10 == 1 && n != 1 else 0\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    count += 1\n    n -= 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    if n % 10 == 1\n      count\
    \ += 1\n    end\n  end\n  count\nend", "  count = 0\n  while n > 0\n    count\
    \ += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while n > 0\n    n -=\
    \ 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while n > 1\n    count\
    \ += n % 10 == 0\n    n /= 10\n  end\n  count\nend", "  count = 0\n  while n >\
    \ 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while n\
    \ > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    count += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    count += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    count += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    count += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    count += 1\n    n -= 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count = 0\n  while\
    \ n > 1\n    count += 1 if n % 10 == 1\n    n /= 10\n  end\n  count\nend", " \
    \ count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend",
  "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", " \
    \ count = 0\n  while n > 0\n    n -= 1\n    count += 1 if n % 10 == 1 && n !=\
    \ 0\n    count += 1 if n % 10 == 0 && n != 0\n  end\n  count\nend", "  count =\
    \ 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\nend", "  count\
    \ = 0\n  while n > 0\n    n -= 1\n    count += 1\n    n /= 10\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n    n /= 10\n \
    \ end\n  count\nend", "  count = 0\n  while n > 0\n    n -= 1\n    if n % 10 ==\
    \ 1\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  while n\
    \ > 0\n    n -= 1\n    if n % 10 == 1\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end", "  count = 0\n  while n > 0\n    n -= 1\n    count += 1\n  end\n  count\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_76_is_simple_power
language: rb
prompt: "# Your task is to write a function that returns true if a number x is a simple\n\
  # power of n and false in other cases.\n# x is a simple power of n if n**int=x\n\
  # For example:\n# >>> is_simple_power.call(1, 4)\n# true\n# >>> is_simple_power.call(2,\
  \ 2)\n# true\n# >>> is_simple_power.call(8, 2)\n# true\n# >>> is_simple_power.call(3,\
  \ 2)\n# false\n# >>> is_simple_power.call(3, 1)\n# false\n# >>> is_simple_power.call(5,\
  \ 3)\n# false\ndef is_simple_power(x, n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_simple_power\n\
  \    candidate = method(:is_simple_power)\n    assert_equal(true, candidate.call(16,\
  \ 2))\n    assert_equal(false, candidate.call(143214, 16))\n    assert_equal(true,\
  \ candidate.call(4, 2))\n    assert_equal(true, candidate.call(9, 3))\n    assert_equal(true,\
  \ candidate.call(16, 4))\n    assert_equal(false, candidate.call(24, 2))\n    assert_equal(false,\
  \ candidate.call(128, 4))\n    assert_equal(false, candidate.call(12, 6))\n    assert_equal(true,\
  \ candidate.call(1, 1))\n    assert_equal(true, candidate.call(1, 12))\n  end\n\
  end\n"
completions: ["  if n**int(x)==x\n    return true\n  else\n    return false\n  end\n\
    end", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n  return x == n**x\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n**int(x) = x\n\
    \  else\n    return false\n  end\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  return false if n == 0\n  x = x.to_i\n  n = n.to_i\n  return true if\
    \ n == 1\n  return true if n == x\n  return true if n % x == 0\n  return false\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if\
    \ n**int(x) = x\n  else\n    return false\n  end\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n==0\n    return true\n\
    \  else\n    return false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n**int(x) = x\n\
    \  else\n    return false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if x == 1\n    return\
    \ true\n  else\n    return false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  if n==0\n    return true\n  else\n    return false\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n  return n == x if\
    \ n != 0 && (n % x == 0) else false\nend", "  power = 1\n  while x > power\n \
    \   power = power * n\n  end\n  return x == power\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  if n**int(x)==x\n    true\n  else\n    false\n  end\n\
    end", "  if n**int(x) = x\n  else\n    return false\n  end\nend", "  x = x.to_i\n\
    \  n = n.to_i\n  return n == x if x.zero? or n.zero? or n == 1 end\n  \n  # Your\
    \ code here\n  \nend", "  if x == 1\n    return true\n  else\n    return false\n\
    end", "  return x == n**int(x)\nend", "  x == n**int(x)\nend", "  return true\
    \ if n**int=x\n  false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  return false if x == 0\n  x = x.to_i\n  n = n.to_i\n\
    \  return true if n == 0\n  return true if n == 1\n  return true if x == 1\n \
    \ return true if x % n == 0\n  return true if x % n == 1\n  return true if x %\
    \ n == -1\n  return true if x % n == -2\n  return true if x % n == -3\n  return\
    \ true if x % n == -4\n  return true if x % n == -5\n  return true if x % n ==\
    \ -6\n  return true if x % n == -7\n  return true if x % n == -8\n  return true\
    \ if x % n == -9\n  return true if x % n == -10\n  return true if x % n == -11\n\
    \  return true if x % n == -12\n  return true if x % n == -13\n  return true if\
    \ x % n == -14\n  return true if x % n == -15\n  return true if x % n == -16\n\
    \  return true if x % n == -17\n  return true if x % n == -18\n  return true if\
    \ x % n == -19\n  return true if x % n == -20\n  return true if x % n == -21\n\
    \  return true if x % n == -22\n  return true if x % n == -23\n  return true if\
    \ x % n == -24\n  return true if x % n == -25\n  return true if x % n == -26\n\
    \  return true if x % n == -27\n  return true if x % n == -28\n  return true if\
    \ x % n == -29\n  return true if x % n == -30\n  return true if x % n == -31\n\
    \  return true if x % n == -32\n  return true if x % n == -33\n  return true if\
    \ x % n == -34\n  return true if x % n == -35\n  return true if x % n == -36\n\
    \  return true if x % n == -37\n  return true if x % n == -38\n  return true if\
    \ x % n == -39\n  return true if x % n == -40\n  return true if x % n == -41\n\
    \  return true if x % n == -42\n  return true if x % n == -43\n  return true if\
    \ x % n == -44\n  return true if x % n == -45\n  return true if x % n == -46\n\
    \  return true if x % n == -47\n  return true if x % n == -48\n  return true if\
    \ x % n == -49\n  return true if x % n == -50\n  return true if x % n == -51\n\
    \  return true if x % n == -52\n  return true if x % n == -53\n  return true if\
    \ x % n == -54\n  return true if x % n == -55\n  return true if x % n == -56\n\
    \  return true if x % n == -57\n  return true if x % n == -58\n  return true if\
    \ x % n == -59\n  return true if x % n == -60\n  return true if x % n == -61",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x\
    \ == n**int(x)\nend", "  return false if n == 0\n  x = x.to_i\n  n = n.to_i\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i\n  n = n.to_i\n  return true if n == 0\n\
    \  return true if n == 1\n  x = x.to_i", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n\
    \  return n == x if n != 0 && (n % x == 0) else false\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  return x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  if n**int(x) = x\n  else\n    return false\n  end\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  return false if n == 0 # x is a simple power\
    \ of 0 if n=0\n  return true if n == 1 # x is a simple power of 1 if n=1\n  return\
    \ true if n == x # x is a simple power of n if n**int=x\n  return false if n %\
    \ x == 0 # x is not a simple power of n if n is not a power of x\n  return true\
    \ if n % x == 1 # x is a simple power of n if n is a power of x and n is not a\
    \ power of x\nend", "  x == n**int(x)\nend", "  if n==0 then return true\n  if\
    \ n>0 then return is_simple_power(x, n-1)\n  if x==1 then return true\n  if x>1\
    \ then return false\nend", "  power = 1\n  while x > power\n    power = power\
    \ * n\n  end\n  x == power\nend", "  x == n**int(x)\nend", "  if n**int(x) = x\n\
    \  else\n    return false\n  end\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  if n==0 then return true\n  if n==1 then return\
    \ x==1\n  if x==1 then return false\n  if x==0 then return false\n  if x==-1 then\
    \ return false\n  if x<0 then return false\n  if x>n then return false\n  if x==n\
    \ then return true\n  if x<n then return false\n  if x>n then return false\n \
    \ if x==n then return true\n  if x<n then return false\n  if x>n then return false\n\
    \  if x==n then return true\n  if x<n then return false\n  if x>n then return\
    \ false\n  if x==n then return true\n  if x<n then return false\n  if x>n then\
    \ return false\n  if x==n then return true\n  if x<n then return false\n  if x>n\
    \ then return false\n  if x==n then return true\n  if x<n then return false\n\
    \  if x>n then return false\n  if x==n then return true\n  if x<n then return\
    \ false\n  if x>n then return false\n  if x==n then return true\n  if x<n then\
    \ return false\n  if x>n then return false\n  if x==n then return true\n  if x<n\
    \ then return false\n  if x>n then return false\n  if x==n then return true\n\
    \  if x<n then return false\n  if x>n then return false\n  if x==n then return\
    \ true\n  if x<n then return false\n  if x>n then return false\n  if x==n then\
    \ return true\n  if x<n then return false\n  if x>n then return false\n  if x==n\
    \ then return true\n  if x<n then return false\n  if x>n then return false\n \
    \ if x==n then return true\n  if x<n then return false\n  if x>n then return false\n\
    \  if x==n then return true\n  if x<n then return false\n  if x>n then return\
    \ false\n  if x==n then return true\n  if x<n then return false\n  if x>n then\
    \ return false\n  if x==n then return true\n  if x<n then return false\n  if x>n\
    \ then return false\n  if x==n then return true\n  if x<n then return false\n\
    \  if x>n then return false\n  if x==n then return true\n  if x<n then return\
    \ false\n  if x>n then return ", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  return x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  if n==0\n    return true\n  else\n    return\
    \ false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n==0\n\
    \    return true\n  else\n    return false\nend", "  x == n**int(x)\nend", " \
    \ if n**int(x) = x\n  else\n    return false\n  end\nend", "  x == n**int(x)\n\
    end", "  if n == 0 then return true\n  if n == 1 then return x == 1\n  if n %\
    \ 2 == 0 then return is_simple_power(x, n / 2)\n  return is_simple_power(x, (n\
    \ - 1) / 2)\nend", "  if n**int(x)==x\n    true\n  else\n    false\n  end\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n\
    \  return n == x if n.even? and x.even? else n == x ** 2\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  if n**int(x)==x\n  else\n    false\n  end\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  return false if n < 0 or n\
    \ % x != 0\n  true\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", " \
    \ x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n == 1\n    return true\n\
    \  else\n    return false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x = x.to_i\n  n = n.to_i\n  return n == x if n.zero? else n == x * n\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  return true if n**int=x\n\
    \  false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  if n == 0\n    return true\n  else\n    return\
    \ false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  if n**int(x)==x\n    true\n  else\n    false\n  end\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n\
    \  return n == x || n == x*x\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x\
    \ = x.to_i\n  n = n.to_i\n  return n == x if x.is_a?(Integer) else\n    (x**n).to_i\
    \ == x\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  return false if n == 0 # x is a simple power of 0 \n  return true if\
    \ n == 1 # x is a simple power of 1\n  return true if n == x # x is a simple power\
    \ of x\n  return true if n % x == 0 # x is a simple power of n if n**int=x\n \
    \ return false # x is not a simple power of n\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if n**int(x)==x\n    true\n\
    \  else\n    false\n  end\nend", "  return false if n == 0 # n is 0\n  return\
    \ true if n == x # n is x\n  return true if n % x == 0 # n is a power of x\n \
    \ return false # n is not a power of x\nend", "  x == n**int(x)\nend", "  x ==\
    \ n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x = x.to_i\n  n = n.to_i\n  return n == x if\
    \ n != 0 && (x % n == 0) else false\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  power = 1\n  while n > power\n    power = power * n\n  end\n  x == power\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  if n == 0 then return true\n  if x == 1 then return true\n  if x == n then return\
    \ true\n  if x % n == 0 then return true\n  return false\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x\
    \ == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  if\
    \ x == 1\n    true\n  elsif x == n\n    true\n  else\n    false\n  end\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x\
    \ == n**int(x)\nend", "  if n**int(x) = x\n  else\n    return false\n  end\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x\
    \ == n**int(x)\nend", "  power = 1\n  while x > power\n    power = power * n\n\
    \  end\n  return x == power\nend", "  x == n**int(x)\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  if n**int(x)==x\n    return true\n  else\n    return false\nend", "  x == n**int(x)\n\
    end", "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend",
  "  x == n**int(x)\nend", "  x == n**int(x)\nend", "  x == n**int(x)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

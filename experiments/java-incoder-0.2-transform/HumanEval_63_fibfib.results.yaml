language: java
name: HumanEval_63_fibfib
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib0 = 0l;\n        long fibfib1 = 1l;\n\
    \        long fibfib2 = 1l;\n        long fibfib3 = 1l;\n        for (long i =\
    \ 2l; i <= n; i++) {\n            fibfib3 = fibfib2 + fibfib1;\n            fibfib2\
    \ = fibfib1;\n            fibfib1 = fibfib3;\n            fibfib0 = fibfib0 +\
    \ fibfib3;\n        }\n        return fibfib0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4clhex37.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zk10ux8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n-1) + fibfib(n-2);\n    \
    \    }\n        return fibfib;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhjfu_uq.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkojrsydw.java:95: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpkojrsydw.java:96: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpkojrsydw.java:96: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpkojrsydw.java:96: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpkojrsydw.java:106: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0L;\n   \
    \     if (n == 1) return 1L;\n        if (n == 2) return 1L;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qr3_wvr.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4udeobe.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkojrsydw.java:95: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpkojrsydw.java:96: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpkojrsydw.java:96: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpkojrsydw.java:96: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpkojrsydw.java:106: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4udeobe.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zk10ux8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcme01lf.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 2l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkojrsydw.java:95: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpkojrsydw.java:96: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpkojrsydw.java:96: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpkojrsydw.java:96: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmpkojrsydw.java:96:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpkojrsydw.java:106: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecg9hq0e.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\tat Problem.fibfib(tmpe3rpsqaf.java:25)\n\
    \tat Problem.fibfib(tmpe3rpsqaf.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccyo9cmn.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1) return 0;\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3cky_00.java:26)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 0;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

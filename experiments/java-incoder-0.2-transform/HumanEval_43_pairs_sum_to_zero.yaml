name: HumanEval_43_pairs_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
  \    // it returns True if there are two distinct elements in the list that\n  \
  \  // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n  \
  \  // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
  \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
  \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) == (false));\n\
  \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
  \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
  \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
  \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
  \ (long)31l)))) == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for (Long i : l) {\n            sum\
    \ += i;\n        }\n        long zero = 0;\n        for (Long i : l) {\n     \
    \       zero += i;\n        }\n        return sum == zero;", "        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        if (sum2\
    \ == 0) {\n            return false;\n        }\n        long sum3 = 0;\n    \
    \    for (Long i : l) {\n            sum3 += i;\n        }\n        if (sum3 ==\
    \ 0) {\n            return true;\n        }\n        return false;", "       \
    \ long sum = 0;\n        for(long i : l) {\n            sum += i;\n        }\n\
    \        boolean result = false;\n        for(long i : l) {\n            result\
    \ += (i == 0);\n        }\n        return result;", "        long sum = 0;\n \
    \       for (Long i : l) {\n            sum += i;\n        }\n        if (sum\
    \ == 0) {\n            return false;\n        }\n        long count = 0;\n   \
    \     for (Long i : l) {\n            if (i == 0) {\n                continue;\n\
    \            }\n            count += i;\n            if (sum == count) {\n   \
    \             return true;\n            }\n        }\n        return false;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        if (sum == 0) {\n            return false;\n        }\n      \
    \  long lastSum = sum;\n        for (Long i : l) {\n            sum += i;\n  \
    \          if (sum != lastSum) {\n                return false;\n            }\n\
    \        }\n        return true;", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l) {\n            if (set.contains(i - l.get(0))) {\n \
    \               return true;\n            }\n            set.add(i - l.get(0));\n\
    \        }\n        return false;", "        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        if (sum == 0) {\n      \
    \      return false;\n        }\n        long count = 0;\n        for (Long i\
    \ : l) {\n            if (i == 0) {\n                count++;\n            }\n\
    \        }\n        return count == 2;", "        long sum = 0;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        long count = 0;\n      \
    \  for(Long i : l) {\n            count += i;\n            if(sum == 0) {\n  \
    \              return false;\n            }\n        }\n        return count ==\
    \ 0;", "        long sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum == 0) {\n            return false;\n        }\n\
    \        long count = 0;\n        for (Long i : l) {\n            if (sum - i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;", "        long sum = 0;\n        for(long i : l) {\n          \
    \  sum += i;\n        }\n        return l.stream().distinct().count() == 1 &&\
    \ l.stream().distinct().filter(i -> i == sum).count() == 1;", "        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long twoSum =\
    \ 0;\n        for (long i : l) {\n            twoSum += i;\n            if (twoSum\
    \ == sum) {\n                return true;\n            }\n        }\n        return\
    \ false;", "        long sum = 0;\n        for (long i : l) {\n            sum\
    \ += i;\n        }\n        if (sum == 0) {\n            return false;\n     \
    \   }\n        long sum2 = 0;\n        for (long i : l) {\n            sum2 +=\
    \ i;\n        }\n        if (sum2 == 0) {\n            return false;\n       \
    \ }\n        long sum3 = 0;\n        for (long i : l) {\n            sum3 += i;\n\
    \        }\n        if (sum3 == 0) {\n            return false;\n        }\n \
    \       long sum4 = 0;\n        for (long i : l) {\n            sum4 += i;\n \
    \       }\n        if (sum4 == 0) {\n            return false;\n        }\n  \
    \      long sum5 = 0;\n        for (long i : l) {\n            sum5 += i;\n  \
    \      }\n        if (sum5 == 0) {\n            return false;\n        }\n   \
    \     return true;", "        long sum = 0;\n        for (Long i : l) {\n    \
    \        sum += i;\n        }\n        long count = 0;\n        for (Long i :\
    \ l) {\n            count += i;\n            if (sum == 0) {\n               \
    \ return false;\n            }\n        }\n        if (count == l.size()) {\n\
    \            return true;\n        }\n        return false;", "        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        long\
    \ count = 0;\n        for(long i : l) {\n            count += i;\n           \
    \ if(sum == 0) {\n                return false;\n            }\n        }\n  \
    \      return true;", "        long sum = 0;\n        for (Long i : l) {\n   \
    \         sum += i;\n        }\n        if (sum == 0) {\n            return false;\n\
    \        }\n        long sum2 = 0;\n        for (Long i : l) {\n            sum2\
    \ += i;\n        }\n        return sum == sum2;", "        long sum = 0;\n   \
    \     for (long i : l) {\n            sum += i;\n        }\n        long zero\
    \ = 0;\n        for (long i : l) {\n            zero += i;\n        }\n      \
    \  return sum == zero;", "        long sum = 0;\n        for (long i : l) {\n\
    \            sum += i;\n        }\n        long count = 0;\n        for (long\
    \ i : l) {\n            if (i == 0) {\n                count++;\n            }\n\
    \        }\n        return count == 2;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            set.add(Math.abs(i));\n        }\n   \
    \     return set.size() == 2;", "        long sum = 0;\n        for (Long i :\
    \ l) {\n            sum += i;\n        }\n        if (sum == 0) {\n          \
    \  return false;\n        }\n        long lastSum = 0;\n        for (Long i :\
    \ l) {\n            lastSum += i;\n            if (lastSum == 0) {\n         \
    \       return true;\n            }\n        }\n        return false;", "    \
    \    long sum = 0;\n        for (long i : l) {\n            sum += i;\n      \
    \  }\n        if (sum == 0) {\n            return true;\n        }\n        return\
    \ false;"]
stop_tokens:
- "\n    }\n"

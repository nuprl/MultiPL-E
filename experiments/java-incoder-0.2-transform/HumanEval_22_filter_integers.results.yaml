language: java
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9adorvey.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else if (o instanceof String) {\n                result.add(Long.parseLong((String)o));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqcy6sw9l.java:31: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjtd4srin.java:31: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).size());\n            } else if (value instanceof List) {\n         \
    \       result.add(((List) value).size());\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3rsscjn.java:24: error: no suitable method found for add(int)\n\
    \                result.add(((Map) value).size());\n                      ^\n\
    \    method Collection.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method List.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method AbstractCollection.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method AbstractList.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method ArrayList.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n/tmp/tmp_3rsscjn.java:26:\
    \ error: no suitable method found for add(int)\n                result.add(((List)\
    \ value).size());\n                      ^\n    method Collection.add(Long) is\
    \ not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method List.add(Long) is not applicable\n      (argument mismatch; int cannot\
    \ be converted to Long)\n    method AbstractCollection.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method AbstractList.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method ArrayList.add(Long) is not applicable\n      (argument mismatch; int\
    \ cannot be converted to Long)\n/tmp/tmp_3rsscjn.java:33: error: cannot find symbol\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7y4yc2ch.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sbq4ab8.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp472d93z0.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye_mh2vz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyigm6ae.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz67yozp3.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndsjuxn6.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''

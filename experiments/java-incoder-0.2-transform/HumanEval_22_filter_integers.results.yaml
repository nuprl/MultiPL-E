language: java
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9adorvey.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else if (o instanceof String) {\n                result.add(Long.parseLong((String)o));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqcy6sw9l.java:31: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjtd4srin.java:31: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).size());\n            } else if (value instanceof List) {\n         \
    \       result.add(((List) value).size());\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3rsscjn.java:24: error: no suitable method found for add(int)\n\
    \                result.add(((Map) value).size());\n                      ^\n\
    \    method Collection.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method List.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method AbstractCollection.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method AbstractList.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method ArrayList.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n/tmp/tmp_3rsscjn.java:26:\
    \ error: no suitable method found for add(int)\n                result.add(((List)\
    \ value).size());\n                      ^\n    method Collection.add(Long) is\
    \ not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method List.add(Long) is not applicable\n      (argument mismatch; int cannot\
    \ be converted to Long)\n    method AbstractCollection.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method AbstractList.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method ArrayList.add(Long) is not applicable\n      (argument mismatch; int\
    \ cannot be converted to Long)\n/tmp/tmp_3rsscjn.java:33: error: cannot find symbol\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7y4yc2ch.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sbq4ab8.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp472d93z0.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye_mh2vz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyigm6ae.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz67yozp3.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndsjuxn6.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add(((Number) value).longValue());\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0z2w4mx.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        });\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8bvuyn2.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        });\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78gte6z3.java:27)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                try {\n  \
    \                  result.add(Long.parseLong((String)value));\n              \
    \  } catch (NumberFormatException nfe) {\n                    result.add(0l);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jypjd2b.java:33)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else {\n        \
    \        result.add(0l);\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2flnualo.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        });\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1auuq21.java:27)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_wq6do6f.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \          ^\n/tmp/tmp_wq6do6f.java:24: error: cannot find symbol\n          \
    \      result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmp_wq6do6f.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List)value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                         ^\n\
    Note: /tmp/tmp_wq6do6f.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4t_k4aw.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(x -> x instanceof\
    \ Long).map(x -> (Long)x).collect(Collectors.toList());\n                    \
    \                                                                   ^\n    equality\
    \ constraints: List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8bd450i.java:31)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpeuavjo1v.java:18)\n\
    \tat Problem.main(tmpeuavjo1v.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry157ibi.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvm9fib1t.java:27)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof String) {\n                try {\n  \
    \                  result.add(Long.parseLong((String)value));\n              \
    \  } catch (NumberFormatException ex) {\n                    result.add(0l);\n\
    \                }\n            }\n        });\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.lambda$filterIntegers$0(tmpuzxdbom1.java:18)\n\
    \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\
    \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\
    \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\
    \tat Problem.filterIntegers(tmpuzxdbom1.java:16)\n\tat Problem.main(tmpuzxdbom1.java:31)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                try {\n                    result.add(Long.parseLong((String)\
    \ value));\n                } catch (NumberFormatException ex) {\n           \
    \         result.add(0l);\n                }\n            } else {\n         \
    \       result.add(0l);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2spks5no.java:35)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7y4yc2ch.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof String)\
    \ {\n                result.add(Long.parseLong((String) value));\n           \
    \ } else if (value instanceof Map) {\n                result.add(((Map) value).keySet().stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3853oi60.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).keySet().stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \                                                                     ^\n    incompatible\
    \ types: Object cannot be converted to String\n/tmp/tmp3853oi60.java:26: error:\
    \ incompatible types: invalid method reference\n                result.add(((List)\
    \ value).stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \                                                             ^\n    incompatible\
    \ types: Object cannot be converted to String\nNote: /tmp/tmp3853oi60.java uses\
    \ unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else {\n                result.add(0l);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"adasd\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.filterIntegers(tmpd00begmv.java:22)\n\tat Problem.main(tmpd00begmv.java:31)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps5o8o9em.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().map(e ->\
    \ ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n                \
    \                                                                            \
    \           ^\n/tmp/tmps5o8o9em.java:26: error: incompatible types: Object cannot\
    \ be converted to Long\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                                            ^\n\
    /tmp/tmps5o8o9em.java:26: error: cannot find symbol\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                       ^\n  symbol:   method\
    \ longValue()\n  location: class Object\nNote: /tmp/tmps5o8o9em.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().mapToLong(Object::longValue).sum());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn2rj_f_.java:26: error: incompatible types: invalid method reference\n\
    \                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \                                                                      ^\n   \
    \ method getValue in interface Entry<K,V> cannot be applied to given types\n \
    \     required: no arguments\n      found:    Object\n      reason: actual and\
    \ formal argument lists differ in length\n  where K,V are type-variables:\n  \
    \  K extends Object declared in interface Entry\n    V extends Object declared\
    \ in interface Entry\n/tmp/tmpwn2rj_f_.java:28: error: invalid method reference\n\
    \                result.add(((List)value).stream().mapToLong(Object::longValue).sum());\n\
    \                                                            ^\n  cannot find\
    \ symbol\n    symbol:   method longValue(T)\n    location: class Object\n  where\
    \ T is a type-variable:\n    T extends Object declared in interface Stream\nNote:\
    \ /tmp/tmpwn2rj_f_.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Number) {\n                result.add(((Number)\
    \ o).longValue());\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz3xvhuv.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9eozqko.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(((Map)value).size());\n                \
    \                            ^\n/tmp/tmpy9eozqko.java:26: error: incompatible\
    \ types: int cannot be converted to Long\n                result.add(((List)value).size());\n\
    \                                             ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                try {\n                    result.add(Long.parseLong((String)value));\n\
    \                } catch (NumberFormatException ex) {\n                    result.add(0l);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xfwjh6s.java:33)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).keySet().stream().mapToLong(Long::parseLong).sum());\n            } else\
    \ if (value instanceof List) {\n                result.add(((List) value).stream().mapToLong(Long::parseLong).sum());\n\
    \            } else {\n                throw new IllegalArgumentException(\"Unexpected\
    \ value \" + value);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6f3xg4uf.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).keySet().stream().mapToLong(Long::parseLong).sum());\n\
    \                                                                     ^\n    incompatible\
    \ types: Object cannot be converted to String\n/tmp/tmp6f3xg4uf.java:26: error:\
    \ incompatible types: invalid method reference\n                result.add(((List)\
    \ value).stream().mapToLong(Long::parseLong).sum());\n                       \
    \                                      ^\n    incompatible types: Object cannot\
    \ be converted to String\nNote: /tmp/tmp6f3xg4uf.java uses unchecked or unsafe\
    \ operations.\nNote: Recompile with -Xlint:unchecked for details.\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd00fkutl.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(((Map)value).size());\n                \
    \                            ^\n/tmp/tmpd00fkutl.java:26: error: incompatible\
    \ types: int cannot be converted to Long\n                result.add(((List)value).size());\n\
    \                                             ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpnpblgruh.java:18)\n\
    \tat Problem.main(tmpnpblgruh.java:25)\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Integer) {\n                result.add((Integer)o);\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmq_1t40x.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)o);\n               \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye_mh2vz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiugjcdd6.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Number) {\n                result.add(((Number)\
    \ o).longValue());\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcipzqwb.java:25)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpnpblgruh.java:18)\n\
    \tat Problem.main(tmpnpblgruh.java:25)\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(e -> e.getKey()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(value);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpow1ad8ov.java:26: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toList()));\n                            \
    \                                                             ^\n/tmp/tmpow1ad8ov.java:26:\
    \ error: cannot find symbol\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toList()));\n                            \
    \                                           ^\n  symbol:   method getKey()\n \
    \ location: variable e of type Object\n/tmp/tmpow1ad8ov.java:28: error: incompatible\
    \ types: Object cannot be converted to Long\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n               \
    \                                                       ^\n/tmp/tmpow1ad8ov.java:30:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(value);\n                           ^\nNote: /tmp/tmpow1ad8ov.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(Objects::nonNull).filter(o -> o instanceof\
    \ Long).map(o -> (Long)o).collect(Collectors.toList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0e9wc5sx.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(Objects::nonNull).filter(o\
    \ -> o instanceof Long).map(o -> (Long)o).collect(Collectors.toList());\n    \
    \                                                                            \
    \                                ^\n    equality constraints: List<T#2>\n    lower\
    \ bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2 are type-variables:\n  \
    \  R extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    T#1 extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyigm6ae.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry157ibi.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry157ibi.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            } else if (value instanceof String) {\n                result.add((String)value);\n\
    \            } else if (value instanceof Map) {\n                result.addAll(((Map)value).entrySet().stream().map(e\
    \ -> new Long(e.getKey())).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.addAll(((List)value).stream().map(e\
    \ -> new Long(e)).collect(Collectors.toList()));\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4u_swg9.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)value);\n           \
    \                ^\n/tmp/tmpa4u_swg9.java:22: error: incompatible types: String\
    \ cannot be converted to Long\n                result.add((String)value);\n  \
    \                         ^\n/tmp/tmpa4u_swg9.java:24: error: incompatible types:\
    \ Object cannot be converted to Collection<? extends Long>\n                result.addAll(((Map)value).entrySet().stream().map(e\
    \ -> new Long(e.getKey())).collect(Collectors.toList()));\n                  \
    \                                                                            \
    \       ^\n/tmp/tmpa4u_swg9.java:24: error: cannot find symbol\n             \
    \   result.addAll(((Map)value).entrySet().stream().map(e -> new Long(e.getKey())).collect(Collectors.toList()));\n\
    \                                                                            \
    \      ^\n  symbol:   method getKey()\n  location: variable e of type Object\n\
    /tmp/tmpa4u_swg9.java:26: error: incompatible types: Object cannot be converted\
    \ to Collection<? extends Long>\n                result.addAll(((List)value).stream().map(e\
    \ -> new Long(e)).collect(Collectors.toList()));\n                           \
    \                                                       ^\n/tmp/tmpa4u_swg9.java:26:\
    \ error: no suitable constructor found for Long(Object)\n                result.addAll(((List)value).stream().map(e\
    \ -> new Long(e)).collect(Collectors.toList()));\n                           \
    \                                   ^\n    constructor Long.Long(long) is not\
    \ applicable\n      (argument mismatch; Object cannot be converted to long)\n\
    \    constructor Long.Long(String) is not applicable\n      (argument mismatch;\
    \ Object cannot be converted to String)\nNote: /tmp/tmpa4u_swg9.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n6 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).size());\n            } else if (value instanceof List) {\n         \
    \       result.add(((List) value).size());\n            } else {\n           \
    \     result.add(0L);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb7o204n.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(((Map) value).size());\n               \
    \                              ^\n/tmp/tmpzb7o204n.java:26: error: incompatible\
    \ types: int cannot be converted to Long\n                result.add(((List) value).size());\n\
    \                                              ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                try {\n                    result.add(Long.parseLong((String)\
    \ value));\n                } catch (NumberFormatException nfe) {\n          \
    \          result.add(0l);\n                }\n            } else {\n        \
    \        result.add(0l);\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hcl18rb.java:35)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else {\n        \
    \        result.add(0l);\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpia2si2ye.java:29)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Double) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof String) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Map) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof List) {\n                result.add((Long)value);\n\
    \            } else {\n                result.add((Long)value);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.util.HashMap\
    \ cannot be cast to class java.lang.Long (java.util.HashMap and java.lang.Long\
    \ are in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmp_4wwzern.java:26)\n\
    \tat Problem.main(tmp_4wwzern.java:37)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9adorvey.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15s3pdhs.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                                                         ^\n\
    \    (argument mismatch; invalid method reference\n      no suitable method found\
    \ for valueOf(Object)\n          method Long.valueOf(String) is not applicable\n\
    \            (argument mismatch; Object cannot be converted to String)\n     \
    \     method Long.valueOf(long) is not applicable\n            (argument mismatch;\
    \ Object cannot be converted to long))\n  where R,T are type-variables:\n    R\
    \ extends Object declared in method <R>map(Function<? super T,? extends R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)((Integer)value).longValue());\n       \
    \     } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jvq1bzh.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \                                                                            \
    \                                                  ^\n/tmp/tmp5jvq1bzh.java:24:\
    \ error: cannot find symbol\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \                                                                            \
    \                    ^\n  symbol:   method getValue()\n  location: variable entry\
    \ of type Object\n/tmp/tmp5jvq1bzh.java:26: error: incompatible types: Object\
    \ cannot be converted to Long\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \                                                                            \
    \                    ^\n/tmp/tmp5jvq1bzh.java:26: error: variable value is already\
    \ defined in method filterIntegers(ArrayList<Object>)\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \                                                 ^\nNote: /tmp/tmp5jvq1bzh.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sbq4ab8.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(((String)value).longValue());\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbkpz81x.java:24: error: cannot find symbol\n                result.add(((String)value).longValue());\n\
    \                                          ^\n  symbol:   method longValue()\n\
    \  location: class String\n/tmp/tmppbkpz81x.java:26: error: incompatible types:\
    \ Object cannot be converted to Long\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \          ^\n/tmp/tmppbkpz81x.java:26: error: cannot find symbol\n          \
    \      result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmppbkpz81x.java:28:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List)value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                         ^\n\
    Note: /tmp/tmppbkpz81x.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpeuavjo1v.java:18)\n\
    \tat Problem.main(tmpeuavjo1v.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(0l);\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjl1bw0w.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \          ^\n/tmp/tmpwjl1bw0w.java:24: error: cannot find symbol\n          \
    \      result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmpwjl1bw0w.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List)value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                         ^\n\
    Note: /tmp/tmpwjl1bw0w.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_telzul0.java:29)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof String)\
    \ {\n                result.add(Long.valueOf((String) value));\n            }\
    \ else if (value instanceof Map) {\n                result.add(((Map) value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List) value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(value);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr20ute2i.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \           ^\n/tmp/tmpr20ute2i.java:24: error: cannot find symbol\n         \
    \       result.add(((Map) value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                           ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmpr20ute2i.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List) value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    /tmp/tmpr20ute2i.java:28: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(value);\n                           ^\n\
    Note: /tmp/tmpr20ute2i.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye_mh2vz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndsjuxn6.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(value);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm1_9l6y.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)value);\n           \
    \                ^\n/tmp/tmpwm1_9l6y.java:24: error: incompatible types: Object\
    \ cannot be converted to Long\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \          ^\n/tmp/tmpwm1_9l6y.java:24: error: cannot find symbol\n          \
    \      result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmpwm1_9l6y.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List)value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                         ^\n\
    /tmp/tmpwm1_9l6y.java:28: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(value);\n                           ^\n\
    Note: /tmp/tmpwm1_9l6y.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9adorvey.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7y4yc2ch.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpnpblgruh.java:18)\n\
    \tat Problem.main(tmpnpblgruh.java:25)\n"
  stdout: ''
  timestamp: 1659795315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcm30cpoe.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return values.stream().filter(v -> v instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \                                                                 ^\n    (argument\
    \ mismatch; invalid method reference\n      no suitable method found for valueOf(Object)\n\
    \          method Long.valueOf(String) is not applicable\n            (argument\
    \ mismatch; Object cannot be converted to String)\n          method Long.valueOf(long)\
    \ is not applicable\n            (argument mismatch; Object cannot be converted\
    \ to long))\n  where R,T are type-variables:\n    R extends Object declared in\
    \ method <R>map(Function<? super T,? extends R>)\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry157ibi.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().mapToLong(e -> ((Map.Entry) e).getValue()).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().mapToLong(e -> ((Long) e)).sum());\n            } else {\n \
    \               result.add(0l);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ue3ljpn.java:24: error: incompatible types: bad return type in\
    \ lambda expression\n                result.add(((Map) value).entrySet().stream().mapToLong(e\
    \ -> ((Map.Entry) e).getValue()).sum());\n                                   \
    \                                                                 ^\n    Object\
    \ cannot be converted to long\nNote: /tmp/tmp5ue3ljpn.java uses unchecked or unsafe\
    \ operations.\nNote: Recompile with -Xlint:unchecked for details.\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().flatMap(entry -> entry.getValue().stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().flatMap(value -> filterIntegers((ArrayList<Object>) value)).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(value);\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz6mirbuh.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().flatMap(entry\
    \ -> entry.getValue().stream()).collect(Collectors.toList()));\n             \
    \                                                                            \
    \                       ^\n/tmp/tmpz6mirbuh.java:24: error: cannot find symbol\n\
    \                result.add(((Map) value).entrySet().stream().flatMap(entry ->\
    \ entry.getValue().stream()).collect(Collectors.toList()));\n                \
    \                                                                   ^\n  symbol:\
    \   method getValue()\n  location: variable entry of type Object\n/tmp/tmpz6mirbuh.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List) value).stream().flatMap(value -> filterIntegers((ArrayList<Object>)\
    \ value)).collect(Collectors.toList()));\n                                   \
    \                                                                            \
    \       ^\n/tmp/tmpz6mirbuh.java:26: error: variable value is already defined\
    \ in method filterIntegers(ArrayList<Object>)\n                result.add(((List)\
    \ value).stream().flatMap(value -> filterIntegers((ArrayList<Object>) value)).collect(Collectors.toList()));\n\
    \                                                           ^\n/tmp/tmpz6mirbuh.java:28:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(value);\n                           ^\nNote: /tmp/tmpz6mirbuh.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else {\n        \
    \        result.add(0l);\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2flnualo.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        });\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxeo23mf.java:25)\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(Object::toString).collect(Collectors.toList()));\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgxnmj58k.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()));\n\
    \                                                                 ^\n    method\
    \ getValue in interface Entry<K,V> cannot be applied to given types\n      required:\
    \ no arguments\n      found:    Object\n      reason: actual and formal argument\
    \ lists differ in length\n  where K,V are type-variables:\n    K extends Object\
    \ declared in interface Entry\n    V extends Object declared in interface Entry\n\
    /tmp/tmpgxnmj58k.java:26: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((List) value).stream().map(Object::toString).collect(Collectors.toList()));\n\
    \                                                                            \
    \    ^\nNote: /tmp/tmpgxnmj58k.java uses unchecked or unsafe operations.\nNote:\
    \ Recompile with -Xlint:unchecked for details.\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if(value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3vbgohl8.java:27)\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \   } else {\n                result.add(value);\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvvrz7krt.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \                                                                            \
    \                                                  ^\n/tmp/tmpvvrz7krt.java:24:\
    \ error: cannot find symbol\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \                                                                            \
    \                    ^\n  symbol:   method getValue()\n  location: variable entry\
    \ of type Object\n/tmp/tmpvvrz7krt.java:26: error: incompatible types: Object\
    \ cannot be converted to Long\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \                                                                            \
    \                    ^\n/tmp/tmpvvrz7krt.java:26: error: variable value is already\
    \ defined in method filterIntegers(ArrayList<Object>)\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \                                                 ^\n/tmp/tmpvvrz7krt.java:28:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(value);\n                           ^\nNote: /tmp/tmpvvrz7krt.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else if (o instanceof String) {\n                result.add(Long.parseLong((String)o));\n\
    \            } else if (o instanceof Map) {\n                result.add(((Map)o).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (o instanceof List) {\n                result.add(((List)o).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(0l);\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnbkm628_.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)o).entrySet().stream().flatMap(e ->\
    \ e.getValue().stream()).collect(Collectors.toList()));\n                    \
    \                                                                            \
    \   ^\n/tmp/tmpnbkm628_.java:24: error: cannot find symbol\n                result.add(((Map)o).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                     ^\n  symbol:   method getValue()\n\
    \  location: variable e of type Object\n/tmp/tmpnbkm628_.java:26: error: incompatible\
    \ types: Object cannot be converted to Long\n                result.add(((List)o).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n                                     \
    \                                ^\nNote: /tmp/tmpnbkm628_.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).keySet().stream().mapToLong(Long::longValue).sum());\n            } else\
    \ if (value instanceof List) {\n                result.add(((List) value).stream().mapToLong(Long::longValue).sum());\n\
    \            } else {\n                result.add(0L);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzes8kfbh.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).keySet().stream().mapToLong(Long::longValue).sum());\n\
    \                                                                     ^\n    method\
    \ longValue in class Long cannot be applied to given types\n      required: no\
    \ arguments\n      found:    Object\n      reason: actual and formal argument\
    \ lists differ in length\n/tmp/tmpzes8kfbh.java:26: error: incompatible types:\
    \ invalid method reference\n                result.add(((List) value).stream().mapToLong(Long::longValue).sum());\n\
    \                                                             ^\n    method longValue\
    \ in class Long cannot be applied to given types\n      required: no arguments\n\
    \      found:    Object\n      reason: actual and formal argument lists differ\
    \ in length\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Number) {\n                result.add(((Number)\
    \ o).longValue());\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz3xvhuv.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795317
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpeuavjo1v.java:18)\n\
    \tat Problem.main(tmpeuavjo1v.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye_mh2vz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                try {\n                    result.add(Long.parseLong((String)value));\n\
    \                } catch (NumberFormatException nfe) {\n                    result.add(0l);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwx6_faf.java:33)\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(e -> e.getKey()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsbk9utiz.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toList()));\n                            \
    \                                                             ^\n/tmp/tmpsbk9utiz.java:24:\
    \ error: cannot find symbol\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toList()));\n                            \
    \                                           ^\n  symbol:   method getKey()\n \
    \ location: variable e of type Object\n/tmp/tmpsbk9utiz.java:26: error: incompatible\
    \ types: Object cannot be converted to Long\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n               \
    \                                                       ^\nNote: /tmp/tmpsbk9utiz.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvm9fib1t.java:27)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn2fsb2f0.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().map(e ->\
    \ ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n                \
    \                                                                            \
    \           ^\n/tmp/tmpn2fsb2f0.java:26: error: incompatible types: Object cannot\
    \ be converted to Long\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                                            ^\n\
    /tmp/tmpn2fsb2f0.java:26: error: cannot find symbol\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                       ^\n  symbol:   method\
    \ longValue()\n  location: class Object\nNote: /tmp/tmpn2fsb2f0.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgj5fdd7s.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else {\n                result.add(0l);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jgbkuzs.java:29)\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghsoa84e.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpeuavjo1v.java:18)\n\
    \tat Problem.main(tmpeuavjo1v.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsft6d9d.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795317
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object o\
    \ : values) {\n            if(o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(entry\
    \ -> ((Map.Entry)entry).getValue()).sum());\n            } else if (value instanceof\
    \ List) {\n                result.add(((List)value).stream().mapToLong(value ->\
    \ ((Long)value)).sum());\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7zlpf7z0.java:24: error: incompatible types: bad return type in\
    \ lambda expression\n                result.add(((Map)value).entrySet().stream().mapToLong(entry\
    \ -> ((Map.Entry)entry).getValue()).sum());\n                                \
    \                                                                          ^\n\
    \    Object cannot be converted to long\n/tmp/tmp7zlpf7z0.java:26: error: variable\
    \ value is already defined in method filterIntegers(ArrayList<Object>)\n     \
    \           result.add(((List)value).stream().mapToLong(value -> ((Long)value)).sum());\n\
    \                                                            ^\nNote: /tmp/tmp7zlpf7z0.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dw_knrb.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().map(e ->\
    \ ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n                \
    \                                                                            \
    \           ^\n/tmp/tmp2dw_knrb.java:26: error: incompatible types: Object cannot\
    \ be converted to Long\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                                            ^\n\
    /tmp/tmp2dw_knrb.java:26: error: cannot find symbol\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n               \
    \                                                       ^\n  symbol:   method\
    \ longValue()\n  location: class Object\nNote: /tmp/tmp2dw_knrb.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Integer) {\n                result.add((Long)\
    \ o);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkaaxgtwv.java:25)\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(entry -> ((Map.Entry) entry).getValue()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ (\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp04n1h7oa.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp04n1h7oa.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().mapToLong(Long::longValue).sum());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gx7sgwg.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \                                                                      ^\n   \
    \ method getValue in interface Entry<K,V> cannot be applied to given types\n \
    \     required: no arguments\n      found:    Object\n      reason: actual and\
    \ formal argument lists differ in length\n  where K,V are type-variables:\n  \
    \  K extends Object declared in interface Entry\n    V extends Object declared\
    \ in interface Entry\n/tmp/tmp6gx7sgwg.java:26: error: incompatible types: invalid\
    \ method reference\n                result.add(((List)value).stream().mapToLong(Long::longValue).sum());\n\
    \                                                            ^\n    method longValue\
    \ in class Long cannot be applied to given types\n      required: no arguments\n\
    \      found:    Object\n      reason: actual and formal argument lists differ\
    \ in length\nNote: /tmp/tmp6gx7sgwg.java uses unchecked or unsafe operations.\n\
    Note: Recompile with -Xlint:unchecked for details.\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.lang.Float\
    \ cannot be cast to class java.lang.Long (java.lang.Float and java.lang.Long are\
    \ in module java.base of loader 'bootstrap')\n\tat Problem.filterIntegers(tmpeuavjo1v.java:18)\n\
    \tat Problem.main(tmpeuavjo1v.java:25)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9adorvey.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Integer) {\n                result.add((Integer)o);\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7mnkdk4t.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)o);\n               \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(e -> e.getValue()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqcgac4ml.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getValue()).collect(Collectors.toList()));\n                          \
    \                                                                 ^\n/tmp/tmpqcgac4ml.java:24:\
    \ error: cannot find symbol\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getValue()).collect(Collectors.toList()));\n                          \
    \                                             ^\n  symbol:   method getValue()\n\
    \  location: variable e of type Object\n/tmp/tmpqcgac4ml.java:26: error: incompatible\
    \ types: Object cannot be converted to Long\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n               \
    \                                                       ^\nNote: /tmp/tmpqcgac4ml.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else {\n          \
    \      result.add(0l);\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zfwcv0d.java:29)\n"
  stdout: ''
  timestamp: 1659795318
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz8hki8gw.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(((Map)value).size());\n                \
    \                            ^\n/tmp/tmpz8hki8gw.java:26: error: incompatible\
    \ types: int cannot be converted to Long\n                result.add(((List)value).size());\n\
    \                                             ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toCollection(ArrayList::new));\n    }\n \
    \   public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbq3kkpi.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndsjuxn6.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e)).collect(Collectors.toList()));\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp947x5_9n.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().map(e ->\
    \ ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n                \
    \                                                                            \
    \           ^\n/tmp/tmp947x5_9n.java:26: error: incompatible types: Object cannot\
    \ be converted to Long\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e)).collect(Collectors.toList()));\n                           \
    \                                                    ^\nNote: /tmp/tmp947x5_9n.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmseb7w2o.java:25)\n"
  stdout: ''
  timestamp: 1659795318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wi019s1.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry157ibi.java:29)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8bd450i.java:31)\n"
  stdout: ''
  timestamp: 1659795314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5a8vaez_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sbq4ab8.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_telzul0.java:29)\n"
  stdout: ''
  timestamp: 1659795316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_telzul0.java:29)\n"
  stdout: ''
  timestamp: 1659795316

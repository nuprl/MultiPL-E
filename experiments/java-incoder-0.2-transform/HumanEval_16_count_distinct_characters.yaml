name: HumanEval_16_count_distinct_characters
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string, find out how many distinct characters (regardless\
  \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"))\n\
  \    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n   \
  \ public static long countDistinctCharacters(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
  \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
  abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
  )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n\
  \    }\n\n}\n"
completions: ["        long distinctCharacters = 0;\n        Set<Character> set =\
    \ new HashSet<>();\n        for (char c : string.toCharArray()) {\n          \
    \  set.add(Character.toLowerCase(c));\n        }\n        distinctCharacters =\
    \ set.size();\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for(char c : string.toCharArray()) {\n            distinctCharacters\
    \ += Character.toLowerCase(c) == Character.toLowerCase(c) ? 1 : 0;\n        }\n\
    \        return distinctCharacters;", "        long distinctCharacters = 0;\n\
    \        for(char c : string.toCharArray()) {\n            distinctCharacters\
    \ += Character.toLowerCase(c) == Character.toLowerCase(c) ? 1 : 0;\n        }\n\
    \        return distinctCharacters;", "        long distinctCharacters = 0;\n\
    \        Set<Character> set = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            set.add(Character.toLowerCase(c));\n            set.add(Character.toUpperCase(c));\n\
    \        }\n        for (char c : set) {\n            distinctCharacters++;\n\
    \        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for(char c : string.toCharArray()) {\n            distinctCharacters\
    \ += (string.indexOf(c) == 0) ? 1 : 0;\n        }\n        return distinctCharacters;",
  "        long distinctCharacters = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            distinctCharacters += Character.toLowerCase(c)\
    \ == Character.toLowerCase(c) ? 1 : 0;\n        }\n        return distinctCharacters;",
  "        long distinctCharacters = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            distinctCharacters += Character.toLowerCase(c).equals(Character.toLowerCase(c))\
    \ ? 1 : 0;\n        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for (char c : string.toCharArray()) {\n            distinctCharacters\
    \ += Character.toLowerCase(c) == c ? 1 : 0;\n        }\n        return distinctCharacters;",
  "        long distinctCharacters = 0;\n        char[] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            distinctCharacters += Character.toLowerCase(c)\
    \ == c ? 1 : 0;\n        }\n        return distinctCharacters;", "        long\
    \ distinctCharacters = 0;\n        for (char c : string.toCharArray()) {\n   \
    \         distinctCharacters += Character.toLowerCase(c) == Character.toLowerCase(c)\
    \ ? 1 : 0;\n        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for (char c : string.toCharArray()) {\n            if (Character.isLetterOrDigit(c))\
    \ {\n                distinctCharacters++;\n            }\n        }\n       \
    \ return distinctCharacters;", "        long distinctCharacters = 0;\n       \
    \ for (char c : string.toCharArray()) {\n            distinctCharacters += Character.isLetterOrDigit(c)\
    \ ? 1 : 0;\n        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        char[] charArray = string.toCharArray();\n        for (char c\
    \ : charArray) {\n            distinctCharacters += Character.toLowerCase(c) ==\
    \ c ? 1 : 0;\n        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for(int i = 0; i < string.length(); i++) {\n            char c\
    \ = string.charAt(i);\n            distinctCharacters += Character.toLowerCase(c)\
    \ == c ? 1 : 0;\n        }\n        return distinctCharacters;", "        long\
    \ distinctCharacters = 0;\n        for (char c : string.toCharArray()) {\n   \
    \         if (Character.isLetterOrDigit(c)) {\n                distinctCharacters++;\n\
    \            }\n        }\n        return distinctCharacters;", "        long\
    \ distinctCharacters = 0;\n        for(char c : string.toCharArray()) {\n    \
    \        distinctCharacters += Character.toLowerCase(c) == Character.toLowerCase(c)\
    \ ? 1 : 0;\n        }\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        for (char character : string.toCharArray()) {\n            distinctCharacters\
    \ += Character.toLowerCase(character) == character ? 1 : 0;\n        }\n     \
    \   return distinctCharacters;", "        long distinctCharacters = 0;\n     \
    \   long stringLength = string.length();\n        long stringCharCount = 0;\n\
    \        long stringCharCountUpper = 0;\n        long stringCharCountLower = 0;\n\
    \        long stringCharCountDigit = 0;\n        long stringCharCountSpace = 0;\n\
    \        long stringCharCountSpecial = 0;\n        long stringCharCountAll = 0;\n\
    \        long stringCharCountUpperAll = 0;\n        long stringCharCountLowerAll\
    \ = 0;\n        long stringCharCountDigitAll = 0;\n        long stringCharCountSpaceAll\
    \ = 0;\n        long stringCharCountSpecialAll = 0;\n        long stringCharCountAllUpper\
    \ = 0;\n        long stringCharCountAllLower = 0;\n        long stringCharCountAllDigit\
    \ = 0;\n        long stringCharCountAllSpace = 0;\n        long stringCharCountAllSpecial\
    \ = 0;\n        long stringCharCountAllAll = 0;\n        long stringCharCountAllUpperAll\
    \ = 0;\n        long stringCharCountAllLowerAll = 0;\n        long stringCharCountAllDigitAll\
    \ = 0;\n        long stringCharCountAllSpaceAll = 0;\n        long stringCharCountAllSpecialAll\
    \ = 0;\n        long stringCharCountAllAllUpper = 0;\n        long stringCharCountAllAllLower\
    \ = 0;\n        long stringCharCountAllAllDigit = 0;\n        long stringCharCountAllAllSpace\
    \ = 0;\n        long stringCharCountAllAllSpecial = 0;\n        long stringCharCountAllAllAll\
    \ = 0;\n        for (char c : string.toCharArray()) {\n            stringCharCount++;\n\
    \            if (Character.isUpperCase(c)) {\n                stringCharCountUpper++;\n\
    \                stringCharCountUpperAll++;\n                stringCharCountAllUpper++;\n\
    \                stringCharCountAllUpperAll++;\n                stringCharCountAllAllUpper++;\n\
    \                stringCharCountAllAllAllUpper++;\n                stringCharCountAllAllAllUpper++;\n\
    \            }\n            if (Character.isLowerCase(c)) {\n                stringCharCountLower++;\n\
    \                stringCharCountLowerAll++;\n                stringCharCountAllLower++;\n\
    \                stringCharCountAllLowerAll++;\n                stringCharCountAllAllLower++;\n\
    \                stringCharCountAllAllAllLower++;\n            }\n           \
    \ if (Character.isDigit(c)) {\n                stringCharCountDigit++;\n     \
    \           stringCharCountDigitAll++;\n                stringCharCountAllDigit++;\n\
    \                stringCharCountAllDigitAll++;\n                stringCharCountAllAllDigit++;\n\
    \                stringCharCountAllAllAllDigit++;\n            }\n           \
    \ if (Character.isSpaceChar(c)) {\n                stringCharCountSpace++;\n \
    \               stringCharCountSpaceAll++;\n                string", "       \
    \ long distinctCharacters = 0;\n        Set<Character> set = new HashSet<>();\n\
    \        for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \            set.add(Character.toUpperCase(c));\n        }\n        distinctCharacters\
    \ = set.size();\n        return distinctCharacters;", "        long distinctCharacters\
    \ = 0;\n        char[] charArray = string.toCharArray();\n        for (char c\
    \ : charArray) {\n            distinctCharacters += Character.toLowerCase(c) ==\
    \ Character.toLowerCase(c) ? 1 : 0;\n        }\n        return distinctCharacters;"]
stop_tokens:
- "\n    }\n"

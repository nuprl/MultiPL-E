name: HumanEval_37_sort_even
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes a list l and returns a list l' such\
  \ that\n    // l' is identical to l in the odd indicies, while its values at the\
  \ even indicies are equal\n    // to the values of the even indicies of l, but sorted.\n\
  \    // >>> sortEven((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n   \
  \ // >>> sortEven((new ArrayList<Long>(Arrays.asList((long)5l, (long)6l, (long)3l,\
  \ (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)5l,\
  \ (long)4l)))\n    public static ArrayList<Long> sortEven(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sortEven((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l)))));\n    assert(sortEven((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
  \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)-10l,\
  \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)5l, (long)0l, (long)9l,\
  \ (long)1l, (long)123l)))));\n    assert(sortEven((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)8l, (long)-12l, (long)4l, (long)23l, (long)2l, (long)3l, (long)11l, (long)12l,\
  \ (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)-12l, (long)8l,\
  \ (long)3l, (long)4l, (long)5l, (long)2l, (long)12l, (long)11l, (long)23l, (long)-10l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> l2 = new ArrayList<Long>(l);\n        Collections.sort(l2,\
    \ new Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n\
    \                if (o1 % 2 == 0) {\n                    return o1.compareTo(o2);\n\
    \                } else {\n                    return o2.compareTo(o1);\n    \
    \            }\n            }\n        });\n        return l2;", "        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l.size());\n        for(int i = 0; i < l.size(); i++)\
    \ {\n            if(i%2 == 0) {\n                l2.add(l.get(i));\n         \
    \   } else {\n                l2.add(l.get(i));\n                l2.add(l.get(i+1));\n\
    \            }\n        }\n        return l2;", "        ArrayList<Long> l2 =\
    \ new ArrayList<Long>(l);\n        Collections.sort(l2);\n        for(int i =\
    \ 0; i < l.size(); i++) {\n            if(i % 2 == 0) {\n                l2.set(i,\
    \ l.get(i));\n            }\n        }\n        return l2;", "        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l.size());\n        for(int i = 0; i < l.size(); i\
    \ += 2) {\n            l2.add(l.get(i));\n        }\n        Collections.sort(l2);\n\
    \        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                if (o1 % 2 == 0) {\n          \
    \          return o2.compareTo(o1);\n                } else {\n              \
    \      return o1.compareTo(o2);\n                }\n            }\n        });\n\
    \        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n    \
    \        }\n        });\n        ArrayList<Long> l3 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l3, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                return o2.compareTo(o1);\n    \
    \        }\n        });\n        for (int i = 0; i < l2.size(); i++) {\n     \
    \       l3.set(i, l2.get(i));\n        }\n        return l3;", "        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l);\n        Collections.sort(l2, new Comparator<Long>()\
    \ {\n            public int compare(Long o1, Long o2) {\n                if (o1\
    \ % 2 == 0) {\n                    return o1.compareTo(o2);\n                }\
    \ else {\n                    return o2.compareTo(o1);\n                }\n  \
    \          }\n        });\n        return l2;", "        ArrayList<Long> l2 =\
    \ new ArrayList<Long>(l);\n        Collections.sort(l2);\n        for (int i =\
    \ 0; i < l.size(); i += 2) {\n            l2.set(i, l.get(i));\n        }\n  \
    \      return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n  \
    \      Collections.sort(l2, new Comparator<Long>() {\n            public int compare(Long\
    \ o1, Long o2) {\n                if (o1 % 2 == 0) {\n                    return\
    \ o1.compareTo(o2);\n                } else {\n                    return o2.compareTo(o1);\n\
    \                }\n            }\n        });\n        return l2;", "       \
    \ ArrayList<Long> l2 = new ArrayList<Long>(l.size());\n        for (int i = 0;\
    \ i < l.size(); i += 2) {\n            l2.add(l.get(i));\n        }\n        Collections.sort(l2);\n\
    \        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                if (o1 % 2 == 0) {\n          \
    \          return o1.compareTo(o2);\n                } else {\n              \
    \      return o2.compareTo(o1);\n                }\n            }\n        });\n\
    \        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n    \
    \        }\n        });\n        Collections.reverse(l2);\n        return l2;",
  "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n        Collections.sort(l2);\n\
    \        for(int i = 0; i < l2.size(); i = i + 2) {\n            l2.set(i, l2.get(i));\n\
    \        }\n        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2);\n        for(int i = 0; i < l.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                l2.set(i, l.get(i));\n        \
    \    }\n        }\n        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l.size());\n\
    \        for(int i = 0; i < l.size(); i += 2) {\n            l2.add(l.get(i));\n\
    \        }\n        Collections.sort(l2);\n        return l2;", "        ArrayList<Long>\
    \ l2 = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd = new ArrayList<Long>();\n        for(int i = 0;\
    \ i < l.size(); i += 2) {\n            even.add(l.get(i));\n            odd.add(l.get(i\
    \ + 1));\n        }\n        Collections.sort(even);\n        Collections.sort(odd);\n\
    \        for(int i = 0; i < even.size(); i++) {\n            l2.add(even.get(i));\n\
    \        }\n        for(int i = 0; i < odd.size(); i++) {\n            l2.add(odd.get(i));\n\
    \        }\n        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2, new Comparator<Long>() {\n            public int\
    \ compare(Long o1, Long o2) {\n                if (o1 % 2 == 0) {\n          \
    \          return o1.compareTo(o2);\n                } else {\n              \
    \      return o2.compareTo(o1);\n                }\n            }\n        });\n\
    \        return l2;", "        ArrayList<Long> l2 = new ArrayList<Long>(l);\n\
    \        Collections.sort(l2);\n        for(int i = 0; i < l2.size(); i = i +\
    \ 2) {\n            l2.set(i, l2.get(i));\n        }\n        return l2;", " \
    \       ArrayList<Long> l2 = new ArrayList<Long>(l);\n        Collections.sort(l2,\
    \ new Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n\
    \                if (o1 % 2 == 0) {\n                    return o1.compareTo(o2);\n\
    \                } else {\n                    return o2.compareTo(o1);\n    \
    \            }\n            }\n        });\n        return l2;", "        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l.size());\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                l2.add(l.get(i));\n      \
    \      } else {\n                l2.add(l.get(i));\n                l2.add(l.get(i));\n\
    \            }\n        }\n        return l2;"]
stop_tokens:
- "\n    }\n"

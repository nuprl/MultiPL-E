language: java
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long e : l) {\n            if (e >\
    \ max) {\n                max = e;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long i : l) {\n            if (i >\
    \ max) {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long e : l) {\n            if (e >\
    \ max) {\n                max = e;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (Long e : l) {\n     \
    \       if (max < e) max = e;\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (max < e) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (Long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (Long e : l) {\n     \
    \       if (max < e) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long e : l) {\n            if (e >\
    \ max) {\n                max = e;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long e : l) {\n            if (e >\
    \ max) {\n                max = e;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (Long e : l) {\n     \
    \       if (max < e) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (3l)\n\
    \    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l,\
    \ (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l, (long)1l,\
    \ (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (Long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

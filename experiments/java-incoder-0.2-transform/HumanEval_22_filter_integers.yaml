name: HumanEval_22_filter_integers
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Filter given list of any python values only for integers\n\
  \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\", (String)3.14f,\
  \ (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n    //\
  \ >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"abc\", new\
  \ HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n    //\
  \ (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n    public\
  \ static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
  \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
  \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
  \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Number) {\n            \
    \    result.add(((Number)value).longValue());\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object o : values) {\n            if (o instanceof Long) {\n   \
    \             result.add((Long)o);\n            } else if (o instanceof Number)\
    \ {\n                result.add(((Number)o).longValue());\n            } else\
    \ if (o instanceof String) {\n                result.add(Long.parseLong((String)o));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(value -> value instanceof Long).forEach(value\
    \ -> result.add((Long)value));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).size());\n            } else if (value instanceof List) {\n         \
    \       result.add(((List) value).size());\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    for (Object value : values) {\n            if (value instanceof Long) {\n\
    \                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      }\n        }\n        return result;", '        return values.stream().filter(value
    -> value instanceof Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Long) {\n                result.add((Long)value);\n  \
    \          } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        values.stream().filter(value -> value instanceof\
    \ Long).forEach(value -> result.add((Long)value));\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else {\n          \
    \      result.add(0l);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(Objects::nonNull).forEach(value -> {\n       \
    \     if (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        }\n        return result;", '        return values.stream().filter(value
    -> value instanceof Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                try {\n  \
    \                  result.add(Long.parseLong((String)value));\n              \
    \  } catch (NumberFormatException nfe) {\n                    result.add(0l);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(Objects::nonNull).forEach(value -> {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long) value);\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;", '        return values.stream().filter(x -> x instanceof Long).map(x
    -> (Long)x).collect(Collectors.toList());', "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        for (Object value : values) {\n            if (value\
    \ instanceof Long) {\n                result.add((Long)value);\n            }\
    \ else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof String) {\n                try {\n  \
    \                  result.add(Long.parseLong((String)value));\n              \
    \  } catch (NumberFormatException ex) {\n                    result.add(0l);\n\
    \                }\n            }\n        });\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        for (Object value :\
    \ values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                try {\n                    result.add(Long.parseLong((String)\
    \ value));\n                } catch (NumberFormatException ex) {\n           \
    \         result.add(0l);\n                }\n            } else {\n         \
    \       result.add(0l);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object o : values)\
    \ {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        values.stream().filter(value -> value instanceof\
    \ Long).forEach(value -> result.add((Long)value));\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", '        return values.stream().filter(value ->
    value instanceof Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof String)\
    \ {\n                result.add(Long.parseLong((String) value));\n           \
    \ } else if (value instanceof Map) {\n                result.add(((Map) value).keySet().stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().mapToLong(Long::parseLong).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else {\n                result.add(0l);\n          \
    \  }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for (Object value : values) {\n            if (value\
    \ instanceof Long) {\n                result.add((Long)value);\n            }\
    \ else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Object value : values) {\n            if (value instanceof Integer) {\n\
    \                result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().mapToLong(Object::longValue).sum());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object o : values) {\n            if (o instanceof Number) {\n \
    \               result.add(((Number) o).longValue());\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)value);\n            } else if\
    \ (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                try {\n        \
    \            result.add(Long.parseLong((String)value));\n                } catch\
    \ (NumberFormatException ex) {\n                    result.add(0l);\n        \
    \        }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long) value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            } else if (value instanceof String) {\n  \
    \              result.add(Long.parseLong((String) value));\n            } else\
    \ if (value instanceof Map) {\n                result.add(((Map) value).keySet().stream().mapToLong(Long::parseLong).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().mapToLong(Long::parseLong).sum());\n            } else {\n \
    \               throw new IllegalArgumentException(\"Unexpected value \" + value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object o : values) {\n            if (o instanceof Long) {\n   \
    \             result.add((Long)o);\n            } else if (o instanceof Integer)\
    \ {\n                result.add((Integer)o);\n            } else {\n         \
    \       result.add(0l);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object o : values) {\n            if (o instanceof Number) {\n \
    \               result.add(((Number) o).longValue());\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long) value);\n            } else if\
    \ (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(e -> e.getKey()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Number) {\n    \
    \            result.add(((Number) value).longValue());\n            }\n      \
    \  }\n        return result;", '        return values.stream().filter(Objects::nonNull).filter(o
    -> o instanceof Long).map(o -> (Long)o).collect(Collectors.toList());', "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        for (Object value :\
    \ values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object o : values) {\n            if (o instanceof\
    \ Long) {\n                result.add((Long)o);\n            }\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Integer) {\n                result.add((Long)value);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long) value);\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Integer) {\n                result.add((Long)value);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Long) {\n                result.add((Long)value);\n  \
    \          } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(value -> value instanceof Long).forEach(value\
    \ -> result.add((Long)value));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            } else if (value instanceof String) {\n                result.add((String)value);\n\
    \            } else if (value instanceof Map) {\n                result.addAll(((Map)value).entrySet().stream().map(e\
    \ -> new Long(e.getKey())).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.addAll(((List)value).stream().map(e\
    \ -> new Long(e)).collect(Collectors.toList()));\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).size());\n            } else if (value instanceof List) {\n         \
    \       result.add(((List) value).size());\n            } else {\n           \
    \     result.add(0L);\n            }\n        }\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long) value);\n     \
    \       } else if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            } else if (value instanceof String) {\n  \
    \              try {\n                    result.add(Long.parseLong((String) value));\n\
    \                } catch (NumberFormatException nfe) {\n                    result.add(0l);\n\
    \                }\n            } else {\n                result.add(0l);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Long) {\n                result.add((Long) value);\n \
    \           } else if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)value);\n            } else if\
    \ (value instanceof Double) {\n                result.add((Long)value);\n    \
    \        } else if (value instanceof String) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Map) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof List) {\n                result.add((Long)value);\n\
    \            } else {\n                result.add((Long)value);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object o : values) {\n            if\
    \ (o instanceof Long) {\n                result.add((Long)o);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", '        return values.stream().filter(value -> value instanceof
    Long).map(Long::valueOf).collect(Collectors.toCollection(ArrayList::new));', " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for (Object value : values) {\n            if (value\
    \ instanceof Long) {\n                result.add((Long)value);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(Object value : values) {\n            if(value instanceof Long) {\n\
    \                result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(((String)value).longValue());\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Object value : values) {\n            if (value instanceof Number) {\n\
    \                result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Integer) {\n   \
    \             result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long) value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Object value : values) {\n            if (value instanceof Long) {\n  \
    \              result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(0l);\n            }\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        for (Object o : values)\
    \ {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long) value);\n            } else if\
    \ (value instanceof String) {\n                result.add(Long.valueOf((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().flatMap(e -> e).collect(Collectors.toList()));\n           \
    \ } else {\n                result.add(value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        values.stream().filter(value -> value instanceof Long).forEach(value\
    \ -> result.add((Long)value));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(value);\n            }\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        for (Object value :\
    \ values) {\n            if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add((Long)value);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        }\n        return result;", '        return values.stream().filter(v
    -> v instanceof Long).map(Long::valueOf).collect(Collectors.toList());', "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().mapToLong(e -> ((Map.Entry) e).getValue()).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().mapToLong(e -> ((Long) e)).sum());\n            } else {\n \
    \               result.add(0l);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().flatMap(entry -> entry.getValue().stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().flatMap(value -> filterIntegers((ArrayList<Object>) value)).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(value);\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)value);\n            } else {\n\
    \                result.add(0l);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(Objects::nonNull).forEach(value -> {\n       \
    \     if (value instanceof Long) {\n                result.add((Long) value);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Object value : values) {\n            if(value instanceof Number)\
    \ {\n                result.add(((Number)value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else if (value instanceof String) {\n                result.add(Long.parseLong((String)\
    \ value));\n            } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(Object::toString).collect(Collectors.toList()));\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for(Object value : values) {\n            if(value\
    \ instanceof Long) {\n                result.add((Long)value);\n            }\
    \ else if(value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(entry\
    \ -> Arrays.asList(entry.getValue()).stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(value\
    \ -> Arrays.asList(value).stream()).collect(Collectors.toList()));\n         \
    \   } else {\n                result.add(value);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object o : values) {\n            if (o instanceof Long) {\n   \
    \             result.add((Long)o);\n            } else if (o instanceof Number)\
    \ {\n                result.add(((Number)o).longValue());\n            } else\
    \ if (o instanceof String) {\n                result.add(Long.parseLong((String)o));\n\
    \            } else if (o instanceof Map) {\n                result.add(((Map)o).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (o instanceof List) {\n                result.add(((List)o).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            } else {\n               \
    \ result.add(0l);\n            }\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        for (Object value : values)\
    \ {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).keySet().stream().mapToLong(Long::longValue).sum());\n            } else\
    \ if (value instanceof List) {\n                result.add(((List) value).stream().mapToLong(Long::longValue).sum());\n\
    \            } else {\n                result.add(0L);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object o : values) {\n            if (o instanceof Number) {\n \
    \               result.add(((Number) o).longValue());\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)((Integer)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else {\n                result.add(0l);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                try {\n        \
    \            result.add(Long.parseLong((String)value));\n                } catch\
    \ (NumberFormatException nfe) {\n                    result.add(0l);\n       \
    \         }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Number) {\n                result.add(((Number) value).longValue());\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long) value);\n     \
    \       } else if (value instanceof Number) {\n                result.add(((Number)\
    \ value).longValue());\n            } else if (value instanceof String) {\n  \
    \              result.add(Long.parseLong((String) value));\n            } else\
    \ if (value instanceof Map) {\n                result.add(((Map) value).entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toList()));\n            } else if (value\
    \ instanceof List) {\n                result.add(((List) value).stream().map(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long) value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Object value : values) {\n            if (value instanceof Long) {\n  \
    \              result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long) value);\n            } else {\n\
    \                result.add(0l);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", '        return values.stream().filter(value -> value instanceof
    Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object o : values)\
    \ {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Long) {\n                result.add((Long)value);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Number) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(Object o : values) {\n            if(o instanceof Long) {\n     \
    \           result.add((Long)o);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(entry\
    \ -> ((Map.Entry)entry).getValue()).sum());\n            } else if (value instanceof\
    \ List) {\n                result.add(((List)value).stream().mapToLong(value ->\
    \ ((Long)value)).sum());\n            }\n        }\n        return result;", '        return
    values.stream().filter(value -> value instanceof Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Long) {\n                result.add((Long)value);\n      \
    \      } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e).longValue()).collect(Collectors.toList()));\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object o : values) {\n            if (o instanceof Integer) {\n           \
    \     result.add((Long) o);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(entry -> ((Map.Entry) entry).getValue()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ ((List) value).stream().map(value -> ((List) value).stream().map(value -> ((List)\
    \ value).stream().map(value -> ((List) value).stream().map(value -> ((List) value).stream().map(value\
    \ -> ((List) value).stream().map(value -> ((List) value).stream().map(value ->\
    \ (", "        ArrayList<Long> result = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().mapToLong(Map.Entry::getValue).sum());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().mapToLong(Long::longValue).sum());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number)value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object o : values) {\n            if (o instanceof Long) {\n   \
    \             result.add((Long)o);\n            } else if (o instanceof Integer)\
    \ {\n                result.add((Integer)o);\n            } else {\n         \
    \       result.add(0l);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(e -> e.getValue()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(e -> e).collect(Collectors.toList()));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       } else {\n                result.add(0l);\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).size());\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).size());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", '        return values.stream().filter(value ->
    value instanceof Long).map(value -> (Long)value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Object)e)).collect(Collectors.toList()));\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Object value : values) {\n            if(value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        values.stream().filter(value -> value instanceof Long).forEach(value\
    \ -> result.add((Long)value));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Object value : values) {\n       \
    \     if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Object value : values) {\n          \
    \  if (value instanceof Long) {\n                result.add((Long)value);\n  \
    \          } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Integer) {\n                result.add((Long)value);\n            } else if\
    \ (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(Object value : values) {\n            if(value instanceof Long) {\n\
    \                result.add((Long)value);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object o : values) {\n            if (o instanceof Long) {\n              \
    \  result.add((Long)o);\n            } else if (o instanceof Number) {\n     \
    \           result.add(((Number)o).longValue());\n            } else {\n     \
    \           result.add(0l);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object o : values)\
    \ {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;"]
stop_tokens:
- "\n    }\n"

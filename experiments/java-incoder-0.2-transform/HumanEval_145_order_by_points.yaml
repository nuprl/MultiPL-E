name: HumanEval_145_order_by_points
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function which sorts the given list of integers\n\
  \    // in ascending order according to the sum of their digits.\n    // Note: if\
  \ there are several items with similar sum of their digits,\n    // order them based\
  \ on their index in original list.\n    // For example:\n    // >>> orderByPoints((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l))))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l,\
  \ (long)11l)))\n    // >>> orderByPoints((new ArrayList<Long>(Arrays.asList())))\n\
  \    // (new ArrayList<Long>(Arrays.asList()))\n    public static ArrayList<Long>\
  \ orderByPoints(ArrayList<Long> nums) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
  \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
  \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
  \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
  \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
  \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l, (long)1l,\
  \ (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l,\
  \ (long)10l, (long)11l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l,\
  \ (long)2l, (long)11l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l,\
  \ (long)9l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)6l, (long)6l, (long)-76l, (long)-21l, (long)23l, (long)4l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-76l, (long)-21l, (long)0l, (long)4l, (long)23l,\
  \ (long)6l, (long)6l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ sum = 0;\n        for (long num : nums) {\n            sum += num;\n       \
    \     result.add(sum);\n        }\n        Collections.sort(result);\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               return o1.compareTo(o2);\n            }\n        });\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ o1, Long o2) {\n                return (int) (o1 - o2);\n            }\n   \
    \     });\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            if(sum >\
    \ maxSum) {\n                maxSum = sum;\n                maxIndex = num;\n\
    \            }\n        }\n        for(long num : nums) {\n            if(num\
    \ == maxIndex) {\n                result.add(num);\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return Long.compare(sum, o1\
    \ - o2);\n            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for(long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                long diff = o1 - o2;\n    \
    \            if (diff == 0) {\n                    return 0;\n               \
    \ }\n                return diff < 0 ? -1 : 1;\n            }\n        });\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               long diff = o1 - o2;\n                if (diff == 0) {\n     \
    \               return 0;\n                }\n                if (diff < 0) {\n\
    \                    return -1;\n                }\n                return 1;\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            @Override\n\
    \            public int compare(Long o1, Long o2) {\n                return sum\
    \ - o1.compareTo(o2);\n            }\n        });\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               return (int) (o1 - o2);\n            }\n        });\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        long maxSum = Long.MIN_VALUE;\n        for (long num : nums)\
    \ {\n            sum += num;\n            if (sum > maxSum) {\n              \
    \  maxSum = sum;\n            }\n            result.add(num);\n        }\n   \
    \     Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        long max = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        for\
    \ (long num : nums) {\n            sum += num;\n            if (sum == max) {\n\
    \                result.add(num);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        long minIndex = 0;\n        for(long num : nums) {\n            sum +=\
    \ num;\n            if(sum > maxSum) {\n                maxSum = sum;\n      \
    \          maxIndex = num;\n            }\n            if(sum < minSum) {\n  \
    \              minSum = sum;\n                minIndex = num;\n            }\n\
    \        }\n        for(long num : nums) {\n            sum += num;\n        \
    \    if(sum == maxSum) {\n                result.add(maxIndex);\n            }\
    \ else if(sum == minSum) {\n                result.add(minIndex);\n          \
    \  } else {\n                result.add(num);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n\
    \        long maxSumDigit = 0;\n        long maxSumDigitIndex = 0;\n        long\
    \ maxSumDigitDigit = 0;\n        long maxSumDigitDigitIndex = 0;\n        long\
    \ maxSumDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitIndex = 0;\n \
    \       long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n        long maxSumDigitDigitDigitDigitIndex\
    \ = 0;\n        long maxSumDigitDigitDigitDigit = 0;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        long maxSum\
    \ = 0;\n        long maxIndex = 0;\n        for(long num : nums) {\n         \
    \   sum += num;\n            if(sum > maxSum) {\n                maxSum = sum;\n\
    \                maxIndex = num;\n            }\n        }\n        for(long num\
    \ : nums) {\n            if(num == maxIndex) {\n                result.add(num);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               long diff = o1 - o2;\n                if (diff == 0) {\n     \
    \               return 0;\n                } else if (diff < 0) {\n          \
    \          return -1;\n                } else {\n                    return 1;\n\
    \                }\n            }\n        });\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n   \
    \     for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      public int compare(Long o1, Long o2) {\n                return (int) (o1\
    \ - o2);\n            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (Long num\
    \ : nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return sum - o1.compareTo(o2);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        long maxSum\
    \ = 0;\n        for (long num : nums) {\n            sum += num;\n           \
    \ if (sum > maxSum) {\n                maxSum = sum;\n            }\n        }\n\
    \        long currentSum = 0;\n        for (long num : nums) {\n            currentSum\
    \ += num;\n            if (currentSum == maxSum) {\n                result.add(num);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long maxSum = Long.MIN_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   Collections.sort(nums, Comparator.comparingLong(num -> sum - num));\n    \
    \    for (long num : nums) {\n            result.add(num);\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ o1, Long o2) {\n                long diff = o1 - o2;\n                if (diff\
    \ == 0) {\n                    return 0;\n                }\n                return\
    \ diff < 0 ? -1 : 1;\n            }\n        });\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n \
    \       for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(num);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      public int compare(Long o1, Long o2) {\n                long diff = o1\
    \ - o2;\n                if (diff == 0) {\n                    return 0;\n   \
    \             }\n                if (diff < 0) {\n                    return -1;\n\
    \                }\n                return 1;\n            }\n        });\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            if(sum >\
    \ maxSum) {\n                maxSum = sum;\n                maxIndex = num;\n\
    \            }\n        }\n        for(long num : nums) {\n            if(num\
    \ == maxIndex) {\n                result.add(num);\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               return (int) (o1 - o2);\n            }\n        });\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        for (Long num : nums) {\n            sum += num;\n       \
    \     result.add(sum);\n        }\n        Collections.sort(result);\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            @Override\n\
    \            public int compare(Long o1, Long o2) {\n                long diff\
    \ = o1 - o2;\n                if (diff == 0) {\n                    return 0;\n\
    \                }\n                return diff < 0 ? -1 : 1;\n            }\n\
    \        });\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ o1, Long o2) {\n                return (int) (o1 - o2);\n            }\n   \
    \     });\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               return (int) (o1 - o2);\n            }\n        });\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        for (long num : nums) {\n            sum += num;\n       \
    \     result.add(num);\n        }\n        Collections.sort(result, new Comparator<Long>()\
    \ {\n            public int compare(Long o1, Long o2) {\n                long\
    \ diff = o1 - o2;\n                return diff != 0 ? diff : o1.compareTo(o2);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for(long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for(long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long maxSum = 0;\n\
    \        long maxIndex = 0;\n        for(long num : nums) {\n            sum +=\
    \ num;\n            if(sum > maxSum) {\n                maxSum = sum;\n      \
    \          maxIndex = num;\n            }\n        }\n        for(long num : nums)\
    \ {\n            if(num == maxIndex) {\n                result.add(num);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long sum = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = Long.MIN_VALUE;\n        long maxIndex\
    \ = -1;\n        for(long num : nums) {\n            sum += num;\n           \
    \ if(sum > maxSum) {\n                maxSum = sum;\n                maxIndex\
    \ = num;\n            }\n        }\n        for(long num : nums) {\n         \
    \   if(num == maxIndex) {\n                result.add(num);\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(num);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               long diff = o1 - o2;\n                return diff < 0 ? -1 : diff\
    \ > 0 ? 1 : 0;\n            }\n        });\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     long maxSum = 0;\n        long minSum = Long.MAX_VALUE;\n        for (long\
    \ num : nums) {\n            sum += num;\n            if (sum > maxSum) {\n  \
    \              maxSum = sum;\n            }\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        for (long num\
    \ : nums) {\n            sum += num;\n            if (sum == maxSum) {\n     \
    \           result.add(num);\n            }\n            if (sum == minSum) {\n\
    \                result.add(num);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(num);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      @Override\n            public int compare(Long o1, Long o2) {\n       \
    \         return sum - o1 - o2;\n            }\n        });\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n    \
    \    for (long num : nums) {\n            sum += num;\n            result.add(num);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      public int compare(Long o1, Long o2) {\n                return (int) (o1\
    \ - o2);\n            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for(long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return sum - o1.compareTo(o2);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        long maxSum\
    \ = 0;\n        long maxSumIndex = 0;\n        for(long num : nums) {\n      \
    \      sum += num;\n            if(sum > maxSum) {\n                maxSum = sum;\n\
    \                maxSumIndex = num;\n            }\n        }\n        for(long\
    \ num : nums) {\n            if(num == maxSumIndex) {\n                result.add(num);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            result.add(num);\n        }\n      \
    \  Collections.sort(result, new Comparator<Long>() {\n            public int compare(Long\
    \ o1, Long o2) {\n                return (int) (o1 - o2);\n            }\n   \
    \     });\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return (int) (o1 - o2);\n \
    \           }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (Long num\
    \ : nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return sum - o1.compareTo(o2);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                long diff = o1 - o2;\n    \
    \            if (diff == 0) {\n                    return 0;\n               \
    \ }\n                return diff < 0 ? -1 : 1;\n            }\n        });\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            if (sum > maxSum) {\n              \
    \  maxSum = sum;\n            }\n            result.add(num);\n        }\n   \
    \     Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for(long num\
    \ : nums) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        Collections.sort(result, new Comparator<Long>() {\n            public\
    \ int compare(Long o1, Long o2) {\n                long diff = o1 - o2;\n    \
    \            if(diff < 0) {\n                    return -1;\n                }\
    \ else if(diff > 0) {\n                    return 1;\n                } else {\n\
    \                    return 0;\n                }\n            }\n        });\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        for (long num\
    \ : nums) {\n            sum += num;\n            if (sum == max) {\n        \
    \        result.add(num);\n            } else if (sum == min) {\n            \
    \    result.add(num);\n            } else if (sum > max) {\n                result.add(num);\n\
    \            } else if (sum < min) {\n                result.add(num);\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (Long num :\
    \ nums) {\n            sum += num;\n            result.add(sum);\n        }\n\
    \        Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long maxSum = 0;\n\
    \        long maxIndex = 0;\n        for (long num : nums) {\n            sum\
    \ += num;\n            if (sum > maxSum) {\n                maxSum = sum;\n  \
    \              maxIndex = num;\n            }\n        }\n        for (long num\
    \ : nums) {\n            if (num == maxIndex) {\n                result.add(num);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            result.add(sum);\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long sum = 0;\n        long maxSum\
    \ = 0;\n        for (long num : nums) {\n            sum += num;\n           \
    \ if (sum > maxSum) {\n                maxSum = sum;\n            }\n        }\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ == maxSum) {\n                result.add(num);\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        long maxSumIndex = 0;\n        for(long num : nums) {\n            sum\
    \ += num;\n            if(sum > maxSum) {\n                maxSum = sum;\n   \
    \             maxIndex = num;\n                maxSumIndex = num;\n          \
    \  }\n            if(sum == maxSum) {\n                maxSumIndex += num;\n \
    \           }\n        }\n        for(long num : nums) {\n            if(num ==\
    \ maxIndex) {\n                result.add(maxSumIndex);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ o1, Long o2) {\n                return (int) (o1 - o2);\n            }\n   \
    \     });\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxIndex = num;\n\
    \            }\n        }\n        for (long num : nums) {\n            if (num\
    \ == maxIndex) {\n                result.add(num);\n            }\n        }\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

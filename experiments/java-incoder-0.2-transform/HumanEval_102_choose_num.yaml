name: HumanEval_102_choose_num
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>> chooseNum((13l),\
  \ (12l))\n    // (-1l)\n    public static long chooseNum(long x, long y) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
  \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
  \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n \
  \   assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
  \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
  \ (546l)) == (546l));\n    }\n\n}\n"
completions: ["        long maxEven = -1;\n        long minEven = -1;\n        long\
    \ even = -1;\n        long odd = 0;\n        long evenMax = -1;\n        long\
    \ evenMin = -1;\n        long oddMax = -1;\n        long oddMin = -1;\n      \
    \  long evenMax2 = -1;\n        long evenMin2 = -1;\n        long oddMax2 = -1;\n\
    \        long oddMin2 = -1;\n        long evenMax3 = -1;\n        long evenMin3\
    \ = -1;\n        long oddMax3 = -1;\n        long oddMin3 = -1;\n        long\
    \ evenMax4 = -1;\n        long evenMin4 = -1;\n        long oddMax4 = -1;\n  \
    \      long oddMin4 = -1;\n        long evenMax5 = -1;\n        long evenMin5\
    \ = -1;\n        long oddMax5 = -1;\n        long oddMin5 = -1;\n        long\
    \ evenMax6 = -1;\n        long evenMin6 = -1;\n        long oddMax6 = -1;\n  \
    \      long oddMin6 = -1;\n        long evenMax7 = -1;\n        long evenMin7\
    \ = -1;\n        long oddMax7 = -1;\n        long oddMin7 = -1;\n        long\
    \ evenMax8 = -1;\n        long evenMin8 = -1;\n        long oddMax8 = -1;\n  \
    \      long oddMin8 = -1;\n        long evenMax9 = -1;\n        long evenMin9\
    \ = -1;\n        long oddMax9 = -1;\n        long oddMin9 = -1;\n        long\
    \ evenMax10 = -1;\n        long evenMin10 = -1;\n        long oddMax10 = -1;\n\
    \        long oddMin10 = -1;\n        long evenMax11 = -1;\n        long evenMin11\
    \ = -1;\n        long oddMax11 = -1;\n        long oddMin11 = -1;\n        long\
    \ evenMax12 = -1;\n        long evenMin12 = -1;\n        long oddMax12 = -1;\n\
    \        long oddMin12 = -1;\n        long evenMax13 = -1;\n        long evenMin13\
    \ = -1;\n        long oddMax13 = -1;\n        long oddMin13 = -1;\n        long\
    \ evenMax14 = -1;\n        long evenMin14 = -1;\n        long oddMax14 = -1;\n\
    \        long oddMin14 = -1;\n        long evenMax15 = -1;\n        long evenMin15\
    \ = -1;\n        long oddMax15 = -1;\n        long oddMin15 = -1;\n        long\
    \ evenMax16 = -1;\n        long evenMin16 = -1;\n        long oddMax16 = -1;\n\
    \        long oddMin16 = -1;\n        long evenMax17 = -1;\n        long evenMin17\
    \ = -1;\n        long oddMax17 = -1;", "        long result = -1;\n        if\
    \ (x >= y) {\n            long temp = x;\n            x = y;\n            y =\
    \ temp;\n        }\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\
    \ {\n            result = mid;\n        }\n        if (mid > y) {\n          \
    \  result = y;\n        }\n        if (mid < x) {\n            result = x;\n \
    \       }\n        return result;", "        long max = 0;\n        long min =\
    \ (long) Math.max(x, y);\n        long mid = (long) Math.floor((x + y) / 2);\n\
    \        long mid2 = (long) Math.floor((x + y) / 2);\n        long mid3 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid4 = (long) Math.floor((x + y) / 2);\n\
    \        long mid5 = (long) Math.floor((x + y) / 2);\n        long mid6 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid7 = (long) Math.floor((x + y) / 2);\n\
    \        long mid8 = (long) Math.floor((x + y) / 2);\n        long mid9 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid10 = (long) Math.floor((x + y) / 2);\n\
    \        long mid11 = (long) Math.floor((x + y) / 2);\n        long mid12 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid13 = (long) Math.floor((x + y) / 2);\n\
    \        long mid14 = (long) Math.floor((x + y) / 2);\n        long mid15 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid16 = (long) Math.floor((x + y) / 2);\n\
    \        long mid17 = (long) Math.floor((x + y) / 2);\n        long mid18 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid19 = (long) Math.floor((x + y) / 2);\n\
    \        long mid20 = (long) Math.floor((x + y) / 2);\n        long mid21 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid22 = (long) Math.floor((x + y) / 2);\n\
    \        long mid23 = (long) Math.floor((x + y) / 2);\n        long mid24 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid25 = (long) Math.floor((x + y) / 2);\n\
    \        long mid26 = (long) Math.floor((x + y) / 2);\n        long mid27 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid28 = (long) Math.floor((x + y) / 2);\n\
    \        long mid29 = (long) Math.floor((x + y) / 2);\n        long mid30 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid31 = (long) Math.floor((x + y) / 2);\n\
    \        long mid32 = (long) Math.floor((x + y) / 2);\n        long mid33 = (long)\
    \ Math.floor((x + y) / 2);\n        long mid34 = (long) Math.floor((x + y) / 2);\n\
    \        long mid35 = (long) Math.floor((x + y) / 2);\n        long mid36 = (long)\
    \ Math.floor", "        long maxEven = -1;\n        long even = x;\n        long\
    \ odd = y;\n        while(even < odd) {\n            long temp = even;\n     \
    \       even = odd % even;\n            odd = temp % odd;\n            if(even\
    \ > maxEven) {\n                maxEven = even;\n            }\n        }\n  \
    \      return maxEven;", "        long result = -1;\n        if (x >= y) {\n \
    \           long temp = x;\n            x = y;\n            y = temp;\n      \
    \  }\n        if (x % 2 == 0) {\n            long temp1 = x;\n            x =\
    \ y;\n            y = temp1;\n        }\n        if (y % 2 == 0) {\n         \
    \   long temp2 = y;\n            y = x;\n            x = temp2;\n        }\n \
    \       if (x >= y) {\n            long temp3 = x;\n            x = y;\n     \
    \       y = temp3;\n        }\n        if (y % 2 == 0) {\n            long temp4\
    \ = y;\n            y = x;\n            x = temp4;\n        }\n        if (x >=\
    \ y) {\n            long temp5 = x;\n            x = y;\n            y = temp5;\n\
    \        }\n        if (y % 2 == 0) {\n            long temp6 = y;\n         \
    \   y = x;\n            x = temp6;\n        }\n        if (x >= y) {\n       \
    \     long temp7 = x;\n            x = y;\n            y = temp7;\n        }\n\
    \        if (y % 2 == 0) {\n            long temp8 = y;\n            y = x;\n\
    \            x = temp8;\n        }\n        if (x >= y) {\n            long temp9\
    \ = x;\n            x = y;\n            y = temp9;\n        }\n        if (y %\
    \ 2 == 0) {\n            long temp10 = y;\n            y = x;\n            x =\
    \ temp10;\n        }\n        if (x >= y) {\n            long temp11 = x;\n  \
    \          x = y;\n            y = temp11;\n        }\n        if (y % 2 == 0)\
    \ {\n            long temp12 = y;\n            y = x;\n            x = temp12;\n\
    \        }\n        if (x >= y) {\n            long temp13 = x;\n            x\
    \ = y;\n            y = temp13;\n        }\n        if (y % 2 == 0) {\n      \
    \      long temp14 = y;\n            y = x;\n            x = temp14;\n       \
    \ }\n        if (x >= y) {\n            long temp15 = x;\n            x = y;\n\
    \            y = temp15;\n        }\n        if (y % 2 == 0) {\n            long\
    \ temp16 = y;\n            y = x;\n            x = temp16;\n        }\n      \
    \  if (x >= y) {\n            long temp17 = x;\n            x = y;\n         \
    \   y = temp17;\n        }\n        if (y % 2 == 0) {\n            long temp18\
    \ = y;\n            y = x;\n            x = temp18;\n        }\n        if (x\
    \ >= y) {\n            long temp19 = x;\n            x = y;\n            y = temp19;\n\
    \        }\n        if (y % 2 == 0) {\n            long temp20 = y;\n        \
    \    y = x;\n            x = temp20;\n        }\n        if (x >= y) {\n     \
    \       long temp21 = x;\n            x = y;\n            y = temp21;\n      \
    \  }\n        if (y % 2 == 0) {\n            long temp22 = y;\n            y =\
    \ x;\n            x = temp22;\n        }\n        if (x >= y) {\n            long\
    \ temp23 = x;\n            x = y;\n            y = temp23;\n        }\n      \
    \  if (y % 2 == 0) {\n            long temp24 = ", "        long even = x;\n \
    \       long odd = y;\n        long biggest = -1;\n        while (even < odd)\
    \ {\n            biggest = even;\n            even = even + 1;\n            if\
    \ (even > odd) {\n                even = even - 1;\n                odd = odd\
    \ + 1;\n            }\n        }\n        return biggest;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while(even < odd) {\n            even *= 2;\n            odd\
    \ *= 2;\n            if(even > odd) {\n                biggest = even;\n     \
    \           smallest = odd;\n            } else {\n                biggest = odd;\n\
    \                smallest = even;\n            }\n        }\n        return biggest;",
  "        long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     while(even < odd) {\n            long mid = (even+odd)/2;\n            if(mid\
    \ % 2 == 0) {\n                even = mid;\n            } else {\n           \
    \     odd = mid;\n            }\n            if(even > biggest) {\n          \
    \      biggest = even;\n            }\n        }\n        return biggest;", " \
    \       long even = x;\n        long odd = y;\n        long biggest = even;\n\
    \        long biggestOdd = odd;\n        long biggestEven = even;\n        long\
    \ biggestOddEven = even;\n        long biggestOddEvenOdd = odd;\n        long\
    \ biggestOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEven = even;\n        long\
    \ biggestOddEvenOddEvenOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n    \
    \    long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n      \
    \  long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n   \
    \     long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long big", "        long even = x;\n        long odd = y;\n\
    \        long biggest = even;\n        long smallest = odd;\n        boolean evenFound\
    \ = false;\n        boolean oddFound = false;\n        while(even < odd && !evenFound\
    \ && !oddFound) {\n            if(even % 2 == 0) {\n                evenFound\
    \ = true;\n                biggest = even;\n            }\n            else {\n\
    \                oddFound = true;\n                smallest = odd;\n         \
    \   }\n            even = even * 2 + 1;\n            odd = odd * 2 + 1;\n    \
    \    }\n        if(evenFound && oddFound) {\n            biggest = even;\n   \
    \         smallest = odd;\n        }\n        return biggest;", "        long\
    \ biggest = -1;\n        long even = x;\n        long odd = y;\n        long temp;\n\
    \        while (even < odd) {\n            temp = even;\n            even = odd\
    \ % even;\n            odd = temp % odd;\n            if (even > biggest) {\n\
    \                biggest = even;\n            }\n        }\n        return biggest;",
  "        long max = x;\n        long min = y;\n        long mid;\n        do {\n\
    \            mid = (min + max) / 2;\n            if (mid % 2 == 0) {\n       \
    \         max = mid;\n            } else {\n                min = mid;\n     \
    \       }\n        } while (max < min);\n        return max;", "        long even\
    \ = x & 1;\n        long odd = x >> 1;\n        long evenodd = even | odd;\n \
    \       long result = evenodd * y;\n        if (result < x)\n            return\
    \ -1;\n        return result;", "        long even = x;\n        long odd = y;\n\
    \        long biggest = -1;\n        long temp;\n        while (even < odd) {\n\
    \            temp = even;\n            even = odd % even;\n            odd = temp\
    \ % odd;\n            if (even > biggest) {\n                biggest = even;\n\
    \            }\n        }\n        return biggest;", "        long maxEven = -1;\n\
    \        long minEven = -1;\n        long even = -1;\n        long odd = 0;\n\
    \        long evenMax = -1;\n        long evenMin = -1;\n        long oddMax =\
    \ -1;\n        long oddMin = -1;\n        long evenMax2 = -1;\n        long evenMin2\
    \ = -1;\n        long oddMax2 = -1;\n        long oddMin2 = -1;\n        long\
    \ evenMax3 = -1;\n        long evenMin3 = -1;\n        long oddMax3 = -1;\n  \
    \      long oddMin3 = -1;\n        long evenMax4 = -1;\n        long evenMin4\
    \ = -1;\n        long oddMax4 = -1;\n        long oddMin4 = -1;\n        long\
    \ evenMax5 = -1;\n        long evenMin5 = -1;\n        long oddMax5 = -1;\n  \
    \      long oddMin5 = -1;\n        long evenMax6 = -1;\n        long evenMin6\
    \ = -1;\n        long oddMax6 = -1;\n        long oddMin6 = -1;\n        long\
    \ evenMax7 = -1;\n        long evenMin7 = -1;\n        long oddMax7 = -1;\n  \
    \      long oddMin7 = -1;\n        long evenMax8 = -1;\n        long evenMin8\
    \ = -1;\n        long oddMax8 = -1;\n        long oddMin8 = -1;\n        long\
    \ evenMax9 = -1;\n        long evenMin9 = -1;\n        long oddMax9 = -1;\n  \
    \      long oddMin9 = -1;\n        long evenMax10 = -1;\n        long evenMin10\
    \ = -1;\n        long oddMax10 = -1;\n        long oddMin10 = -1;\n        long\
    \ evenMax11 = -1;\n        long evenMin11 = -1;\n        long oddMax11 = -1;\n\
    \        long oddMin11 = -1;\n        long evenMax12 = -1;\n        long evenMin12\
    \ = -1;\n        long oddMax12 = -1;\n        long oddMin12 = -1;\n        long\
    \ evenMax13 = -1;\n        long evenMin13 = -1;\n        long oddMax13 = -1;\n\
    \        long oddMin13 = -1;\n        long evenMax14 = -1;\n        long evenMin14\
    \ = -1;\n        long oddMax14 = -1;\n        long oddMin14 = -1;\n        long\
    \ evenMax15 = -1;\n        long evenMin15 = -1;\n        long oddMax15 = -1;\n\
    \        long oddMin15 = -1;\n        long evenMax16 = -1;\n        long evenMin16\
    \ = -1;\n        long oddMax16 = -1;\n        long oddMin16 = -1;\n        long\
    \ evenMax17 = -1;\n        long evenMin17 = -1;\n        long oddMax17 = -1;",
  "        long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     while(even < odd) {\n            biggest = even;\n            even = even\
    \ + 1;\n            odd = odd - 1;\n        }\n        return biggest;", "   \
    \     long max = (long) Math.max(x, y);\n        long min = (long) Math.min(x,\
    \ y);\n        long even = max / 2;\n        long odd = max % 2;\n        if (even\
    \ > odd) {\n            return even;\n        } else {\n            return -1;\n\
    \        }", "        long even = x | y;\n        long odd = x ^ y;\n        long\
    \ biggest = even;\n        if (odd > even) {\n            biggest = odd;\n   \
    \     }\n        return biggest;", "        long max = Math.max(x, y);\n     \
    \   long min = Math.min(x, y);\n        long even = max;\n        long odd = min;\n\
    \        long evenMax = even;\n        long oddMin = odd;\n        while (even\
    \ > 0 && odd > 0) {\n            evenMax = even;\n            oddMin = odd;\n\
    \            if (even % 2 == 0 && odd % 2 == 0) {\n                even = even\
    \ / 2;\n                odd = odd / 2;\n            } else if (even % 2 != 0 &&\
    \ odd % 2 != 0) {\n                even = even / 2;\n                odd = odd\
    \ / 2;\n            } else if (even % 2 == 0 && odd % 2 != 0) {\n            \
    \    even = even / 2;\n                odd = odd * 2;\n            } else if (even\
    \ % 2 != 0 && odd % 2 == 0) {\n                even = even * 2;\n            \
    \    odd = odd / 2;\n            }\n        }\n        if (evenMax > oddMin) {\n\
    \            return evenMax;\n        } else {\n            return oddMin;\n \
    \       }", "        long max = 0;\n        long min = 0;\n        long mid =\
    \ 0;\n        long sum = 0;\n        long even = 0;\n        long odd = 0;\n \
    \       long evenSum = 0;\n        long oddSum = 0;\n        long evenMax = 0;\n\
    \        long oddMax = 0;\n        long evenMin = 0;\n        long oddMin = 0;\n\
    \        long evenSum2 = 0;\n        long oddSum2 = 0;\n        long evenMax2\
    \ = 0;\n        long oddMax2 = 0;\n        long evenMin2 = 0;\n        long oddMin2\
    \ = 0;\n        long evenSum3 = 0;\n        long oddSum3 = 0;\n        long evenMax3\
    \ = 0;\n        long oddMax3 = 0;\n        long evenMin3 = 0;\n        long oddMin3\
    \ = 0;\n        long evenSum4 = 0;\n        long oddSum4 = 0;\n        long evenMax4\
    \ = 0;\n        long oddMax4 = 0;\n        long evenMin4 = 0;\n        long oddMin4\
    \ = 0;\n        long evenSum5 = 0;\n        long oddSum5 = 0;\n        long evenMax5\
    \ = 0;\n        long oddMax5 = 0;\n        long evenMin5 = 0;\n        long oddMin5\
    \ = 0;\n        long evenSum6 = 0;\n        long oddSum6 = 0;\n        long evenMax6\
    \ = 0;\n        long oddMax6 = 0;\n        long evenMin6 = 0;\n        long oddMin6\
    \ = 0;\n        long evenSum7 = 0;\n        long oddSum7 = 0;\n        long evenMax7\
    \ = 0;\n        long oddMax7 = 0;\n        long evenMin7 = 0;\n        long oddMin7\
    \ = 0;\n        long evenSum8 = 0;\n        long oddSum8 = 0;\n        long evenMax8\
    \ = 0;\n        long oddMax8 = 0;\n        long evenMin8 = 0;\n        long oddMin8\
    \ = 0;\n        long evenSum9 = 0;\n        long oddSum9 = 0;\n        long evenMax9\
    \ = 0;\n        long oddMax9 = 0;\n        long evenMin9 = 0;\n        long oddMin9\
    \ = 0;\n        long evenSum10 = 0;\n        long oddSum10 = 0;\n        long\
    \ evenMax10 = 0;\n        long oddMax10 = 0;\n        long evenMin10 = 0;\n  \
    \      long oddMin10 = 0;\n        long evenSum11 = 0;\n        long oddSum11\
    \ = 0;\n        long evenMax11 = 0;\n        long oddMax11 = 0;\n        long\
    \ evenMin11 = 0;\n        long oddMin11 = 0;\n        long evenSum12 = 0;\n  \
    \      long oddSum12 = 0;\n        long evenMax12 = 0;\n        long oddMax12\
    \ = 0;\n        long evenMin12 = 0;\n        long oddMin12 = 0;\n        long\
    \ evenSum13 = 0;\n        ", "        long maxEven = -1;\n        long minEven\
    \ = -1;\n        long even = -1;\n        long odd = 0;\n        long evenMax\
    \ = -1;\n        long evenMin = -1;\n        long oddMax = -1;\n        long oddMin\
    \ = -1;\n        long evenMax2 = -1;\n        long evenMin2 = -1;\n        long\
    \ oddMax2 = -1;\n        long oddMin2 = -1;\n        long evenMax3 = -1;\n   \
    \     long evenMin3 = -1;\n        long oddMax3 = -1;\n        long oddMin3 =\
    \ -1;\n        long evenMax4 = -1;\n        long evenMin4 = -1;\n        long\
    \ oddMax4 = -1;\n        long oddMin4 = -1;\n        long evenMax5 = -1;\n   \
    \     long evenMin5 = -1;\n        long oddMax5 = -1;\n        long oddMin5 =\
    \ -1;\n        long evenMax6 = -1;\n        long evenMin6 = -1;\n        long\
    \ oddMax6 = -1;\n        long oddMin6 = -1;\n        long evenMax7 = -1;\n   \
    \     long evenMin7 = -1;\n        long oddMax7 = -1;\n        long oddMin7 =\
    \ -1;\n        long evenMax8 = -1;\n        long evenMin8 = -1;\n        long\
    \ oddMax8 = -1;\n        long oddMin8 = -1;\n        long evenMax9 = -1;\n   \
    \     long evenMin9 = -1;\n        long oddMax9 = -1;\n        long oddMin9 =\
    \ -1;\n        long evenMax10 = -1;\n        long evenMin10 = -1;\n        long\
    \ oddMax10 = -1;\n        long oddMin10 = -1;\n        long evenMax11 = -1;\n\
    \        long evenMin11 = -1;\n        long oddMax11 = -1;\n        long oddMin11\
    \ = -1;\n        long evenMax12 = -1;\n        long evenMin12 = -1;\n        long\
    \ oddMax12 = -1;\n        long oddMin12 = -1;\n        long evenMax13 = -1;\n\
    \        long evenMin13 = -1;\n        long oddMax13 = -1;\n        long oddMin13\
    \ = -1;\n        long evenMax14 = -1;\n        long evenMin14 = -1;\n        long\
    \ oddMax14 = -1;\n        long oddMin14 = -1;\n        long evenMax15 = -1;\n\
    \        long evenMin15 = -1;\n        long oddMax15 = -1;\n        long oddMin15\
    \ = -1;\n        long evenMax16 = -1;\n        long evenMin16 = -1;\n        long\
    \ oddMax16 = -1;\n        long oddMin16 = -1;\n        long evenMax17 = -1;\n\
    \        long evenMin17 = -1;\n        long oddMax17 = -1;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while (even < odd) {\n            even *= 2;\n            odd\
    \ *= 2;\n            if (even > odd)\n                biggest = even;\n      \
    \      else\n                smallest = odd;\n        }\n        if (biggest >\
    \ smallest && biggest % 2 == 0)\n            return biggest;\n        else\n \
    \           return -1;", "        long max = Math.max(x, y);\n        long min\
    \ = Math.min(x, y);\n        long even = min / 2;\n        long odd = max - even;\n\
    \        if (even % 2 == 0 && odd % 2 == 0) {\n            return even;\n    \
    \    }\n        if (even % 2 != 0 && odd % 2 != 0) {\n            return odd;\n\
    \        }\n        return -1;", "        long even = x;\n        long odd = y;\n\
    \        long biggest = even;\n        long smallest = odd;\n        while (even\
    \ > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n      \
    \          biggest = even;\n                smallest = odd;\n            }\n \
    \           even = even / 2;\n            odd = odd / 2;\n        }\n        if\
    \ (even > 0 && odd > 0) {\n            biggest = even;\n            smallest =\
    \ odd;\n        }\n        if (biggest > 0 && smallest > 0) {\n            return\
    \ biggest;\n        }\n        return -1;", "        long even = x;\n        long\
    \ odd = y;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   while(even > 0 && odd > 0) {\n            if(even % 2 == 0 && odd % 2 == 0)\
    \ {\n                biggest = even;\n                smallest = odd;\n      \
    \      }\n            else if(even % 2 == 0 && odd % 2 != 0) {\n             \
    \   biggest = even;\n            }\n            else if(even % 2 != 0 && odd %\
    \ 2 == 0) {\n                biggest = odd;\n            }\n            else if(even\
    \ % 2 != 0 && odd % 2 != 0) {\n                biggest = even;\n             \
    \   smallest = odd;\n            }\n            even = even / 2;\n           \
    \ odd = odd / 2;\n        }\n        return biggest;", "        long max = x;\n\
    \        long min = y;\n        long mid;\n        while (max < min) {\n     \
    \       mid = (max + min) / 2;\n            if (isEven(mid)) {\n             \
    \   max = mid;\n            } else {\n                min = mid;\n           \
    \ }\n        }\n        return max;", "        long even = x;\n        long odd\
    \ = y;\n        long biggest = even;\n        long smaller = odd;\n        while(even\
    \ > 0 && odd > 0) {\n            if(even % 2 == 0 && odd % 2 == 0) {\n       \
    \         biggest = even;\n                smaller = odd;\n            }\n   \
    \         else if(even % 2 == 0 && odd % 2 != 0) {\n                biggest =\
    \ even;\n                smaller = odd;\n            }\n            else if(even\
    \ % 2 != 0 && odd % 2 == 0) {\n                biggest = even;\n             \
    \   smaller = odd;\n            }\n            else if(even % 2 != 0 && odd %\
    \ 2 != 0) {\n                biggest = even;\n                smaller = odd;\n\
    \            }\n            even = even / 2;\n            odd = odd / 2;\n   \
    \     }\n        if(even > 0 && odd > 0) {\n            biggest = even;\n    \
    \        smaller = odd;\n        }\n        return biggest;", "        long max\
    \ = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even = max\
    \ / 2;\n        long odd = max - even;\n        long evenMax = even;\n       \
    \ long oddMax = odd;\n        long evenMin = even;\n        long oddMin = odd;\n\
    \        long evenMinMax = evenMin;\n        long oddMinMax = oddMin;\n      \
    \  long evenMaxMin = evenMax;\n        long oddMaxMin = oddMax;\n        long\
    \ evenMinMaxMin = evenMinMax;\n        long oddMinMaxMin = oddMinMax;\n      \
    \  long evenMaxMinMin = evenMaxMin;\n        long oddMaxMinMin = oddMaxMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMinMin;\n\
    \        long evenMaxMinMin = evenMaxMinMin;\n        long oddMaxMinMin = oddMaxMin",
  "        long even = x;\n        long odd = y;\n        long biggest = even;\n \
    \       long biggestOdd = odd;\n        long evenRemainder = 0;\n        long\
    \ oddRemainder = 0;\n        long remainder = 0;\n        long temp;\n       \
    \ long tempEven;\n        long tempOdd;\n        long tempBiggest;\n        long\
    \ tempBiggestOdd;\n        long tempEvenRemainder;\n        long tempOddRemainder;\n\
    \        long tempRemainder;\n        long tempTemp;\n        long tempEvenTemp;\n\
    \        long tempOddTemp;\n        long tempBiggestTemp;\n        long tempBiggestOddTemp;\n\
    \        long tempEvenRemainderTemp;\n        long tempOddRemainderTemp;\n   \
    \     long tempRemainderTemp;\n        long tempTempEven;\n        long tempTempOdd;\n\
    \        long tempTempBiggest;\n        long tempTempBiggestOdd;\n        long\
    \ tempTempEvenRemainder;\n        long tempTempOddRemainder;\n        long tempTempRemainder;\n\
    \        long tempTempTemp;\n        long tempTempEvenTemp;\n        long tempTempOddTemp;\n\
    \        long tempTempBiggestTemp;\n        long tempTempBiggestOddTemp;\n   \
    \     long tempTempEvenRemainderTemp;\n        long tempTempOddRemainderTemp;\n\
    \        long tempTempRemainderTemp;\n        long tempTempTempEven;\n       \
    \ long tempTempTempOdd;\n        long tempTempTempBiggest;\n        long tempTempTempBiggestOdd;\n\
    \        long tempTempTempEvenRemainder;\n        long tempTempTempOddRemainder;\n\
    \        long tempTempTempRemainder;\n        long tempTempTempTemp;\n       \
    \ long tempTempTempEvenTemp;\n        long tempTempTempOddTemp;\n        long\
    \ tempTempTempBiggestTemp;\n        long tempTempTempBiggestOddTemp;\n       \
    \ long tempTempTempEvenRemainderTemp;\n        long tempTempTempOddRemainderTemp;\n\
    \        long tempTempTempRemainderTemp;\n        long tempTempTempTempEven;\n\
    \        long tempTempTempTempOdd;\n        long tempTempTempTempBiggest;\n  \
    \      long tempTempTempTempBiggestOdd;\n        long tempTempTempTempEvenRemainder;\n\
    \        long temp", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        while(even < odd) {\n\
    \            even *= 2;\n            odd *= 2;\n            if(even > odd)\n \
    \               biggest = even;\n            else\n                smallest =\
    \ odd;\n        }\n        return biggest;", "        long max = -1;\n       \
    \ long min = 0;\n        long mid = 0;\n        long xMin = x;\n        long xMax\
    \ = x;\n        long yMin = y;\n        long yMax = y;\n        long xMid;\n \
    \       long yMid;\n        long xMid1;\n        long yMid1;\n        long xMid2;\n\
    \        long yMid2;\n        long xMid3;\n        long yMid3;\n        long xMid4;\n\
    \        long yMid4;\n        long xMid5;\n        long yMid5;\n        long xMid6;\n\
    \        long yMid6;\n        long xMid7;\n        long yMid7;\n        long xMid8;\n\
    \        long yMid8;\n        long xMid9;\n        long yMid9;\n        long xMid10;\n\
    \        long yMid10;\n        long xMid11;\n        long yMid11;\n        long\
    \ xMid12;\n        long yMid12;\n        long xMid13;\n        long yMid13;\n\
    \        long xMid14;\n        long yMid14;\n        long xMid15;\n        long\
    \ yMid15;\n        long xMid16;\n        long yMid16;\n        long xMid17;\n\
    \        long yMid17;\n        long xMid18;\n        long yMid18;\n        long\
    \ xMid19;\n        long yMid19;\n        long xMid20;\n        long yMid20;\n\
    \        long xMid21;\n        long yMid21;\n        long xMid22;\n        long\
    \ yMid22;\n        long xMid23;\n        long yMid23;\n        long xMid24;\n\
    \        long yMid24;\n        long xMid25;\n        long yMid25;\n        long\
    \ xMid26;\n        long yMid26;\n        long xMid27;\n        long yMid27;\n\
    \        long xMid28;\n        long yMid28;\n        long xMid29;\n        long\
    \ yMid29;\n        long xMid30;\n        long yMid30;\n        long xMid31;\n\
    \        long yMid31;\n        long xMid32;\n        long yMid32;\n        long\
    \ xMid33;\n        long yMid33;\n        long xMid34;\n        long yMid34;\n\
    \        long xMid35;\n        long yMid35;\n        long x", "        long biggest\
    \ = -1;\n        long even = x;\n        long odd = y;\n        while(even < odd)\
    \ {\n            long mid = (even + odd) / 2;\n            if(mid % 2 == 0) {\n\
    \                even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n        }\n        biggest = even;\n        return biggest;",
  "        long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     while (even < odd) {\n            biggest = even;\n            even = even\
    \ + 1;\n            if (even > odd) {\n                even = even - 1;\n    \
    \            odd = odd + 1;\n            }\n        }\n        return biggest;",
  "        long even = x;\n        long odd = y;\n        long biggest = even;\n \
    \       long smallest = odd;\n        long evenSmaller = even;\n        long oddSmaller\
    \ = odd;\n        long evenBigger = even;\n        long oddBigger = odd;\n   \
    \     long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n \
    \       long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n \
    \       long evenBiggerBiggerSmaller = even;\n        long oddBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBigger = even;\n        long oddBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = even;\n        long oddBiggerBiggerBiggerBigger\
    \ = odd;\n        long evenBiggerBiggerBiggerSmaller = even;\n        long oddBiggerBiggerBiggerSmaller\
    \ = odd;\n        long evenBiggerBiggerBiggerBigger = ", "        long max = (long)\
    \ Math.max(x, y);\n        long min = (long) Math.min(x, y);\n        long even\
    \ = min % 2 == 0;\n        long evenMax = max % 2 == 0;\n        if (evenMax &&\
    \ even) {\n            return min;\n        }\n        if (evenMax && !even) {\n\
    \            return max;\n        }\n        if (!evenMax && even) {\n       \
    \     return -1;\n        }\n        if (evenMax && !even) {\n            return\
    \ -1;\n        }\n        return -1;", "        long ans = -1;\n        if (x\
    \ >= y) {\n            ans = x;\n        }\n        else {\n            ans =\
    \ y;\n        }\n        while (ans >= 2) {\n            ans -= 2;\n        }\n\
    \        return ans;", "        long biggest = -1;\n        long even = x;\n \
    \       long odd = y;\n        while(even < odd) {\n            long mid = (even+odd)/2;\n\
    \            if(mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n        }\n        biggest = even;\n\
    \        return biggest;", "        long even = x & 1;\n        long odd = x >>\
    \ 1;\n        long evenodd = even + odd;\n        long biggest = evenodd;\n  \
    \      long smallest = evenodd;\n        if (y > biggest) {\n            biggest\
    \ = y;\n        }\n        if (y < smallest) {\n            smallest = y;\n  \
    \      }\n        if (biggest > evenodd) {\n            biggest = evenodd;\n \
    \       }\n        if (smallest < evenodd) {\n            smallest = evenodd;\n\
    \        }\n        if (biggest == evenodd) {\n            return -1;\n      \
    \  }\n        if (smallest == evenodd) {\n            return -1;\n        }\n\
    \        if (biggest > even) {\n            biggest = even;\n        }\n     \
    \   if (smallest < even) {\n            smallest = even;\n        }\n        if\
    \ (biggest > odd) {\n            biggest = odd;\n        }\n        if (smallest\
    \ < odd) {\n            smallest = odd;\n        }\n        if (biggest == even)\
    \ {\n            return -1;\n        }\n        if (smallest == even) {\n    \
    \        return -1;\n        }\n        if (biggest > odd) {\n            biggest\
    \ = odd;\n        }\n        if (smallest < odd) {\n            smallest = odd;\n\
    \        }\n        if (biggest == odd) {\n            return -1;\n        }\n\
    \        if (smallest == odd) {\n            return -1;\n        }\n        if\
    \ (biggest > even) {\n            biggest = even;\n        }\n        if (smallest\
    \ < even) {\n            smallest = even;\n        }\n        if (biggest > odd)\
    \ {\n            biggest = odd;\n        }\n        if (smallest < odd) {\n  \
    \          smallest = odd;\n        }\n        if (biggest == even) {\n      \
    \      return -1;\n        }\n        if (smallest == even) {\n            return\
    \ -1;\n        }\n        if (biggest > even) {\n            biggest = even;\n\
    \        }\n        if (smallest < even) {\n            smallest = even;\n   \
    \     }\n        if (biggest > odd) {\n            biggest = odd;\n        }\n\
    \        if (smallest < odd) {\n            smallest = odd;\n        }\n     \
    \   if (biggest == even) {\n            return -1;\n        }\n        if (smallest\
    \ == even) {\n            return -1;\n        }\n        if (biggest > even) {\n\
    \            biggest = even;\n        }\n        if (smallest < even) {\n    \
    \        smallest = even;\n        }\n        if (biggest > odd) {\n         \
    \   biggest = odd;\n        }\n        if (smallest < odd) {\n            smallest\
    \ = odd;\n        }\n        if (biggest == even) {\n            return -1;\n\
    \        }\n        if (smallest == even) {\n            return -1;", "      \
    \  long biggest = -1;\n        long even = x;\n        long odd = y;\n       \
    \ while (even < odd) {\n            long mid = (even + odd) / 2;\n           \
    \ if (mid % 2 == 0) {\n                even = mid;\n            } else {\n   \
    \             odd = mid;\n            }\n        }\n        if (even > biggest)\
    \ {\n            biggest = even;\n        }\n        if (odd > biggest) {\n  \
    \          biggest = odd;\n        }\n        return biggest;", "        long\
    \ max = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even\
    \ = max / 2;\n        long odd = max % 2;\n        if (even > odd) {\n       \
    \     return even;\n        } else {\n            return -1;\n        }", "  \
    \      long result = -1;\n        if (x >= y) {\n            long mid = x + (y\
    \ - x) / 2;\n            if (mid % 2 == 0) {\n                result = mid;\n\
    \            }\n            else {\n                result = chooseNum(mid, y);\n\
    \            }\n        }\n        else {\n            long mid = x + (y - x)\
    \ / 2;\n            if (mid % 2 == 0) {\n                result = mid;\n     \
    \       }\n            else {\n                result = chooseNum(x, mid);\n \
    \           }\n        }\n        return result;", "        long even = x;\n \
    \       long odd = y;\n        long maxEven = even;\n        long maxOdd = odd;\n\
    \        long max;\n        do {\n            even = even + odd;\n           \
    \ odd = even - odd;\n            if (even > maxEven) {\n                maxEven\
    \ = even;\n            }\n            if (odd > maxOdd) {\n                maxOdd\
    \ = odd;\n            }\n        } while (even > maxEven || odd > maxOdd);\n \
    \       if (even > maxEven) {\n            max = even;\n        } else {\n   \
    \         max = odd;\n        }\n        return max;", "        long maxEven =\
    \ -1;\n        long even = x;\n        long odd = y;\n        while(even < odd)\
    \ {\n            long mid = (even+odd)/2;\n            if(mid % 2 == 0) {\n  \
    \              even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n            if(even > maxEven) {\n                maxEven = even;\n\
    \            }\n        }\n        return maxEven;", "        long even = x;\n\
    \        long odd = y;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        while (even < odd) {\n            even *= 2;\n            odd\
    \ *= 2;\n            if (even > odd)\n                biggest = even;\n      \
    \      else\n                smallest = odd;\n        }\n        if (biggest >\
    \ smallest && biggest % 2 == 0)\n            return biggest;\n        else\n \
    \           return -1;", "        long biggest = -1;\n        long even = x;\n\
    \        long odd = y;\n        while(even > 0 && odd > 0) {\n            if(even\
    \ % 2 == 0 && odd % 2 == 0) {\n                biggest = even;\n             \
    \   even = even / 2;\n                odd = odd / 2;\n            } else if(even\
    \ % 2 != 0 && odd % 2 != 0) {\n                biggest = odd;\n              \
    \  even = even / 2;\n                odd = odd / 2;\n            } else {\n  \
    \              biggest = -1;\n                break;\n            }\n        }\n\
    \        return biggest;", "        long maxEven = -1;\n        long even = x;\n\
    \        long odd = y;\n        while (even < odd) {\n            long mid = (even+odd)/2;\n\
    \            if (mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if (even > maxEven)\
    \ {\n                maxEven = even;\n            }\n        }\n        return\
    \ maxEven;", "        long max = 0;\n        long min = x;\n        long mid =\
    \ x;\n        while (min <= y) {\n            mid = (min + max) / 2;\n       \
    \     if (mid % 2 == 0) {\n                max = mid;\n            } else {\n\
    \                min = mid;\n            }\n        }\n        if (max >= y) {\n\
    \            return -1;\n        } else {\n            return max;\n        }",
  "        long maxEven = -1;\n        if (x >= y) {\n            long temp = x;\n\
    \            x = y;\n            y = temp;\n        }\n        long xMinusY =\
    \ x - y;\n        long xMinusYMinusOne = x - y - 1;\n        long xMinusYMinusTwo\
    \ = x - y - 2;\n        long xMinusYMinusThree = x - y - 3;\n        long xMinusYMinusFour\
    \ = x - y - 4;\n        long xMinusYMinusFive = x - y - 5;\n        long xMinusYMinusSix\
    \ = x - y - 6;\n        long xMinusYMinusSeven = x - y - 7;\n        long xMinusYMinusEight\
    \ = x - y - 8;\n        long xMinusYMinusNine = x - y - 9;\n        long xMinusYMinusTen\
    \ = x - y - 10;\n        long xMinusYMinusEleven = x - y - 11;\n        long xMinusYMinusTwelve\
    \ = x - y - 12;\n        long xMinusYMinusThirteen = x - y - 13;\n        long\
    \ xMinusYMinusFourteen = x - y - 14;\n        long xMinusYMinusFifteen = x - y\
    \ - 15;\n        long xMinusYMinusSixteen = x - y - 16;\n        long xMinusYMinusSeventeen\
    \ = x - y - 17;\n        long xMinusYMinusEighteen = x - y - 18;\n        long\
    \ xMinusYMinusNineteen = x - y - 19;\n        long xMinusYMinusTwenty = x - y\
    \ - 20;\n        long xMinusYMinusThirty = x - y - 30;\n        long xMinusYMinusFourty\
    \ = x - y - 40;\n        long xMinusYMinusFifty = x - y - 50;\n        long xMinusYMinusSixty\
    \ = x - y - 60;\n        long xMinusYMinusSeventy = x - y - 70;\n        long\
    \ xMinusYMinusEighty = x - y - 80;\n        long xMinusYMinusNinety = x - y -\
    \ 90;\n        long xMinusYMinusOneHundred = x - y - 100;\n        long xMinusYMinusTwoHundred\
    \ = x - y - 200;\n        long xMinusYMinusThreeHundred = x - y - 300;\n     \
    \   long xMinusYMin", "        long maxEven = -1;\n        long minEven = -1;\n\
    \        long minNum = x;\n        long maxNum = y;\n        long evenNum = 0;\n\
    \        long oddNum = 0;\n        long evenMax = -1;\n        long oddMax = -1;\n\
    \        long evenMin = -1;\n        long oddMin = -1;\n        long evenSum =\
    \ 0;\n        long oddSum = 0;\n        long evenMinSum = -1;\n        long oddMinSum\
    \ = -1;\n        long evenMaxSum = -1;\n        long oddMaxSum = -1;\n       \
    \ long evenMinSum2 = -1;\n        long oddMinSum2 = -1;\n        long evenMaxSum2\
    \ = -1;\n        long oddMaxSum2 = -1;\n        long evenMinSum3 = -1;\n     \
    \   long oddMinSum3 = -1;\n        long evenMaxSum3 = -1;\n        long oddMaxSum3\
    \ = -1;\n        long evenMinSum4 = -1;\n        long oddMinSum4 = -1;\n     \
    \   long evenMaxSum4 = -1;\n        long oddMaxSum4 = -1;\n        long evenMinSum5\
    \ = -1;\n        long oddMinSum5 = -1;\n        long evenMaxSum5 = -1;\n     \
    \   long oddMaxSum5 = -1;\n        long evenMinSum6 = -1;\n        long oddMinSum6\
    \ = -1;\n        long evenMaxSum6 = -1;\n        long oddMaxSum6 = -1;\n     \
    \   long evenMinSum7 = -1;\n        long oddMinSum7 = -1;\n        long evenMaxSum7\
    \ = -1;\n        long oddMaxSum7 = -1;\n        long evenMinSum8 = -1;\n     \
    \   long oddMinSum8 = -1;\n        long evenMaxSum8 = -1;\n        long oddMaxSum8\
    \ = -1;\n        long evenMinSum9 = -1;\n        long oddMinSum9 = -1;\n     \
    \   long evenMaxSum9 = -1;\n        long oddMaxSum9 = -1;\n        long evenMinSum10\
    \ = -1;\n        long oddMinSum10 = -1;\n        long evenMaxSum10 = -1;\n   \
    \     long oddMaxSum10 = -1;\n        long evenMinSum11 = -1;\n        long oddMinSum11\
    \ = -1;\n        long evenMaxSum11 = -1;\n        long oddMaxSum11 = -1;\n   \
    \     long evenMinSum12 = -1;\n        long oddMinSum12 = -1;\n        long evenMaxSum12\
    \ = -1;\n        long oddMaxSum12 = -1;\n        long evenMinSum13 = -1;\n   \
    \     long oddMinSum13 = -1;\n        long evenMaxSum13 = -1;\n        long oddMaxSum13\
    \ = -1;\n        long evenMinSum14 = -1;\n        long odd", "        long even\
    \ = x & 1;\n        long odd = x >> 1;\n        long biggest = even;\n       \
    \ if (odd > y) {\n            biggest = odd;\n        }\n        if (even > y)\
    \ {\n            biggest = even;\n        }\n        return biggest;", "     \
    \   long maxEven = -1;\n        long minEven = -1;\n        long even = -1;\n\
    \        long odd = 0;\n        long evenMin = -1;\n        long evenMax = -1;\n\
    \        long oddMin = -1;\n        long oddMax = -1;\n        long evenMin2 =\
    \ -1;\n        long evenMax2 = -1;\n        long oddMin2 = -1;\n        long oddMax2\
    \ = -1;\n        long evenMin3 = -1;\n        long evenMax3 = -1;\n        long\
    \ oddMin3 = -1;\n        long oddMax3 = -1;\n        long evenMin4 = -1;\n   \
    \     long evenMax4 = -1;\n        long oddMin4 = -1;\n        long oddMax4 =\
    \ -1;\n        long evenMin5 = -1;\n        long evenMax5 = -1;\n        long\
    \ oddMin5 = -1;\n        long oddMax5 = -1;\n        long evenMin6 = -1;\n   \
    \     long evenMax6 = -1;\n        long oddMin6 = -1;\n        long oddMax6 =\
    \ -1;\n        long evenMin7 = -1;\n        long evenMax7 = -1;\n        long\
    \ oddMin7 = -1;\n        long oddMax7 = -1;\n        long evenMin8 = -1;\n   \
    \     long evenMax8 = -1;\n        long oddMin8 = -1;\n        long oddMax8 =\
    \ -1;\n        long evenMin9 = -1;\n        long evenMax9 = -1;\n        long\
    \ oddMin9 = -1;\n        long oddMax9 = -1;\n        long evenMin10 = -1;\n  \
    \      long evenMax10 = -1;\n        long oddMin10 = -1;\n        long oddMax10\
    \ = -1;\n        long evenMin11 = -1;\n        long evenMax11 = -1;\n        long\
    \ oddMin11 = -1;\n        long oddMax11 = -1;\n        long evenMin12 = -1;\n\
    \        long evenMax12 = -1;\n        long oddMin12 = -1;\n        long oddMax12\
    \ = -1;\n        long evenMin13 = -1;\n        long evenMax13 = -1;\n        long\
    \ oddMin13 = -1;\n        long oddMax13 = -1;\n        long evenMin14 = -1;\n\
    \        long evenMax14 = -1;\n        long oddMin14 = -1;\n        long oddMax14\
    \ = -1;\n        long evenMin15 = -1;\n        long evenMax15 = -1;\n        long\
    \ oddMin15 = -1;\n        long oddMax15 = -1;\n        long evenMin16 = -1;\n\
    \        long evenMax16 = -1;\n        long oddMin16 = -1;\n        long oddMax16\
    \ = -1;\n        long evenMin17 = -1;\n        long evenMax17 = -1;\n        long\
    \ oddMin17 = -1;", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = -1;\n        while (even < odd) {\n            long mid = (even +\
    \ odd) / 2;\n            if (mid % 2 == 0) {\n                even = mid;\n  \
    \          } else {\n                odd = mid;\n            }\n            if\
    \ (even > biggest) {\n                biggest = even;\n            } else if (odd\
    \ > biggest) {\n                biggest = odd;\n            }\n        }\n   \
    \     return biggest;", "        long maxEven = -1;\n        long minEven = -1;\n\
    \        long maxOdd = -1;\n        long minOdd = -1;\n        long even = -1;\n\
    \        long odd = -1;\n        long xEven = -1;\n        long xOdd = -1;\n \
    \       long yEven = -1;\n        long yOdd = -1;\n        long xEvenEven = -1;\n\
    \        long xOddEven = -1;\n        long yEvenEven = -1;\n        long yOddEven\
    \ = -1;\n        long xEvenOdd = -1;\n        long xOddOdd = -1;\n        long\
    \ yEvenOdd = -1;\n        long yOddOdd = -1;\n        long xEvenEvenEven = -1;\n\
    \        long xOddEvenEven = -1;\n        long yEvenEvenEven = -1;\n        long\
    \ yOddEvenEven = -1;\n        long xEvenOddEven = -1;\n        long xOddOddEven\
    \ = -1;\n        long yEvenOddEven = -1;\n        long yOddOddEven = -1;\n   \
    \     long xEvenEvenOdd = -1;\n        long xOddEvenOdd = -1;\n        long yEvenEvenOdd\
    \ = -1;\n        long yOddEvenOdd = -1;\n        long xEvenOddOdd = -1;\n    \
    \    long xOddOddOdd = -1;\n        long yEvenOddOdd = -1;\n        long yOddOddOdd\
    \ = -1;\n        long xEvenEvenEvenEven = -1;\n        long xOddEvenEvenEven =\
    \ -1;\n        long yEvenEvenEven = -1;\n        long yOddEvenEven = -1;\n   \
    \     long xEvenOddEven = -1;\n        long xOddOddEven = -1;\n        long yEvenOddEven\
    \ = -1;\n        long yOddOddEven = -1;\n        long xEvenEvenOdd = -1;\n   \
    \     long xOddEvenOdd = -1;\n        long yEvenEvenOdd = -1;\n        long yOddEvenOdd\
    \ = -1;\n        long xEvenOddOdd = -1;\n        long xOddOddOdd = -1;\n     \
    \   long yEvenOddOdd = -1;\n        long yOddOddOdd = -1;\n        long xEvenEvenEvenEven\
    \ = -1;\n        long xOddEvenEvenEven = -1;\n        long yEvenEvenEven = -1;\n",
  "        long biggest = -1;\n        long even = x;\n        long odd = y;\n   \
    \     while (even < odd) {\n            long mid = (even + odd) / 2;\n       \
    \     if (mid % 2 == 0) {\n                even = mid;\n            } else {\n\
    \                odd = mid;\n            }\n        }\n        if (even > biggest)\
    \ {\n            biggest = even;\n        }\n        return biggest;", "     \
    \   long ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
    \ {\n            ans = y;\n        }\n        long even = ans % 2 == 0 ? ans :\
    \ ans - 1;\n        long odd = ans % 2 == 1 ? ans : ans - 1;\n        long evenMax\
    \ = even;\n        long oddMax = odd;\n        while (even < odd) {\n        \
    \    evenMax = even;\n            oddMax = odd;\n            even = even + 2;\n\
    \            odd = odd + 2;\n        }\n        if (evenMax > oddMax) {\n    \
    \        ans = evenMax;\n        } else {\n            ans = oddMax;\n       \
    \ }\n        return ans;", "        long even = x & 1;\n        long odd = x >>\
    \ 1;\n        long evenodd = even | odd;\n        long result = x + (y >> 1);\n\
    \        if (result < evenodd) {\n            return -1;\n        }\n        if\
    \ (result > evenodd) {\n            return evenodd;\n        }\n        return\
    \ result;", "        long maxEven = -1;\n        long minEven = -1;\n        long\
    \ even = -1;\n        long odd = 0;\n        long evenMin = -1;\n        long\
    \ evenMax = -1;\n        long oddMin = -1;\n        long oddMax = -1;\n      \
    \  long evenMin2 = -1;\n        long evenMax2 = -1;\n        long oddMin2 = -1;\n\
    \        long oddMax2 = -1;\n        long evenMin3 = -1;\n        long evenMax3\
    \ = -1;\n        long oddMin3 = -1;\n        long oddMax3 = -1;\n        long\
    \ evenMin4 = -1;\n        long evenMax4 = -1;\n        long oddMin4 = -1;\n  \
    \      long oddMax4 = -1;\n        long evenMin5 = -1;\n        long evenMax5\
    \ = -1;\n        long oddMin5 = -1;\n        long oddMax5 = -1;\n        long\
    \ evenMin6 = -1;\n        long evenMax6 = -1;\n        long oddMin6 = -1;\n  \
    \      long oddMax6 = -1;\n        long evenMin7 = -1;\n        long evenMax7\
    \ = -1;\n        long oddMin7 = -1;\n        long oddMax7 = -1;\n        long\
    \ evenMin8 = -1;\n        long evenMax8 = -1;\n        long oddMin8 = -1;\n  \
    \      long oddMax8 = -1;\n        long evenMin9 = -1;\n        long evenMax9\
    \ = -1;\n        long oddMin9 = -1;\n        long oddMax9 = -1;\n        long\
    \ evenMin10 = -1;\n        long evenMax10 = -1;\n        long oddMin10 = -1;\n\
    \        long oddMax10 = -1;\n        long evenMin11 = -1;\n        long evenMax11\
    \ = -1;\n        long oddMin11 = -1;\n        long oddMax11 = -1;\n        long\
    \ evenMin12 = -1;\n        long evenMax12 = -1;\n        long oddMin12 = -1;\n\
    \        long oddMax12 = -1;\n        long evenMin13 = -1;\n        long evenMax13\
    \ = -1;\n        long oddMin13 = -1;\n        long oddMax13 = -1;\n        long\
    \ evenMin14 = -1;\n        long evenMax14 = -1;\n        long oddMin14 = -1;\n\
    \        long oddMax14 = -1;\n        long evenMin15 = -1;\n        long evenMax15\
    \ = -1;\n        long oddMin15 = -1;\n        long oddMax15 = -1;\n        long\
    \ evenMin16 = -1;\n        long evenMax16 = -1;\n        long oddMin16 = -1;\n\
    \        long oddMax16 = -1;\n        long evenMin17 = -1;\n        long evenMax17\
    \ = -1;\n        long oddMin17 = -1;", "        long even = x;\n        long odd\
    \ = y;\n        long biggest = -1;\n        while (even < odd) {\n           \
    \ biggest = even;\n            even += 2;\n            odd -= 2;\n        }\n\
    \        return biggest;", "        long even = x | y;\n        long odd = x ^\
    \ y;\n        long biggest = even;\n        if (odd > even) {\n            biggest\
    \ = odd;\n        }\n        return biggest;", "        long even = x & 1;\n \
    \       long odd = x >> 1;\n        long evenodd = even | odd;\n        if (evenodd\
    \ > y) {\n            return -1;\n        }\n        if (evenodd < y) {\n    \
    \        return evenodd;\n        }\n        long eveneven = even >> 1;\n    \
    \    if (eveneven > y) {\n            return -1;\n        }\n        if (eveneven\
    \ < y) {\n            return eveneven;\n        }\n        long evenoddodd = even\
    \ | odd;\n        if (evenoddodd > y) {\n            return -1;\n        }\n \
    \       if (evenoddodd < y) {\n            return evenoddodd;\n        }\n   \
    \     long eveneveneven = even >> 2;\n        if (eveneveneven > y) {\n      \
    \      return -1;\n        }\n        if (eveneveneven < y) {\n            return\
    \ eveneveneven;\n        }\n        long evenevenoddodd = even | odd;\n      \
    \  if (evenevenoddodd > y) {\n            return -1;\n        }\n        if (evenevenoddodd\
    \ < y) {\n            return evenevenoddodd;\n        }\n        long eveneveneveneven\
    \ = even >> 3;\n        if (eveneveneveneven > y) {\n            return -1;\n\
    \        }\n        if (eveneveneveneven < y) {\n            return eveneveneveneven;\n\
    \        }\n        long evenevenevenoddodd = even | odd;\n        if (evenevenevenoddodd\
    \ > y) {\n            return -1;\n        }\n        if (evenevenevenoddodd <\
    \ y) {\n            return evenevenevenoddodd;\n        }\n        long eveneveneveneveneven\
    \ = even >> 4;\n        if (eveneveneveneveneven > y) {\n            return -1;\n\
    \        }\n        if (eveneveneveneveneven < y) {\n            return eveneveneveneveneven;\n\
    \        }\n        long evenevenevenevenoddodd = even | odd;\n        if (evenevenevenevenoddodd\
    \ > y) {\n            return -1;\n        }\n        if (evenevenevenevenoddodd\
    \ < y) {\n            return evenevenevenevenoddodd;\n        }\n        long\
    \ eveneveneveneveneveneven = even >> 5;\n        if (eveneveneveneveneveneven\
    \ > y) {\n            return -1;\n        }\n        if (eveneveneveneveneveneven\
    \ < y) {\n            return eveneveneveneveneveneven;\n        }\n        long\
    \ evenevenevenevenevenoddodd = even | odd;\n        if (evenevenevenevenevenoddodd\
    \ > y) {\n            return -1;\n        }\n        if (evenevenevenevenevenoddodd\
    \ < y) {\n            return evenevenevenevenevenoddodd;\n        }\n        long\
    \ eveneveneveneveneven", "        long max = -1;\n        long min = x;\n    \
    \    while (min <= y) {\n            long mid = (min + max) / 2;\n           \
    \ if (isEven(mid)) {\n                max = mid;\n            } else {\n     \
    \           min = mid;\n            }\n        }\n        return max;", "    \
    \    long result = -1;\n        long xMin = x;\n        long xMax = x;\n     \
    \   long yMin = y;\n        long yMax = y;\n        long xEven = x;\n        long\
    \ yEven = y;\n        long xOdd = x;\n        long yOdd = y;\n        long xEvenMin\
    \ = x;\n        long xEvenMax = x;\n        long yEvenMin = y;\n        long yEvenMax\
    \ = y;\n        long xOddMin = x;\n        long xOddMax = x;\n        long yOddMin\
    \ = y;\n        long yOddMax = y;\n        long xEvenEven = x;\n        long yEvenEven\
    \ = y;\n        long xOddOdd = x;\n        long yOddOdd = y;\n        long xEvenEvenMin\
    \ = x;\n        long xEvenEvenMax = x;\n        long yEvenEvenMin = y;\n     \
    \   long yEvenEvenMax = y;\n        long xOddOddMin = x;\n        long xOddOddMax\
    \ = x;\n        long yOddOddMin = y;\n        long yOddOddMax = y;\n        long\
    \ xEvenOdd = x;\n        long yEvenOdd = y;\n        long xOddEven = x;\n    \
    \    long yOddEven = y;\n        long xEvenOddMin = x;\n        long xEvenOddMax\
    \ = x;\n        long yEvenOddMin = y;\n        long yEvenOddMax = y;\n       \
    \ long xOddEvenMin = x;\n        long xOddEvenMax = x;\n        long yOddEvenMin\
    \ = y;\n        long yOddEvenMax = y;\n        long xEvenEvenOdd = x;\n      \
    \  long yEvenEvenOdd = y;\n        long xOddOdd = x;\n        long yOddOdd = y;\n\
    \        long xEvenEvenOddMin = x;\n        long xEvenEvenOddMax = x;\n      \
    \  long yEvenEvenOddMin = y;\n        long yEvenEvenOddMax = y;\n        long\
    \ xOddOddMin = x;\n        long xOddOddMax = x;\n        long yOddOddMin = y;\n\
    \        long yOddOddMax = y;\n        long xEvenEvenEven = x;\n        long yEvenEvenEven\
    \ = y;\n        long x", "        long maxEven = -1;\n        long even = x;\n\
    \        long odd = y;\n        long temp;\n        while (even < odd) {\n   \
    \         temp = (even * 2) + odd;\n            if (temp % 2 == 0) {\n       \
    \         even = temp;\n            } else {\n                odd = temp;\n  \
    \          }\n            if (even > maxEven) {\n                maxEven = even;\n\
    \            }\n        }\n        return maxEven;", "        long biggest = -1;\n\
    \        long even = x;\n        long odd = y;\n        long temp;\n        while\
    \ (even < odd) {\n            temp = even;\n            even = odd + (even % 2);\n\
    \            odd = temp;\n        }\n        if (even > biggest) {\n         \
    \   biggest = even;\n        }\n        return biggest;", "        long max =\
    \ 0;\n        long min = (long) Math.max(x, y);\n        long mid = (long) Math.floor((x\
    \ + y) / 2);\n        long mid2 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid3 = (long) Math.floor((x + y) / 2);\n        long mid4 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid5 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid6 = (long) Math.floor((x + y) / 2);\n        long mid7 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid8 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid9 = (long) Math.floor((x + y) / 2);\n        long mid10 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid11 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid12 = (long) Math.floor((x + y) / 2);\n        long mid13 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid14 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid15 = (long) Math.floor((x + y) / 2);\n        long mid16 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid17 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid18 = (long) Math.floor((x + y) / 2);\n        long mid19 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid20 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid21 = (long) Math.floor((x + y) / 2);\n        long mid22 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid23 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid24 = (long) Math.floor((x + y) / 2);\n        long mid25 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid26 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid27 = (long) Math.floor((x + y) / 2);\n        long mid28 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid29 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid30 = (long) Math.floor((x + y) / 2);\n        long mid31 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid32 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid33 = (long) Math.floor((x + y) / 2);\n        long mid34 = (long) Math.floor((x\
    \ + y) / 2);\n        long mid35 = (long) Math.floor((x + y) / 2);\n        long\
    \ mid36 = (long) Math.floor", "        long biggest = -1;\n        long even =\
    \ x;\n        long odd = y;\n        while(even < odd) {\n            long temp\
    \ = even;\n            even = odd % even;\n            odd = temp % odd;\n   \
    \         biggest = even;\n        }\n        return biggest;", "        long\
    \ biggest = -1;\n        long even = x;\n        long odd = y;\n        while(even\
    \ > 0 && odd > 0) {\n            if(even % 2 == 0 && odd % 2 == 0) {\n       \
    \         biggest = even;\n                even = even / 2;\n                odd\
    \ = odd / 2;\n            }\n            else if(even % 2 == 0 && odd % 2 != 0)\
    \ {\n                biggest = even;\n                even = even / 2;\n     \
    \       }\n            else if(even % 2 != 0 && odd % 2 == 0) {\n            \
    \    biggest = odd;\n                odd = odd / 2;\n            }\n         \
    \   else if(even % 2 != 0 && odd % 2 != 0) {\n                biggest = even;\n\
    \                even = even / 2;\n                odd = odd / 2;\n          \
    \  }\n        }\n        return biggest;", "        long even = x;\n        long\
    \ odd = y;\n        long biggest = -1;\n        while (even < odd) {\n       \
    \     biggest = even;\n            even += 2;\n            odd -= 2;\n       \
    \ }\n        if (biggest == -1) {\n            biggest = odd;\n        }\n   \
    \     return biggest;", "        long result = -1;\n        if (x >= y) {\n  \
    \          long mid = x + (y - x) / 2;\n            if (mid % 2 == 0) {\n    \
    \            result = mid;\n            }\n            else {\n              \
    \  result = chooseNum(x, mid);\n            }\n        }\n        else {\n   \
    \         long mid = y + (x - y) / 2;\n            if (mid % 2 == 0) {\n     \
    \           result = mid;\n            }\n            else {\n               \
    \ result = chooseNum(mid, y);\n            }\n        }\n        return result;",
  "        long biggest = -1;\n        long even = 0;\n        long odd = 0;\n   \
    \     long temp = 0;\n        long range = (long) Math.max(Math.abs(x), Math.abs(y));\n\
    \        long evenRange = (long) Math.max(Math.abs(x), Math.abs(y));\n       \
    \ long evenRange2 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange3\
    \ = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange4 = (long)\
    \ Math.max(Math.abs(x), Math.abs(y));\n        long evenRange5 = (long) Math.max(Math.abs(x),\
    \ Math.abs(y));\n        long evenRange6 = (long) Math.max(Math.abs(x), Math.abs(y));\n\
    \        long evenRange7 = (long) Math.max(Math.abs(x), Math.abs(y));\n      \
    \  long evenRange8 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long\
    \ evenRange9 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange10\
    \ = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange11 = (long)\
    \ Math.max(Math.abs(x), Math.abs(y));\n        long evenRange12 = (long) Math.max(Math.abs(x),\
    \ Math.abs(y));\n        long evenRange13 = (long) Math.max(Math.abs(x), Math.abs(y));\n\
    \        long evenRange14 = (long) Math.max(Math.abs(x), Math.abs(y));\n     \
    \   long evenRange15 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long\
    \ evenRange16 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange17\
    \ = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange18 = (long)\
    \ Math.max(Math.abs(x), Math.abs(y));\n        long evenRange19 = (long) Math.max(Math.abs(x),\
    \ Math.abs(y));\n        long evenRange20 = (long) Math.max(Math.abs(x), Math.abs(y));\n\
    \        long evenRange21 = (long) Math.max(Math.abs(x), Math.abs(y));\n     \
    \   long evenRange22 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long\
    \ evenRange23 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange24\
    \ = (long) Math.max(Math.abs(x), Math.abs(y));\n        long evenRange25 = (long)\
    \ Math.max(Math.abs(x), Math.abs(y));\n        long evenRange26 = (long) Math.max(Math.abs(x),\
    \ Math.abs(y));\n        long evenRange27 = (long) Math.max(Math.abs(x), Math.abs(y));\n\
    \        long evenRange28 = (long) Math.max(Math.abs(x), Math.abs(y));\n     \
    \   long evenRange29 = (long) Math.max(Math.abs(x), Math.abs(y));\n        long\
    \ evenRange30 = (long) Math.max(Math.abs(x), Math.abs(y", "        long max =\
    \ (long) Math.max(x, y);\n        long min = (long) Math.min(x, y);\n        long\
    \ even = min % 2 == 0 ? min : min - 1;\n        long odd = max % 2 == 0 ? max\
    \ : max + 1;\n        long evenInRange = even >= min && even <= max;\n       \
    \ long oddInRange = odd >= min && odd <= max;\n        if (evenInRange && oddInRange)\
    \ {\n            return even;\n        } else if (evenInRange) {\n           \
    \ return even;\n        } else if (oddInRange) {\n            return odd;\n  \
    \      } else {\n            return -1;\n        }", "        long even = x;\n\
    \        long odd = y;\n        long biggest = even;\n        long smaller = odd;\n\
    \        while(even > 0 && odd > 0) {\n            if(even % 2 == 0 && odd % 2\
    \ == 0) {\n                biggest = even;\n                smaller = odd;\n \
    \           }\n            else if(even % 2 == 0 && odd % 2 != 0) {\n        \
    \        biggest = even;\n            }\n            else if(even % 2 != 0 &&\
    \ odd % 2 == 0) {\n                biggest = odd;\n            }\n           \
    \ else if(even % 2 != 0 && odd % 2 != 0) {\n                biggest = even;\n\
    \                smaller = odd;\n            }\n            even = even / 2;\n\
    \            odd = odd / 2;\n        }\n        if(biggest == even) {\n      \
    \      return biggest;\n        }\n        else if(biggest == odd) {\n       \
    \     return smaller;\n        }\n        else {\n            return -1;\n   \
    \     }", "        long result = -1;\n        long even = x;\n        long odd\
    \ = y;\n        long temp;\n        do {\n            temp = even;\n         \
    \   even = odd % even;\n            odd = temp % odd;\n        } while (even >\
    \ odd);\n        if (even > odd) {\n            result = even;\n        } else\
    \ {\n            result = odd;\n        }\n        return result;", "        long\
    \ result = -1;\n        if (x >= y) {\n            return -1;\n        }\n   \
    \     if (x <= y) {\n            while (x <= y) {\n                if (x % 2 ==\
    \ 0) {\n                    result = x;\n                    break;\n        \
    \        }\n                x += 2;\n            }\n        }\n        return\
    \ result;", "        long result = -1;\n        if (x >= y) {\n            long\
    \ mid = x + (y - x) / 2;\n            if (mid % 2 == 0) {\n                result\
    \ = mid;\n            }\n        }\n        return result;", "        long max\
    \ = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even = max\
    \ / 2;\n        long odd = max - even;\n        if (even % 2 == 0) {\n       \
    \     return even;\n        }\n        if (odd % 2 == 0) {\n            return\
    \ odd;\n        }\n        return -1;", "        long maxEven = -1;\n        long\
    \ minEven = -1;\n        long even = -1;\n        long odd = -1;\n        long\
    \ biggestEven = -1;\n        long biggestOdd = -1;\n        long biggestEvenEven\
    \ = -1;\n        long biggestOddEven = -1;\n        long biggestEvenOdd = -1;\n\
    \        long biggestOddOdd = -1;\n        long biggestEvenEvenOdd = -1;\n   \
    \     long biggestOddEvenOdd = -1;\n        long biggestEvenOddOdd = -1;\n   \
    \     long biggestOddEvenOdd = -1;\n        long biggestEvenEvenOddOdd = -1;\n\
    \        long biggestOddEvenOddOdd = -1;\n        long biggestEvenOddEvenOdd =\
    \ -1;\n        long biggestOddEvenOddEvenOdd = -1;\n        long biggestEvenEvenOddEvenOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOdd = -1;\n        long biggestEvenOddEvenEvenOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOdd = -1;\n        long biggestEvenEvenOddEvenOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOdd = -1;\n        long biggestEvenOddEvenEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenEvenOddEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenEvenOddEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenOddEvenEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenEvenOddEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenEvenOddEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenEvenOddEvenOddOdd\
    \ = -1;\n        long biggestOddEvenOddEvenOddOdd = -1;\n        long biggestEvenOddEvenEven",
  "        long result = -1;\n        long even = x & 1;\n        long odd = x >>\
    \ 1;\n        long evenodd = even | odd;\n        if (evenodd >= x && evenodd\
    \ <= y) {\n            result = evenodd;\n        }\n        return result;",
  "        long result = -1;\n        long even = x % 2 == 0 ? x : x - 2;\n      \
    \  long odd = y % 2 == 0 ? y : y - 2;\n        long biggest = even;\n        long\
    \ biggestOdd = odd;\n        if (even > odd) {\n            biggest = even;\n\
    \            biggestOdd = odd;\n        }\n        if (biggest > biggestOdd) {\n\
    \            biggest = biggestOdd;\n        }\n        if (biggest == even) {\n\
    \            result = even;\n        }\n        if (biggest == odd) {\n      \
    \      result = odd;\n        }\n        return result;", "        long even =\
    \ x;\n        long odd = y;\n        long biggest = even;\n        long temp;\n\
    \        while(even < odd) {\n            temp = even;\n            even = odd\
    \ % even;\n            odd = temp % odd;\n            biggest = even;\n      \
    \  }\n        return biggest;", "        long maxEven = -1;\n        long even\
    \ = x;\n        long odd = y;\n        while(even < odd) {\n            if(even\
    \ % 2 == 0) {\n                maxEven = even;\n            }\n            even\
    \ = even + 1;\n        }\n        if(maxEven != -1) {\n            return maxEven;\n\
    \        }\n        while(odd > even) {\n            if(odd % 2 == 0) {\n    \
    \            maxEven = odd;\n            }\n            odd = odd - 1;\n     \
    \   }\n        return maxEven;", "        long biggest = -1;\n        long even\
    \ = x;\n        long odd = y;\n        while(even < odd) {\n            long mid\
    \ = (even + odd) / 2;\n            if(mid % 2 == 0) {\n                even =\
    \ mid;\n            } else {\n                odd = mid;\n            }\n    \
    \    }\n        biggest = even;\n        return biggest;", "        long ans =\
    \ -1;\n        if (x >= y) {\n            ans = x;\n        } else {\n       \
    \     ans = y;\n        }\n        long even = 0;\n        long odd = 0;\n   \
    \     while (ans >= 0) {\n            if (ans % 2 == 0) {\n                even\
    \ = even * 10 + ans;\n            } else {\n                odd = odd * 10 + ans;\n\
    \            }\n            ans = ans / 10;\n        }\n        if (even > odd)\
    \ {\n            ans = even;\n        } else {\n            ans = odd;\n     \
    \   }\n        return ans;", "        long result = -1;\n        if (x >= y) {\n\
    \            long tempX = x;\n            long tempY = y;\n            x = y;\n\
    \            y = tempX;\n        }\n        if (x % 2 == 0 && y % 2 == 0) {\n\
    \            long tempResult = x;\n            while (tempResult <= y) {\n   \
    \             if (tempResult % 2 == 0) {\n                    result = tempResult;\n\
    \                    break;\n                }\n                tempResult++;\n\
    \            }\n        }\n        return result;", "        long even = x & 1l;\n\
    \        long odd = x & 2l;\n        long biggest = x & 3l;\n        long smallest\
    \ = x & 4l;\n        long even2 = y & 1l;\n        long odd2 = y & 2l;\n     \
    \   long biggest2 = y & 3l;\n        long smallest2 = y & 4l;\n        long biggestEven\
    \ = even > even2 ? even : even2;\n        long biggestOdd = odd > odd2 ? odd :\
    \ odd2;\n        long biggestBiggest = biggest > biggest2 ? biggest : biggest2;\n\
    \        long biggestSmall = smallest > smallest2 ? smallest : smallest2;\n  \
    \      long biggestEven2 = even2 > even2 ? even2 : even;\n        long biggestOdd2\
    \ = odd2 > odd2 ? odd2 : odd;\n        long biggestBiggest2 = biggest2 > biggest2\
    \ ? biggest2 : biggest;\n        long biggestSmall2 = smallest2 > smallest2 ?\
    \ smallest2 : smallest;\n        long biggestEven3 = even3 > even2 ? even3 : even2;\n\
    \        long biggestOdd3 = odd3 > odd2 ? odd3 : odd2;\n        long biggestBiggest3\
    \ = biggest3 > biggest2 ? biggest3 : biggest2;\n        long biggestSmall3 = smallest3\
    \ > smallest2 ? smallest3 : smallest2;\n        long biggestEven4 = even4 > even2\
    \ ? even4 : even2;\n        long biggestOdd4 = odd4 > odd2 ? odd4 : odd2;\n  \
    \      long biggestBiggest4 = biggest4 > biggest2 ? biggest4 : biggest2;\n   \
    \     long biggestSmall4 = smallest4 > smallest2 ? smallest4 : smallest2;\n  \
    \      long biggestEven5 = even5 > even2 ? even5 : even2;\n        long biggestOdd5\
    \ = odd5 > odd2 ? odd5 : odd2;\n        long biggestBiggest5 = biggest5 > biggest2\
    \ ? biggest5 : biggest2;\n        long biggestSmall5 = smallest5 > smallest2 ?\
    \ smallest5 : smallest2;\n        long biggestEven6 = even6 > even2 ? even6 :\
    \ even2;\n        long biggestOdd6 = odd6 > odd2 ? odd6 : odd2;\n        long\
    \ biggest", "        long maxEven = -1;\n        long even = x;\n        long\
    \ odd = y;\n        while(even < odd) {\n            if(even % 2 == 0 && odd %\
    \ 2 == 0) {\n                maxEven = even;\n                break;\n       \
    \     }\n            even++;\n            odd--;\n        }\n        return maxEven;",
  "        long maxEven = -1;\n        long minEven = -1;\n        long even = -1;\n\
    \        long odd = 0;\n        long evenMin = -1;\n        long evenMax = -1;\n\
    \        long oddMin = -1;\n        long oddMax = -1;\n        long evenMin2 =\
    \ -1;\n        long evenMax2 = -1;\n        long oddMin2 = -1;\n        long oddMax2\
    \ = -1;\n        long evenMin3 = -1;\n        long evenMax3 = -1;\n        long\
    \ oddMin3 = -1;\n        long oddMax3 = -1;\n        long evenMin4 = -1;\n   \
    \     long evenMax4 = -1;\n        long oddMin4 = -1;\n        long oddMax4 =\
    \ -1;\n        long evenMin5 = -1;\n        long evenMax5 = -1;\n        long\
    \ oddMin5 = -1;\n        long oddMax5 = -1;\n        long evenMin6 = -1;\n   \
    \     long evenMax6 = -1;\n        long oddMin6 = -1;\n        long oddMax6 =\
    \ -1;\n        long evenMin7 = -1;\n        long evenMax7 = -1;\n        long\
    \ oddMin7 = -1;\n        long oddMax7 = -1;\n        long evenMin8 = -1;\n   \
    \     long evenMax8 = -1;\n        long oddMin8 = -1;\n        long oddMax8 =\
    \ -1;\n        long evenMin9 = -1;\n        long evenMax9 = -1;\n        long\
    \ oddMin9 = -1;\n        long oddMax9 = -1;\n        long evenMin10 = -1;\n  \
    \      long evenMax10 = -1;\n        long oddMin10 = -1;\n        long oddMax10\
    \ = -1;\n        long evenMin11 = -1;\n        long evenMax11 = -1;\n        long\
    \ oddMin11 = -1;\n        long oddMax11 = -1;\n        long evenMin12 = -1;\n\
    \        long evenMax12 = -1;\n        long oddMin12 = -1;\n        long oddMax12\
    \ = -1;\n        long evenMin13 = -1;\n        long evenMax13 = -1;\n        long\
    \ oddMin13 = -1;\n        long oddMax13 = -1;\n        long evenMin14 = -1;\n\
    \        long evenMax14 = -1;\n        long oddMin14 = -1;\n        long oddMax14\
    \ = -1;\n        long evenMin15 = -1;\n        long evenMax15 = -1;\n        long\
    \ oddMin15 = -1;\n        long oddMax15 = -1;\n        long evenMin16 = -1;\n\
    \        long evenMax16 = -1;\n        long oddMin16 = -1;\n        long oddMax16\
    \ = -1;\n        long evenMin17 = -1;\n        long evenMax17 = -1;\n        long\
    \ oddMin17 = -1;", "        long max = Math.max(x, y);\n        long min = Math.min(x,\
    \ y);\n        long even = min % 2 == 0 ? min : min - 1;\n        long odd = max\
    \ % 2 == 0 ? max : max + 1;\n        long evenOdd = even + odd;\n        long\
    \ result = evenOdd % 2 == 0 ? evenOdd : evenOdd - 1;\n        return result <\
    \ 0 ? -1 : result;", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = -1;\n        while(even < odd) {\n            long mid = (even+odd)/2;\n\
    \            if(mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if(even > biggest)\
    \ {\n                biggest = even;\n            }\n        }\n        return\
    \ biggest;", "        long biggest = -1;\n        long even = x;\n        long\
    \ odd = y;\n        while(even > 0 && odd > 0) {\n            if(even % 2 == 0\
    \ && odd % 2 == 0) {\n                biggest = even;\n                break;\n\
    \            }\n            else if(even % 2 != 0 && odd % 2 != 0) {\n       \
    \         biggest = odd;\n                break;\n            }\n            else\
    \ if(even % 2 == 0 && odd % 2 != 0) {\n                biggest = even;\n     \
    \           even = even / 2;\n            }\n            else if(even % 2 != 0\
    \ && odd % 2 == 0) {\n                biggest = odd;\n                odd = odd\
    \ / 2;\n            }\n        }\n        return biggest;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = even;\n        while (even\
    \ > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n      \
    \          biggest = even;\n                even = even / 2;\n               \
    \ odd = odd / 2;\n            } else if (even % 2 != 0 && odd % 2 != 0) {\n  \
    \              biggest = odd;\n                even = even / 2;\n            \
    \    odd = odd / 2;\n            } else {\n                biggest = even;\n \
    \               even = even / 2;\n                odd = odd / 2;\n           \
    \ }\n        }\n        return biggest;", "        long maxEven = -1;\n      \
    \  long even = x;\n        long odd = y;\n        long maxOdd = odd;\n       \
    \ long evenOdd = even;\n        long evenEven = even;\n        long oddOdd = odd;\n\
    \        long evenOddEven = even;\n        long evenEvenOdd = even;\n        long\
    \ oddEvenOdd = odd;\n        long evenOddEvenOdd = even;\n        long evenEvenOddEvenOdd\
    \ = even;\n        long oddEvenOddEvenOddEvenOdd = odd;\n        long evenOddEvenOddEvenOddEvenOdd\
    \ = even;\n        long evenEvenOddEvenOddEvenOddEvenOdd = even;\n        long\
    \ oddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n        long evenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = even;\n        long evenEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = even;\n\
    \        long oddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n  \
    \      long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = even;\n\
    \        long evenEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = even;\n\
    \        long oddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = even;\n        long evenEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = even;\n        long oddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = even;\n        ", "        long max = Math.max(x, y);\n        long min =\
    \ Math.min(x, y);\n        long even = min / 2;\n        long odd = max - even;\n\
    \        long result = even;\n        if (odd > even) {\n            result =\
    \ odd;\n        }\n        return result;", "        long result = -1;\n     \
    \   if (x >= y) {\n            while (x < y) {\n                if (x % 2 == 0)\
    \ {\n                    result = x;\n                    break;\n           \
    \     }\n                x++;\n            }\n        } else {\n            while\
    \ (y < x) {\n                if (y % 2 == 0) {\n                    result = y;\n\
    \                    break;\n                }\n                y++;\n       \
    \     }\n        }\n        return result;", "        long even = x | y;\n   \
    \     long odd = x ^ y;\n        long biggest = even;\n        if (odd > even)\
    \ {\n            biggest = odd;\n        }\n        return biggest;", "      \
    \  long result = -1;\n        long low = x;\n        long high = y;\n        while(low\
    \ < high) {\n            long mid = (low + high) / 2;\n            long midVal\
    \ = mid;\n            boolean even = true;\n            while(midVal < mid) {\n\
    \                midVal += 2;\n                even = !even;\n            }\n\
    \            if(even) {\n                low = mid;\n            } else {\n  \
    \              high = mid;\n            }\n        }\n        if(low < y) {\n\
    \            result = low;\n        } else {\n            result = high;\n   \
    \     }\n        return result;", "        long biggest = -1;\n        if (x >=\
    \ y) {\n            biggest = x;\n        } else {\n            biggest = y;\n\
    \        }\n        long even = biggest / 2;\n        long odd = biggest % 2;\n\
    \        if (even > odd) {\n            biggest = even;\n        } else {\n  \
    \          biggest = odd;\n        }\n        return biggest;", "        long\
    \ maxEven = -1;\n        long even = x;\n        long odd = y;\n        while(even\
    \ < odd) {\n            long mid = (even+odd)/2;\n            if(mid % 2 == 0)\
    \ {\n                even = mid;\n            } else {\n                odd =\
    \ mid;\n            }\n        }\n        if(even > maxEven) {\n            maxEven\
    \ = even;\n        }\n        return maxEven;", "        long even = x;\n    \
    \    long odd = y;\n        long biggest = even;\n        long smallest = odd;\n\
    \        boolean evenFound = false;\n        boolean oddFound = false;\n     \
    \   boolean biggestFound = false;\n        boolean smallestFound = false;\n  \
    \      while (even < odd) {\n            if (even % 2 == 0) {\n              \
    \  evenFound = true;\n                even++;\n            } else {\n        \
    \        oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;\n                odd++;\n            }\n        }\n\
    \        while (even > odd) {\n            if (odd % 2 == 0) {\n             \
    \   evenFound = true;\n                even--;\n            } else {\n       \
    \         oddFound = true;\n                odd--;\n            }\n        }\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            } else {\n      \
    \          oddFound = true;", "        long maxEven = -1;\n        long even =\
    \ x;\n        long odd = y;\n        while(even < odd) {\n            if(even\
    \ % 2 == 0) {\n                maxEven = even;\n            }\n            even\
    \ = even + 1;\n        }\n        while(odd > even) {\n            if(odd % 2\
    \ == 1) {\n                maxEven = odd;\n            }\n            odd = odd\
    \ - 1;\n        }\n        return maxEven;", "        long biggest = -1;\n   \
    \     long even = x;\n        long odd = y;\n        long biggestEven = even;\n\
    \        long biggestOdd = odd;\n        long evenInRange = true;\n        long\
    \ oddInRange = true;\n        long evenInRangeEven = even;\n        long evenInRangeOdd\
    \ = odd;\n        long oddInRangeEven = even;\n        long oddInRangeOdd = odd;\n\
    \        long evenInRangeEvenEven = even;\n        long evenInRangeEvenOdd = odd;\n\
    \        long oddInRangeEvenEven = even;\n        long oddInRangeEvenOdd = odd;\n\
    \        long evenInRangeOddEven = even;\n        long evenInRangeOddOdd = odd;\n\
    \        long oddInRangeOddEven = even;\n        long oddInRangeOddOdd = odd;\n\
    \        long biggestEvenInRange = even;\n        long biggestOddInRange = odd;\n\
    \        long biggestEvenInRangeEven = even;\n        long biggestEvenInRangeOdd\
    \ = odd;\n        long biggestOddInRangeEven = even;\n        long biggestOddInRangeOdd\
    \ = odd;\n        long biggestEvenInRangeEvenEven = even;\n        long biggestEvenInRangeEvenOdd\
    \ = odd;\n        long biggestOddInRangeEvenEven = even;\n        long biggestOddInRangeEvenOdd\
    \ = odd;\n        long biggestEvenInRangeOddEven = even;\n        long biggestEvenInRangeOddOdd\
    \ = odd;\n        long biggestOddInRangeOddEven = even;\n        long biggestOddInRangeOddOdd\
    \ = odd;\n        long biggestEvenInRangeEvenEvenEven = even;\n        long biggestEvenInRangeEvenOdd\
    \ = odd;\n        long biggestOddInRangeEvenEven = even;\n        long biggestOddInRangeEvenOdd\
    \ = odd;\n        long biggestEvenInRangeOddEven = even;\n        long biggestEvenInRangeOddOdd\
    \ = odd;\n        long biggestOddInRangeOddEven = even;\n        long biggestOddInRangeOddOdd\
    \ = odd;\n        long biggestEvenInRangeEvenEvenEven = even;\n", "        long\
    \ even = x;\n        long odd = y;\n        long biggest = even;\n        long\
    \ temp;\n        while (even < odd) {\n            temp = even;\n            even\
    \ = odd % even;\n            odd = temp % odd;\n            if (even > biggest)\
    \ {\n                biggest = even;\n            }\n        }\n        return\
    \ biggest;", "        long max = 0;\n        long min = 0;\n        long mid =\
    \ 0;\n        long mid2 = 0;\n        long mid3 = 0;\n        long mid4 = 0;\n\
    \        long mid5 = 0;\n        long mid6 = 0;\n        long mid7 = 0;\n    \
    \    long mid8 = 0;\n        long mid9 = 0;\n        long mid10 = 0;\n       \
    \ long mid11 = 0;\n        long mid12 = 0;\n        long mid13 = 0;\n        long\
    \ mid14 = 0;\n        long mid15 = 0;\n        long mid16 = 0;\n        long mid17\
    \ = 0;\n        long mid18 = 0;\n        long mid19 = 0;\n        long mid20 =\
    \ 0;\n        long mid21 = 0;\n        long mid22 = 0;\n        long mid23 = 0;\n\
    \        long mid24 = 0;\n        long mid25 = 0;\n        long mid26 = 0;\n \
    \       long mid27 = 0;\n        long mid28 = 0;\n        long mid29 = 0;\n  \
    \      long mid30 = 0;\n        long mid31 = 0;\n        long mid32 = 0;\n   \
    \     long mid33 = 0;\n        long mid34 = 0;\n        long mid35 = 0;\n    \
    \    long mid36 = 0;\n        long mid37 = 0;\n        long mid38 = 0;\n     \
    \   long mid39 = 0;\n        long mid40 = 0;\n        long mid41 = 0;\n      \
    \  long mid42 = 0;\n        long mid43 = 0;\n        long mid44 = 0;\n       \
    \ long mid45 = 0;\n        long mid46 = 0;\n        long mid47 = 0;\n        long\
    \ mid48 = 0;\n        long mid49 = 0;\n        long mid50 = 0;\n        long mid51\
    \ = 0;\n        long mid52 = 0;\n        long mid53 = 0;\n        long mid54 =\
    \ 0;\n        long mid55 = 0;\n        long mid56 = 0;\n        long mid57 = 0;\n\
    \        long mid58 = 0;\n        long mid59 = 0;\n        long mid60 = 0;\n \
    \       long mid61 = 0;\n        long mid62 = 0;\n        long mid63 = 0;\n  \
    \      long mid64 = 0;\n        long mid65 = 0;\n        long mid66 = 0;\n   \
    \     long mid67 = 0;\n        long mid68 = 0;\n        long mid69 = 0;\n    \
    \    long mid70 = 0;\n        long mid71 = 0;\n        long mid72 = 0;\n     \
    \   long mid73 = 0;\n        long mid74 = 0;\n        long mid75 = 0;\n      \
    \  long mid76 = 0;\n        long mid77 = 0;\n        long mid78 = 0;\n       \
    \ long mid79 = 0;\n        long mid80 = 0;\n        long mid81 = 0;\n        long\
    \ mid82 = 0;\n        long mid83 = 0;\n        long mid84 = 0;\n        long mid",
  "        long max = Math.max(x, y);\n        long min = Math.min(x, y);\n      \
    \  long even = max / 2;\n        long odd = max - even;\n        if (even % 2\
    \ == 0) {\n            return even;\n        }\n        if (odd % 2 == 0) {\n\
    \            return odd;\n        }\n        return -1;", "        long maxEven\
    \ = -1;\n        long even = x;\n        long odd = y;\n        while(even < odd)\
    \ {\n            long mid = (even+odd)/2;\n            if(mid % 2 == 0) {\n  \
    \              even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n        }\n        if(even > maxEven) {\n            maxEven =\
    \ even;\n        }\n        return maxEven;", "        long maxEven = -1;\n  \
    \      long minEven = -1;\n        long even = -1;\n        long odd = -1;\n \
    \       long evenMax = -1;\n        long oddMax = -1;\n        long evenMin =\
    \ -1;\n        long oddMin = -1;\n        long evenSum = -1;\n        long oddSum\
    \ = -1;\n        long evenProduct = -1;\n        long oddProduct = -1;\n     \
    \   long evenMinMax = -1;\n        long oddMinMax = -1;\n        long evenMinSum\
    \ = -1;\n        long oddMinSum = -1;\n        long evenMinProduct = -1;\n   \
    \     long oddMinProduct = -1;\n        long evenMaxSum = -1;\n        long oddMaxSum\
    \ = -1;\n        long evenMaxProduct = -1;\n        long oddMaxProduct = -1;\n\
    \        long evenSumMax = -1;\n        long oddSumMax = -1;\n        long evenSumMin\
    \ = -1;\n        long oddSumMin = -1;\n        long evenSumProduct = -1;\n   \
    \     long oddSumProduct = -1;\n        long evenProductMax = -1;\n        long\
    \ oddProductMax = -1;\n        long evenProductMin = -1;\n        long oddProductMin\
    \ = -1;\n        long evenProductSum = -1;\n        long oddProductSum = -1;\n\
    \        long evenProductProduct = -1;\n        long oddProductProduct = -1;\n\
    \        long evenMaxSumMax = -1;\n        long oddMaxSumMax = -1;\n        long\
    \ evenMaxSumMin = -1;\n        long oddMaxSumMin = -1;\n        long evenMaxSumProduct\
    \ = -1;\n        long oddMaxSumProduct = -1;\n        long evenMaxProductMax =\
    \ -1;\n        long oddMaxProductMax = -1;\n        long evenMaxProductMin = -1;\n\
    \        long oddMaxProductMin = -1;\n        long evenMaxProductSum = -1;\n \
    \       long oddMaxProductSum = -1;\n        long evenMaxProductProduct = -1;\n\
    \        long oddMaxProductProduct = -1;\n        long evenSumMaxMax = -1;\n \
    \       long oddSumMaxMax = -1;\n        long evenSumMaxMin = -1;\n        long\
    \ oddSumMaxMin = -1;\n        long evenSumMaxProduct = -1;\n        long oddSumMaxProduct\
    \ = -1;\n        long evenSumMinMax = -1;\n        long oddSumMinMax = -1;\n \
    \       long evenSumMinSum = -1;\n        long oddSumMinSum = -1;\n        long\
    \ evenSumMinProduct = -1;\n        long oddSumMinProduct = -1;\n        long evenSum",
  "        long result = -1;\n        if (x >= y) {\n            while (x <= y) {\n\
    \                if (x % 2 == 0) {\n                    result = x;\n        \
    \            break;\n                }\n                x += 2;\n            }\n\
    \        } else {\n            while (y <= x) {\n                if (y % 2 ==\
    \ 0) {\n                    result = y;\n                    break;\n        \
    \        }\n                y += 2;\n            }\n        }\n        return\
    \ result;", "        long max = Math.max(x, y);\n        long min = Math.min(x,\
    \ y);\n        long even = max / 2;\n        long odd = max - even;\n        long\
    \ result = even;\n        if (odd > even) {\n            result = odd;\n     \
    \   }\n        return result;", "        long result = -1;\n        if (x >= y)\
    \ {\n            while (x <= y) {\n                if (x % 2 == 0) {\n       \
    \             result = x;\n                    break;\n                }\n   \
    \             x += 2;\n            }\n        } else {\n            while (y <=\
    \ x) {\n                if (y % 2 == 0) {\n                    result = y;\n \
    \                   break;\n                }\n                y += 2;\n     \
    \       }\n        }\n        return result;", "        long biggest = -1;\n \
    \       long even = 0;\n        long odd = 0;\n        long temp = 0;\n      \
    \  long evenMax = 0;\n        long oddMax = 0;\n        long evenMin = Long.MAX_VALUE;\n\
    \        long oddMin = Long.MIN_VALUE;\n        long evenMax2 = Long.MAX_VALUE;\n\
    \        long oddMax2 = Long.MIN_VALUE;\n        long evenMin2 = Long.MAX_VALUE;\n\
    \        long oddMin2 = Long.MIN_VALUE;\n        long evenMax3 = Long.MAX_VALUE;\n\
    \        long oddMax3 = Long.MIN_VALUE;\n        long evenMin3 = Long.MAX_VALUE;\n\
    \        long oddMin3 = Long.MIN_VALUE;\n        long evenMax4 = Long.MAX_VALUE;\n\
    \        long oddMax4 = Long.MIN_VALUE;\n        long evenMin4 = Long.MAX_VALUE;\n\
    \        long oddMin4 = Long.MIN_VALUE;\n        long evenMax5 = Long.MAX_VALUE;\n\
    \        long oddMax5 = Long.MIN_VALUE;\n        long evenMin5 = Long.MAX_VALUE;\n\
    \        long oddMin5 = Long.MIN_VALUE;\n        long evenMax6 = Long.MAX_VALUE;\n\
    \        long oddMax6 = Long.MIN_VALUE;\n        long evenMin6 = Long.MAX_VALUE;\n\
    \        long oddMin6 = Long.MIN_VALUE;\n        long evenMax7 = Long.MAX_VALUE;\n\
    \        long oddMax7 = Long.MIN_VALUE;\n        long evenMin7 = Long.MAX_VALUE;\n\
    \        long oddMin7 = Long.MIN_VALUE;\n        long evenMax8 = Long.MAX_VALUE;\n\
    \        long oddMax8 = Long.MIN_VALUE;\n        long evenMin8 = Long.MAX_VALUE;\n\
    \        long oddMin8 = Long.MIN_VALUE;\n        long evenMax9 = Long.MAX_VALUE;\n\
    \        long oddMax9 = Long.MIN_VALUE;\n        long evenMin9 = Long.MAX_VALUE;\n\
    \        long oddMin9 = Long.MIN_VALUE;\n        long evenMax10 = Long.MAX_VALUE;\n\
    \        long oddMax10 = Long.MIN_VALUE;\n        long evenMin10 = Long.MAX_VALUE;\n\
    \        long oddMin10 = Long.MIN_VALUE;\n        long evenMax11 = Long.MAX_VALUE;\n\
    \        long oddMax11 = Long.MIN_VALUE;\n        long evenMin11 = Long.MAX_VALUE;\n\
    \        long oddMin11 = Long.MIN_VALUE;\n        long evenMax12 = Long.MAX_VALUE;\n\
    \        long oddMax12 = ", "        long biggest = -1;\n        long even = x;\n\
    \        long odd = y;\n        long temp;\n        while (even < odd) {\n   \
    \         temp = (even + odd) / 2;\n            if (temp % 2 == 0) {\n       \
    \         even = temp;\n            } else {\n                odd = temp;\n  \
    \          }\n        }\n        if (even > biggest) {\n            biggest =\
    \ even;\n        }\n        if (odd > biggest) {\n            biggest = odd;\n\
    \        }\n        return biggest;", "        long max = Math.max(x, y);\n  \
    \      long min = Math.min(x, y);\n        long even = max / 2;\n        long\
    \ odd = max - even;\n        if (even % 2 == 0) {\n            return even;\n\
    \        } else {\n            return odd;\n        }", "        long result =\
    \ -1;\n        if (x >= y) {\n            return -1;\n        }\n        if (x\
    \ % 2 == 0) {\n            if (y % 2 == 0) {\n                result = x;\n  \
    \          } else {\n                result = y;\n            }\n        } else\
    \ {\n            if (y % 2 == 0) {\n                result = y;\n            }\
    \ else {\n                result = x;\n            }\n        }\n        return\
    \ result;", "        long maxEven = Long.MIN_VALUE;\n        long minEven = Long.MAX_VALUE;\n\
    \        long even;\n        long odd;\n        long range;\n        long min;\n\
    \        long max;\n        long rangeEven;\n        long rangeOdd;\n        long\
    \ rangeEvenMax;\n        long rangeOddMax;\n        long rangeEvenMin;\n     \
    \   long rangeOddMin;\n        long rangeEvenMaxMin;\n        long rangeOddMaxMin;\n\
    \        long rangeEvenMinMax;\n        long rangeOddMinMax;\n        long rangeEvenMaxMinMax;\n\
    \        long rangeOddMaxMinMax;\n        long rangeEvenMinMaxMinMax;\n      \
    \  long rangeOddMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n       \
    \ long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n        long\
    \ rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeEvenMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax;\n\
    \        long rangeOdd", "        long maxEven = -1;\n        long even = x;\n\
    \        long odd = y;\n        long evenMax = even;\n        long oddMax = odd;\n\
    \        long evenMin = even;\n        long oddMin = odd;\n        long evenMinMax\
    \ = even;\n        long oddMinMax = odd;\n        long evenMaxMin = even;\n  \
    \      long oddMaxMin = odd;\n        long evenMinMaxMin = even;\n        long\
    \ oddMinMaxMin = odd;\n        long evenMaxMinMax = even;\n        long oddMaxMinMax\
    \ = odd;\n        long evenMinMaxMinMax = even;\n        long oddMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMin = even;\n        long oddMaxMinMaxMin\
    \ = odd;\n        long evenMaxMinMaxMinMax = even;\n        long oddMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMin = even;\n        long oddMaxMinMaxMinMaxMin\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMax = even;\n        long oddMaxMinMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMin = even;\n        long oddMaxMinMaxMinMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMax = even;\n        long oddMaxMinMaxMinMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMax = even;\n        long oddMaxMinMaxMinMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMin = even;\n        long\
    \ oddMaxMinMaxMinMaxMinMaxMinMaxMin = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = even;\n        long oddMaxMinMaxMinMaxMinMaxMinMaxMinMax = odd;\n        long\
    \ evenMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin = even;\n        long oddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin = even;\n    \
    \    long oddMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = even;\n        ", "        long max = (long) Math.max(x, y);\n        long\
    \ min = (long) Math.min(x, y);\n        long even = min % 2 == 0 ? min : min -\
    \ 1;\n        long odd = max % 2 == 0 ? max : max + 1;\n        long evenMax =\
    \ even > odd ? even : odd;\n        long evenMin = even < odd ? even : odd;\n\
    \        long evenEven = evenMax % 2 == 0 ? evenMax : evenMax - 1;\n        long\
    \ evenOdd = evenMin % 2 == 0 ? evenMin : evenMin + 1;\n        long evenEvenMax\
    \ = evenEven > evenOdd ? evenEven : evenOdd;\n        long evenEvenMin = evenEven\
    \ < evenOdd ? evenEven : evenOdd;\n        long evenEvenEven = evenEvenMax % 2\
    \ == 0 ? evenEvenMax : evenEvenMax - 1;\n        long evenEvenOdd = evenEvenMin\
    \ % 2 == 0 ? evenEvenMin : evenEvenMin + 1;\n        long evenEvenEvenMax = evenEvenEven\
    \ > evenEvenOdd ? evenEvenEven : evenEvenOdd;\n        long evenEvenEvenMin =\
    \ evenEvenEven < evenEvenOdd ? evenEvenEven : evenEvenOdd;\n        long evenEvenEvenEven\
    \ = evenEvenEvenEvenMax % 2 == 0 ? evenEvenEvenEven : evenEvenEvenOdd - 1;\n \
    \       long evenEvenEvenOdd = evenEvenEvenMin % 2 == 0 ? evenEvenEvenMin : evenEvenMin\
    \ + 1;\n        long evenEvenEvenEvenMax = evenEvenEvenEven > evenEvenEvenOdd\
    \ ? evenEvenEvenEven : evenEvenOdd;\n        long evenEvenEvenEvenMin = evenEvenEvenEven\
    \ < evenEvenOdd ? evenEvenEvenEven : evenEvenOdd;\n        long evenEvenEvenEvenEven\
    \ = evenEvenEvenEvenEvenMax % 2 == 0 ? evenEvenEvenEvenEven : evenEvenEvenOdd\
    \ - 1;\n        long evenEvenEvenEvenOdd = evenEvenEvenEvenMin % 2 == 0 ? evenEvenEvenEvenMin\
    \ : evenEvenMin + 1;\n        long evenEvenEvenEvenEvenMax = evenEvenEvenEvenEven\
    \ > evenEvenEvenOdd ? evenEvenEvenEvenEven : evenEvenOdd;\n        long evenEvenEvenEvenEvenMin\
    \ = evenEvenEvenEvenEven < evenEvenOdd ? evenEvenEvenEvenEven : evenEvenOdd;\n\
    \        long evenEvenEvenEvenEvenEvenMax = evenEvenEvenEvenEvenMax % 2 == 0 ?\
    \ evenEven", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        while(even < odd) {\n            long mid = (even+odd)/2;\n \
    \           if(mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if(even > biggest)\
    \ {\n                biggest = even;\n            }\n            if(odd > biggest)\
    \ {\n                biggest = odd;\n            }\n        }\n        return\
    \ biggest;", "        long result = -1;\n        long even = x;\n        long\
    \ odd = y;\n        long temp;\n        while (even < odd) {\n            temp\
    \ = (even * 2) + odd;\n            if (temp % 2 == 0) {\n                even\
    \ = temp;\n            } else {\n                odd = temp;\n            }\n\
    \        }\n        if (even > odd) {\n            result = even;\n        } else\
    \ {\n            result = odd;\n        }\n        return result;", "        long\
    \ result = -1;\n        if (x >= y) {\n            long temp = x;\n          \
    \  x = y;\n            y = temp;\n        }\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            result = mid;\n        }\n        if\
    \ (result == -1) {\n            while (x <= y) {\n                if (mid % 2\
    \ == 0) {\n                    result = mid;\n                    break;\n   \
    \             }\n                mid = (x + y) / 2;\n                if (mid %\
    \ 2 == 0) {\n                    result = mid;\n                    break;\n \
    \               }\n                mid = (x + y) / 2;\n                y = mid;\n\
    \            }\n        }\n        return result;", "        long even = x;\n\
    \        long odd = y;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        long temp;\n        while(even < odd) {\n            temp = even;\n\
    \            even = odd % even;\n            odd = temp % odd;\n            biggest\
    \ = even;\n            smallest = odd;\n        }\n        while(even > odd) {\n\
    \            temp = even;\n            even = odd % even;\n            odd = temp\
    \ % odd;\n            biggest = even;\n            smallest = odd;\n        }\n\
    \        while(even == odd) {\n            temp = even;\n            even = odd\
    \ % even;\n            odd = temp % odd;\n            biggest = even;\n      \
    \      smallest = odd;\n        }\n        return biggest;", "        long result\
    \ = -1;\n        if (x >= y) {\n            long tempX = x;\n            long\
    \ tempY = y;\n            x = y;\n            y = tempX;\n        }\n        if\
    \ (x % 2 == 0) {\n            while (x != 0) {\n                if (x % 2 == 0)\
    \ {\n                    result = x;\n                    break;\n           \
    \     }\n                x = x / 2;\n            }\n        }\n        if (y %\
    \ 2 == 0) {\n            while (y != 0) {\n                if (y % 2 == 0) {\n\
    \                    result = y;\n                    break;\n               \
    \ }\n                y = y / 2;\n            }\n        }\n        return result;",
  "        long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     while (even < odd) {\n            long mid = (even + odd) / 2;\n       \
    \     if (mid % 2 == 0) {\n                even = mid;\n            } else {\n\
    \                odd = mid;\n            }\n            if (even > biggest) {\n\
    \                biggest = even;\n            } else if (odd > biggest) {\n  \
    \              biggest = odd;\n            }\n        }\n        return biggest;",
  "        long max = (long) Math.max(x, y);\n        long min = (long) Math.min(x,\
    \ y);\n        long even = max / 2;\n        long odd = max - even;\n        long\
    \ result = -1;\n        if (even > 0 && odd > 0) {\n            while (even >\
    \ 0 && odd > 0) {\n                if (even % 2 == 0 && odd % 2 == 0) {\n    \
    \                result = even;\n                    even = even / 2;\n      \
    \              odd = odd / 2;\n                }\n                else if (even\
    \ % 2 != 0 && odd % 2 != 0) {\n                    result = odd;\n           \
    \         even = even / 2;\n                    odd = odd / 2;\n             \
    \   }\n                else {\n                    result = even;\n          \
    \          even = even / 2;\n                    odd = odd / 2;\n            \
    \    }\n            }\n        }\n        return result;", "        long even\
    \ = x & 1;\n        long odd = x >> 1;\n        long evenodd = even | odd;\n \
    \       long biggest = evenodd > y ? evenodd : y;\n        long smallest = evenodd\
    \ < y ? evenodd : y;\n        long eveneven = even & even;\n        long evenoddodd\
    \ = even & odd;\n        long evenevenodd = even & evenodd;\n        long eveneveneven\
    \ = even & eveneven;\n        long evenevenoddodd = even & evenodd;\n        long\
    \ evenevenevenodd = even & evenevenodd;\n        long eveneveneveneven = even\
    \ & eveneveneven;\n        long evenevenevenoddodd = even & evenevenodd;\n   \
    \     long evenevenevenevenodd = even & evenevenevenodd;\n        long eveneveneveneveneven\
    \ = even & eveneveneveneven;\n        long evenevenevenevenodd = even & evenevenevenodd;\n\
    \        long evenevenevenevenevenodd = even & evenevenevenevenodd;\n        long\
    \ eveneveneveneveneveneven = even & eveneveneveneveneven;\n        long evenevenevenevenevenodd\
    \ = even & evenevenevenevenodd;\n        long evenevenevenevenevenevenodd = even\
    \ & evenevenevenevenevenodd;\n        long eveneveneveneveneveneveneven = even\
    \ & eveneveneveneveneveneven;\n        long evenevenevenevenevenevenevenodd =\
    \ even & evenevenevenevenevenodd;\n        long evenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenodd;\n        long eveneveneveneveneveneveneveneven\
    \ = even & eveneveneveneveneveneveneven;\n        long evenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenodd;\n        long evenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenodd;\n        long eveneveneveneveneveneveneveneveneven\
    \ = even & eveneveneveneveneveneveneven;\n        long evenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenodd;\n        long evenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenodd;\n        long eveneveneveneveneveneveneveneveneven\
    \ = even & eveneveneveneveneveneveneven;\n        long evenevenevenevenevenevenevenevenodd\
    \ = even ", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = even;\n        long smallest = odd;\n        boolean evenFound = false;\n\
    \        boolean oddFound = false;\n        boolean biggestFound = false;\n  \
    \      boolean smallestFound = false;\n        while(!evenFound && !oddFound)\
    \ {\n            if((even % 2) == 0) {\n                evenFound = true;\n  \
    \              biggest = even;\n            }\n            else {\n          \
    \      oddFound = true;\n                smallest = odd;\n            }\n    \
    \    }\n        while(!biggestFound && !smallestFound) {\n            if((biggest\
    \ % 2) == 0) {\n                biggestFound = true;\n                even = biggest;\n\
    \            }\n            else {\n                smallestFound = true;\n  \
    \              odd = smallest;\n            }\n        }\n        while(!evenFound\
    \ && !oddFound) {\n            if((even % 2) == 0) {\n                evenFound\
    \ = true;\n                biggest = even;\n            }\n            else {\n\
    \                oddFound = true;\n                smallest = odd;\n         \
    \   }\n        }\n        while(!biggestFound && !smallestFound) {\n         \
    \   if((biggest % 2) == 0) {\n                biggestFound = true;\n         \
    \       even = biggest;\n            }\n            else {\n                smallestFound\
    \ = true;\n                odd = smallest;\n            }\n        }\n       \
    \ while(!evenFound && !oddFound) {\n            if((even % 2) == 0) {\n      \
    \          evenFound = true;\n                biggest = even;\n            }\n\
    \            else {\n                oddFound = true;\n                smallest\
    \ = odd;\n            }\n        }\n        while(!biggestFound && !smallestFound)\
    \ {\n            if((biggest % 2) == 0) {\n                biggestFound = true;\n\
    \                even = biggest;\n            }\n            else {\n        \
    \        smallestFound = true;\n                odd = smallest;\n            }\n\
    \        }\n        while(!evenFound && !oddFound) {\n            if((even % 2)\
    \ == 0) {\n                evenFound = true;\n                biggest = even;\n\
    \            }\n            else {\n                oddFound = true;\n       \
    \         smallest = odd;\n            }\n        }\n        while(!biggestFound\
    \ && !smallestFound) {\n            if((biggest % 2) == 0) {\n               \
    \ biggestFound = true;\n                even = biggest;\n            }\n     \
    \       else {\n                smallestFound = true;\n                odd = smallest;\n\
    \            }\n        }\n        while(!evenFound && !oddFound) {\n        \
    \    if((even % 2) == 0) {\n                evenFound = true;\n              \
    \  biggest = even;\n            }\n            else {\n", "        long even =\
    \ x & 1;\n        long odd = x >> 1;\n        long evenodd = even | odd;\n   \
    \     long eveneven = even & even;\n        long evenoddodd = even & odd;\n  \
    \      long evenevenodd = even & evenodd;\n        long evenevenevenodd = even\
    \ & evenevenodd;\n        long evenevenevenevenodd = even & evenevenevenodd;\n\
    \        long evenevenevenevenevenodd = even & evenevenevenevenodd;\n        long\
    \ evenevenevenevenevenevenodd = even & evenevenevenevenevenodd;\n        long\
    \ evenevenevenevenevenevenevenodd = even & evenevenevenevenevenevenodd;\n    \
    \    long evenevenevenevenevenevenevenevenodd = even & evenevenevenevenevenevenevenodd;\n\
    \        long evenevenevenevenevenevenevenevenevenevenodd = even & evenevenevenevenevenevenevenevenodd;\n\
    \        long evenevenevenevenevenevenevenevenevenevenevenodd = even & evenevenevenevenevenevenevenevenevenodd;\n\
    \        long evenevenevenevenevenevenevenevenevenevenevenevenodd = even & evenevenevenevenevenevenevenevenevenevenodd;\n\
    \        long evenevenevenevenevenevenevenevenevenevenevenevenevenevenodd = even\
    \ & evenevenevenevenevenevenevenevenevenevenevenodd;\n        long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenevenevenevenevenevenevenevenodd;\n        long\
    \ evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd = even &\
    \ evenevenevenevenevenevenevenevenevenevenevenevenevenevenodd;\n        long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenevenevenevenevenevenevenevenevenevenodd;\n    \
    \    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenevenevenevenevenevenevenevenevenevenodd;\n    \
    \    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = even & evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd;\n\
    \        long eveneveneveneveneveneveneveneveneveneveneveneveneveneveneveneveneveneven",
  "        long biggest = -1;\n        long even = x;\n        long odd = y;\n   \
    \     long evenBiggest = even;\n        long oddBiggest = odd;\n        while(even\
    \ < odd) {\n            even = even * 2;\n            evenBiggest = even;\n  \
    \          odd = odd * 2;\n            oddBiggest = odd;\n            if(even\
    \ > odd) {\n                biggest = evenBiggest;\n                break;\n \
    \           }\n        }\n        return biggest;", "        long maxEven = -1;\n\
    \        long minEven = -1;\n        long even = -1;\n        long odd = -1;\n\
    \        long biggest = -1;\n        long smallest = -1;\n        long evenInRange\
    \ = -1;\n        long oddInRange = -1;\n        long biggestEven = -1;\n     \
    \   long smallestEven = -1;\n        long biggestOdd = -1;\n        long smallestOdd\
    \ = -1;\n        long biggestEvenInRange = -1;\n        long smallestEvenInRange\
    \ = -1;\n        long biggestOddInRange = -1;\n        long smallestOddInRange\
    \ = -1;\n        long evenInRangeEven = -1;\n        long evenInRangeOdd = -1;\n\
    \        long oddInRangeEven = -1;\n        long oddInRangeOdd = -1;\n       \
    \ long biggestEvenEven = -1;\n        long smallestEvenEven = -1;\n        long\
    \ biggestOddEven = -1;\n        long smallestOddEven = -1;\n        long biggestEvenOdd\
    \ = -1;\n        long smallestEvenOdd = -1;\n        long biggestOddOdd = -1;\n\
    \        long smallestOddOdd = -1;\n        long evenInRangeEvenInRange = -1;\n\
    \        long evenInRangeOddInRange = -1;\n        long oddInRangeEvenInRange\
    \ = -1;\n        long oddInRangeOddInRange = -1;\n        long biggestEvenEvenInRange\
    \ = -1;\n        long smallestEvenEvenInRange = -1;\n        long biggestOddEvenInRange\
    \ = -1;\n        long smallestOddEvenInRange = -1;\n        long biggestEvenOddInRange\
    \ = -1;\n        long smallestEvenOddInRange = -1;\n        long biggestOddOddInRange\
    \ = -1;\n        long smallestOddOddInRange = -1;\n        long evenInRangeEvenInRangeEven\
    \ = -1;\n        long evenInRangeEvenInRangeOdd = -1;\n        long evenInRangeOddInRangeEven\
    \ = -1;\n        long evenInRangeOddInRangeOdd = -1;\n        long oddInRangeEvenInRangeEven\
    \ = -1;\n        long oddInRangeEvenInRangeOdd = -1;\n        long oddInRangeOddInRangeEven\
    \ = -1;\n        long oddInRangeOddInRangeOdd = -1;\n        long biggestEvenEvenInRangeEven\
    \ = -1;\n        long smallestEven", "        long max = (long) Math.max(x, y);\n\
    \        long min = (long) Math.min(x, y);\n        long even = min % 2 == 0;\n\
    \        long evenMax = max % 2 == 0;\n        long evenMin = min % 2 == 0;\n\
    \        if (evenMax && evenMin) {\n            return even;\n        }\n    \
    \    if (evenMax) {\n            return even;\n        }\n        if (evenMin)\
    \ {\n            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even;\n        }\n        if (even) {\n\
    \            return even;\n        }\n        if (even) {\n            return\
    \ even;\n        }\n        if (even) {\n            return even;\n        }\n\
    \        if (even) {\n            return even", "        long even = x;\n    \
    \    long odd = y;\n        long biggest = even;\n        long biggestOdd = odd;\n\
    \        long biggestEven = even;\n        long biggestOddEven = even;\n     \
    \   long biggestEvenOdd = odd;\n        long biggestOddEvenOdd = odd;\n      \
    \  long biggestEvenOddEven = even;\n        long biggestOddEvenOddEven = even;\n\
    \        long biggestEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEven = even;\n        long\
    \ biggestOddEvenOddEvenOddEvenOddEven = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEven = even;\n \
    \       long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long\
    \ biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        long maxEven = -1;\n        long even = x;\n        long odd = y;\n   \
    \     while (even < odd) {\n            long mid = (even + odd) / 2;\n       \
    \     if (mid % 2 == 0) {\n                even = mid;\n            } else {\n\
    \                odd = mid;\n            }\n            if (even > maxEven) {\n\
    \                maxEven = even;\n            }\n        }\n        return maxEven;",
  "        long maxEven = -1;\n        long even = x;\n        long odd = y;\n   \
    \     while (even < odd) {\n            long mid = (even + odd) / 2;\n       \
    \     if (mid % 2 == 0) {\n                even = mid;\n            } else {\n\
    \                odd = mid;\n            }\n            if (even > maxEven) {\n\
    \                maxEven = even;\n            }\n        }\n        return maxEven;",
  "        long maxEven = -1;\n        long even = x;\n        long odd = y;\n   \
    \     while(even < odd) {\n            long mid = (even+odd)/2;\n            if(mid\
    \ % 2 == 0) {\n                even = mid;\n            } else {\n           \
    \     odd = mid;\n            }\n        }\n        if(even > maxEven) {\n   \
    \         maxEven = even;\n        }\n        return maxEven;", "        long\
    \ max = x;\n        long min = y;\n        long mid = min + (max - min) / 2;\n\
    \        long even = mid;\n        long odd = mid - 1;\n        while (even >\
    \ 0 && odd < y) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n        \
    \        max = even;\n                min = odd;\n                mid = min +\
    \ (max - min) / 2;\n                even = mid;\n                odd = mid - 1;\n\
    \            } else if (even % 2 == 0 && odd % 2 != 0) {\n                max\
    \ = even;\n                mid = mid;\n                even = mid;\n         \
    \       odd = mid - 1;\n            } else if (even % 2 != 0 && odd % 2 == 0)\
    \ {\n                max = odd;\n                mid = mid;\n                even\
    \ = mid;\n                odd = mid - 1;\n            } else {\n             \
    \   max = even;\n                mid = mid;\n                even = mid;\n   \
    \             odd = mid - 1;\n            }\n        }\n        if (even > 0 &&\
    \ odd < y) {\n            max = even;\n            min = odd;\n            mid\
    \ = min + (max - min) / 2;\n            even = mid;\n            odd = mid - 1;\n\
    \        }\n        if (even > 0 && odd > y) {\n            max = even;\n    \
    \        mid = mid;\n            even = mid;\n            odd = mid - 1;\n   \
    \     }\n        if (even < 0 && odd > y) {\n            max = odd;\n        \
    \    mid = mid;\n            even = mid;\n            odd = mid - 1;\n       \
    \ }\n        if (even < 0 && odd < y) {\n            max = odd;\n            mid\
    \ = mid;\n            even = mid;\n            odd = mid - 1;\n        }\n   \
    \     return max;", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long range = (even-odd)+1;\n\
    \        long evenRange = (even-odd)/2;\n        long oddRange = (odd-even)/2;\n\
    \        long evenSmaller = even;\n        long oddSmaller = odd;\n        long\
    \ evenBigger = even;\n        long oddBigger = odd;\n        long evenSmallerBigger\
    \ = even;\n        long oddSmallerBigger = odd;\n        long evenBiggerSmaller\
    \ = even;\n        long oddBiggerSmaller = odd;\n        long evenBiggerBigger\
    \ = even;\n        long oddBiggerBigger = odd;\n        long evenBiggerSmallerBigger\
    \ = even;\n        long oddBiggerSmallerBigger = odd;\n        long evenBiggerBiggerSmaller\
    \ = even;\n        long oddBiggerBiggerSmaller = odd;\n        long evenBiggerBiggerSmaller\
    \ = even;\n        long oddBiggerBiggerSmaller = odd;\n        long evenBiggerBiggerBigger\
    \ = even;\n        long oddBiggerBiggerBigger = odd;\n        long evenBiggerSmallerBiggerBigger\
    \ = even;\n        long oddBiggerSmallerBiggerBigger = odd;\n        long evenBiggerBiggerSmallerBigger\
    \ = even;\n        long oddBiggerBiggerSmallerBigger = odd;\n        long evenBiggerBiggerBiggerSmaller\
    \ = even;\n        long oddBiggerBiggerBiggerSmaller = odd;\n        long evenBiggerSmallerBiggerBigger\
    \ = even;\n        long oddBiggerSmallerBiggerBigger = odd;\n        long evenBiggerBiggerSmallerBigger\
    \ = even;\n        long oddBiggerBiggerBiggerSmaller = odd;\n        long evenBiggerSmallerBiggerBigger\
    \ = even;\n        long oddBiggerSmallerBiggerBigger = odd;\n        long evenBiggerBiggerBiggerSmaller\
    \ = even;\n        long oddBiggerBiggerBiggerSmaller = odd;\n        long evenBiggerSmallerBiggerBigger\
    \ = even;\n        long oddBiggerSmallerBiggerBigger = odd;\n        long evenBiggerBiggerBiggerSmaller\
    \ = even;\n        long oddBigger", "        long max = Math.max(x, y);\n    \
    \    long min = Math.min(x, y);\n        long even = max / 2;\n        long odd\
    \ = max - even;\n        if (even % 2 == 0) {\n            return even;\n    \
    \    } else {\n            return odd;\n        }", "        long maxEven = -1;\n\
    \        long even = x;\n        long odd = y;\n        while(even < odd) {\n\
    \            long mid = (even+odd)/2;\n            if(mid % 2 == 0) {\n      \
    \          even = mid;\n            } else {\n                odd = mid;\n   \
    \         }\n        }\n        if(even > maxEven) {\n            maxEven = even;\n\
    \        }\n        return maxEven;", "        long max = (long) Math.max(x, y);\n\
    \        long min = (long) Math.min(x, y);\n        long even = max / 2;\n   \
    \     long odd = max % 2;\n        if (even > odd) {\n            return even;\n\
    \        } else {\n            return -1;\n        }", "        long max = Math.max(x,\
    \ y);\n        long min = Math.min(x, y);\n        long even = max / 2;\n    \
    \    long odd = max - even;\n        if (even % 2 == 0) {\n            return\
    \ even;\n        } else {\n            return odd;\n        }", "        long\
    \ biggest = -1;\n        if (x >= y) {\n            biggest = x;\n        } else\
    \ {\n            biggest = y;\n        }\n        long even = biggest / 2;\n \
    \       long odd = biggest % 2;\n        if (even > odd) {\n            return\
    \ even;\n        } else {\n            return odd;\n        }", "        long\
    \ maxEven = Long.MIN_VALUE;\n        long minEven = Long.MAX_VALUE;\n        long\
    \ even = Long.MIN_VALUE;\n        long odd = Long.MAX_VALUE;\n        long evenMax\
    \ = Long.MIN_VALUE;\n        long oddMax = Long.MAX_VALUE;\n        long evenMin\
    \ = Long.MIN_VALUE;\n        long oddMin = Long.MAX_VALUE;\n        long evenMinMax\
    \ = Long.MIN_VALUE;\n        long oddMinMax = Long.MAX_VALUE;\n        long evenMaxMin\
    \ = Long.MIN_VALUE;\n        long oddMaxMin = Long.MAX_VALUE;\n        long evenMinMaxMin\
    \ = Long.MIN_VALUE;\n        long oddMinMaxMin = Long.MAX_VALUE;\n        long\
    \ evenMaxMinMax = Long.MIN_VALUE;\n        long oddMaxMinMax = Long.MAX_VALUE;\n\
    \        long evenMinMaxMinMax = Long.MIN_VALUE;\n        long oddMinMaxMinMax\
    \ = Long.MAX_VALUE;\n        long evenMaxMinMaxMinMax = Long.MIN_VALUE;\n    \
    \    long oddMinMaxMinMax = Long.MAX_VALUE;\n        long evenMinMaxMinMaxMinMax\
    \ = Long.MIN_VALUE;\n        long oddMinMaxMinMaxMinMax = Long.MAX_VALUE;\n  \
    \      long evenMinMaxMinMaxMinMaxMin = Long.MIN_VALUE;\n        long oddMinMaxMinMaxMinMaxMin\
    \ = Long.MAX_VALUE;\n        long evenMinMaxMinMaxMinMaxMinMax = Long.MIN_VALUE;\n\
    \        long oddMinMaxMinMaxMinMaxMinMax = Long.MAX_VALUE;\n        long evenMinMaxMinMaxMinMaxMinMaxMin\
    \ = Long.MIN_VALUE;\n        long oddMinMaxMinMaxMinMaxMinMaxMin = Long.MAX_VALUE;\n\
    \        long evenMinMaxMinMaxMinMaxMinMaxMinMax = Long.MIN_VALUE;\n        long\
    \ oddMinMaxMinMaxMinMaxMinMaxMinMax = Long.MAX_VALUE;\n        long evenMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Long.MIN_VALUE;\n        long oddMinMaxMinMaxMinMaxMinMaxMinMaxMin = Long.MAX_VALUE;\n\
    \        long evenMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = Long.MIN_VALUE;\n   \
    \     long oddMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = Long.MAX_VALUE;\n       \
    \ long even", "        long max = 0;\n        long min = 0;\n        long mid\
    \ = 0;\n        long sum = 0;\n        long even = 0;\n        long odd = 0;\n\
    \        long evenSum = 0;\n        long oddSum = 0;\n        long evenMax = 0;\n\
    \        long oddMax = 0;\n        long evenMin = 0;\n        long oddMin = 0;\n\
    \        long evenSum2 = 0;\n        long oddSum2 = 0;\n        long evenMax2\
    \ = 0;\n        long oddMax2 = 0;\n        long evenMin2 = 0;\n        long oddMin2\
    \ = 0;\n        long evenSum3 = 0;\n        long oddSum3 = 0;\n        long evenMax3\
    \ = 0;\n        long oddMax3 = 0;\n        long evenMin3 = 0;\n        long oddMin3\
    \ = 0;\n        long evenSum4 = 0;\n        long oddSum4 = 0;\n        long evenMax4\
    \ = 0;\n        long oddMax4 = 0;\n        long evenMin4 = 0;\n        long oddMin4\
    \ = 0;\n        long evenSum5 = 0;\n        long oddSum5 = 0;\n        long evenMax5\
    \ = 0;\n        long oddMax5 = 0;\n        long evenMin5 = 0;\n        long oddMin5\
    \ = 0;\n        long evenSum6 = 0;\n        long oddSum6 = 0;\n        long evenMax6\
    \ = 0;\n        long oddMax6 = 0;\n        long evenMin6 = 0;\n        long oddMin6\
    \ = 0;\n        long evenSum7 = 0;\n        long oddSum7 = 0;\n        long evenMax7\
    \ = 0;\n        long oddMax7 = 0;\n        long evenMin7 = 0;\n        long oddMin7\
    \ = 0;\n        long evenSum8 = 0;\n        long oddSum8 = 0;\n        long evenMax8\
    \ = 0;\n        long oddMax8 = 0;\n        long evenMin8 = 0;\n        long oddMin8\
    \ = 0;\n        long evenSum9 = 0;\n        long oddSum9 = 0;\n        long evenMax9\
    \ = 0;\n        long oddMax9 = 0;\n        long evenMin9 = 0;\n        long oddMin9\
    \ = 0;\n        long evenSum10 = 0;\n        long oddSum10 = 0;\n        long\
    \ evenMax10 = 0;\n        long oddMax10 = 0;\n        long evenMin10 = 0;\n  \
    \      long oddMin10 = 0;\n        long evenSum11 = 0;\n        long oddSum11\
    \ = 0;\n        long evenMax11 = 0;\n        long oddMax11 = 0;\n        long\
    \ evenMin11 = 0;\n        long oddMin11 = 0;\n        long evenSum12 = 0;\n  \
    \      long oddSum12 = 0;\n        long evenMax12 = 0;\n        long oddMax12\
    \ = 0;\n        long evenMin12 = 0;\n        long oddMin12 = 0;\n        long\
    \ evenSum13 = 0;\n        ", "        long maxEven = -1;\n        long minEven\
    \ = -1;\n        long minOdd = -1;\n        long maxOdd = -1;\n        long even\
    \ = x;\n        long odd = y;\n        long tempEven = even;\n        long tempOdd\
    \ = odd;\n        long tempMinEven = minEven;\n        long tempMinOdd = minOdd;\n\
    \        long tempMaxEven = maxEven;\n        long tempMaxOdd = maxOdd;\n    \
    \    while(tempEven < tempOdd) {\n            even = even + 1;\n            tempEven\
    \ = even;\n        }\n        while(tempOdd < tempEven) {\n            odd = odd\
    \ + 1;\n            tempOdd = odd;\n        }\n        while(tempMinEven < tempMinOdd)\
    \ {\n            minEven = minEven + 1;\n            tempMinEven = minEven;\n\
    \        }\n        while(tempMinOdd < tempMinEven) {\n            minOdd = minOdd\
    \ + 1;\n            tempMinOdd = minOdd;\n        }\n        while(tempMaxEven\
    \ < tempMaxOdd) {\n            maxEven = maxEven + 1;\n            tempMaxEven\
    \ = maxEven;\n        }\n        while(tempMaxOdd < tempMaxEven) {\n         \
    \   maxOdd = maxOdd + 1;\n            tempMaxOdd = maxOdd;\n        }\n      \
    \  if(even > odd) {\n            if(minEven > minOdd) {\n                if(maxEven\
    \ > maxOdd) {\n                    maxEven = even;\n                    maxOdd\
    \ = odd;\n                }\n                else {\n                    maxEven\
    \ = minEven;\n                    maxOdd = minOdd;\n                }\n      \
    \      }\n            else {\n                if(maxEven > maxOdd) {\n       \
    \             maxEven = odd;\n                    maxOdd = even;\n           \
    \     }\n                else {\n                    maxEven = minOdd;\n     \
    \               maxOdd = minEven;\n                }\n            }\n        }\n\
    \        else {\n            if(minOdd > minEven) {\n                if(maxOdd\
    \ > maxEven) {\n                    maxOdd = odd;\n                    maxEven\
    \ = even;\n                }\n                else {\n                    maxOdd\
    \ = minOdd;\n                    maxEven = minEven;\n                }\n     \
    \       }\n            else {\n                if(maxOdd > maxEven) {\n      \
    \              maxOdd = even;\n                    maxEven = odd;\n          \
    \      }\n                else {\n                    maxOdd = minEven;\n    \
    \                maxEven = min", "        long even = x;\n        long odd = y;\n\
    \        long biggest = even;\n        long smallest = odd;\n        long range\
    \ = (even-odd)+1;\n        while(even > odd && even > biggest) {\n           \
    \ biggest = even;\n            even = even - range;\n        }\n        while(odd\
    \ > even && odd > biggest) {\n            biggest = odd;\n            odd = odd\
    \ - range;\n        }\n        while(even > odd && odd > biggest) {\n        \
    \    biggest = even;\n            even = even - range;\n            odd = odd\
    \ - range;\n        }\n        while(even > odd && even > biggest) {\n       \
    \     biggest = even;\n            even = even - range;\n            odd = odd\
    \ - range;\n            smallest = odd;\n        }\n        while(odd > even &&\
    \ even > biggest) {\n            biggest = odd;\n            odd = odd - range;\n\
    \            smallest = even;\n        }\n        while(even > odd && odd > biggest)\
    \ {\n            biggest = even;\n            even = even - range;\n         \
    \   odd = odd - range;\n            smallest = even;\n        }\n        while(even\
    \ > odd && even > biggest) {\n            biggest = even;\n            even =\
    \ even - range;\n            odd = odd - range;\n            smallest = even;\n\
    \        }\n        while(even > odd && even > biggest) {\n            biggest\
    \ = even;\n            even = even - range;\n            odd = odd - range;\n\
    \            smallest = even;\n        }\n        while(even > odd && even > biggest)\
    \ {\n            biggest = even;\n            even = even - range;\n         \
    \   odd = odd - range;\n            smallest = even;\n        }\n        while(even\
    \ > odd && even > biggest) {\n            biggest = even;\n            even =\
    \ even - range;\n            odd = odd - range;\n            smallest = even;\n\
    \        }\n        while(even > odd && even > biggest) {\n            biggest\
    \ = even;\n            even = even - range;\n            odd = odd - range;\n\
    \            smallest = even;\n        }\n        while(even > odd && even > biggest)\
    \ {\n            biggest = even;\n            even = even - range;\n         \
    \   odd = odd - range;\n            smallest = even;\n        }\n        ", " \
    \       long even = x & 1l;\n        long odd = x >> 1l;\n        long evenodd\
    \ = even | odd;\n        long biggest = evenodd;\n        if (evenodd > y) {\n\
    \            biggest = -1;\n        }\n        return biggest;", "        long\
    \ maxEven = -1;\n        long minEven = -1;\n        long even = -1;\n       \
    \ long odd = 0;\n        long evenMax = -1;\n        long evenMin = -1;\n    \
    \    long oddMax = -1;\n        long oddMin = -1;\n        long evenMax2 = -1;\n\
    \        long evenMin2 = -1;\n        long oddMax2 = -1;\n        long oddMin2\
    \ = -1;\n        long evenMax3 = -1;\n        long evenMin3 = -1;\n        long\
    \ oddMax3 = -1;\n        long oddMin3 = -1;\n        long evenMax4 = -1;\n   \
    \     long evenMin4 = -1;\n        long oddMax4 = -1;\n        long oddMin4 =\
    \ -1;\n        long evenMax5 = -1;\n        long evenMin5 = -1;\n        long\
    \ oddMax5 = -1;\n        long oddMin5 = -1;\n        long evenMax6 = -1;\n   \
    \     long evenMin6 = -1;\n        long oddMax6 = -1;\n        long oddMin6 =\
    \ -1;\n        long evenMax7 = -1;\n        long evenMin7 = -1;\n        long\
    \ oddMax7 = -1;\n        long oddMin7 = -1;\n        long evenMax8 = -1;\n   \
    \     long evenMin8 = -1;\n        long oddMax8 = -1;\n        long oddMin8 =\
    \ -1;\n        long evenMax9 = -1;\n        long evenMin9 = -1;\n        long\
    \ oddMax9 = -1;\n        long oddMin9 = -1;\n        long evenMax10 = -1;\n  \
    \      long evenMin10 = -1;\n        long oddMax10 = -1;\n        long oddMin10\
    \ = -1;\n        long evenMax11 = -1;\n        long evenMin11 = -1;\n        long\
    \ oddMax11 = -1;\n        long oddMin11 = -1;\n        long evenMax12 = -1;\n\
    \        long evenMin12 = -1;\n        long oddMax12 = -1;\n        long oddMin12\
    \ = -1;\n        long evenMax13 = -1;\n        long evenMin13 = -1;\n        long\
    \ oddMax13 = -1;\n        long oddMin13 = -1;\n        long evenMax14 = -1;\n\
    \        long evenMin14 = -1;\n        long oddMax14 = -1;\n        long oddMin14\
    \ = -1;\n        long evenMax15 = -1;\n        long evenMin15 = -1;\n        long\
    \ oddMax15 = -1;\n        long oddMin15 = -1;\n        long evenMax16 = -1;\n\
    \        long evenMin16 = -1;\n        long oddMax16 = -1;\n        long oddMin16\
    \ = -1;\n        long evenMax17 = -1;\n        long evenMin17 = -1;\n        long\
    \ oddMax17 = -1;", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = even;\n        long biggestOdd = odd;\n        long evenOdd = even;\n\
    \        long evenOddOdd = evenOdd;\n        long oddOddOdd = odd;\n        long\
    \ oddOddEven = odd;\n        long evenOddEven = even;\n        long evenOddEvenOdd\
    \ = evenOdd;\n        long oddEvenOddEven = odd;\n        long oddEvenOddEvenOdd\
    \ = oddOdd;\n        long evenOddEvenOddOdd = evenOddOdd;\n        long oddEvenOddEvenOddOdd\
    \ = oddEvenOddEven;\n        long evenOddEvenOddEvenOdd = evenOddEvenOdd;\n  \
    \      long oddEvenOddEvenOddEvenOdd = oddEvenOddEvenOdd;\n        long evenOddEvenOddEvenOddOdd\
    \ = evenOddEvenOddEvenOdd;\n        long oddEvenOddEvenOddEvenOddOdd = oddEvenOddEvenOddEvenOdd;\n\
    \        long evenOddEvenOddEvenOddEvenOdd = evenOddEvenOddEvenOddEvenOdd;\n \
    \       long oddEvenOddEvenOddEvenOddEvenOdd = oddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long evenOddEvenOddEvenOddEvenOddEvenOdd = evenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long oddEvenOddEvenOddEvenOddEvenOddEvenOdd = oddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long evenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = evenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long oddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = oddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = evenOddEvenOddEvenOddEvenOddEvenOddEvenOdd",
  "        long max = Math.max(x, y);\n        long min = Math.min(x, y);\n      \
    \  long even = max / 2;\n        long odd = max % 2;\n        if (even > odd)\
    \ {\n            return even;\n        } else {\n            return -1;\n    \
    \    }", "        long ans = -1;\n        if (x >= y) {\n            ans = x;\n\
    \        } else {\n            ans = y;\n        }\n        long evens = 0;\n\
    \        long odds = 0;\n        long maxEven = Long.MIN_VALUE;\n        long\
    \ maxOdd = Long.MIN_VALUE;\n        long currentEven = Long.MIN_VALUE;\n     \
    \   long currentOdd = Long.MIN_VALUE;\n        long nextEven = Long.MIN_VALUE;\n\
    \        long nextOdd = Long.MIN_VALUE;\n        long nextMaxEven = Long.MIN_VALUE;\n\
    \        long nextMaxOdd = Long.MIN_VALUE;\n        long nextCurrentEven = Long.MIN_VALUE;\n\
    \        long nextCurrentOdd = Long.MIN_VALUE;\n        long nextNextEven = Long.MIN_VALUE;\n\
    \        long nextNextOdd = Long.MIN_VALUE;\n        long nextNextMaxEven = Long.MIN_VALUE;\n\
    \        long nextNextMaxOdd = Long.MIN_VALUE;\n        long nextNextCurrentEven\
    \ = Long.MIN_VALUE;\n        long nextNextCurrentOdd = Long.MIN_VALUE;\n     \
    \   long nextNextNextEven = Long.MIN_VALUE;\n        long nextNextNextOdd = Long.MIN_VALUE;\n\
    \        long nextNextNextMaxEven = Long.MIN_VALUE;\n        long nextNextNextMaxOdd\
    \ = Long.MIN_VALUE;\n        long nextNextNextCurrentEven = Long.MIN_VALUE;\n\
    \        long nextNextNextCurrentOdd = Long.MIN_VALUE;\n        long nextNextNextNextEven\
    \ = Long.MIN_VALUE;\n        long nextNextNextNextOdd = Long.MIN_VALUE;\n    \
    \    long nextNextNextNextMaxEven = Long.MIN_VALUE;\n        long nextNextNextNextMaxOdd\
    \ = Long.MIN_VALUE;\n        long nextNextNextNextCurrentEven = Long.MIN_VALUE;\n\
    \        long nextNextNextNextCurrentOdd = Long.MIN_VALUE;\n        long nextNextNextNextNextEven\
    \ = Long.MIN_VALUE;\n        long nextNextNextNextNextOdd = Long.MIN_VALUE;\n\
    \        long nextNextNextNextNextMaxEven = Long.MIN_VALUE;\n        long nextNextNextNextNextMaxOdd\
    \ = Long.MIN_VALUE;\n        long nextNextNextNextNextCurrentEven = Long.MIN_VALUE;\n\
    \        long nextNextNextNextNextCurrentOdd = Long.MIN_VALUE;\n        long nextNextNextNextNext",
  "        long maxEven = -1;\n        long minEven = -1;\n        long even = -1;\n\
    \        long odd = -1;\n        long biggestEven = -1;\n        long biggestOdd\
    \ = -1;\n        long biggestEven2 = -1;\n        long biggestOdd2 = -1;\n   \
    \     long biggestEven3 = -1;\n        long biggestOdd3 = -1;\n        long biggestEven4\
    \ = -1;\n        long biggestOdd4 = -1;\n        long biggestEven5 = -1;\n   \
    \     long biggestOdd5 = -1;\n        long biggestEven6 = -1;\n        long biggestOdd6\
    \ = -1;\n        long biggestEven7 = -1;\n        long biggestOdd7 = -1;\n   \
    \     long biggestEven8 = -1;\n        long biggestOdd8 = -1;\n        long biggestEven9\
    \ = -1;\n        long biggestOdd9 = -1;\n        long biggestEven10 = -1;\n  \
    \      long biggestOdd10 = -1;\n        long biggestEven11 = -1;\n        long\
    \ biggestOdd11 = -1;\n        long biggestEven12 = -1;\n        long biggestOdd12\
    \ = -1;\n        long biggestEven13 = -1;\n        long biggestOdd13 = -1;\n \
    \       long biggestEven14 = -1;\n        long biggestOdd14 = -1;\n        long\
    \ biggestEven15 = -1;\n        long biggestOdd15 = -1;\n        long biggestEven16\
    \ = -1;\n        long biggestOdd16 = -1;\n        long biggestEven17 = -1;\n \
    \       long biggestOdd17 = -1;\n        long biggestEven18 = -1;\n        long\
    \ biggestOdd18 = -1;\n        long biggestEven19 = -1;\n        long biggestOdd19\
    \ = -1;\n        long biggestEven20 = -1;\n        long biggestOdd20 = -1;\n \
    \       long biggestEven21 = -1;\n        long biggestOdd21 = -1;\n        long\
    \ biggestEven22 = -1;\n        long biggestOdd22 = -1;\n        long biggestEven23\
    \ = -1;\n        long biggestOdd23 = -1;\n        long biggestEven24 = -1;\n \
    \       long biggestOdd24 = -1;\n        long biggestEven25 = -1;\n        long\
    \ biggestOdd25 = -1;\n        long biggestEven26 = -1;\n        long biggestOdd26\
    \ = -1;\n        long biggestEven27 = -1;\n        long biggestOdd27", "     \
    \   long result = -1;\n        long even = x % 2 == 0 ? x : x + 1;\n        long\
    \ odd = y % 2 == 0 ? y : y + 1;\n        long evenMax = even;\n        long oddMax\
    \ = odd;\n        long evenMin = even;\n        long oddMin = odd;\n        long\
    \ evenMax2 = even;\n        long oddMax2 = odd;\n        long evenMin2 = even;\n\
    \        long oddMin2 = odd;\n        long evenMax3 = even;\n        long oddMax3\
    \ = odd;\n        long evenMin3 = even;\n        long oddMin3 = odd;\n       \
    \ long evenMax4 = even;\n        long oddMax4 = odd;\n        long evenMin4 =\
    \ even;\n        long oddMin4 = odd;\n        long evenMax5 = even;\n        long\
    \ oddMax5 = odd;\n        long evenMin5 = even;\n        long oddMin5 = odd;\n\
    \        long evenMax6 = even;\n        long oddMax6 = odd;\n        long evenMin6\
    \ = even;\n        long oddMin6 = odd;\n        long evenMax7 = even;\n      \
    \  long oddMax7 = odd;\n        long evenMin7 = even;\n        long oddMin7 =\
    \ odd;\n        long evenMax8 = even;\n        long oddMax8 = odd;\n        long\
    \ evenMin8 = even;\n        long oddMin8 = odd;\n        long evenMax9 = even;\n\
    \        long oddMax9 = odd;\n        long evenMin9 = even;\n        long oddMin9\
    \ = odd;\n        long evenMax10 = even;\n        long oddMax10 = odd;\n     \
    \   long evenMin10 = even;\n        long oddMin10 = odd;\n        long evenMax11\
    \ = even;\n        long oddMax11 = odd;\n        long evenMin11 = even;\n    \
    \    long oddMin11 = odd;\n        long evenMax12 = even;\n        long oddMax12\
    \ = odd;\n        long evenMin12 = even;\n        long oddMin12 = odd;\n     \
    \   long evenMax13 = even;\n        long oddMax13 = odd;\n        long evenMin13\
    \ = even;\n        long oddMin13 = odd;\n        long evenMax14 = even;\n    \
    \    long oddMax14 = odd;\n        long evenMin14 = even;\n        long oddMin14\
    \ = odd;\n        long evenMax15 = even;\n        long oddMax15 = odd;\n     \
    \   long evenMin15 = even;\n", "        long maxEven = -1;\n        long even\
    \ = x;\n        long odd = y;\n        long biggestEven = even;\n        long\
    \ biggestOdd = odd;\n        while (even < odd) {\n            even = even + 1;\n\
    \            odd = odd - 1;\n            if (even > odd) {\n                biggestEven\
    \ = even;\n                biggestOdd = odd;\n            }\n        }\n     \
    \   if (biggestEven > biggestOdd) {\n            maxEven = biggestEven;\n    \
    \    } else {\n            maxEven = biggestOdd;\n        }\n        return maxEven;",
  "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y\
    \ : y + 1;\n        long biggest = even;\n        if (even > odd) {\n        \
    \    biggest = odd;\n        }\n        long even2 = even % 2 == 0 ? even : even\
    \ + 1;\n        long odd2 = odd % 2 == 0 ? odd : odd + 1;\n        long biggest2\
    \ = even2;\n        if (even2 > odd2) {\n            biggest2 = odd2;\n      \
    \  }\n        long even3 = even2 % 2 == 0 ? even2 : even2 + 1;\n        long odd3\
    \ = odd2 % 2 == 0 ? odd2 : odd2 + 1;\n        long biggest3 = even3;\n       \
    \ if (even3 > odd3) {\n            biggest3 = odd3;\n        }\n        long even4\
    \ = even3 % 2 == 0 ? even3 : even3 + 1;\n        long odd4 = odd3 % 2 == 0 ? odd3\
    \ : odd3 + 1;\n        long biggest4 = even4;\n        if (even4 > odd4) {\n \
    \           biggest4 = odd4;\n        }\n        long even5 = even4 % 2 == 0 ?\
    \ even4 : even4 + 1;\n        long odd5 = odd4 % 2 == 0 ? odd4 : odd4 + 1;\n \
    \       long biggest5 = even5;\n        if (even5 > odd5) {\n            biggest5\
    \ = odd5;\n        }\n        long even6 = even5 % 2 == 0 ? even5 : even5 + 1;\n\
    \        long odd6 = odd5 % 2 == 0 ? odd5 : odd5 + 1;\n        long biggest6 =\
    \ even6;\n        if (even6 > odd6) {\n            biggest6 = odd6;\n        }\n\
    \        long even7 = even6 % 2 == 0 ? even6 : even6 + 1;\n        long odd7 =\
    \ odd6 % 2 == 0 ? odd6 : odd6 + 1;\n        long biggest7 = even7;\n        if\
    \ (even7 > odd7) {\n            biggest7 = odd7;\n        }\n        long even8\
    \ = even7 % 2 == 0 ? even7 : even7 + 1;\n        long odd8 = odd7 % 2 == 0 ? odd7\
    \ : odd7 + 1;\n        long biggest8 = even8;\n        if (even8 > odd8) {\n \
    \           biggest8 = odd8;\n        }\n        long even9 = even8 % 2 == 0 ?\
    \ even8 : even8 + 1;\n        long odd9 = odd8 % 2 == 0 ? odd8 : odd8 + 1;\n \
    \       long biggest9 = even9;\n        if (even9 > odd9) {\n            biggest9\
    \ = odd9;\n        }\n        long even10 = even9 % 2 == 0 ? even9 : even9 + 1;\n\
    \        ", "        long biggest = -1;\n        long even = x;\n        long\
    \ odd = y;\n        while (even < odd) {\n            long mid = (even + odd)\
    \ / 2;\n            if (mid % 2 == 0) {\n                even = mid;\n       \
    \     } else {\n                odd = mid;\n            }\n        }\n       \
    \ if (even > biggest) {\n            biggest = even;\n        }\n        return\
    \ biggest;", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        while (even < odd) {\n            biggest = even;\n         \
    \   even = even + 1;\n        }\n        while (odd > biggest) {\n           \
    \ biggest = odd;\n            odd = odd - 1;\n        }\n        return biggest;",
  "        long result = -1;\n        if (x >= y) {\n            while (x <= y) {\n\
    \                if (x % 2 == 0) {\n                    result = x;\n        \
    \            break;\n                }\n                x += 2;\n            }\n\
    \        } else {\n            while (y <= x) {\n                if (y % 2 ==\
    \ 0) {\n                    result = y;\n                    break;\n        \
    \        }\n                y += 2;\n            }\n        }\n        return\
    \ result;", "        long max = Math.max(x, y);\n        long min = Math.min(x,\
    \ y);\n        long even = max / 2;\n        long odd = max - even;\n        if\
    \ (even % 2 == 0) {\n            return even;\n        } else {\n            return\
    \ odd;\n        }", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        boolean evenOdd = even%2\
    \ == 0;\n        boolean evenEven = even%2 == 0;\n        boolean oddOdd = odd%2\
    \ == 0;\n        boolean oddEven = odd%2 == 0;\n        boolean evenOddEven =\
    \ even%2 == 0 && even%2 == 0;\n        boolean evenEvenOdd = even%2 == 0 && even%2\
    \ == 1;\n        boolean evenOddOdd = even%2 == 1 && odd%2 == 1;\n        boolean\
    \ oddEvenOdd = odd%2 == 1 && even%2 == 1;\n        boolean oddOddEven = odd%2\
    \ == 1 && odd%2 == 0;\n        boolean evenEvenOddEven = even%2 == 1 && even%2\
    \ == 1 && even%2 == 0;\n        boolean evenEvenOddOdd = even%2 == 1 && even%2\
    \ == 1 && odd%2 == 1;\n        boolean evenOddEvenOdd = even%2 == 1 && even%2\
    \ == 1 && odd%2 == 0;\n        boolean evenOddOddEven = even%2 == 1 && even%2\
    \ == 1 && odd%2 == 1;\n        boolean evenEvenOddEvenOdd = even%2 == 1 && even%2\
    \ == 1 && even%2 == 1 && odd%2 == 0;\n        boolean evenEvenOddOddEven = even%2\
    \ == 1 && even%2 == 1 && even%2 == 1 && odd%2 == 1;\n        boolean evenOddEvenOddEven\
    \ = even%2 == 1 && even%2 == 1 && even%2 == 1 && odd%2 == 0;\n        boolean\
    \ evenEvenOddEvenOddEven = even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2\
    \ == 1 && odd%2 == 1;\n        boolean evenOddEvenOddOddEven = even%2 == 1 &&\
    \ even%2 == 1 && even%2 == 1 && even%2 == 1 && odd%2 == 0;\n        boolean evenEvenOddEvenOddOddEven\
    \ = even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 &&\
    \ odd%2 == 1;\n        boolean evenOddEvenOddEvenOddEven = even%2 == 1 && even%2\
    \ == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 && odd%2 ==\
    \ 0;\n        boolean evenEvenOddOddEvenOddOddEven = even%2 == 1 && even%2 ==\
    \ 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1 && even%2 == 1\
    \ && odd%2 == 1;\n        ", "        long max = (long) Math.max(x, y);\n    \
    \    long min = (long) Math.min(x, y);\n        long even = min % 2 == 0;\n  \
    \      long evenMax = max % 2 == 0;\n        long evenMin = min % 2 == 0;\n  \
    \      long evenMinMax = min < max ? min : max;\n        long evenMaxMin = max\
    \ < min ? max : min;\n        long evenMinMaxMin = min < max && max < min ? min\
    \ : max;\n        long evenMaxMinMax = max < min && max < min ? max : min;\n \
    \       long evenMaxMinMaxMin = max < min && max < min && min < max ? max : min;\n\
    \        long evenMaxMinMaxMinMax = max < min && max < min && min < max && max\
    \ < min ? max : min;\n        long evenMaxMinMaxMinMaxMin = max < min && max <\
    \ min && min < max && max < min && min < max ? max : min;\n        long evenMaxMinMaxMinMaxMinMax\
    \ = max < min && max < min && min < max && max < min && min < max && max < min\
    \ ? max : min;\n        long evenMaxMinMaxMinMaxMinMaxMin = max < min && max <\
    \ min && min < max && max < min && min < max && max < min && min < max ? max :\
    \ min;\n        long evenMaxMinMaxMinMaxMinMaxMinMax = max < min && max < min\
    \ && min < max && max < min && min < max && max < min && min < max && max < min\
    \ ? max : min;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMin = max < min &&\
    \ max < min && min < max && max < min && min < max && max < min && min < max &&\
    \ max < min && min < max ? max : min;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = max < min && max < min && min < max && max < min && min < max && max < min\
    \ && min < max && max < min && min < max && max < min ? max : min;\n        long\
    \ evenMaxMinMaxMinMaxMinMaxMinMaxMinMax = max < min && max < min && min < max\
    \ && max < min && min < max && max < min && min < max && max < min && min < max\
    \ && max ", "        long result = -1;\n        long even = x;\n        long odd\
    \ = y;\n        long evenMin = even;\n        long evenMax = even;\n        long\
    \ oddMin = odd;\n        long oddMax = odd;\n        while (even < odd) {\n  \
    \          evenMin = even;\n            evenMax = even;\n            oddMin =\
    \ odd;\n            oddMax = odd;\n            if (even % 2 == 0) {\n        \
    \        even = even + 1;\n            } else {\n                even = even -\
    \ 1;\n            }\n            if (odd % 2 == 0) {\n                odd = odd\
    \ + 1;\n            } else {\n                odd = odd - 1;\n            }\n\
    \        }\n        if (evenMin > oddMax) {\n            result = evenMin;\n \
    \       } else if (evenMax < oddMin) {\n            result = evenMax;\n      \
    \  } else {\n            result = oddMin;\n        }\n        return result;",
  "        long biggest = x;\n        long smaller = y;\n        long even = x;\n\
    \        long odd = y;\n        long evenSmaller = even;\n        long oddSmaller\
    \ = odd;\n        long evenBigger = even;\n        long oddBigger = odd;\n   \
    \     long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n \
    \       long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n\
    \        long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n\
    \        long evenSmallerSmaller = even;\n        long oddSmallerSmaller = odd;\n\
    \        long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n\
    \        long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n\
    \        long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenSmallerSmaller = even;\n        long oddSmallerSmaller = odd;\n\
    \        long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n\
    \        long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n\
    \        long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenSmallerSmaller = even;\n        long oddSmallerSmaller = odd;\n\
    \        long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n\
    \        long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n\
    \        long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenSmallerSmaller = even;\n        long oddSmallerSmaller = odd;\n\
    \        long evenBiggerBigger = even;\n        long oddBiggerBigger = odd;\n\
    \        long evenSmallerBigger = even;\n        long oddSmallerBigger = odd;\n\
    \        long evenBiggerSmaller = even;\n        long oddBiggerSmaller = odd;\n\
    \        long evenSmallerSmaller = even;\n        ", "        long even = x;\n\
    \        long odd = y;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        while(even < odd) {\n            even = even * 2;\n          \
    \  odd = odd * 2;\n            if(even > odd) {\n                biggest = even;\n\
    \                smallest = odd;\n            }\n        }\n        if(even >\
    \ biggest) {\n            biggest = even;\n        }\n        if(odd > smallest)\
    \ {\n            smallest = odd;\n        }\n        return biggest;", "     \
    \   long biggest = -1;\n        long even = x;\n        long odd = y;\n      \
    \  long eveneven = even;\n        long evenodd = odd;\n        long oddeven =\
    \ even;\n        long oddodd = odd;\n        long eveneveneven = eveneven;\n \
    \       long evenevenodd = evenodd;\n        long evenoddeven = oddeven;\n   \
    \     long evenoddodd = oddodd;\n        long oddeveneveneven = eveneveneven;\n\
    \        long oddevenevenodd = evenoddeven;\n        long oddevenoddeven = evenevenodd;\n\
    \        long oddevenoddodd = evenoddodd;\n        long eveneveneveneven = eveneveneveneven;\n\
    \        long evenevenevenodd = evenevenevenodd;\n        long evenevenoddeven\
    \ = evenevenoddeven;\n        long evenevenoddodd = evenevenoddodd;\n        long\
    \ evenoddeveneven = evenoddeveneven;\n        long evenoddevenodd = evenoddevenodd;\n\
    \        long oddeveneveneveneven = eveneveneveneveneven;\n        long oddevenevenevenodd\
    \ = evenoddeveneven;\n        long oddevenevenoddeven = evenoddeveneven;\n   \
    \     long oddevenoddeven = evenoddeveneven;\n        long eveneveneveneveneven\
    \ = eveneveneveneveneven;\n        long evenevenevenevenodd = evenevenevenevenodd;\n\
    \        long evenevenevenoddeven = evenevenevenoddeven;\n        long evenevenoddeven\
    \ = evenevenoddeven;\n        long evenoddeveneven = evenoddeveneven;\n      \
    \  long evenoddeveneven = evenoddeveneven;\n        long oddeveneveneveneven =\
    \ eveneveneveneven;\n        long oddevenevenevenodd = evenoddeveneven;\n    \
    \    long oddevenevenoddeven = evenoddeveneven;\n        long oddevenoddeven =\
    \ evenoddeveneven;\n        long eveneveneveneveneven = eveneveneveneveneven;\n\
    \        long evenevenevenevenodd = evenevenevenevenodd;\n        long evenevenevenoddeven\
    \ = evenevenevenoddeven;\n        long evenevenoddeven = evenevenoddeven;\n  \
    \      long evenoddeveneven = evenoddeveneven;\n        long evenoddeveneven =\
    \ evenoddeveneven;\n        long oddeveneveneven = eveneveneveneven;\n       \
    \ long odd", "        long result = -1;\n        if (x >= y) {\n            long\
    \ mid = x + (y - x) / 2;\n            if (mid % 2 == 0) {\n                result\
    \ = mid;\n            }\n        }\n        return result;", "        long max\
    \ = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even = max\
    \ / 2;\n        long odd = max - even;\n        if (even % 2 == 0) {\n       \
    \     return even;\n        } else {\n            return odd;\n        }", " \
    \       long even = x;\n        long odd = y;\n        long biggest = even;\n\
    \        long smallest = odd;\n        long eveneven = even;\n        long evenodd\
    \ = odd;\n        long oddeven = even;\n        long oddodd = odd;\n        long\
    \ eveneveneven = eveneven;\n        long evenevenodd = evenodd;\n        long\
    \ evenoddeven = oddeven;\n        long evenoddodd = oddodd;\n        long oddeveneven\
    \ = eveneven;\n        long oddevenodd = evenodd;\n        long oddoddeven = eveneven;\n\
    \        long oddoddodd = oddodd;\n        long eveneveneveneven = eveneveneven;\n\
    \        long evenevenevenodd = evenevenodd;\n        long evenevenoddeven = evenoddeven;\n\
    \        long evenevenoddodd = evenoddodd;\n        long evenoddeveneven = eveneveneven;\n\
    \        long evenoddevenodd = evenoddeven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddodd = evenoddodd;\n        long oddeveneveneven = eveneveneven;\n\
    \        long oddevenevenodd = evenevenodd;\n        long oddevenoddeven = eveneveneven;\n\
    \        long oddevenoddodd = evenoddodd;\n        long oddoddeveneven = eveneveneven;\n\
    \        long oddoddevenodd = evenoddeven;\n        long oddoddoddeven = evenoddeven;\n\
    \        long oddoddoddeven = evenoddodd;\n        long eveneveneveneveneven =\
    \ eveneveneveneven;\n        long evenevenevenodd = evenevenevenodd;\n       \
    \ long evenevenoddeven = eveneveneveneven;\n        long evenevenoddodd = evenevenodd;\n\
    \        long evenoddeveneven = eveneveneven;\n        long evenoddevenodd = evenoddeven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddodd = evenoddodd;\n\
    \        long oddeveneveneven = eveneveneven;\n        long oddevenevenodd = evenevenevenodd;\n\
    \        long oddevenoddeven = evenoddeveneven;\n        long oddoddeveneven =\
    \ evenoddeveneven;\n        long oddoddoddeven = evenoddoddeven;\n        long\
    \ eveneveneveneveneven = eveneveneveneveneven;\n        long ", "        long\
    \ max = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even\
    \ = min % 2 == 0 ? min : min - 1;\n        long odd = max % 2 == 0 ? max : max\
    \ + 1;\n        long evenMax = even % 2 == 0 ? even : even - 1;\n        long\
    \ evenMin = evenMax % 2 == 0 ? evenMax : evenMax + 1;\n        long oddMax = odd\
    \ % 2 == 0 ? odd : odd - 1;\n        long oddMin = oddMax % 2 == 0 ? oddMax :\
    \ oddMax + 1;\n        long evenEven = evenMin % 2 == 0 ? evenMin : evenMin -\
    \ 1;\n        long evenOdd = evenMax % 2 == 0 ? evenMax : evenMax + 1;\n     \
    \   long oddEven = oddMin % 2 == 0 ? oddMin : oddMin - 1;\n        long oddOdd\
    \ = oddMax % 2 == 0 ? oddMax : oddMax + 1;\n        long evenOddMax = evenOdd\
    \ % 2 == 0 ? evenOdd : evenOdd - 1;\n        long evenOddMin = evenOddMax % 2\
    \ == 0 ? evenOddMax : evenOddMax + 1;\n        long oddEvenMax = oddEven % 2 ==\
    \ 0 ? oddEven : oddEven - 1;\n        long oddEvenMin = oddEvenMax % 2 == 0 ?\
    \ oddEvenMax : oddEvenMax + 1;\n        long evenOddEven = evenOddMin % 2 == 0\
    \ ? evenOddMin : evenOddMin - 1;\n        long evenOddOdd = evenOddMax % 2 ==\
    \ 0 ? evenOddMax : evenOddMax + 1;\n        long oddEvenOdd = oddEvenMin % 2 ==\
    \ 0 ? oddEvenMin : oddEvenMin - 1;\n        long oddEvenOddMax = oddEvenOdd %\
    \ 2 == 0 ? oddEvenOdd : oddEvenOdd - 1;\n        long oddEvenOddMin = oddEvenOddMax\
    \ % 2 == 0 ? oddEvenOddMax : oddEvenOddMax + 1;\n        long evenOddOddEven =\
    \ evenOddOddMin % 2 == 0 ? evenOddOddMin : evenOddOddMin - 1;\n        long evenOddOddOdd\
    \ = evenOddOddMax % 2 == 0 ? evenOddOddMax : evenOddOddMax + 1;\n        long\
    \ oddEvenOddOdd = oddEvenOddMin % 2 == 0 ? oddEvenOddMin : oddEvenOddMin - 1;\n\
    \        long oddEvenOdd", "        long max = (long) Math.max(x, y);\n      \
    \  long min = (long) Math.min(x, y);\n        long even = max;\n        long odd\
    \ = min;\n        long result = -1;\n        while (even > 0 && odd > 0) {\n \
    \           if (even % 2 == 0 && odd % 2 == 0) {\n                result = even;\n\
    \                break;\n            } else if (even % 2 != 0 && odd % 2 != 0)\
    \ {\n                result = odd;\n                break;\n            }\n  \
    \          even = even / 2;\n            odd = odd / 2;\n        }\n        return\
    \ result;", "        long result = -1;\n        long even = x & 1;\n        long\
    \ odd = y & 1;\n        if (even > odd) {\n            result = x;\n        }\
    \ else {\n            result = y;\n        }\n        return result;", "     \
    \   long maxEven = -1;\n        long minEven = -1;\n        long even = -1;\n\
    \        long odd = -1;\n        long biggestEven = -1;\n        long biggestOdd\
    \ = -1;\n        long biggestEven2 = -1;\n        long biggestOdd2 = -1;\n   \
    \     long biggestEven3 = -1;\n        long biggestOdd3 = -1;\n        long biggestEven4\
    \ = -1;\n        long biggestOdd4 = -1;\n        long biggestEven5 = -1;\n   \
    \     long biggestOdd5 = -1;\n        long biggestEven6 = -1;\n        long biggestOdd6\
    \ = -1;\n        long biggestEven7 = -1;\n        long biggestOdd7 = -1;\n   \
    \     long biggestEven8 = -1;\n        long biggestOdd8 = -1;\n        long biggestEven9\
    \ = -1;\n        long biggestOdd9 = -1;\n        long biggestEven10 = -1;\n  \
    \      long biggestOdd10 = -1;\n        long biggestEven11 = -1;\n        long\
    \ biggestOdd11 = -1;\n        long biggestEven12 = -1;\n        long biggestOdd12\
    \ = -1;\n        long biggestEven13 = -1;\n        long biggestOdd13 = -1;\n \
    \       long biggestEven14 = -1;\n        long biggestOdd14 = -1;\n        long\
    \ biggestEven15 = -1;\n        long biggestOdd15 = -1;\n        long biggestEven16\
    \ = -1;\n        long biggestOdd16 = -1;\n        long biggestEven17 = -1;\n \
    \       long biggestOdd17 = -1;\n        long biggestEven18 = -1;\n        long\
    \ biggestOdd18 = -1;\n        long biggestEven19 = -1;\n        long biggestOdd19\
    \ = -1;\n        long biggestEven20 = -1;\n        long biggestOdd20 = -1;\n \
    \       long biggestEven21 = -1;\n        long biggestOdd21 = -1;\n        long\
    \ biggestEven22 = -1;\n        long biggestOdd22 = -1;\n        long biggestEven23\
    \ = -1;\n        long biggestOdd23 = -1;\n        long biggestEven24 = -1;\n \
    \       long biggestOdd24 = -1;\n        long biggestEven25 = -1;\n        long\
    \ biggestOdd25 = -1;\n        long biggestEven26 = -1;\n        long biggestOdd26\
    \ = -1;\n        long biggestEven27 = -1;\n        long biggestOdd27", "     \
    \   long max = (long) Math.max(x, y);\n        long min = (long) Math.min(x, y);\n\
    \        long even = min % 2 == 0 ? min : min - 1;\n        long odd = max % 2\
    \ == 0 ? max : max + 1;\n        long evenInRange = even >= x && even <= y;\n\
    \        long oddInRange = odd >= x && odd <= y;\n        long evenInRangeOrOdd\
    \ = evenInRange || oddInRange;\n        long evenInRangeOrOddInRange = evenInRangeOrOdd\
    \ && evenInRange && oddInRange;\n        long evenInRangeOrOddInRangeOrOdd = evenInRangeOrOdd\
    \ && evenInRangeOrOdd && oddInRangeOrOdd;\n        long evenInRangeOrOddInRangeOrOddInRange\
    \ = evenInRangeOrOddInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd && evenInRange\
    \ && oddInRange;\n        long evenInRangeOrOddInRangeOrOddInRangeOrOdd = evenInRangeOrOddInRangeOrOdd\
    \ && evenInRangeOrOdd && oddInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd\
    \ && evenInRange && oddInRangeOrOdd;\n        long evenInRangeOrOddInRangeOrOddInRangeOrOddInRange\
    \ = evenInRangeOrOddInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd && evenInRangeOrOdd\
    \ && oddInRangeOrOdd && evenInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd;\n\
    \        long evenInRangeOrOddInRangeOrOddInRangeOrOddInRangeOrOdd = evenInRangeOrOddInRangeOrOdd\
    \ && evenInRangeOrOdd && oddInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd\
    \ && evenInRangeOrOdd && evenInRangeOrOdd && evenInRangeOrOdd && oddInRangeOrOdd;\n\
    \        long evenInRangeOrOddInRangeOrOddInRangeOrOddInRangeOrOddInRange = evenInRangeOrOddInRangeOrOdd\
    \ && evenInRangeOrOdd && oddInRangeOrOdd && evenInRangeOr", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = even;\n        long biggestOdd\
    \ = odd;\n        long eveneven = even;\n        long evenodd = odd;\n       \
    \ long oddeven = even;\n        long oddodd = odd;\n        long eveneveneven\
    \ = eveneven;\n        long evenevenodd = evenodd;\n        long evenoddeven =\
    \ eveneven;\n        long evenoddodd = evenodd;\n        long oddeveneven = eveneven;\n\
    \        long oddevenodd = evenodd;\n        long oddoddeven = eveneven;\n   \
    \     long oddoddodd = evenodd;\n        long eveneveneveneven = eveneveneven;\n\
    \        long evenevenevenodd = evenevenodd;\n        long evenevenoddeven = eveneveneven;\n\
    \        long evenevenoddodd = evenevenodd;\n        long evenoddeveneven = eveneveneven;\n\
    \        long evenoddevenodd = evenevenodd;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven;\n\
    \        long evenoddoddeven = eveneveneven;\n        long evenoddoddeven = eveneveneven",
  "        long result = -1;\n        long even = x % 2 == 0 ? x : x + 1;\n      \
    \  long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        if\
    \ (odd > biggest) {\n            biggest = odd;\n        }\n        while (biggest\
    \ < even) {\n            biggest = biggest + biggest;\n        }\n        if (biggest\
    \ > even) {\n            result = biggest;\n        }\n        return result;",
  "        long even = x;\n        long odd = y;\n        long biggest = even;\n \
    \       long smallest = odd;\n        while(even < odd) {\n            even =\
    \ even * 2;\n            odd = odd * 2;\n            if(even > biggest) {\n  \
    \              biggest = even;\n            }\n            if(odd < smallest)\
    \ {\n                smallest = odd;\n            }\n        }\n        if(even\
    \ > biggest) {\n            biggest = even;\n        }\n        if(odd < smallest)\
    \ {\n            smallest = odd;\n        }\n        return biggest;", "     \
    \   long ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
    \ {\n            ans = y;\n        }\n        long mid = (ans + y) / 2;\n    \
    \    while (ans > mid) {\n            ans = mid;\n            mid = (ans + y)\
    \ / 2;\n        }\n        return ans;", "        long maxEven = -1;\n       \
    \ if (x > y) {\n            long temp = x;\n            x = y;\n            y\
    \ = temp;\n        }\n        long even = x;\n        long odd = y;\n        while\
    \ (even < odd) {\n            long mid = (even + odd) / 2;\n            if (mid\
    \ % 2 == 0) {\n                even = mid;\n            } else {\n           \
    \     odd = mid;\n            }\n        }\n        if (even > maxEven) {\n  \
    \          maxEven = even;\n        }\n        return maxEven;", "        long\
    \ maxEven = -1;\n        long even = x;\n        long odd = y;\n        while(even\
    \ < odd) {\n            if(even % 2 == 0 && odd % 2 != 0) {\n                maxEven\
    \ = even;\n                break;\n            }\n            else if(even % 2\
    \ != 0 && odd % 2 == 0) {\n                maxEven = odd;\n                break;\n\
    \            }\n            else if(even % 2 == 0 && odd % 2 == 0) {\n       \
    \         maxEven = even;\n                break;\n            }\n           \
    \ even++;\n            odd--;\n        }\n        return maxEven;", "        long\
    \ even = x;\n        long odd = y;\n        long biggest = even;\n        long\
    \ smallest = odd;\n        while(even < odd) {\n            biggest = even;\n\
    \            smallest = odd;\n            if(biggest % 2 == 0) {\n           \
    \     biggest = biggest + 1;\n            }\n            else {\n            \
    \    biggest = biggest - 1;\n            }\n            if(smallest % 2 == 0)\
    \ {\n                smallest = smallest + 1;\n            }\n            else\
    \ {\n                smallest = smallest - 1;\n            }\n            if(even\
    \ < odd) {\n                even = even + 1;\n            }\n            else\
    \ {\n                odd = odd - 1;\n            }\n        }\n        return\
    \ biggest;", "        long biggest = -1;\n        long even = x;\n        long\
    \ odd = y;\n        while(even < odd) {\n            long mid = (even+odd)/2;\n\
    \            if(mid%2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n        }\n        biggest = even;\n\
    \        return biggest;", "        long max = -1;\n        long min = x;\n  \
    \      long mid = x;\n        long temp;\n        while(min <= y) {\n        \
    \    mid = (min + max)/2;\n            temp = mid;\n            if(mid % 2 ==\
    \ 0) {\n                temp = temp + mid;\n            }\n            if(temp\
    \ > y) {\n                max = mid;\n            } else {\n                min\
    \ = mid;\n            }\n        }\n        return max;", "        long result\
    \ = -1;\n        if (x >= y) {\n            long temp;\n            temp = x;\n\
    \            x = y;\n            y = temp;\n        }\n        long mid = (x +\
    \ y) / 2;\n        if (mid % 2 == 0) {\n            result = mid;\n        } else\
    \ {\n            if (mid < x) {\n                result = mid;\n            }\
    \ else {\n                result = chooseNum(x, mid);\n            }\n       \
    \ }\n        return result;", "        long max = Math.max(x, y);\n        long\
    \ min = Math.min(x, y);\n        long even = min % 2 == 0 ? min : min - 1;\n \
    \       long odd = max % 2 == 0 ? max : max + 1;\n        long evenMax = even\
    \ + 1;\n        long oddMax = odd - 1;\n        long evenMin = even - 1;\n   \
    \     long oddMin = odd + 1;\n        long evenEven = even * even;\n        long\
    \ evenOdd = even * odd;\n        long oddEven = odd * even;\n        long oddOdd\
    \ = odd * odd;\n        long evenOddEven = even * evenEven;\n        long evenOddOdd\
    \ = even * oddEven;\n        long oddEvenOdd = odd * evenOdd;\n        long oddOddEven\
    \ = odd * oddEven;\n        long evenOddOddEven = even * evenOddEven;\n      \
    \  long evenOddOddOdd = even * oddOddEven;\n        long oddEvenOddOdd = odd *\
    \ evenOddOdd;\n        long oddOddEvenOdd = odd * oddEvenOdd;\n        long evenOddOddEvenOdd\
    \ = even * evenOddOddEven;\n        long evenOddOddOddEven = even * oddOddOddEven;\n\
    \        long oddEvenOddOddEven = odd * evenOddOddEven;\n        long oddOddEvenOddEven\
    \ = odd * oddEvenOddEven;\n        long evenOddOddOddEvenOdd = even * evenOddOddOddEven;\n\
    \        long evenOddOddOddOddEven = even * oddOddOddOddEven;\n        long oddEvenOddOddOddEven\
    \ = odd * evenOddOddOddEven;\n        long oddOddEvenOddOddEven = odd * oddEvenOddOddEven;\n\
    \        long evenOddOddOddOddEvenOdd = even * evenOddOddOddOddEven;\n       \
    \ long evenOddOddOddOddOddEven = even * oddOddOddOddOddEven;\n        long oddEvenOddOddOddOddEven\
    \ = odd * evenOddOddOddOddEven;\n        long odd", "        long result = -1;\n\
    \        if (x >= y) {\n            while (x <= y) {\n                if (x %\
    \ 2 == 0) {\n                    result = x;\n                    break;\n   \
    \             }\n                x += 2;\n            }\n        } else {\n  \
    \          while (y <= x) {\n                if (y % 2 == 0) {\n             \
    \       result = y;\n                    break;\n                }\n         \
    \       y += 2;\n            }\n        }\n        return result;", "        long\
    \ max = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even\
    \ = max;\n        long odd = min;\n        long eveneven = even;\n        long\
    \ evenodd = odd;\n        long oddeven = odd;\n        long oddodd = even;\n \
    \       long eveneveneven = eveneven;\n        long evenevenodd = evenodd;\n \
    \       long evenoddeven = evenodd;\n        long evenoddodd = oddeven;\n    \
    \    long oddeveneven = oddodd;\n        long oddevenodd = eveneven;\n       \
    \ long oddoddeven = oddeven;\n        long oddoddeven = evenodd;\n        long\
    \ eveneveneveneven = eveneveneven;\n        long evenevenevenodd = evenevenodd;\n\
    \        long evenevenoddeven = eveneveneven;\n        long evenevenoddodd = evenevenodd;\n\
    \        long evenoddeveneven = evenoddeven;\n        long evenoddoddeven = evenoddoddeven;\n\
    \        long oddeveneveneven = eveneveneven;\n        long oddevenevenodd = eveneveneven;\n\
    \        long oddeveneveneven = eveneveneven;\n        long oddeveneveneven =\
    \ eveneveneven;\n        long oddeveneveneven = eveneveneven;\n        long eveneveneveneven\
    \ = eveneveneven;\n        long evenevenevenodd = eveneveneven;\n        long\
    \ evenevenoddeven = eveneveneven;\n        long evenevenoddeven = eveneveneven;\n\
    \        long evenoddoddeven = evenoddeven;\n        long oddeveneveneven = eveneveneven;\n\
    \        long oddevenevenodd = eveneveneven;\n        long oddeveneveneven = eveneveneven;\n\
    \        long oddeveneveneven = eveneveneven;\n        long eveneveneveneven =\
    \ eveneveneven;\n        long evenevenevenodd = eveneveneven;\n        long evenevenoddeven\
    \ = eveneveneven;\n        long evenoddoddeven = evenoddeven;\n        long oddeveneveneven\
    \ = eveneveneven;\n        long oddevenevenodd = eveneveneven;\n        long oddeveneveneven\
    \ = eveneveneven;\n        long oddeveneveneven = eveneveneven;\n        long\
    \ eveneveneveneven = eveneveneven;\n        long evenevenevenodd = eveneveneven;\n\
    \        long evenevenoddeven = eveneveneven", "        long ans = -1;\n     \
    \   if (x >= y) {\n            ans = x;\n        } else {\n            ans = y;\n\
    \        }\n        long even = x % 2 == 0;\n        long odd = y % 2 == 0;\n\
    \        if (even && odd) {\n            ans = x + y;\n        } else if (even)\
    \ {\n            ans = x;\n        } else if (odd) {\n            ans = y;\n \
    \       }\n        return ans;", "        long maxEven = -1;\n        long even\
    \ = x;\n        long odd = y;\n        while(even < odd) {\n            if(even\
    \ % 2 == 0 && odd % 2 == 0) {\n                maxEven = even;\n             \
    \   break;\n            }\n            even++;\n            odd--;\n        }\n\
    \        return maxEven;", "        long even = x & 1;\n        long odd = x >>\
    \ 1;\n        long biggest = even;\n        if (odd > y) {\n            biggest\
    \ = odd;\n        }\n        return biggest;", "        long maxEven = -1;\n \
    \       long even = x;\n        long odd = y;\n        long temp;\n        while(even\
    \ < odd) {\n            temp = even;\n            even = odd - (even % odd);\n\
    \            odd = temp;\n        }\n        if(even > maxEven) {\n          \
    \  maxEven = even;\n        }\n        return maxEven;", "        long max = Math.max(x,\
    \ y);\n        long min = Math.min(x, y);\n        long mid = (max + min) / 2;\n\
    \        if (mid % 2 == 0) {\n            return mid;\n        }\n        long\
    \ mid2 = mid / 2;\n        if (mid2 % 2 == 0) {\n            return mid2;\n  \
    \      }\n        long mid3 = mid2 / 2;\n        if (mid3 % 2 == 0) {\n      \
    \      return mid3;\n        }\n        long mid4 = mid3 / 2;\n        if (mid4\
    \ % 2 == 0) {\n            return mid4;\n        }\n        long mid5 = mid4 /\
    \ 2;\n        if (mid5 % 2 == 0) {\n            return mid5;\n        }\n    \
    \    long mid6 = mid5 / 2;\n        if (mid6 % 2 == 0) {\n            return mid6;\n\
    \        }\n        long mid7 = mid6 / 2;\n        if (mid7 % 2 == 0) {\n    \
    \        return mid7;\n        }\n        long mid8 = mid7 / 2;\n        if (mid8\
    \ % 2 == 0) {\n            return mid8;\n        }\n        long mid9 = mid8 /\
    \ 2;\n        if (mid9 % 2 == 0) {\n            return mid9;\n        }\n    \
    \    long mid10 = mid9 / 2;\n        if (mid10 % 2 == 0) {\n            return\
    \ mid10;\n        }\n        long mid11 = mid10 / 2;\n        if (mid11 % 2 ==\
    \ 0) {\n            return mid11;\n        }\n        long mid12 = mid11 / 2;\n\
    \        if (mid12 % 2 == 0) {\n            return mid12;\n        }\n       \
    \ long mid13 = mid12 / 2;\n        if (mid13 % 2 == 0) {\n            return mid13;\n\
    \        }\n        long mid14 = mid13 / 2;\n        if (mid14 % 2 == 0) {\n \
    \           return mid14;\n        }\n        long mid15 = mid14 / 2;\n      \
    \  if (mid15 % 2 == 0) {\n            return mid15;\n        }\n        long mid16\
    \ = mid15 / 2;\n        if (mid16 % 2 == 0) {\n            return mid16;\n   \
    \     }\n        long mid17 = mid16 / 2;\n        if (mid17 % 2 == 0) {\n    \
    \        return mid17;\n        }\n        long mid18 = mid17 / 2;\n        if\
    \ (mid18 % 2 == 0) {\n            return mid18;\n        }\n        long mid19\
    \ = mid18 / 2;\n        if (mid19 % 2 == 0) {\n            return mid19;\n   \
    \     }\n        long mid20 = mid19 / 2;\n        if (mid20 % 2 == 0) {\n    \
    \        return mid20;\n        }\n        long mid21 = mid20 / 2;\n        if\
    \ (mid21 % 2 == 0) {\n            return mid21;\n        }\n        long mid22\
    \ = mid21 / 2;\n        if (mid22 % 2 == 0) {\n            return mid22;\n", " \
    \       long max = (long) Math.max(x, y);\n        long min = (long) Math.min(x,\
    \ y);\n        long even = max;\n        long odd = min;\n        long eveneven\
    \ = even;\n        long evenodd = odd;\n        long oddeven = odd;\n        long\
    \ oddodd = even;\n        long evenevenodd = even;\n        long evenoddeven =\
    \ even;\n        long evenoddodd = odd;\n        long oddeveneven = odd;\n   \
    \     long oddevenodd = even;\n        long evenevenevenodd = even;\n        long\
    \ evenevenoddeven = even;\n        long evenevenoddodd = odd;\n        long oddoddeveneven\
    \ = odd;\n        long oddoddevenodd = even;\n        long evenevenevenevenodd\
    \ = even;\n        long evenevenevenoddeven = even;\n        long evenevenevenoddodd\
    \ = odd;\n        long oddoddoddeveneven = odd;\n        long oddoddoddevenodd\
    \ = even;\n        long evenevenevenevenevenodd = even;\n        long evenevenevenoddeven\
    \ = even;\n        long evenevenevenoddodd = odd;\n        long oddoddoddeveneven\
    \ = odd;\n        long oddoddoddevenodd = even;\n        long evenevenevenevenevenevenodd\
    \ = even;\n        long evenevenevenoddeven = even;\n        long evenevenevenoddodd\
    \ = odd;\n        long oddoddoddeveneven = odd;\n        long oddoddoddevenodd\
    \ = even;\n        long evenevenevenevenevenevenodd = even;\n        long evenevenevenoddeven\
    \ = even;\n        long evenevenevenoddodd = odd;\n        long oddoddoddeveneven\
    \ = odd;\n        long oddoddoddevenodd = even;\n        long evenevenevenevenevenevenodd\
    \ = even;\n        long evenevenevenoddeven = even;\n        long evenevenevenoddodd\
    \ = odd;\n        long oddoddoddeveneven = odd;\n        long oddoddoddevenodd\
    \ = even;\n        long evenevenevenevenevenevenodd = even;\n        long evenevenevenoddeven\
    \ = even;\n        long evenevenevenoddodd = odd;\n        long oddoddoddeveneven\
    \ = odd;\n        long oddoddoddevenodd = even;\n        long evenevenevenevenevenevenodd\
    \ = even", "        long max = -1;\n        long min = x;\n        long mid =\
    \ min + (max - min) / 2;\n        long even = mid;\n        long odd = mid - 1;\n\
    \        long evenMax = even;\n        long oddMax = odd;\n        long evenMin\
    \ = even;\n        long oddMin = odd;\n        while (even < odd) {\n        \
    \    if (even % 2 == 0) {\n                if (evenMax < even) {\n           \
    \         evenMax = even;\n                }\n                if (evenMin > even)\
    \ {\n                    evenMin = even;\n                }\n            } else\
    \ {\n                if (oddMax < odd) {\n                    oddMax = odd;\n\
    \                }\n                if (oddMin > odd) {\n                    oddMin\
    \ = odd;\n                }\n            }\n            even = even + 1;\n   \
    \         odd = odd - 1;\n        }\n        if (evenMax < even) {\n         \
    \   max = evenMax;\n        } else {\n            max = even;\n        }\n   \
    \     if (oddMax < odd) {\n            max = oddMax;\n        } else {\n     \
    \       max = odd;\n        }\n        if (max > min) {\n            return max;\n\
    \        } else {\n            return -1;\n        }", "        long max = (long)\
    \ Math.max(x, y);\n        long min = (long) Math.min(x, y);\n        long even\
    \ = max / 2;\n        long odd = max - even;\n        if (even % 2 == 0) {\n \
    \           return even;\n        } else if (odd % 2 == 0) {\n            return\
    \ odd;\n        } else {\n            return -1;\n        }", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = -1;\n        while (even\
    \ < odd) {\n            if (even % 2 == 0) {\n                even++;\n      \
    \          biggest = even;\n            } else {\n                odd--;\n   \
    \         }\n        }\n        return biggest;", "        long even = x % 2 ==\
    \ 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = even;\n        } else\
    \ {\n            biggest = odd;\n        }\n        while (biggest < x || biggest\
    \ > y) {\n            biggest = biggest + biggest;\n        }\n        return\
    \ biggest;", "        long result = -1;\n        if (x >= y) {\n            while\
    \ (x <= y) {\n                if (x % 2 == 0) {\n                    result =\
    \ x;\n                    break;\n                }\n                x++;\n  \
    \          }\n        } else {\n            while (y <= x) {\n               \
    \ if (y % 2 == 0) {\n                    result = y;\n                    break;\n\
    \                }\n                y++;\n            }\n        }\n        return\
    \ result;", "        long maxEven = -1;\n        long minEven = -1;\n        long\
    \ maxOdd = -1;\n        long minOdd = -1;\n        long even = -1;\n        long\
    \ odd = -1;\n        long evenMin = -1;\n        long evenMax = -1;\n        long\
    \ oddMin = -1;\n        long oddMax = -1;\n        long evenMinOdd = -1;\n   \
    \     long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd\
    \ = -1;\n        long evenMinEven = -1;\n        long evenMaxEven = -1;\n    \
    \    long oddMinEven = -1;\n        long oddMaxEven = -1;\n        long evenMinOdd\
    \ = -1;\n        long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n       \
    \ long oddMaxOdd = -1;\n        long evenMinEven = -1;\n        long evenMaxEven\
    \ = -1;\n        long oddMinEven = -1;\n        long oddMaxEven = -1;\n      \
    \  long evenMinOdd = -1;\n        long evenMaxOdd = -1;\n        long oddMinOdd\
    \ = -1;\n        long oddMaxOdd = -1;\n        long evenMinEven = -1;\n      \
    \  long evenMaxEven = -1;\n        long oddMinEven = -1;\n        long oddMaxEven\
    \ = -1;\n        long evenMinOdd = -1;\n        long evenMaxOdd = -1;\n      \
    \  long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n        long evenMinEven\
    \ = -1;\n        long evenMaxEven = -1;\n        long oddMinEven = -1;\n     \
    \   long oddMaxEven = -1;\n        long evenMinOdd = -1;\n        long evenMaxOdd\
    \ = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n        long\
    \ evenMinEven = -1;\n        long evenMaxEven = -1;\n        long oddMinEven =\
    \ -1;\n        long oddMaxEven = -1;\n        long evenMinOdd = -1;\n        long\
    \ evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n\
    \        long evenMinEven = -1;\n        long evenMaxEven = -1;\n        long\
    \ oddMinEven = -1;\n        long oddMaxEven = -1;\n        long evenMinOdd = -1;\n\
    \        long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd\
    \ = ", "        long maxEven = -1;\n        long minEven = -1;\n        long maxOdd\
    \ = -1;\n        long minOdd = -1;\n        long even = -1;\n        long odd\
    \ = -1;\n        long evenMin = -1;\n        long evenMax = -1;\n        long\
    \ oddMin = -1;\n        long oddMax = -1;\n        long evenMinOdd = -1;\n   \
    \     long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd\
    \ = -1;\n        long evenMinEven = -1;\n        long evenMaxEven = -1;\n    \
    \    long oddMinEven = -1;\n        long oddMaxEven = -1;\n        long evenMinOdd\
    \ = -1;\n        long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n       \
    \ long oddMaxOdd = -1;\n        long evenMinEven = -1;\n        long evenMaxEven\
    \ = -1;\n        long oddMinEven = -1;\n        long oddMaxEven = -1;\n      \
    \  long evenMinOdd = -1;\n        long evenMaxOdd = -1;\n        long oddMinOdd\
    \ = -1;\n        long oddMaxOdd = -1;\n        long evenMinEven = -1;\n      \
    \  long evenMaxEven = -1;\n        long oddMinEven = -1;\n        long oddMaxEven\
    \ = -1;\n        long evenMinOdd = -1;\n        long evenMaxOdd = -1;\n      \
    \  long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n        long evenMinEven\
    \ = -1;\n        long evenMaxEven = -1;\n        long oddMinEven = -1;\n     \
    \   long oddMaxEven = -1;\n        long evenMinOdd = -1;\n        long evenMaxOdd\
    \ = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n        long\
    \ evenMinEven = -1;\n        long evenMaxEven = -1;\n        long oddMinEven =\
    \ -1;\n        long oddMaxEven = -1;\n        long evenMinOdd = -1;\n        long\
    \ evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd = -1;\n\
    \        long evenMinEven = -1;\n        long evenMaxEven = -1;\n        long\
    \ oddMinEven = -1;\n        long oddMaxEven = -1;\n        long evenMinOdd = -1;\n\
    \        long evenMaxOdd = -1;\n        long oddMinOdd = -1;\n        long oddMaxOdd\
    \ = ", "        long even = x & 1;\n        long odd = y & 1;\n        long biggest\
    \ = x | y;\n        long biggestEven = even > odd ? even : odd;\n        long\
    \ biggestOdd = even > odd ? odd : even;\n        long biggestEvenEven = even >\
    \ odd ? even : even;\n        long biggestOddEven = odd > even ? odd : even;\n\
    \        long biggestEvenOdd = even > odd ? even : odd;\n        long biggestOddOdd\
    \ = odd > even ? odd : even;\n        long biggestEvenEvenOdd = even > odd ? even\
    \ : odd;\n        long biggestOddEvenOdd = odd > even ? odd : even;\n        long\
    \ biggestEvenOddOdd = even > odd ? even : odd;\n        long biggestOddEvenOddOdd\
    \ = odd > even ? odd : even;\n        long biggestEvenEvenOddEvenOdd = even >\
    \ odd ? even : odd;\n        long biggestOddEvenOddEvenOdd = odd > even ? odd\
    \ : even;\n        long biggestEvenOddOddEvenOddOdd = even > odd ? even : odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOdd = odd > even ? odd : even;\n   \
    \     long biggestEvenEvenOddEvenOddEvenOdd = even > odd ? even : odd;\n     \
    \   long biggestOddEvenOddEvenOddEvenOddOdd = odd > even ? odd : even;\n     \
    \   long biggestEvenEvenOddEvenOddEvenOddEvenOdd = even > odd ? even : odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddOdd = odd > even ? odd : even;\n\
    \        long biggestEvenEvenOddEvenOddEvenOddEvenOddEvenOdd = even > odd ? even\
    \ : odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd =\
    \ odd > even ? odd : even;\n        long biggestEvenEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = even > odd ? even : odd;\n        long biggestOddEvenOddEvenO", "        long\
    \ max = Math.max(x, y);\n        long min = Math.min(x, y);\n        long even\
    \ = max/2;\n        long odd = max - even;\n        long evenMax = even;\n   \
    \     long oddMax = odd;\n        long evenMin = even;\n        long oddMin =\
    \ odd;\n        long evenMinMax = even;\n        long oddMinMax = odd;\n     \
    \   long evenMaxMin = even;\n        long oddMaxMin = odd;\n        long evenMinMaxMin\
    \ = even;\n        long oddMinMaxMin = odd;\n        long evenMaxMinMax = even;\n\
    \        long oddMaxMinMax = odd;\n        long evenMinMaxMinMax = even;\n   \
    \     long oddMinMaxMinMax = odd;\n        long evenMaxMinMaxMin = even;\n   \
    \     long oddMaxMinMaxMin = odd;\n        long evenMaxMinMaxMinMax = even;\n\
    \        long oddMinMaxMinMaxMin = odd;\n        long evenMaxMinMaxMinMax = even;\n\
    \        long oddMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMin\
    \ = even;\n        long oddMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMax\
    \ = even;\n        long oddMinMaxMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMaxMin\
    \ = even;\n        long oddMinMaxMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMaxMin\
    \ = even;\n        long oddMinMaxMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMax\
    \ = even;\n        long oddMinMaxMinMaxMinMaxMinMaxMinMax = odd;\n        long\
    \ evenMaxMinMaxMinMaxMinMaxMinMaxMin = even;\n        long oddMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMin = even;\n        long\
    \ oddMinMaxMinMaxMinMaxMinMaxMinMax = odd;\n        long evenMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = even;\n        long oddMinMaxMinMaxMinMaxMinMaxMinMax = odd;\n        long\
    \ evenMaxMinMaxMinMaxMinMaxMinMaxMinMax = even;\n        long oddMinMaxMinMaxMinMaxMinMaxMin",
  "        long result = -1;\n        if (x >= y) {\n            long mid = (x + y)\
    \ / 2;\n            if (mid % 2 == 0) {\n                result = mid;\n     \
    \       }\n            else {\n                long mid1 = (x + y) / 2;\n    \
    \            if (mid1 % 2 == 0) {\n                    result = mid1;\n      \
    \          }\n                else {\n                    long mid2 = (x + y)\
    \ / 2;\n                    if (mid2 % 2 == 0) {\n                        result\
    \ = mid2;\n                    }\n                    else {\n               \
    \         long mid3 = (x + y) / 2;\n                        if (mid3 % 2 == 0)\
    \ {\n                            result = mid3;\n                        }\n \
    \                   }\n                }\n            }\n        }\n        else\
    \ {\n            long mid = (x + y) / 2;\n            if (mid % 2 == 0) {\n  \
    \              result = mid;\n            }\n            else {\n            \
    \    long mid1 = (x + y) / 2;\n                if (mid1 % 2 == 0) {\n        \
    \            result = mid1;\n                }\n                else {\n     \
    \               long mid2 = (x + y) / 2;\n                    if (mid2 % 2 ==\
    \ 0) {\n                        result = mid2;\n                    }\n      \
    \              else {\n                        long mid3 = (x + y) / 2;\n    \
    \                    if (mid3 % 2 == 0) {\n                            result\
    \ = mid3;\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

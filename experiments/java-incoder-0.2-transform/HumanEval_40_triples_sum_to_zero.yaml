name: HumanEval_40_triples_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // triples_sum_to_zero takes a list of integers as an input.\n\
  \    // it returns True if there are three distinct elements in the list that\n\
  \    // sum to zero, and False otherwise.\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n  \
  \  // (true)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
  \ (long)7l))))\n    // (true)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
  \    // (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) == (false));\n\
  \    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) == (false));\n\
  \    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l)))) ==\
  \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
  \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for(long i : l) {\n            sum +=\
    \ i;\n        }\n        return l.stream().distinct().count() == 3 && sum == 0;",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l)\n          \
    \  set.add(l.stream().filter(x -> x == i).count());\n        return set.size()\
    \ == 3;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n\
    \            if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n\
    \            else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);",
  "        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n    \
    \        set.add(Math.abs(i));\n        }\n        return set.size() == 3;", " \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n      \
    \  }\n        if (sum2 == 0) {\n            return false;\n        }\n       \
    \ long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n       \
    \ }\n        if (sum3 == 0) {\n            return true;\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l)\
    \ {\n            if(i!=0) {\n                set.add(Math.abs(i));\n         \
    \   }\n        }\n        return set.size() == 3;", "        long sum = 0;\n \
    \       long count = 0;\n        for (long i : l) {\n            sum += i;\n \
    \           count++;\n        }\n        if (count == 3) {\n            return\
    \ true;\n        }\n        return false;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i == 0) return false;\n           \
    \ set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "      \
    \  Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ long tripleSum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \         if (sum == 0)\n                return true;\n            tripleSum +=\
    \ i;\n            if (tripleSum == 0)\n                return true;\n        }\n\
    \        return false;", "        long sum = 0;\n        for (Long i : l) {\n\
    \            sum += i;\n        }\n        return l.size() == 3 && sum == 0;",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     long sum = 0;\n        for (Long i : l) {\n            sum += i;\n     \
    \   }\n        return l.size() == 3 && sum == 0;", "        long sum = 0;\n  \
    \      for (Long i : l)\n            sum += i;\n        if (sum == 0)\n      \
    \      return true;\n        return false;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (Long l : l) {\n            sum += l;\n  \
    \      }\n        if (set.size() == 3) {\n            return true;\n        }\n\
    \        return false;", "        Set<Long> set = new HashSet<Long>(l);\n    \
    \    long sum = 0;\n        for (long i : l) {\n            sum += i;\n      \
    \      if (set.contains(sum)) {\n                return true;\n            }\n\
    \        }\n        return false;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (long i : set) {\n            sum += i;\n\
    \        }\n        return set.size() == 3 && sum == 0;", "        long sum =\
    \ 0;\n        for (Long i : l) {\n            sum += i;\n        }\n        if\
    \ (sum == 0) {\n            return false;\n        }\n        long count = 0;\n\
    \        for (Long i : l) {\n            if (i == 0) {\n                count++;\n\
    \            }\n        }\n        return count == 3;", "        Set<Long> set\
    \ = new HashSet<>();\n        for(Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        Long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \          if (set.contains(sum)) {\n                return true;\n          \
    \  }\n        }\n        return false;", "        long sum = 0;\n        for(long\
    \ i : l) {\n            sum += i;\n        }\n        long count = 0;\n      \
    \  for(long i : l) {\n            count += i;\n            if(sum == count) {\n\
    \                return true;\n            }\n        }\n        return false;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for (Long i : l) {\n            if (sum\
    \ == i) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;", "        long sum = 0;\n        for (Long i : l) {\n         \
    \   sum += i;\n        }\n        return l.stream().distinct().filter(i -> sum\
    \ == 0).count() == 3;", "        long sum = 0;\n        for (long i : l) {\n \
    \           sum += i;\n        }\n        if (sum == 0) {\n            return\
    \ true;\n        }\n        boolean found = false;\n        for (long i : l) {\n\
    \            if (sum - i == 0) {\n                found = true;\n            \
    \    break;\n            }\n        }\n        return found;", "        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ for (long i : l) {\n            sum += i;\n        }\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (long i : set) {\n            sum += i;\n\
    \        }\n        if (set.size() == 3) {\n            return true;\n       \
    \ }\n        return false;", "        long sum = 0;\n        for(long i : l) {\n\
    \            sum += i;\n        }\n        return l.stream().distinct().count()\
    \ == 3 && sum == 0;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l)\n            if(!set.contains(i))\n                set.add(i);\n    \
    \    return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n     \
    \   return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n    \
    \    for (Long i : l)\n            set.add(Math.abs(i));\n        return set.size()\
    \ == 3;", "        Set<Long> set = new HashSet<Long>();\n        for(Long i :\
    \ l) {\n            if(i!=0) {\n                set.add(Math.abs(i));\n      \
    \      }\n        }\n        return set.size() == 3;", "        Set<Long> set\
    \ = new HashSet<>();\n        for (Long i : l)\n            set.add(l.stream().filter(j\
    \ -> j == i).count());\n        return set.size() == 3;", "        long sum =\
    \ 0;\n        for (Long i : l) {\n            sum += i;\n        }\n        return\
    \ l.stream().distinct().filter(i -> i == sum).count() == 3;", "        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            if(i!=0 && set.contains(i))\n\
    \                return false;\n            else\n                set.add(i);\n\
    \        return true;", "        Set<Long> set = new HashSet<>();\n        for\
    \ (Long i : l) {\n            set.add(Math.abs(i));\n        }\n        return\
    \ set.size() == 3;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for (Long i : l) {\n            sum\
    \ += i;\n        }\n        return l.stream().distinct().count() == 3 && sum ==\
    \ 0;", "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n\
    \            set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        long sum = 0;\n        for (Long l : l) {\n            sum += l;\n    \
    \    }\n        return l.size() == 3 && sum == 0;", "        long sum = 0;\n \
    \       for (Long i : l) {\n            sum += i;\n        }\n        if (sum\
    \ == 0) {\n            return true;\n        }\n        return false;", "    \
    \    Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n           \
    \ if(i!=0) {\n                set.add(Math.abs(i));\n            }\n        }\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l) {\n            if (set.contains(i)) {\n            \
    \    return false;\n            }\n            set.add(i);\n        }\n      \
    \  return true;", "        Set<Long> set = new HashSet<Long>();\n        for (Long\
    \ i : l) {\n            set.add(new Long(i));\n        }\n        if (set.size()\
    \ == 3) {\n            return true;\n        }\n        return false;", "    \
    \    Set<Long> set = new HashSet<>();\n        for (Long i : l)\n            set.add(l.stream().filter(j\
    \ -> j == i).count());\n        return set.size() == 3;", "        Set<Long> set\
    \ = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i!=0) {\n                set.add(Math.abs(i));\n\
    \            }\n        }\n        return set.size() == 3;", "        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long i : l) {\n            if (set.contains(i)) {\n            \
    \    return false;\n            }\n            set.add(i);\n        }\n      \
    \  return true;", "        long sum = 0;\n        for (long e : l) {\n       \
    \     sum += e;\n        }\n        long count = 0;\n        for (long e : l)\
    \ {\n            if (e == 0) {\n                count++;\n            }\n    \
    \    }\n        return count == 3;", "        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        if (sum == 0) {\n      \
    \      return true;\n        }\n        boolean result = false;\n        long\
    \ lastSum = sum;\n        for (Long i : l) {\n            sum += i;\n        \
    \    if (sum == lastSum) {\n                result = true;\n                break;\n\
    \            }\n            lastSum = sum;\n        }\n        return result;",
  "        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n    \
    \        set.add(Math.abs(i));\n        }\n        return set.size() == 3;", " \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(new Long(i));\n            }\n      \
    \  }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l)\n            if (!set.contains(i))\n               \
    \ set.add(i);\n        return set.size() == 3;", "        long sum = 0;\n    \
    \    for(long i : l) {\n            sum += i;\n        }\n        long count =\
    \ 0;\n        for(long i : l) {\n            count += i;\n            if(count\
    \ == sum) {\n                return true;\n            }\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<>();\n        for (Long i : l)\
    \ {\n            set.add(Math.abs(i));\n        }\n        return set.size() ==\
    \ 3;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n\
    \            set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        long sum = 0;\n        for (long i : l) {\n            sum += i;\n    \
    \    }\n        return l.stream().distinct().count() == 3 && sum == 0;", "   \
    \     Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n          \
    \  set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "     \
    \   Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n        \
    \    if(i == 0) return false;\n            set.add(Math.abs(i));\n        }\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i == 0) return false;\n           \
    \ set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "      \
    \  Set<Long> set = new HashSet<>();\n        for (Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 3;", "        long sum = 0;\n        for (Long i\
    \ : l) {\n            sum += i;\n        }\n        if (sum == 0) {\n        \
    \    return true;\n        }\n        return false;", "        Set<Long> set =\
    \ new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) set.add(0l);\n\
    \            if(i == 1) set.add(1l);\n            if(i == 2) set.add(2l);\n  \
    \      }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        return set.size() == 3 && set.contains(0l) && set.contains(0l);", " \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l)\n     \
    \       set.add(Math.abs(i));\n        return set.size() == 3;", "        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ for (Long i : l) {\n            sum += i;\n        }\n        return l.stream().distinct().count()\
    \ == 3 && sum == 0;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            if(i == 0) set.add(0l);\n            else if(i == -1l)\
    \ set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n            else\
    \ if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n  \
    \          else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41l);", "        long sum = 0;\n      \
    \  for (Long i : l) {\n            sum += i;\n        }\n        if (sum == 0)\
    \ {\n            return false;\n        }\n        long count = 0;\n        for\
    \ (Long i : l) {\n            if (i == 0) {\n                count++;\n      \
    \      }\n        }\n        if (count == 3) {\n            return true;\n   \
    \     }\n        return false;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            set.add(Math.abs(i));\n        }\n   \
    \     return set.size() == 3;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            if(i == 0) set.add(0l);\n            else\
    \ if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n  \
    \          else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n \
    \       for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n   \
    \     return set.size() == 3;", "        long sum = 0;\n        for (long i :\
    \ l) {\n            sum += i;\n        }\n        if (sum == 0) {\n          \
    \  return true;\n        }\n        long count = 0;\n        for (long i : l)\
    \ {\n            if (i == 0) {\n                count++;\n            }\n    \
    \    }\n        if (count == 3) {\n            return true;\n        }\n     \
    \   return false;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            if(i == 0) set.add(0l);\n            if(i == 1) set.add(1l);\n\
    \            if(i == 2) set.add(2l);\n            if(i == 3) set.add(3l);\n  \
    \          if(i == 4) set.add(4l);\n            if(i == 5) set.add(5l);\n    \
    \        if(i == 6) set.add(6l);\n            if(i == 7) set.add(7l);\n      \
    \      if(i == 8) set.add(8l);\n            if(i == 9) set.add(9l);\n        \
    \    if(i == 10) set.add(10l);\n            if(i == 11) set.add(11l);\n      \
    \      if(i == 12) set.add(12l);\n            if(i == 13) set.add(13l);\n    \
    \        if(i == 14) set.add(14l);\n            if(i == 15) set.add(15l);\n  \
    \          if(i == 16) set.add(16l);\n            if(i == 17) set.add(17l);\n\
    \            if(i == 18) set.add(18l);\n            if(i == 19) set.add(19l);\n\
    \            if(i == 20) set.add(20l);\n            if(i == 21) set.add(21l);\n\
    \            if(i == 22) set.add(22l);\n            if(i == 23) set.add(23l);\n\
    \            if(i == 24) set.add(24l);\n            if(i == 25) set.add(25l);\n\
    \            if(i == 26) set.add(26l);\n            if(i == 27) set.add(27l);\n\
    \            if(i == 28) set.add(28l);\n            if(i == 29) set.add(29l);\n\
    \            if(i == 30) set.add(30l);\n            if(i == 31) set.add(31l);\n\
    \            if(i == 32) set.add(32l);\n            if(i == 33) set.add(33l);\n\
    \            if(i == 34) set.add(34l);\n            if(i == 35) set.add(35l);\n\
    \            if(i == 36) set.add(36l);\n            if(i == 37) set.add(37l);\n\
    \            if(i == 38) set.add(38l);\n            if(i == 39) set.add(39l);\n\
    \            if(i == 40) set.add(40l);\n            if(i == 41) set.add(41l);\n\
    \            if(i == 42) set.add(42l);\n            if(i == 43) set.add(43l);\n\
    \            if(i == 44) set.add(44l);\n            if(i == 45) set.add(45l);\n\
    \            if(i == 46) ", "        Set<Long> set = new HashSet<>();\n      \
    \  for(Long i : l)\n            set.add(Math.abs(i));\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for (long e : l) {\n            sum\
    \ += e;\n        }\n        if (sum < 0) {\n            return false;\n      \
    \  }\n        long count = 0;\n        for (long e : l) {\n            if (e ==\
    \ 0) {\n                count++;\n            }\n        }\n        return count\
    \ == 3;", "        Set<Long> set = new HashSet<Long>();\n        for(Long i :\
    \ l) {\n            if(i == 0) set.add(0l);\n            if(i == 1) set.add(1l);\n\
    \            if(i == 2) set.add(2l);\n        }\n        return set.size() ==\
    \ 3;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n\
    \            if(i == 0) set.add(0l);\n            if(i == 1) set.add(1l);\n  \
    \          if(i == 2) set.add(2l);\n        }\n        return set.size() == 3;",
  "        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n     \
    \   }\n        long count = 0;\n        for(Long i : l) {\n            count +=\
    \ i;\n            if(sum == 0) {\n                return false;\n            }\n\
    \        }\n        return true;", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        long sum = 0;\n        long count =\
    \ 0;\n        for (long i : l) {\n            sum += i;\n            count +=\
    \ 1;\n        }\n        return count == 3 && sum == 0;", "        Set<Long> set\
    \ = new HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i))\
    \ {\n                set.add(i);\n            }\n        }\n        return set.size()\
    \ == 3;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n\
    \            set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        return l.size() == 3 && sum == 0;", "        Set<Long> set = new\
    \ HashSet<Long>(l);\n        long sum = 0;\n        for (Long i : set) {\n   \
    \         sum += i;\n        }\n        return set.size() == 3 && sum == 0;",
  "        long sum = 0;\n        for (long i : l) {\n            sum += i;\n    \
    \    }\n        return l.stream().distinct().count() == 3 && sum == 0;", "   \
    \     long sum = 0;\n        for (Long i : l) {\n            sum += i;\n     \
    \   }\n        if (sum == 0) {\n            return true;\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<Long>(l);\n        long sum =\
    \ 0;\n        for (long i : l) {\n            sum += i;\n            if (set.contains(sum))\
    \ {\n                return true;\n            }\n        }\n        return false;",
  "        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n    \
    \        set.add(Math.abs(i));\n        }\n        return set.size() == 3;", " \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        long sum = 0;\n        for (long i : l) {\n            sum += i;\n    \
    \    }\n        return l.size() == 3 && sum == 0;", "        Set<Long> set = new\
    \ HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return false;\n\
    \            set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n         \
    \   if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n   \
    \         else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n          \
    \  if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n    \
    \        else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     long sum = 0;\n        for (long i : l) {\n            sum += i;\n     \
    \   }\n        return l.stream().distinct().count() == 3 && sum == 0;", "    \
    \    Set<Long> set = new HashSet<>();\n        for (Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        long sum = 0;\n        for(Long i :\
    \ l) {\n            sum += i;\n        }\n        long count = 0;\n        for(Long\
    \ i : l) {\n            count += i;\n            if(count == sum) {\n        \
    \        return true;\n            }\n        }\n        return false;", "   \
    \     long sum = 0;\n        for(Long i : l) {\n            sum += i;\n      \
    \  }\n        return l.stream().distinct().count() == 3 && sum == 0;", "     \
    \   long sum = 0;\n        for (long i : l) {\n            sum += i;\n       \
    \ }\n        if (sum == 0) {\n            return true;\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<Long>();\n        for(Long i :\
    \ l)\n            if(i!=0 && set.contains(i)) {\n                return false;\n\
    \            }\n        for(Long i : l)\n            if(i!=0 && set.contains(i))\
    \ {\n                set.clear();\n                return true;\n            }\n\
    \        return false;", "        long sum = 0;\n        for (Long i : l) {\n\
    \            sum += i;\n        }\n        if (sum == 0) {\n            return\
    \ false;\n        }\n        long count = 0;\n        for (Long i : l) {\n   \
    \         if (i == 0) {\n                count++;\n            }\n        }\n\
    \        if (count == 3) {\n            return true;\n        }\n        return\
    \ false;", "        long sum = 0;\n        for (Long i : l) {\n            sum\
    \ += i;\n        }\n        if (sum == 0) {\n            return false;\n     \
    \   }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        if (count\
    \ == 3) {\n            return true;\n        }\n        return false;", "    \
    \    long sum = 0;\n        for (long i : l) {\n            sum += i;\n      \
    \  }\n        return l.size() == 3 && sum == 0;", "        Set<Long> set = new\
    \ HashSet<>();\n        for(Long i : l) {\n            if(i == 0) set.add(0l);\n\
    \            else if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n\
    \            else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41l);", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i == 0) set.add(0l);\n            else\
    \ if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n  \
    \          else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41l);", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        return set.size() == 3 && set.contains(0l);", "        Set<Long> set\
    \ = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) set.add(0l);\n\
    \            else if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n\
    \            else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41l);", "        long sum = 0;\n      \
    \  for (Long i : l)\n            sum += i;\n        if (sum == 0)\n          \
    \  return false;\n        long count = 0;\n        for (Long i : l)\n        \
    \    if (i != 0)\n                count++;\n        if (count == 3)\n        \
    \    return true;\n        return false;", "        long sum = 0;\n        for\
    \ (Long i : l) {\n            sum += i;\n        }\n        return l.size() ==\
    \ 3 && sum == 0;", "        Set<Long> set = new HashSet<Long>();\n        for\
    \ (Long i : l)\n            set.add(l.stream().filter(j -> j == i).count());\n\
    \        return set.size() == 3;", "        long sum = 0;\n        for(long i\
    \ : l) {\n            sum += i;\n        }\n        return l.stream().distinct().filter(i\
    \ -> sum == 0).count() == 3;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n \
    \       for (Long i : l)\n            set.add(l.stream().filter(j -> j == i).count());\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (Long i : set) {\n            sum += i;\n\
    \        }\n        if (set.size() == 3) {\n            return sum == 0;\n   \
    \     }\n        return false;", "        long sum = 0;\n        for (Long i :\
    \ l) {\n            sum += i;\n        }\n        return l.stream().distinct().count()\
    \ == 3 && sum == 0;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        long threeSum = 0;\n        for (long\
    \ i : l) {\n            sum += i;\n            if (sum == 0)\n               \
    \ threeSum = i;\n        }\n        return threeSum == 0;", "        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.stream().distinct().count() == 3 && sum == 0;", "        Set<Long>\
    \ set = new HashSet<Long>();\n        for(Long i : l)\n            if(i!=0 &&\
    \ set.add(i))\n                return false;\n        return true;", "       \
    \ Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n            if(i!=0)\
    \ {\n                set.add(Math.abs(i));\n            }\n        }\n       \
    \ return set.size() == 3;", "        long sum = 0;\n        for (long i : l) {\n\
    \            sum += i;\n        }\n        if (sum == 0) {\n            return\
    \ false;\n        }\n        long sum2 = 0;\n        for (long i : l) {\n    \
    \        sum2 += i;\n        }\n        if (sum2 == 0) {\n            return true;\n\
    \        }\n        long sum3 = 0;\n        for (long i : l) {\n            sum3\
    \ += i;\n        }\n        if (sum3 == 0) {\n            return true;\n     \
    \   }\n        return false;", "        Set<Long> set = new HashSet<>();\n   \
    \     for(Long i : l) {\n            if(i == 0) return false;\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ for (Long i : l) {\n            sum += i;\n        }\n        return l.size()\
    \ == 3 && sum == 0;", "        Set<Long> set = new HashSet<Long>();\n        for(Long\
    \ i : l) {\n            if(i == 0) set.add(0l);\n            else if(i == -1l)\
    \ set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n            else\
    \ if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n  \
    \          else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41", "        long sum = 0;\n        for\
    \ (Long i : l) {\n            sum += i;\n        }\n        if (sum == 0) {\n\
    \            return true;\n        }\n        return false;", "        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i!=0) {\n\
    \                set.add(Math.abs(i));\n            }\n        }\n        return\
    \ set.size() == 3;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            if(i == 0) set.add(0l);\n            if(i == 1) set.add(1l);\n\
    \            if(i == 2) set.add(2l);\n        }\n        return set.size() ==\
    \ 3;", "        long sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum == 0) {\n            return true;\n        }\n\
    \        return false;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l) {\n            if(i!=0) {\n                set.add(new Long(i));\n  \
    \          }\n        }\n        return set.size() == 3;", "        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) set.add(0l);\n\
    \            else if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n\
    \            else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.", "        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for (Long i : l) {\n            if (!set.contains(i)) {\n              \
    \  set.add(i);\n            }\n        }\n        return set.size() == 3;", " \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (set.contains(i)) {\n                return false;\n            }\n \
    \           set.add(i);\n        }\n        return true;", "        long sum =\
    \ 0;\n        for (Long i : l) {\n            sum += i;\n        }\n        if\
    \ (sum == 0) {\n            return true;\n        }\n        return false;", " \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l)\n         \
    \   set.add(Math.abs(i));\n        return set.size() == 3;", "        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long count =\
    \ 0;\n        for (Long i : l) {\n            count += i;\n            if (count\
    \ == sum) {\n                return true;\n            }\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<>();\n        for (Long i : l)\
    \ {\n            set.add(Math.abs(i));\n        }\n        return set.size() ==\
    \ 3;", "        Set<Long> set = new HashSet<Long>(l);\n        Long sum = 0;\n\
    \        for (Long x : set) {\n            sum += x;\n        }\n        return\
    \ set.size() == 3 && sum == 0;", "        Set<Long> set = new HashSet<>();\n \
    \       for(Long i : l)\n            if(i.equals(0l))\n                set.add(0l);\n\
    \        for(Long i : l)\n            if(i.equals(0l) && set.contains(0l))\n \
    \               return true;\n        return false;", "        long sum = 0;\n\
    \        for (Long i : l) {\n            sum += i;\n        }\n        return\
    \ l.stream().distinct().count() == 3 && sum == 0;", "        long sum = 0;\n \
    \       for (long i : l) {\n            sum += i;\n        }\n        long threeSum\
    \ = 0;\n        long threeSumCount = 0;\n        for (long i : l) {\n        \
    \    threeSum += i;\n            if (threeSum == sum) {\n                threeSumCount++;\n\
    \            }\n        }\n        return threeSumCount == 3;", "        Set<Long>\
    \ set = new HashSet<Long>();\n        for(Long i : l) {\n            if(i!=0)\
    \ {\n                if(i%2==0) {\n                    if(i%3==0) {\n        \
    \                if(i%5==0) {\n                            set.add(i);\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l)\n            if(!set.contains(i))\n                set.add(i);\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (long i : set) {\n            sum += i;\n\
    \        }\n        return set.size() == 3 && sum == 0;", "        Set<Long> set\
    \ = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        Long sum = 0;\n        for (Long i : set) {\n            sum += i;\n\
    \        }\n        return set.size() == 3 && sum == 0;", "        Set<Long> set\
    \ = new HashSet<>();\n        for(Long i : l) {\n            if(i!=0) {\n    \
    \            set.add(Math.abs(i));\n            }\n        }\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for(long i : l) {\n            sum +=\
    \ i;\n        }\n        return l.stream().distinct().count() == 3 && sum == 0;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        return l.stream().distinct().count() == 3 && sum == 0;", "   \
    \     long sum = 0;\n        for (long e : l) {\n            sum += e;\n     \
    \   }\n        return l.size() == 3 && sum == 0;", "        Set<Long> set = new\
    \ HashSet<Long>(l);\n        long sum = 0;\n        for (long i : l) {\n     \
    \       sum += i;\n        }\n        if (set.size() == 3) {\n            return\
    \ true;\n        }\n        return false;", "        long sum = 0;\n        for\
    \ (long i : l) {\n            sum += i;\n        }\n        if (sum == 0)\n  \
    \          return false;\n        long count = 0;\n        for (long i : l) {\n\
    \            if (i == 0)\n                count++;\n            else if (i ==\
    \ sum)\n                count--;\n        }\n        return count == 0;", "  \
    \      Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n     \
    \       set.add(l.stream().filter(x -> x == i).count());\n        }\n        return\
    \ set.size() == 3;", "        Set<Long> set = new HashSet<Long>();\n        for\
    \ (Long i : l)\n            set.add(Math.abs(i));\n        return set.size() ==\
    \ 3;", "        long sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum == 0) {\n            return true;\n        }\n\
    \        return false;", "        Set<Long> set = new HashSet<>();\n        for(Long\
    \ i : l)\n            if(!set.contains(i))\n                set.add(i);\n    \
    \    return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for(Long i : l) {\n            if(i == 0) return false;\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ for (long i : l) {\n            sum += i;\n        }\n        if (sum == 0)\
    \ {\n            return true;\n        }\n        boolean found = false;\n   \
    \     for (long i : l) {\n            sum += i;\n            if (sum == 0) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        return found;", "        long sum = 0;\n        for (long i : l)\
    \ {\n            sum += i;\n        }\n        long count = 0;\n        for (long\
    \ i : l) {\n            if (i == 0) {\n                count++;\n            }\n\
    \        }\n        return count == 3;", "        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for (Long i : l)\n            set.add(Math.abs(i));\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for (long i : l) {\n            sum\
    \ += i;\n        }\n        return l.stream().distinct().count() == 3 && sum ==\
    \ 0;", "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n\
    \            set.add(Math.abs(i));\n        }\n        return set.size() == 3;",
  "        Set<Long> set = new HashSet<Long>(l);\n        boolean result = false;\n\
    \        for (Long i : l) {\n            if (set.contains(i)) {\n            \
    \    result = true;\n                break;\n            }\n        }\n      \
    \  return result;", "        Set<Long> set = new HashSet<Long>();\n        for(Long\
    \ i : l) {\n            if(i == 0) continue;\n            set.add(i - 1);\n  \
    \      }\n        return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i == 0) set.add(0l);\n            else\
    \ if(i == -1l) set.add(-1l);\n            else if(i == -2l) set.add(-2l);\n  \
    \          else if(i == -3l) set.add(-3l);\n            else if(i == -4l) set.add(-4l);\n\
    \            else if(i == -5l) set.add(-5l);\n            else if(i == -6l) set.add(-6l);\n\
    \            else if(i == -7l) set.add(-7l);\n            else if(i == -8l) set.add(-8l);\n\
    \            else if(i == 9l) set.add(9l);\n            else if(i == 10l) set.add(10l);\n\
    \            else if(i == 11l) set.add(11l);\n            else if(i == 12l) set.add(12l);\n\
    \            else if(i == 13l) set.add(13l);\n            else if(i == 14l) set.add(14l);\n\
    \            else if(i == 15l) set.add(15l);\n            else if(i == 16l) set.add(16l);\n\
    \            else if(i == 17l) set.add(17l);\n            else if(i == 18l) set.add(18l);\n\
    \            else if(i == 19l) set.add(19l);\n            else if(i == 20l) set.add(20l);\n\
    \            else if(i == 21l) set.add(21l);\n            else if(i == 22l) set.add(22l);\n\
    \            else if(i == 23l) set.add(23l);\n            else if(i == 24l) set.add(24l);\n\
    \            else if(i == 25l) set.add(25l);\n            else if(i == 26l) set.add(26l);\n\
    \            else if(i == 27l) set.add(27l);\n            else if(i == 28l) set.add(28l);\n\
    \            else if(i == 29l) set.add(29l);\n            else if(i == 30l) set.add(30l);\n\
    \            else if(i == 31l) set.add(31l);\n            else if(i == 32l) set.add(32l);\n\
    \            else if(i == 33l) set.add(33l);\n            else if(i == 34l) set.add(34l);\n\
    \            else if(i == 35l) set.add(35l);\n            else if(i == 36l) set.add(36l);\n\
    \            else if(i == 37l) set.add(37l);\n            else if(i == 38l) set.add(38l);\n\
    \            else if(i == 39l) set.add(39l);\n            else if(i == 40l) set.add(40l);\n\
    \            else if(i == 41l) set.add(41l);", "        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : l)\n            set.add(Math.abs(i));\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for(Long i : l) {\n            sum +=\
    \ i;\n        }\n        long count = 0;\n        for(Long i : l) {\n        \
    \    count += i;\n            if(sum == 0) {\n                return false;\n\
    \            }\n        }\n        return count == 3;", "        long sum = 0;\n\
    \        for (Long i : l) {\n            sum += i;\n        }\n        return\
    \ l.stream().distinct().filter(i -> i == sum).count() == 3;", "        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n   \
    \             count++;\n            }\n        }\n        return count == 3;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        if (sum == 0) {\n            return true;\n        }\n       \
    \ long a = 0, b = 0, c = 0;\n        for (Long i : l) {\n            a += i;\n\
    \            b += i;\n            c += i;\n        }\n        if (a == 0 && b\
    \ == 0 && c == 0) {\n            return true;\n        }\n        return false;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        return l.stream().distinct().count() == 3 && sum == 0;", "   \
    \     long sum = 0;\n        for (Long i : l) {\n            sum += i;\n     \
    \   }\n        return l.stream().distinct().filter(i -> i == sum).count() == 3;",
  "        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n    \
    \    }\n        return l.size() == 3 && sum == 0;", "        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i))\
    \ {\n                set.add(i);\n            }\n        }\n        return set.size()\
    \ == 3;", "        long sum = 0;\n        for(Long i : l)\n            sum +=\
    \ i;\n        long count = 0;\n        for(Long i : l)\n            count += i;\n\
    \        return count == sum;", "        Set<Long> set = new HashSet<>();\n  \
    \      for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n    \
    \    return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n     \
    \   return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n    \
    \    for (Long i : l) {\n            if (set.contains(i)) {\n                return\
    \ false;\n            } else {\n                set.add(i);\n            }\n \
    \       }\n        return true;", "        long sum = 0;\n        for (long i\
    \ : l) {\n            sum += i;\n        }\n        if (sum == 0)\n          \
    \  return true;\n        return false;", "        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n  \
    \      return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n \
    \       for(Long i : l) {\n            set.add(Math.abs(i));\n        }\n    \
    \    return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n   \
    \     for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n     \
    \   return set.size() == 3;", "        Set<Long> set = new HashSet<>();\n    \
    \    for (Long i : l) {\n            set.add(Math.abs(i));\n        }\n      \
    \  return set.size() == 3;", "        long sum = 0;\n        for (Long i : l)\
    \ {\n            sum += i;\n        }\n        return l.stream().distinct().count()\
    \ == 3 && sum == 0;", "        long sum = 0;\n        for (long i : l) {\n   \
    \         sum += i;\n        }\n        if (sum == 0) {\n            return false;\n\
    \        }\n        long count = 0;\n        for (long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        if (count\
    \ == 3) {\n            return true;\n        }\n        return false;", "    \
    \    Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n        for\
    \ (long i : l) {\n            sum += i;\n            if (set.contains(sum)) {\n\
    \                return true;\n            }\n        }\n        return false;",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     Set<Long> set = new HashSet<Long>();\n        for (Long i : l)\n       \
    \     set.add(new Long(i));\n        if (set.size() == 3)\n            return\
    \ true;\n        return false;", "        Set<Long> set = new HashSet<>();\n \
    \       for(Long i : l) {\n            if(i == 0) continue;\n            set.add(i\
    \ - 1);\n        }\n        return set.size() == 3;", "        long sum = 0;\n\
    \        for (Long i : l) {\n            sum += i;\n        }\n        return\
    \ l.stream().distinct().filter(i -> sum - i == 0).count() == 3;", "        long\
    \ sum = 0;\n        for (long i : l) {\n            sum += i;\n        }\n   \
    \     return l.stream().distinct().count() == 3 && sum == 0;", "        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        long count = 0;\n\
    \        for (long i : l) {\n            count += i;\n            if (sum - i\
    \ == 0) {\n                return true;\n            }\n        }\n        return\
    \ false;"]
stop_tokens:
- "\n    }\n"

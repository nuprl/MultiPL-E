name: HumanEval_40_triples_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // triples_sum_to_zero takes a list of integers as an input.\n\
  \    // it returns True if there are three distinct elements in the list that\n\
  \    // sum to zero, and False otherwise.\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n  \
  \  // (true)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
  \ (long)7l))))\n    // (true)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
  \    // (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) == (false));\n\
  \    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) == (false));\n\
  \    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l)))) ==\
  \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
  \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for(long i : l) {\n            sum +=\
    \ i;\n        }\n        return l.stream().distinct().count() == 3 && sum == 0;",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l)\n          \
    \  set.add(l.stream().filter(x -> x == i).count());\n        return set.size()\
    \ == 3;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n\
    \            if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n\
    \            else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);",
  "        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n    \
    \        set.add(Math.abs(i));\n        }\n        return set.size() == 3;", " \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n      \
    \  }\n        if (sum2 == 0) {\n            return false;\n        }\n       \
    \ long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n       \
    \ }\n        if (sum3 == 0) {\n            return true;\n        }\n        return\
    \ false;", "        Set<Long> set = new HashSet<>();\n        for(Long i : l)\
    \ {\n            if(i!=0) {\n                set.add(Math.abs(i));\n         \
    \   }\n        }\n        return set.size() == 3;", "        long sum = 0;\n \
    \       long count = 0;\n        for (long i : l) {\n            sum += i;\n \
    \           count++;\n        }\n        if (count == 3) {\n            return\
    \ true;\n        }\n        return false;", "        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(i == 0) return false;\n           \
    \ set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "      \
    \  Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 3;", "        long sum = 0;\n       \
    \ long tripleSum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \         if (sum == 0)\n                return true;\n            tripleSum +=\
    \ i;\n            if (tripleSum == 0)\n                return true;\n        }\n\
    \        return false;", "        long sum = 0;\n        for (Long i : l) {\n\
    \            sum += i;\n        }\n        return l.size() == 3 && sum == 0;",
  "        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n        \
    \    set.add(Math.abs(i));\n        }\n        return set.size() == 3;", "   \
    \     long sum = 0;\n        for (Long i : l) {\n            sum += i;\n     \
    \   }\n        return l.size() == 3 && sum == 0;", "        long sum = 0;\n  \
    \      for (Long i : l)\n            sum += i;\n        if (sum == 0)\n      \
    \      return true;\n        return false;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (Long l : l) {\n            sum += l;\n  \
    \      }\n        if (set.size() == 3) {\n            return true;\n        }\n\
    \        return false;", "        Set<Long> set = new HashSet<Long>(l);\n    \
    \    long sum = 0;\n        for (long i : l) {\n            sum += i;\n      \
    \      if (set.contains(sum)) {\n                return true;\n            }\n\
    \        }\n        return false;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        long sum = 0;\n        for (long i : set) {\n            sum += i;\n\
    \        }\n        return set.size() == 3 && sum == 0;", "        long sum =\
    \ 0;\n        for (Long i : l) {\n            sum += i;\n        }\n        if\
    \ (sum == 0) {\n            return false;\n        }\n        long count = 0;\n\
    \        for (Long i : l) {\n            if (i == 0) {\n                count++;\n\
    \            }\n        }\n        return count == 3;", "        Set<Long> set\
    \ = new HashSet<>();\n        for(Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 3;", "        Set<Long> set = new HashSet<Long>(l);\n\
    \        Long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \          if (set.contains(sum)) {\n                return true;\n          \
    \  }\n        }\n        return false;"]
stop_tokens:
- "\n    }\n"

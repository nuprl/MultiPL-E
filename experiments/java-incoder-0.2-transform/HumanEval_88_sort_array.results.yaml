language: java
name: HumanEval_88_sort_array
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long temp = 0;\n        long first = 0;\n        long last = 0;\n   \
    \     long mid = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv18fd95j.java:112: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n    \
    \    long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long\
    \ sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10\
    \ = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 =\
    \ 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n\
    \        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n \
    \       long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n  \
    \      long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n   \
    \     long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n    \
    \    long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n     \
    \   long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n      \
    \  long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n       \
    \ long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long\
    \ sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44\
    \ = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 =\
    \ 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n\
    \        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n \
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n  \
    \      long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n   \
    \     long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n    \
    \    long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n     \
    \   long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n      \
    \  long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n       \
    \ long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long\
    \ sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78\
    \ = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 =\
    \ 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n\
    \        long sum85 = 0;\n        long \n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaxmi1_vm.java:110: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpaxmi1_vm.java:110: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long lastSum = 0;\n        long firstSum = 0;\n        long lastFirstSum\
    \ = 0;\n        long firstLastSum = 0;\n        long lastFirstLastSum = 0;\n \
    \       long firstLastFirstSum = 0;\n        long lastFirstLastFirstSum = 0;\n\
    \        long firstLastFirstLastSum = 0;\n        long lastFirstLastFirstLastSum\
    \ = 0;\n        long firstLastFirstLastLastSum = 0;\n        long lastFirstLastFirstLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLastSum = 0;\n        long lastFirstLastFirstLastLastLastSum\
    \ = 0;\n        long firstLastFirstLastLastLastLast\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprj6mdirh.java:70: error: ';' expected\n        long firstLastFirstLastLastLastLast\n\
    \                                           ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n    \
    \    long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long\
    \ sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11\
    \ = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 =\
    \ 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n\
    \        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n \
    \       long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n  \
    \      long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n   \
    \     long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n    \
    \    long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n     \
    \   long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n      \
    \  long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n       \
    \ long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long\
    \ sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45\
    \ = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 =\
    \ 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n\
    \        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n \
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n  \
    \      long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n   \
    \     long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n    \
    \    long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n     \
    \   long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n      \
    \  long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n       \
    \ long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long\
    \ sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79\
    \ = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 =\
    \ 0;\n        long sum83 = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n\
    \        long sum86 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc0_iu_7b.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long first = 0;\n        long last = 0;\n        for (long i : array)\
    \ {\n            sum += i;\n            if (sum % 2 == 1) {\n                last\
    \ = i;\n            } else {\n                first = i;\n            }\n    \
    \    }\n        ArrayList<Long> result = new ArrayList<Long>(array);\n       \
    \ Collections.sort(result);\n        if (sum % 2 == 1) {\n            Collections.reverse(result);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_i5zfddu.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long first = 0;\n\
    \        long last = 0;\n        for (long i : array) {\n            sum += i;\n\
    \            if (sum % 2 == 1) {\n                result.add(first);\n       \
    \         first = i;\n            } else {\n                result.add(last);\n\
    \                last = i;\n            }\n        }\n        result.add(first);\n\
    \        result.add(last);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yyf5q56.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long lastSum = 0;\n        long firstSum = 0;\n        long lastFirstSum\
    \ = 0;\n        long firstLastSum = 0;\n        long lastLastSum = 0;\n      \
    \  long firstLastFirstSum = 0;\n        long lastFirstLastSum = 0;\n        long\
    \ firstLastLastSum = 0;\n        long lastFirstLastFirstSum = 0;\n        long\
    \ lastLastFirstSum = 0;\n        long lastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastFirstLastFirstSum\
    \ = 0;\n        long lastFirstLastLastSum = 0;\n        long lastFirstLastLastFirstSum\
    \ = 0;\n        long lastFirstLastLastLastSum = 0;\n        long lastLastFirstFirstSum\
    \ = 0;\n        long lastLastFirstLastSum = 0;\n        long lastLastFirstLastFirstSum\
    \ = 0;\n        long lastLastFirstLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\
    \ = 0;\n        long lastLastLastLastSum = 0;\n        long lastLastLastFirstSum\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcq1z5sgs.java:82: error: ';' expected\n        long lastLastLastFirstSum\n\
    \                                 ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long lastSum = 0;\n\
    \        long firstSum = 0;\n        long lastFirstSum = 0;\n        long firstLastSum\
    \ = 0;\n        long lastFirstLastSum = 0;\n        long lastLastSum = 0;\n  \
    \      long firstLastLastSum = 0;\n        long firstLastFirstSum = 0;\n     \
    \   long lastFirstFirstSum = 0;\n        long lastFirstLastSum = 0;\n        long\
    \ lastLastFirstSum = 0;\n        long lastLastLastSum = 0;\n        long firstLastLastSum\
    \ = 0;\n        long firstLastFirstSum = 0;\n        long lastFirstFirstSum =\
    \ 0;\n        long lastFirstLastSum = 0;\n        long lastLastFirstSum = 0;\n\
    \        long lastLastLastSum = 0;\n        long firstLastLastSum = 0;\n     \
    \   long firstLastFirstSum = 0;\n        long lastFirstFirstSum = 0;\n       \
    \ long lastFirstLastSum = 0;\n        long lastLastFirstSum = 0;\n        long\
    \ lastLastLastSum = 0;\n        long firstLastLastSum = 0;\n        long firstLastFirstSum\
    \ = 0;\n        long lastFirstFirstSum = 0;\n        long lastFirstLastSum = 0;\n\
    \        long lastLastFirstSum = 0;\n        long lastLastLastSum = 0;\n     \
    \   long firstLastLastSum = 0;\n        long firstLastFirstSum = 0;\n        long\
    \ lastFirstFirstSum = 0;\n        long lastFirstLastSum = 0;\n        long lastLastFirstSum\
    \ = 0;\n        long lastLastLastSum = 0;\n        long firstLastLastSum = 0;\n\
    \        long firstLastFirstSum = 0;\n        long lastFirstFirstSum = 0;\n  \
    \      long lastFirstLastSum = 0;\n        long lastLastFirstSum = 0;\n      \
    \  long lastLastLastSum = 0;\n        long firstLastLastSum = 0;\n        long\
    \ firstLastFirstSum = 0;\n        long lastFirstFirstSum = 0;\n        long lastFirstLastSum\
    \ = 0;\n        long lastLastFirstSum = 0;\n        long lastLastLastSum = 0;\n\
    \        long firstLastLastSum = 0;\n        long firstLastFirstSum = 0;\n   \
    \     long lastFirstFirstSum = 0;\n        long lastFirstLastSum = 0;\n      \
    \  long lastLastFirstSum = 0;\n        long lastLastLastSum = 0;\n        long\
    \ firstLastLastSum = 0;\n        long firstLastFirstSum = 0;\n        long lastFirstFirstSum\
    \ = 0;\n        long lastFirstLastSum = 0;\n        long lastLastFirstSum = 0;\n\
    \        long lastLastLastSum = 0;\n        long firstLastLastSum = 0;\n     \
    \   long firstLastFirstSum = 0;\n        long lastFirstFirstSum = 0;\n       \
    \ \n    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvcl4icbg.java:35: error: variable lastFirstLastSum is already defined\
    \ in method sortArray(ArrayList<Long>)\n        long lastFirstLastSum = 0;\n \
    \            ^\n/tmp/tmpvcl4icbg.java:38: error: variable firstLastLastSum is\
    \ already defined in method sortArray(ArrayList<Long>)\n        long firstLastLastSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:39: error: variable firstLastFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long firstLastFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:40: error: variable lastFirstFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastFirstFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:41: error: variable lastFirstLastSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastFirstLastSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:42: error: variable lastLastFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastLastFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:43: error: variable lastLastLastSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastLastLastSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:44: error: variable firstLastLastSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long firstLastLastSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:45: error: variable firstLastFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long firstLastFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:46: error: variable lastFirstFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastFirstFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:47: error: variable lastFirstLastSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastFirstLastSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:48: error: variable lastLastFirstSum\
    \ is already defined in method sortArray(ArrayList<Long>)\n        long lastLastFirstSum\
    \ = 0;\n             ^\n/tmp/tmpvcl4icbg.java:49: error: variable lastLastLastSum\
    \ is a"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>(array);\n        Collections.sort(result);\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphuvqvx8a.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(array);\n        Collections.sort(result);\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9hnl9v7.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ array) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(result);\n        }\
    \ else {\n            Collections.sort(result, Collections.reverseOrder());\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjod6l54.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(array);\n        Collections.sort(result);\n  \
    \      if (result.stream().reduce((a, b) -> a + b) % 2 == 1) {\n            Collections.reverse(result);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf8qp9vi.java:26: error: bad operand types for binary operator\
    \ '%'\n        if (result.stream().reduce((a, b) -> a + b) % 2 == 1) {\n     \
    \                                               ^\n  first type:  Optional<Long>\n\
    \  second type: int\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        for (Long i : array) {\n            sum += i;\n        }\n        if\
    \ (sum % 2 == 0) {\n            Collections.sort(array);\n        } else {\n \
    \           Collections.sort(array, Collections.reverseOrder());\n        }\n\
    \        return array;\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7fapsas.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        long sum = 0;\n\
    \        long first = 0;\n        long last = 0;\n        long temp = 0;\n   \
    \     long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n       \
    \ long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long\
    \ sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10\
    \ = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 =\
    \ 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n\
    \        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n \
    \       long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n  \
    \      long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n   \
    \     long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n    \
    \    long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n     \
    \   long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n      \
    \  long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n       \
    \ long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long\
    \ sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44\
    \ = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 =\
    \ 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n\
    \        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n \
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n  \
    \      long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n   \
    \     long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n    \
    \    long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n     \
    \   long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n      \
    \  long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n       \
    \ long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long\
    \ sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78\
    \ = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 =\
    \ 0;\n        long sum82 = 0;\n        long sum83 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpknc8wx2w.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long i : array)\
    \ {\n            sum += i;\n            result.add(i);\n        }\n        if\
    \ (sum % 2 == 0) {\n            Collections.sort(result);\n        } else {\n\
    \            Collections.sort(result, Collections.reverseOrder());\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppq9xgl0d.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>(array);\n        Collections.sort(result);\n      \
    \  if (result.stream().mapToLong(Long::longValue).sum() % 2 == 1) {\n        \
    \    Collections.reverse(result);\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps151ykqq.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(array);\n        Collections.sort(result);\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9hnl9v7.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        for (long num :\
    \ array) {\n            sum += num;\n            result.add(num);\n        }\n\
    \        if (sum % 2 == 1) {\n            Collections.sort(result);\n        }\
    \ else {\n            Collections.sort(result, Collections.reverseOrder());\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrj3ldop.java:41)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(array);\n        Collections.sort(result);\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9hnl9v7.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array of non-negative integers, return a copy\
    \ of the given array after sorting,\n    // you will sort the given array in ascending\
    \ order if the sum( first index value, last index value) is odd,\n    // or sort\
    \ it in descending order if the sum( first index value, last index value) is even.\n\
    \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
    \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    //\
    \ (new ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l, (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static\
    \ ArrayList<Long> sortArray(ArrayList<Long> array) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long first = 0;\n\
    \        long last = 0;\n        for (long i : array) {\n            sum += i;\n\
    \            if (sum % 2 == 0) {\n                result.add(first);\n       \
    \         first = i;\n            } else {\n                result.add(last);\n\
    \                last = i;\n            }\n        }\n        result.add(first);\n\
    \        result.add(last);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
    \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
    \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
    \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2b12vjd6.java:43)\n"
  stdout: ''

language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbqvb3_0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n>0) {\n \
    \           digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8hoqj3m.java:30)\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n>0) {\n \
    \           digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8hoqj3m.java:30)\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 != 0) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cx07pa8.java:36)\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbqvb3_0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product = product * digit;\n            n = n / 10;\n\
    \        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3080276g.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbqvb3_0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n > 0) {\n\
    \            digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83sbxtvt.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbqvb3_0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 != 0) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cx07pa8.java:36)\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit;\n        while (n>0) {\n \
    \           digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8hoqj3m.java:30)\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        long digit = n;\n        while (digit\
    \ > 0) {\n            product *= digit;\n            digit /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpl3yv5d.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyqsk3b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        return product;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm77uglei.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            product *=\
    \ n % 10;\n            n /= 10;\n        }\n        if (product % 2 == 0) {\n\
    \            return 0;\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5ymd0xv.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            product *= digit;\n            n /= 10;\n        }\n\
    \        return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93d3axwb.java:29)\n"
  stdout: ''

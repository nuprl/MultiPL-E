language: java
name: HumanEval_74_total_match
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        } else {\n            return lst1;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfehg02a8.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() >= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ >= lst1.get(i).length()) {\n                result.add(lst2.get(i));\n     \
    \       } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwyxyurl7.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        result.addAll(set1);\n        result.addAll(set2);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4583an4o.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.equals(str2)) {\n                   \
    \ count++;\n                }\n            }\n            if(count < lst2.size())\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxi2789iv.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            for (int i = 0; i < len1;\
    \ i++) {\n                String s1 = lst1.get(i);\n                String s2\
    \ = lst2.get(i);\n                if (s1.length() < s2.length()) {\n         \
    \           result.add(s1);\n                } else {\n                    result.add(s2);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu3009lv.java:53)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for(String str : lst1) {\n            count +=\
    \ str.length();\n        }\n        for(String str : lst2) {\n            count\
    \ += str.length();\n        }\n        if(count == lst1.size()) {\n          \
    \  return lst1;\n        }\n        if(count == lst2.size()) {\n            return\
    \ lst2;\n        }\n        for(int i = 0; i < lst1.size(); i++) {\n         \
    \   for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length()\
    \ < lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n  \
    \                  break;\n                }\n                if(lst2.get(j).length()\
    \ < lst1.get(i).length()) {\n                    result.add(lst2.get(j));\n  \
    \                  break;\n                }\n                if(lst1.get(i).length()\
    \ == lst2.get(j).length()) {\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ == 0) {\n                        result.add(lst1.get(i));\n                \
    \        break;\n                    }\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ == -1) {\n                        result.add(lst2.get(j));\n               \
    \         break;\n                    }\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ == 1) {\n                        result.add(lst1.get(j));\n                \
    \        break;\n                    }\n                }\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0p4lo09.java:69)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() > s2.length())\
    \ {\n                result.add(s1);\n            } else if (s2.length() > s1.length())\
    \ {\n                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppeygqhe6.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() >= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else {\n        \
    \        result.add(lst2.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z0i1ye4.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n                if(lst1.get(i).length() == lst2.get(j).length())\
    \ {\n                    if(lst1.get(i).equals(lst2.get(j))) {\n             \
    \           result.add(lst1.get(i));\n                        break;\n       \
    \             }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvr2ilvg.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        if(result.size() == lst1.size())\
    \ {\n            return result;\n        }\n        for(int i = 0; i < lst1.size();\
    \ i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n               \
    \ if(lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9586lnvx.java:48)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        }\n        if (len1\
    \ > len2) {\n            int len = len1;\n            while (len > len2) {\n \
    \               len--;\n                String s1 = lst1.get(len);\n         \
    \       String s2 = lst2.get(len);\n                if (s1.length() < s2.length())\
    \ {\n                    result.add(s1);\n                } else {\n         \
    \           result.add(s2);\n                }\n            }\n            return\
    \ result;\n        }\n        if (len1 < len2) {\n            int len = len2;\n\
    \            while (len > len1) {\n                len--;\n                String\
    \ s1 = lst1.get(len);\n                String s2 = lst2.get(len);\n          \
    \      if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 3, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.totalMatch(tmp9efblocq.java:57)\n\tat Problem.main(tmp9efblocq.java:72)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        int max = 0;\n        for (String str : lst1) {\n            max = Math.max(max,\
    \ str.length());\n        }\n        for (String str : lst2) {\n            max\
    \ = Math.max(max, str.length());\n        }\n        for (int i = 0; i < max;\
    \ i++) {\n            String str = \"\";\n            for (int j = 0; j < max;\
    \ j++) {\n                str += lst1.get(i).charAt(j);\n            }\n     \
    \       if (lst2.contains(str)) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 2\n\tat java.lang.String.charAt(String.java:658)\n\
    \tat Problem.totalMatch(tmph0cedplu.java:35)\n\tat Problem.main(tmph0cedplu.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n          \
    \      result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 2, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.totalMatch(tmpuzwghzzx.java:27)\n\tat Problem.main(tmpuzwghzzx.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        } else if (len1 > len2)\
    \ {\n            for (int i = 0; i < len1; i++) {\n                String s1 =\
    \ lst1.get(i);\n                String s2 = lst2.get(i);\n                if (s1.length()\
    \ < s2.length()) {\n                    result.add(s1);\n                } else\
    \ {\n                    result.add(s2);\n                }\n            }\n \
    \           return result;\n        } else {\n            for (int i = 0; i <\
    \ len2; i++) {\n                String s1 = lst1.get(i);\n                String\
    \ s2 = lst2.get(i);\n                if (s1.length() < s2.length()) {\n      \
    \              result.add(s2);\n                } else {\n                   \
    \ result.add(s1);\n                }\n            }\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 2, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.totalMatch(tmphiombzfi.java:51)\n\tat Problem.main(tmphiombzfi.java:65)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n            return result;\n        }\n        return lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22u_s_d6.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() > s2.length())\
    \ {\n                result.add(s1);\n            } else if (s2.length() > s1.length())\
    \ {\n                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppeygqhe6.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n         \
    \       result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpolgjdivk.java:27)\n\tat Problem.main(tmpolgjdivk.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else {\n        \
    \        result.add(lst2.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpsn6_5oh7.java:27)\n\tat Problem.main(tmpsn6_5oh7.java:38)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.size() > lst2.size() || lst1.size()\
    \ == lst2.size() && lst1.get(i).compareTo(lst2.get(i)) < 0) {\n              \
    \  result.add(lst1.get(i));\n            } else if (lst1.size() < lst2.size()\
    \ || lst1.size() == lst2.size() && lst1.get(i).compareTo(lst2.get(i)) > 0) {\n\
    \                result.add(lst2.get(i));\n            } else {\n            \
    \    result.add(lst1.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmebbfkb.java:39)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() > lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18wymni5.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            int maxLen = Math.max(len1,\
    \ len2);\n            for (int i = 0; i < maxLen; i++) {\n                String\
    \ s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n              \
    \  if (s1.length() < s2.length()) {\n                    result.add(s1);\n   \
    \             } else {\n                    result.add(s2);\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpa7mqwqu5.java:40)\n\tat Problem.main(tmpa7mqwqu5.java:54)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        boolean flag = false;\n        for(int i = 0; i < lst1.size(); i++) {\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length()\
    \ < lst2.get(j).length()) {\n                    flag = true;\n              \
    \      break;\n                }\n            }\n            if(flag) {\n    \
    \            result.add(lst1.get(i));\n                flag = false;\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0x0pv4i.java:42)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else {\n                result.add(lst2.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpa929nfc4.java:27)\n\tat Problem.main(tmpa929nfc4.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \         if(count == lst1.size()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lff2r25.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     if (lst1.get(i).length() > lst2.get(i).length()) {\n                   \
    \ result.add(lst1.get(i));\n                } else {\n                    result.add(lst2.get(i));\n\
    \                }\n            }\n            return result;\n        }\n   \
    \     if (len1 > len2) {\n            for (int i = 0; i < len1; i++) {\n     \
    \           result.add(lst1.get(i));\n            }\n            return result;\n\
    \        }\n        for (int i = 0; i < len2; i++) {\n            result.add(lst2.get(i));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3la87wy1.java:50)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() <= lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbrgigwe.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        } else {\n            return lst1;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfehg02a8.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else {\n                result.add(lst2.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpdt7xc3fq.java:27)\n\tat Problem.main(tmpdt7xc3fq.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0ikfcgn.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> lst3 = new ArrayList<String>();\n\
    \            for (int i = 0; i < len1; i++) {\n                String s1 = lst1.get(i);\n\
    \                String s2 = lst2.get(i);\n                if (s1.length() < s2.length())\
    \ {\n                    lst3.add(s1);\n                } else {\n           \
    \         lst3.add(s2);\n                }\n            }\n            return\
    \ lst3;\n        }\n        ArrayList<String> lst4 = new ArrayList<String>();\n\
    \        for (int i = 0; i < len2; i++) {\n            String s1 = lst1.get(len1\
    \ - 1);\n            String s2 = lst2.get(i);\n            if (s1.length() < s2.length())\
    \ {\n                lst4.add(s2);\n            } else {\n                lst4.add(s1);\n\
    \            }\n        }\n        return lst4;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpth81tiph.java:56)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        result.addAll(set1);\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wdtbn59.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n    \
    \        for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \     }\n        if(count == lst1.size()) {\n            result = lst1;\n    \
    \    }\n        else if(count == lst2.size()) {\n            result = lst2;\n\
    \        }\n        else {\n            for(int i = 0; i < lst1.size(); i++) {\n\
    \                for(int j = 0; j < lst2.size(); j++) {\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        result.add(lst1.get(i));\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1y4nhft.java:53)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            return lst2;\n        }\n    \
    \    return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxlpu4fs.java:36)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for(String str : lst1) {\n            count +=\
    \ str.length();\n        }\n        for(String str : lst2) {\n            count\
    \ += str.length();\n        }\n        if(count == lst1.size()) {\n          \
    \  return lst1;\n        }\n        if(count == lst2.size()) {\n            return\
    \ lst2;\n        }\n        for(String str : lst1) {\n            count -= str.length();\n\
    \        }\n        for(String str : lst2) {\n            count -= str.length();\n\
    \        }\n        if(count == 0) {\n            return lst1;\n        }\n  \
    \      if(count == 0) {\n            return lst2;\n        }\n        for(String\
    \ str : lst1) {\n            count += str.length();\n        }\n        for(String\
    \ str : lst2) {\n            count += str.length();\n        }\n        if(count\
    \ == 0) {\n            return lst1;\n        }\n        if(count == 0) {\n   \
    \         return lst2;\n        }\n        for(String str : lst1) {\n        \
    \    count -= str.length();\n        }\n        for(String str : lst2) {\n   \
    \         count -= str.length();\n        }\n        if(count == 0) {\n      \
    \      return lst1;\n        }\n        if(count == 0) {\n            return lst2;\n\
    \        }\n        for(String str : lst1) {\n            count += str.length();\n\
    \        }\n        for(String str : lst2) {\n            count += str.length();\n\
    \        }\n        if(count == 0) {\n            return lst1;\n        }\n  \
    \      if(count == 0) {\n            return lst2;\n        }\n        for(String\
    \ str : lst1) {\n            count -= str.length();\n        }\n        for(String\
    \ str : lst2) {\n            count -= str.length();\n        }\n        if(count\
    \ == 0) {\n            return lst1;\n        }\n        if(count == 0) {\n   \
    \         return lst2;\n        }\n        for(String str : lst1) {\n        \
    \    count += str.length();\n        }\n        for(String str : lst2) {\n   \
    \         count += str.length();\n        }\n        if(count == 0) {\n      \
    \      return lst1;\n        }\n        if(count == 0) {\n            return lst2;\n\
    \        }\n        for(String str : lst1) {\n            count -= str.length();\n\
    \        }\n        for(String str : lst2) {\n            count -= str.length();\n\
    \        }\n        if(count == 0) {\n            return lst1;\n        }\n  \
    \      if(count == 0) {\n            return lst2;\n        }\n        for(String\
    \ str : lst1) {\n            count += str.length();\n        }\n        for(String\
    \ str : lst2) {\n            count += str.length();\n        }\n        if(count\
    \ == 0) {\n            return lst1;\n        }\n        if(count == 0) {\n   \
    \         return lst2;\n        }\n        for(String str : lst1) {\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp94tzem9o.java:137: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799698
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() <= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ <= lst1.get(i).length()) {\n                result.add(lst2.get(i));\n     \
    \       } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpymiwuk5p.java:27)\n\tat Problem.main(tmpymiwuk5p.java:41)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        \n        for(int i = 0; i < lst1.size(); i++) {\n            for(int\
    \ j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        \n        if(lst1.size()\
    \ == lst2.size()) {\n            return result;\n        }\n        \n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5_551sr.java:43)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n         \
    \       result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpolgjdivk.java:27)\n\tat Problem.main(tmpolgjdivk.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.compareTo(str2) > 0) {\n            \
    \        count++;\n                }\n            }\n            if(count > result.size())\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp955op_uj.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.compareTo(str2) > 0) {\n            \
    \        count++;\n                }\n            }\n            if(count == lst2.size())\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqv_57te9.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        } else {\n            return lst1;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfehg02a8.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        int\
    \ count = 0;\n        for(int i = 0; i < len1; i++) {\n            for(int j =\
    \ 0; j < len2; j++) {\n                if(lst1.get(i).compareTo(lst2.get(j)) <\
    \ 0) {\n                    count++;\n                }\n            }\n     \
    \   }\n        if(count == len1) {\n            return lst1;\n        }\n    \
    \    else if(count == len2) {\n            return lst2;\n        }\n        else\
    \ {\n            for(int i = 0; i < len1; i++) {\n                for(int j =\
    \ 0; j < len2; j++) {\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        result.add(lst1.get(i));\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \        return result;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qccbg6_.java:55)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        if (set1.size() == 0 && set2.size() == 0) {\n            return result;\n\
    \        }\n        if (set1.size() == 0) {\n            return lst2;\n      \
    \  }\n        if (set2.size() == 0) {\n            return lst1;\n        }\n \
    \       result.addAll(set1);\n        result.addAll(set2);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg970k3ph.java:47)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() < lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n            return result;\n        }\n        return lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdpyzx6gm.java:37)\n"
  stdout: ''
  timestamp: 1659799700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik2ll5a5.java:38)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                if (lst1.get(i).equals(lst2.get(i))) {\n    \
    \                result.add(lst1.get(i));\n                } else {\n        \
    \            result.add(lst2.get(i));\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdc3yfra6.java:43)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String s : lst1) {\n            count +=\
    \ s.length();\n        }\n        for (String s : lst2) {\n            count +=\
    \ s.length();\n        }\n        if (count == lst1.size()) {\n            result.addAll(lst1);\n\
    \        } else if (count == lst2.size()) {\n            result.addAll(lst2);\n\
    \        } else {\n            for (String s : lst1) {\n                if (lst2.contains(s))\
    \ {\n                    result.add(s);\n                }\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnent_was.java:47)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     if (lst1.get(i).length() > lst2.get(i).length()) {\n                   \
    \ result.add(lst1.get(i));\n                }\n            }\n            return\
    \ result;\n        }\n        if (len1 < len2) {\n            int len = len1;\n\
    \            for (int i = 0; i < len2; i++) {\n                if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                    result.add(lst2.get(i));\n  \
    \              }\n            }\n            return result;\n        }\n     \
    \   int len = len2;\n        for (int i = 0; i < len1; i++) {\n            if\
    \ (lst1.get(i).length() > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7bknchz.java:54)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Integer.MIN_VALUE;\n        for(String str : lst1) {\n \
    \           int len = str.length();\n            if(len > maxLen) {\n        \
    \        maxLen = len;\n            }\n        }\n        for(String str : lst2)\
    \ {\n            int len = str.length();\n            if(len > maxLen) {\n   \
    \             maxLen = len;\n            }\n        }\n        if(maxLen == Integer.MIN_VALUE)\
    \ {\n            return lst1;\n        }\n        for(int i = 0; i < lst1.size();\
    \ i++) {\n            String str = lst1.get(i);\n            int len = str.length();\n\
    \            if(len > maxLen) {\n                maxLen = len;\n            }\n\
    \        }\n        for(int i = 0; i < lst2.size(); i++) {\n            String\
    \ str = lst2.get(i);\n            int len = str.length();\n            if(len\
    \ > maxLen) {\n                maxLen = len;\n            }\n        }\n     \
    \   for(int i = 0; i < lst1.size(); i++) {\n            String str = lst1.get(i);\n\
    \            int len = str.length();\n            if(len > maxLen) {\n       \
    \         maxLen = len;\n            }\n        }\n        for(int i = 0; i <\
    \ lst2.size(); i++) {\n            String str = lst2.get(i);\n            int\
    \ len = str.length();\n            if(len > maxLen) {\n                maxLen\
    \ = len;\n            }\n        }\n        for(int i = 0; i < lst1.size(); i++)\
    \ {\n            String str = lst1.get(i);\n            int len = str.length();\n\
    \            if(len > maxLen) {\n                maxLen = len;\n            }\n\
    \        }\n        for(int i = 0; i < lst2.size(); i++) {\n            String\
    \ str = lst2.get(i);\n            int len = str.length();\n            if(len\
    \ > maxLen) {\n                maxLen = len;\n            }\n        }\n     \
    \   for(int i = 0; i < lst1.size(); i++) {\n            String str = lst1.get(i);\n\
    \            int len = str.length();\n            if(len > maxLen) {\n       \
    \         maxLen = len;\n            }\n        }\n        for(int i = 0; i <\
    \ lst2.size(); i++) {\n            String str = lst2.get(i);\n            int\
    \ len = str.length();\n            if(len > maxLen) {\n                maxLen\
    \ = len;\n            }\n        }\n        for(int i = 0; i < lst1.size(); i++)\
    \ {\n            String str = lst1.get(i);\n            int len = str.length();\n\
    \            if(len > maxLen) {\n                maxLen = len;\n            }\n\
    \        }\n        for(int i = 0; i < lst2.size(); i++) {\n            String\
    \ str = lst2.get(i);\n            int len = str.length();\n            if(len\
    \ > maxLen) {\n                maxLen = len;\n            }\n        }\n     \
    \   for(int i = 0; i < lst1.size(); i++) {\n            String str = lst1.get(i);\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1pz6cda8.java:114: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp2r6bg2qi.java:27)\n\tat Problem.main(tmp2r6bg2qi.java:40)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     if (lst1.get(i).length() > lst2.get(i).length()) {\n                   \
    \ result.add(lst1.get(i));\n                }\n            }\n            return\
    \ result;\n        }\n        if (len1 > len2) {\n            int temp = len1;\n\
    \            len1 = len2;\n            len2 = temp;\n        }\n        for (int\
    \ i = 0; i < len1; i++) {\n            for (int j = 0; j < len2; j++) {\n    \
    \            if (lst1.get(i).length() > lst2.get(j).length()) {\n            \
    \        result.add(lst1.get(i));\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvyhc58i.java:51)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0ikfcgn.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                if (lst1.get(i).equals(lst2.get(i))) {\n    \
    \                result.add(lst1.get(i));\n                } else {\n        \
    \            result.add(lst2.get(i));\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zhnlaot.java:43)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max1 = lst1.size();\n        int max2 = lst2.size();\n        int\
    \ min1 = lst1.size();\n        int min2 = lst2.size();\n        int count = 0;\n\
    \        for (int i = 0; i < max1; i++) {\n            for (int j = 0; j < max2;\
    \ j++) {\n                if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n    \
    \                min1 = i;\n                    min2 = j;\n                  \
    \  break;\n                }\n            }\n        }\n        for (int i = 0;\
    \ i < max1; i++) {\n            for (int j = 0; j < max2; j++) {\n           \
    \     if (lst1.get(i).compareTo(lst2.get(j)) > 0) {\n                    max1\
    \ = i;\n                    max2 = j;\n                    break;\n          \
    \      }\n            }\n        }\n        for (int i = 0; i < max1; i++) {\n\
    \            for (int j = 0; j < max2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    min1 = i;\n                    min2 = j;\n     \
    \               break;\n                }\n            }\n        }\n        for\
    \ (int i = 0; i < max1; i++) {\n            for (int j = 0; j < max2; j++) {\n\
    \                if (lst1.get(i).compareTo(lst2.get(j)) > 0) {\n             \
    \       max1 = i;\n                    max2 = j;\n                    break;\n\
    \                }\n            }\n        }\n        for (int i = 0; i < max1;\
    \ i++) {\n            for (int j = 0; j < max2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    min1 = i;\n                    min2 = j;\n     \
    \               break;\n                }\n            }\n        }\n        for\
    \ (int i = 0; i < max1; i++) {\n            for (int j = 0; j < max2; j++) {\n\
    \                if (lst1.get(i).compareTo(lst2.get(j)) > 0) {\n             \
    \       max1 = i;\n                    max2 = j;\n                    break;\n\
    \                }\n            }\n        }\n        for (int i = 0; i < max1;\
    \ i++) {\n            for (int j = 0; j < max2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    min1 = i;\n                    min2 = j;\n     \
    \               break;\n                }\n            }\n        }\n        for\
    \ (int i = 0; i < max1; i++) {\n            for (int j = 0; j < max2; j++) {\n\
    \                if (lst1.get(i).compareTo(lst2.get(j)) > 0) {\n             \
    \       max1 = i;\n                    max2 = j;\n                    break;\n\
    \                }\n            }\n        }\n        for (int i = 0; i < max1;\
    \ i++) {\n            for (int j = 0; j < max2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    min1 = i;\n                    min2 = j;\n     \
    \               break;\n                }\n            }\n        }\n        for\
    \ (int i = 0; i < max1; i++) {\n            for (int j = 0; j < max2; j++) {\n\
    \                if (lst1.get(i).compareTo(lst2.get(j)) > 0) {\n             \
    \       max1 = i;\n                    max2 = j;\n                    break;\n\
    \                }\n            }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprznosiqy.java:121: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() < lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        } else {\n            return lst1;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppld7re_l.java:44)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.size() > lst2.size() || lst2.size()\
    \ > lst1.size()) {\n                if (lst1.size() == lst2.size()) {\n      \
    \              result.add(lst1.get(i));\n                } else {\n          \
    \          result.add(lst2.get(i));\n                }\n            } else {\n\
    \                if (lst1.size() == lst2.size()) {\n                    result.add(lst1.get(i));\n\
    \                } else {\n                    result.add(lst2.get(i));\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhw1kuwu.java:45)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int maxLen = lst1.size() > lst2.size() ?\
    \ lst1.size() : lst2.size();\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() > s2.length())\
    \ {\n                result.add(s1);\n            } else if (s2.length() > s1.length())\
    \ {\n                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8f3opca.java:42)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_khue8o.java:36)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        }\n        if (len1\
    \ < len2) {\n            int len = len1;\n            for (int i = 0; i < len2;\
    \ i++) {\n                String s1 = lst2.get(i);\n                String s2\
    \ = lst1.get(i);\n                if (s1.length() < s2.length()) {\n         \
    \           result.add(s1);\n                } else {\n                    result.add(s2);\n\
    \                }\n            }\n            return result;\n        }\n   \
    \     int len = len2;\n        for (int i = 0; i < len1; i++) {\n            String\
    \ s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n            if (s1.length()\
    \ < s2.length()) {\n                result.add(s1);\n            } else {\n  \
    \              result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpoy4lqu1r.java:43)\n\tat Problem.main(tmpoy4lqu1r.java:67)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max = 0;\n        int min = 0;\n        int count = 0;\n        for(int\
    \ i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j < lst2.size();\
    \ j++) {\n                if(lst1.get(i).length() > lst2.get(j).length()) {\n\
    \                    max = lst1.get(i).length();\n                    min = lst2.get(j).length();\n\
    \                    count++;\n                }\n                if(lst1.get(i).length()\
    \ == lst2.get(j).length()) {\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        max = lst1.get(i).length();\n              \
    \          min = lst2.get(j).length();\n                        count++;\n   \
    \                 }\n                }\n            }\n        }\n        if(count\
    \ == lst1.size()) {\n            result.add(lst1);\n        }\n        if(count\
    \ == lst2.size()) {\n            result.add(lst2);\n        }\n        if(count\
    \ > lst1.size()) {\n            result.add(lst1);\n        }\n        if(count\
    \ > lst2.size()) {\n            result.add(lst2);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjqu0cgkb.java:45: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst1);\n             \
    \          ^\n/tmp/tmpjqu0cgkb.java:48: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst2);\n             \
    \          ^\n/tmp/tmpjqu0cgkb.java:51: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst1);\n             \
    \          ^\n/tmp/tmpjqu0cgkb.java:54: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst2);\n             \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            int maxLen = Math.max(len1,\
    \ len2);\n            for (int i = 0; i < maxLen; i++) {\n                String\
    \ s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n              \
    \  if (s1.length() < s2.length()) {\n                    result.add(s1);\n   \
    \             } else {\n                    result.add(s2);\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpa7mqwqu5.java:40)\n\tat Problem.main(tmpa7mqwqu5.java:54)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max = 0;\n        for(String str : lst1) {\n            max = Math.max(max,\
    \ str.length());\n        }\n        for(String str : lst2) {\n            max\
    \ = Math.max(max, str.length());\n        }\n        for(int i = 0; i < max; i++)\
    \ {\n            String str1 = \"\";\n            String str2 = \"\";\n      \
    \      if(i == lst1.size() - 1) {\n                str1 = lst1.get(i);\n     \
    \           str2 = lst2.get(i);\n            } else {\n                str1 =\
    \ lst1.get(i);\n                str2 = lst2.get(i + 1);\n            }\n     \
    \       int count = 0;\n            for(int j = 0; j < str1.length(); j++) {\n\
    \                count += str1.charAt(j) == str2.charAt(j);\n            }\n \
    \           if(count == str1.length()) {\n                result.add(str1);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm3cqkkvv.java:44: error: bad operand types for binary operator\
    \ '+'\n                count += str1.charAt(j) == str2.charAt(j);\n          \
    \            ^\n  first type:  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int maxLen = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        ArrayList<String> result = new ArrayList<>();\n        for (int i = 0;\
    \ i < lst1.size(); i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() > maxLen || s2.length() > maxLen)\
    \ {\n                continue;\n            }\n            if (s1.length() ==\
    \ s2.length()) {\n                result.add(s1);\n            } else {\n    \
    \            for (int j = 0; j < s2.length(); j++) {\n                    if (s1.charAt(j)\
    \ != s2.charAt(j)) {\n                        break;\n                    }\n\
    \                }\n                if (j == s2.length()) {\n                \
    \    result.add(s1);\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0vt8y73d.java:40: error: cannot find symbol\n                if\
    \ (j == s2.length()) {\n                    ^\n  symbol:   variable j\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyy39n3j.java:40)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String str : lst1) {\n            count\
    \ += str.length();\n        }\n        for (String str : lst2) {\n           \
    \ count += str.length();\n        }\n        if (count == lst1.size()) {\n   \
    \         return lst1;\n        }\n        if (count == lst2.size()) {\n     \
    \       return lst2;\n        }\n        int i = 0;\n        while (i < lst1.size()\
    \ && i < lst2.size()) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n                i++;\n        \
    \    } else if (lst1.get(i).length() < lst2.get(i).length()) {\n             \
    \   result.add(lst2.get(i));\n                i++;\n            } else {\n   \
    \             result.add(lst1.get(i));\n                i++;\n               \
    \ result.add(lst2.get(i));\n                i++;\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoukh66fq.java:58)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        int\
    \ count = 0;\n        for(int i = 0; i < len1; i++) {\n            for(int j =\
    \ 0; j < len2; j++) {\n                if(lst1.get(i).compareTo(lst2.get(j)) <\
    \ 0) {\n                    count++;\n                }\n            }\n     \
    \   }\n        if(count == len1) {\n            return lst1;\n        }\n    \
    \    else if(count == len2) {\n            return lst2;\n        }\n        else\
    \ {\n            for(int i = 0; i < len1; i++) {\n                for(int j =\
    \ 0; j < len2; j++) {\n                    if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        result.add(lst1.get(i));\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \        return result;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qccbg6_.java:55)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp551jh05y.java:39)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \         if(count == lst2.size()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71achyy1.java:40)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        lst1.stream().filter(x -> lst2.stream().noneMatch(y -> x.equals(y)))\n\
    \                .forEach(x -> result.add(x));\n        lst2.stream().filter(x\
    \ -> lst1.stream().noneMatch(y -> x.equals(y)))\n                .forEach(x ->\
    \ result.add(x));\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hd5tnr8.java:33)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.size() > lst2.size()) {\n\
    \                if (lst1.get(i).length() == lst2.get(i).length()) {\n       \
    \             result.add(lst1.get(i));\n                }\n            } else\
    \ if (lst2.size() > lst1.size()) {\n                if (lst2.get(i).length() ==\
    \ lst1.get(i).length()) {\n                    result.add(lst2.get(i));\n    \
    \            }\n            } else {\n                if (lst1.get(i).length()\
    \ == lst2.get(i).length()) {\n                    result.add(lst1.get(i));\n \
    \               }\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5qa1ghk.java:45)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            for (int i = 0; i < len1;\
    \ i++) {\n                String s1 = lst1.get(i);\n                String s2\
    \ = lst2.get(i);\n                if (s1.length() < s2.length()) {\n         \
    \           result.add(s1);\n                } else {\n                    result.add(s2);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu3009lv.java:53)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \         if(count > lst2.size()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlbsx83u.java:40)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() > s2.length())\
    \ {\n                result.add(s1);\n            } else if (s2.length() > s1.length())\
    \ {\n                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppeygqhe6.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp2r6bg2qi.java:27)\n\tat Problem.main(tmp2r6bg2qi.java:40)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> result = new\
    \ ArrayList<String>();\n            for (int i = 0; i < len1; i++) {\n       \
    \         String s = lst1.get(i);\n                for (int j = 0; j < len2; j++)\
    \ {\n                    if (s.compareTo(lst2.get(j)) == 0) {\n              \
    \          result.add(s);\n                        break;\n                  \
    \  }\n                }\n            }\n            return result;\n        }\
    \ else {\n            ArrayList<String> result = new ArrayList<String>();\n  \
    \          for (int i = 0; i < len2; i++) {\n                String s = lst2.get(i);\n\
    \                for (int j = 0; j < len1; j++) {\n                    if (s.compareTo(lst1.get(j))\
    \ == 0) {\n                        result.add(s);\n                        break;\n\
    \                    }\n                }\n            }\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn__iteej.java:57)\n"
  stdout: ''
  timestamp: 1659799702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp551jh05y.java:39)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        if(lst1.size() == result.size())\
    \ {\n            return result;\n        }\n        return lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfbc22662.java:40)\n"
  stdout: ''
  timestamp: 1659799702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            int maxLen = Math.max(len1,\
    \ len2);\n            for (int i = 0; i < maxLen; i++) {\n                String\
    \ s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n              \
    \  if (s1.length() < s2.length()) {\n                    result.add(s1);\n   \
    \             } else {\n                    result.add(s2);\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpa7mqwqu5.java:40)\n\tat Problem.main(tmpa7mqwqu5.java:54)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        ArrayList<String> temp = new ArrayList<String>();\n        int count\
    \ = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n            for(int j\
    \ = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    temp.add(lst1.get(i));\n                    count++;\n\
    \                }\n                else if(lst1.get(i).length() == lst2.get(j).length())\
    \ {\n                    temp.add(lst1.get(i));\n                    count++;\n\
    \                }\n            }\n        }\n        if(count == lst1.size())\
    \ {\n            result.add(lst1);\n        }\n        else if(count == lst2.size())\
    \ {\n            result.add(lst2);\n        }\n        else if(count > lst1.size()\
    \ && count > lst2.size()) {\n            result.add(temp);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6cx5fn5a.java:40: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst1);\n             \
    \          ^\n/tmp/tmp6cx5fn5a.java:43: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(lst2);\n             \
    \          ^\n/tmp/tmp6cx5fn5a.java:46: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(temp);\n             \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659799702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() <= lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbrgigwe.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> result = new\
    \ ArrayList<String>();\n            for (int i = 0; i < len1; i++) {\n       \
    \         if (lst1.get(i).length() > lst2.get(i).length()) {\n               \
    \     result.add(lst1.get(i));\n                }\n            }\n           \
    \ return result;\n        }\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < len2; i++) {\n            if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59l6u5s0.java:48)\n"
  stdout: ''
  timestamp: 1659799702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() >= lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2ybn2ii.java:36)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                for (int j = 0; j < lst2.size(); j++) {\n          \
    \          if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                   \
    \     result.add(lst1.get(i));\n                        break;\n             \
    \       }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiv7gf1j_.java:39)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        if (maxLen < minLen) {\n            return lst1;\n        }\n       \
    \ boolean isMatch = true;\n        for (int i = 0; i < maxLen; i++) {\n      \
    \      String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n      \
    \      if (s1.length() != s2.length()) {\n                isMatch = false;\n \
    \               break;\n            }\n        }\n        if (isMatch) {\n   \
    \         return lst1;\n        }\n        for (int i = 0; i < minLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() != s2.length()) {\n                isMatch = false;\n\
    \                break;\n            }\n        }\n        if (isMatch) {\n  \
    \          return lst1;\n        }\n        for (int i = 0; i < maxLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() < s2.length()) {\n                isMatch = false;\n\
    \                break;\n            }\n        }\n        if (isMatch) {\n  \
    \          return lst1;\n        }\n        for (int i = 0; i < minLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() < s2.length()) {\n                isMatch = false;\n\
    \                break;\n            }\n        }\n        if (isMatch) {\n  \
    \          return lst1;\n        }\n        for (int i = 0; i < maxLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() > s2.length()) {\n                isMatch = false;\n\
    \                break;\n            }\n        }\n        if (isMatch) {\n  \
    \          return lst1;\n        }\n        for (int i = 0; i < minLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() > s2.length()) {\n                isMatch = false;\n\
    \                break;\n            }\n        }\n        if (isMatch) {\n  \
    \          return lst1;\n        }\n        for (int i = 0; i < maxLen; i++) {\n\
    \            String s1 = lst1.get(i);\n            String s2 = lst2.get(i);\n\
    \            if (s1.length() == s2.length()) {\n                result.add(s1);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.NoSuchElementException: No value\
    \ present\n\tat java.base/java.util.OptionalInt.getAsInt(OptionalInt.java:130)\n\
    \tat Problem.totalMatch(tmppnxf1h6a.java:25)\n\tat Problem.main(tmppnxf1h6a.java:107)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen2 = lst2.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen2 = lst1.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen3 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen3 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen4 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen4 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen5 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen5 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen6 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen6 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen7 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen7 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen8 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen8 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen9 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen9 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen10 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen10 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen11 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen11 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \        int maxLen12 = lst1.stream().mapToInt(String::length).max().getAsInt();\n\
    \        int minLen12 = lst2.stream().mapToInt(String::length).min().getAsInt();\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3p3oqmy4.java:49: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659799702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        if (set1.size() == set2.size()) {\n            return lst1;\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttjmlvj8.java:39)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0ikfcgn.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        int\
    \ count = 0;\n        for (int i = 0; i < len1; i++) {\n            for (int j\
    \ = 0; j < len2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \     }\n        if (len1 == len2) {\n            for (int i = 0; i < len1; i++)\
    \ {\n                result.add(lst1.get(i));\n            }\n            return\
    \ result;\n        }\n        if (len1 > len2) {\n            for (int i = 0;\
    \ i < len2; i++) {\n                result.add(lst2.get(i));\n            }\n\
    \            return result;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinmx5xr2.java:51)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp551jh05y.java:39)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> res = new ArrayList<String>();\n\
    \            for (int i = 0; i < len1; i++) {\n                if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                    res.add(lst1.get(i));\n     \
    \           }\n            }\n            return res;\n        }\n        if (len1\
    \ < len2) {\n            ArrayList<String> res = new ArrayList<String>();\n  \
    \          for (int i = 0; i < len2; i++) {\n                if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                    res.add(lst2.get(i));\n     \
    \           }\n            }\n            return res;\n        }\n        return\
    \ lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4qqu2xo.java:51)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        if(lst1.size() == result.size())\
    \ {\n            return lst1;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_icao2z.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                for (int j = 0; j < lst2.size(); j++) {\n          \
    \          if (lst1.get(i).length() < lst2.get(j).length()) {\n              \
    \          result.add(lst1.get(i));\n                        break;\n        \
    \            }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiab1qa8t.java:39)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \         if(count == lst2.size()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw1lisxs.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max = 0;\n        int min = 0;\n        int sum = 0;\n        boolean\
    \ flag = false;\n        for(int i = 0; i < lst1.size(); i++) {\n            flag\
    \ = false;\n            for(int j = 0; j < lst2.size(); j++) {\n             \
    \   if(lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                    flag = true;\n\
    \                    break;\n                }\n            }\n            if(flag\
    \ == false) {\n                result.add(lst1.get(i));\n            }\n     \
    \   }\n        for(int i = 0; i < lst2.size(); i++) {\n            flag = false;\n\
    \            for(int j = 0; j < lst1.size(); j++) {\n                if(lst2.get(i).compareTo(lst1.get(j))\
    \ < 0) {\n                    flag = true;\n                    break;\n     \
    \           }\n            }\n            if(flag == false) {\n              \
    \  result.add(lst2.get(i));\n            }\n        }\n        for(int i = 0;\
    \ i < result.size(); i++) {\n            sum += result.get(i).length();\n    \
    \    }\n        if(sum > max) {\n            max = sum;\n        }\n        if(sum\
    \ < min) {\n            min = sum;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ictc0ks.java:66)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \     else if (lst1.get(i).length() < lst2.get(i).length()) {\n              \
    \      result.add(lst2.get(i));\n                }\n                else {\n \
    \                   result.add(lst1.get(i));\n                }\n            }\n\
    \        }\n        else {\n            return lst1;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrs6gqfv.java:45)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            }\n        }\n        if (result.size()\
    \ == maxLength) {\n            return result;\n        }\n        if (result.size()\
    \ > maxLength) {\n            return result;\n        }\n        return lst1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4lpx61x.java:43)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for(int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            int count = 0;\n          \
    \  for(int j = 0; j < s1.length(); j++) {\n                count += s1.charAt(j)\
    \ == s2.charAt(j) ? 1 : 0;\n            }\n            if(count == s1.length())\
    \ {\n                result.add(s1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 2\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.totalMatch(tmp7a6i6wmi.java:31)\n\
    \tat Problem.main(tmp7a6i6wmi.java:41)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0ikfcgn.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        \n        int maxLen = Math.max(lst1.size(), lst2.size());\n        \n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            \n            if (s1.length()\
    \ == s2.length()) {\n                result.add(s1);\n            } else {\n \
    \               result.add(s2);\n            }\n        }\n        \n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmph1_5gvjh.java:29)\n\tat Problem.main(tmph1_5gvjh.java:44)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() > s2.length()) {\n          \
    \      result.add(s1);\n            } else if (s2.length() > s1.length()) {\n\
    \                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptgf9my_j.java:42)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> lst3 = new ArrayList<String>();\n\
    \            for (int i = 0; i < len1; i++) {\n                String s1 = lst1.get(i);\n\
    \                String s2 = lst2.get(i);\n                if (s1.length() < s2.length())\
    \ {\n                    lst3.add(s1);\n                } else {\n           \
    \         lst3.add(s2);\n                }\n            }\n            return\
    \ lst3;\n        }\n        ArrayList<String> lst4 = new ArrayList<String>();\n\
    \        for (int i = 0; i < len2; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s2.length() < s1.length())\
    \ {\n                lst4.add(s2);\n            } else {\n                lst4.add(s1);\n\
    \            }\n        }\n        return lst4;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchsqp9oa.java:56)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() >= lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2ybn2ii.java:36)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.equals(str2)) {\n                   \
    \ count++;\n                }\n            }\n            if(count < lst2.size())\
    \ {\n                result.add(str);\n            }\n        }\n        if(result.size()\
    \ == lst1.size()) {\n            return result;\n        }\n        return lst1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11wmbp3c.java:43)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() >= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ >= lst1.get(i).length()) {\n                result.add(lst2.get(i));\n     \
    \       } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwyxyurl7.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() <= lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbrgigwe.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.compareTo(str2) > 0) {\n            \
    \        count++;\n                }\n            }\n            if(count > result.size())\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp955op_uj.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() == s2.length())\
    \ {\n                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpmv68y8th.java:27)\n\tat Problem.main(tmpmv68y8th.java:40)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String s : lst1) {\n            count +=\
    \ s.length();\n        }\n        for (String s : lst2) {\n            count +=\
    \ s.length();\n        }\n        if (count == lst1.size()) {\n            result.addAll(lst1);\n\
    \            return result;\n        }\n        if (count == lst2.size()) {\n\
    \            result.addAll(lst2);\n            return result;\n        }\n   \
    \     int i = 0;\n        while (i < lst1.size() && i < lst2.size()) {\n     \
    \       if (lst1.get(i).length() > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n\
    \                i++;\n            } else if (lst1.get(i).length() < lst2.get(i).length())\
    \ {\n                result.add(lst2.get(i));\n                i++;\n        \
    \    } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9768v8m.java:58)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n         \
    \       result.add(s1);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptye14uvy.java:37)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n         \
    \       result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpolgjdivk.java:27)\n\tat Problem.main(tmpolgjdivk.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     for (int j = 0; j < len2; j++) {\n                    if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        result.add(lst1.get(i));\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \        return result;\n        }\n        if (len1 > len2) {\n            int\
    \ k = len1;\n            while (k <= len2) {\n                result.add(lst1.get(k));\n\
    \                k++;\n            }\n            return result;\n        }\n\
    \        if (len1 < len2) {\n            int k = len2;\n            while (k <=\
    \ len1) {\n                result.add(lst2.get(k));\n                k++;\n  \
    \          }\n            return result;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2m9o6r_5.java:58)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        }\n        if (len1\
    \ > len2) {\n            for (int i = 0; i < len2; i++) {\n                String\
    \ s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n              \
    \  if (s1.length() < s2.length()) {\n                    result.add(s2);\n   \
    \             } else {\n                    result.add(s1);\n                }\n\
    \            }\n            return result;\n        }\n        if (len1 < len2)\
    \ {\n            for (int i = 0; i < len1; i++) {\n                String s1 =\
    \ lst1.get(i);\n                String s2 = lst2.get(i);\n                if (s1.length()\
    \ < s2.length()) {\n                    result.add(s1);\n                } else\
    \ {\n                    result.add(s2);\n                }\n            }\n \
    \           return result;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqga8jtrb.java:68)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        result.addAll(set1);\n        result.addAll(set2);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4583an4o.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() >= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else {\n        \
    \        result.add(lst2.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z0i1ye4.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        } else if (len1 > len2)\
    \ {\n            for (int i = 0; i < len1; i++) {\n                String s1 =\
    \ lst1.get(i);\n                String s2 = lst2.get(i);\n                if (s1.length()\
    \ < s2.length()) {\n                    result.add(s1);\n                } else\
    \ {\n                    result.add(s2);\n                }\n            }\n \
    \           return result;\n        } else {\n            for (int i = 0; i <\
    \ len2; i++) {\n                String s1 = lst1.get(i);\n                String\
    \ s2 = lst2.get(i);\n                if (s1.length() < s2.length()) {\n      \
    \              result.add(s2);\n                } else {\n                   \
    \ result.add(s1);\n                }\n            }\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 2, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.totalMatch(tmphiombzfi.java:51)\n\tat Problem.main(tmphiombzfi.java:65)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int count = 0;\n        for(int i = 0; i\
    \ < lst1.size(); i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n\
    \                if(lst1.get(i).compareTo(lst2.get(j)) < 0) {\n              \
    \      count++;\n                }\n            }\n        }\n        if(lst1.size()\
    \ == lst2.size()) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2i3zshla.java:39)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw37vghge.java:39)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        if(result.size() == lst1.size())\
    \ {\n            return result;\n        }\n        for(int i = 0; i < lst1.size();\
    \ i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n               \
    \ if(lst1.get(i).length() > lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2r88fd6.java:48)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() >= lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2ybn2ii.java:36)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for(int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            int len1 = s1.length();\n \
    \           int len2 = s2.length();\n            if(len1 > len2) {\n         \
    \       result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6b77hple.java:41)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     for (int j = 0; j < len2; j++) {\n                    if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        result.add(lst1.get(i));\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \        return result;\n        }\n        if (len1 > len2) {\n            for\
    \ (int i = 0; i < len1; i++) {\n                for (int j = 0; j < len2; j++)\
    \ {\n                    if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n     \
    \                   result.add(lst1.get(i));\n                        break;\n\
    \                    }\n                }\n            }\n            return result;\n\
    \        }\n        if (len1 < len2) {\n            for (int i = 0; i < len2;\
    \ i++) {\n                for (int j = 0; j < len1; j++) {\n                 \
    \   if (lst2.get(i).compareTo(lst1.get(j)) < 0) {\n                        result.add(lst2.get(i));\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n            return result;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvpso9se.java:64)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        int\
    \ count = 0;\n        for (int i = 0; i < len1; i++) {\n            for (int j\
    \ = 0; j < len2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \     }\n        if (len1 == len2) {\n            result.add(lst1.get(0));\n \
    \       } else {\n            result.add(lst1.get(0));\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 0 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpbjg7mqj9.java:36)\n\tat Problem.main(tmpbjg7mqj9.java:43)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            return lst2;\n        }\n    \
    \    return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxlpu4fs.java:36)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        ArrayList<String> temp = new ArrayList<String>();\n        int count\
    \ = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n            for(int j\
    \ = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    temp.add(lst1.get(i));\n                    count++;\n\
    \                }\n            }\n            if(count > 0) {\n             \
    \   result.add(temp);\n                count = 0;\n                temp = new\
    \ ArrayList<String>();\n            }\n        }\n        if(count > 0) {\n  \
    \          result.add(temp);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx3m0e9ti.java:35: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n                result.add(temp);\n         \
    \                  ^\n/tmp/tmpx3m0e9ti.java:41: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n            result.add(temp);\n             \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.size() > lst2.size()) {\n\
    \                if (lst1.get(i).length() <= lst2.get(i).length()) {\n       \
    \             result.add(lst1.get(i));\n                }\n            } else\
    \ if (lst2.size() > lst1.size()) {\n                if (lst2.get(i).length() <=\
    \ lst1.get(i).length()) {\n                    result.add(lst2.get(i));\n    \
    \            }\n            } else {\n                if (lst1.get(i).length()\
    \ == lst2.get(i).length()) {\n                    result.add(lst1.get(i));\n \
    \               }\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkakde5ob.java:45)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n          \
    \      result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 2, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.totalMatch(tmpuzwghzzx.java:27)\n\tat Problem.main(tmpuzwghzzx.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max = 0;\n        for (String s : lst1) {\n            max = Math.max(max,\
    \ s.length());\n        }\n        for (String s : lst2) {\n            max =\
    \ Math.max(max, s.length());\n        }\n        for (String s : lst1) {\n   \
    \         int count = 0;\n            for (String s2 : lst2) {\n             \
    \   if (s.equals(s2)) {\n                    count++;\n                }\n   \
    \         }\n            if (count > max) {\n                result.add(s);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl2u2nzcw.java:47)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     if (lst1.get(i).length() > lst2.get(i).length()) {\n                   \
    \ result.add(lst1.get(i));\n                } else {\n                    result.add(lst2.get(i));\n\
    \                }\n            }\n        } else {\n            for (int i =\
    \ 0; i < len1; i++) {\n                if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                    result.add(lst1.get(i));\n                } else {\n\
    \                    result.add(lst2.get(i));\n                }\n           \
    \ }\n            for (int i = 0; i < len2; i++) {\n                if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                    result.add(lst2.get(i));\n  \
    \              } else {\n                    result.add(lst1.get(i));\n      \
    \          }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyly_hnmo.java:55)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else {\n                result.add(lst2.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprnswy8az.java:37)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n        } else {\n            for (int i = 0; i < len1;\
    \ i++) {\n                String s1 = lst1.get(i);\n                String s2\
    \ = lst2.get(i);\n                if (s1.length() < s2.length()) {\n         \
    \           result.add(s1);\n                } else {\n                    result.add(s2);\n\
    \                }\n            }\n            for (int i = 0; i < len2; i++)\
    \ {\n                String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n\
    \                if (s1.length() < s2.length()) {\n                    result.add(s2);\n\
    \                } else {\n                    result.add(s1);\n             \
    \   }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpb1q8sopx.java:48)\n\tat Problem.main(tmpb1q8sopx.java:62)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        \n        if(lst1.size() != lst2.size()) {\n            return result;\n\
    \        }\n        \n        for(int i = 0; i < lst1.size(); i++) {\n       \
    \     int count = 0;\n            for(int j = 0; j < lst2.size(); j++) {\n   \
    \             if(lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                 \
    \   count++;\n                }\n            }\n            if(count == lst2.size())\
    \ {\n                result.add(lst1.get(i));\n            }\n        }\n    \
    \    \n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ojv4a88.java:46)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length()\
    \ < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else {\n                result.add(lst2.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpdt7xc3fq.java:27)\n\tat Problem.main(tmpdt7xc3fq.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String str : lst1) {\n            if (lst2.contains(str))\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ lst2.size()) {\n            result.addAll(lst1);\n        } else {\n       \
    \     result.addAll(lst2);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6njisgh8.java:41)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        \n        int totalChars = 0;\n        \n        for(String str : lst1)\
    \ {\n            totalChars += str.length();\n        }\n        \n        for(String\
    \ str : lst2) {\n            totalChars += str.length();\n        }\n        \n\
    \        if(totalChars == lst1.size()) {\n            return lst1;\n        }\n\
    \        \n        if(totalChars == lst2.size()) {\n            return lst2;\n\
    \        }\n        \n        for(int i = 0; i < lst1.size(); i++) {\n       \
    \     String str = lst1.get(i);\n            \n            for(int j = 0; j <\
    \ lst2.size(); j++) {\n                String str2 = lst2.get(j);\n          \
    \      \n                if(str.equals(str2)) {\n                    result.add(str);\n\
    \                }\n            }\n        }\n        \n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw4p_h0nl.java:61)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacwswimi.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : lst1) {\n            int count = 0;\n            for(String\
    \ str2 : lst2) {\n                if(str.equals(str2)) {\n                   \
    \ count++;\n                }\n            }\n            if(count < lst2.size()){\n\
    \                result.add(str);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjuet9zu.java:40)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() != lst2.size()) {\n            return result;\n     \
    \   }\n        Set<String> set1 = new HashSet<String>(lst1);\n        Set<String>\
    \ set2 = new HashSet<String>(lst2);\n        Set<String> set3 = new HashSet<String>();\n\
    \        set1.removeAll(set2);\n        set2.removeAll(set1);\n        set3.addAll(set1);\n\
    \        set3.addAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(set2);\n        set3.removeAll(set1);\n        set3.removeAll(set2);\n\
    \        set3.removeAll(set1);\n        set3.removeAll(set2);\n        set3.removeAll(set1);\n\
    \        set3.removeAll(\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnvgaovll.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            return lst2;\n        }\n    \
    \    return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxlpu4fs.java:36)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() >= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            }\n            if (lst2.get(i).length()\
    \ >= lst1.get(i).length()) {\n                result.add(lst2.get(i));\n     \
    \       }\n        }\n        if (result.size() == 0) {\n            return lst1;\n\
    \        }\n        if (result.size() == 1) {\n            return result;\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw78g184l.java:44)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() > lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18wymni5.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n    \
    \        for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \     }\n        if(count == lst1.size()) {\n            return lst1;\n      \
    \  }\n        if(count == lst2.size()) {\n            return lst2;\n        }\n\
    \        if(lst1.size() > lst2.size()) {\n            for(int i = 0; i < lst1.size();\
    \ i++) {\n                for(int j = 0; j < lst2.size(); j++) {\n           \
    \         if(lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        if(count == lst1.size()) {\n            return lst1;\n        }\n\
    \        if(count == lst2.size()) {\n            return lst2;\n        }\n   \
    \     if(lst1.size() < lst2.size()) {\n            for(int i = 0; i < lst2.size();\
    \ i++) {\n                for(int j = 0; j < lst1.size(); j++) {\n           \
    \         if(lst2.get(i).compareTo(lst1.get(j)) < 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        if(count == lst1.size()) {\n            return lst2;\n        }\n\
    \        if(count == lst2.size()) {\n            return lst1;\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80z6hhbm.java:73)\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             int count = 0;\n                for (int j = 0; j < s1.length();\
    \ j++) {\n                    count += s1.charAt(j) == s2.charAt(j) ? 1 : 0;\n\
    \                }\n                if (count == len1) {\n                   \
    \ result.add(s1);\n                }\n            }\n            return result;\n\
    \        }\n        if (len1 > len2) {\n            for (int i = 0; i < len1;\
    \ i++) {\n                String s1 = lst1.get(i);\n                String s2\
    \ = lst2.get(i);\n                int count = 0;\n                for (int j =\
    \ 0; j < s2.length(); j++) {\n                    count += s1.charAt(j) == s2.charAt(j)\
    \ ? 1 : 0;\n                }\n                if (count == len2) {\n        \
    \            result.add(s1);\n                }\n            }\n            return\
    \ result;\n        }\n        if (len1 < len2) {\n            for (int i = 0;\
    \ i < len2; i++) {\n                String s1 = lst1.get(i);\n               \
    \ String s2 = lst2.get(i);\n                int count = 0;\n                for\
    \ (int j = 0; j < s1.length(); j++) {\n                    count += s1.charAt(j)\
    \ == s2.charAt(j) ? 1 : 0;\n                }\n                if (count == len2)\
    \ {\n                    result.add(s2);\n                }\n            }\n \
    \           return result;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 2\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.totalMatch(tmpn0d4jki4.java:33)\n\
    \tat Problem.main(tmpn0d4jki4.java:73)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                if (lst1.get(i).equals(lst2.get(i))) {\n    \
    \                result.add(lst1.get(i));\n                } else {\n        \
    \            result.add(lst2.get(i));\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zhnlaot.java:43)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).equals(lst2.get(j)))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if(count < lst2.size()) {\n                result.add(lst1.get(i));\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpst62h0q5.java:40)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() > lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18wymni5.java:37)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpof498u70.java:37)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String s : lst1) {\n            if (lst2.contains(s))\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ lst2.size()) {\n            return lst1;\n        }\n        for (String s :\
    \ lst2) {\n            if (lst1.contains(s)) {\n                count++;\n   \
    \         }\n        }\n        if (count == lst1.size()) {\n            return\
    \ lst2;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtbqixff.java:46)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        if(result.size() == lst1.size())\
    \ {\n            return result;\n        }\n        for(int i = 0; i < lst1.size();\
    \ i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n               \
    \ if(lst1.get(i).length() > lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig88j8xg.java:48)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik2ll5a5.java:38)\n"
  stdout: ''
  timestamp: 1659799701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() > s2.length())\
    \ {\n                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev598trh.java:39)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            ArrayList<String> temp = new ArrayList<String>();\n\
    \            for (int i = 0; i < len1; i++) {\n                for (int j = 0;\
    \ j < len2; j++) {\n                    if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                        temp.add(lst1.get(i));\n                   \
    \     break;\n                    }\n                }\n            }\n      \
    \      return temp;\n        }\n        if (len1 < len2) {\n            ArrayList<String>\
    \ temp = new ArrayList<String>();\n            for (int i = 0; i < len2; i++)\
    \ {\n                for (int j = 0; j < len1; j++) {\n                    if\
    \ (lst2.get(i).compareTo(lst1.get(j)) < 0) {\n                        temp.add(lst2.get(i));\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n            return temp;\n        }\n        return lst1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwipizlds.java:57)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() >= lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2ybn2ii.java:36)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() <= lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else {\n        \
    \        result.add(lst2.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpf0b40nmu.java:27)\n\tat Problem.main(tmpf0b40nmu.java:38)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.size();\n        int len2\
    \ = lst2.size();\n        if (len1 == len2) {\n            return lst1;\n    \
    \    }\n        if (len1 > len2) {\n            return totalMatch(lst2, lst1);\n\
    \        }\n        int i = 0;\n        int j = 0;\n        int k = 0;\n     \
    \   int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n \
    \       int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n\
    \        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n\
    \        int x = 0;\n        int y = 0;\n        int z = 0;\n        int a = 0;\n\
    \        int b = 0;\n        int c = 0;\n        int d = 0;\n        int e = 0;\n\
    \        int f = 0;\n        int g = 0;\n        int h = 0;\n        int i = 0;\n\
    \        int j = 0;\n        int k = 0;\n        int l = 0;\n        int m = 0;\n\
    \        int n = 0;\n        int o = 0;\n        int p = 0;\n        int q = 0;\n\
    \        int r = 0;\n        int s = 0;\n        int t = 0;\n        int u = 0;\n\
    \        int v = 0;\n        int w = 0;\n        int x = 0;\n        int y = 0;\n\
    \        int z = 0;\n        int a = 0;\n        int b = 0;\n        int c = 0;\n\
    \        int d = 0;\n        int e = 0;\n        int f = 0;\n        int g = 0;\n\
    \        int h = 0;\n        int i = 0;\n        int j = 0;\n        int k = 0;\n\
    \        int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n\
    \        int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n\
    \        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n\
    \        int x = 0;\n        int y = 0;\n        int z = 0;\n        int a = 0;\n\
    \        int b = 0;\n        int c = 0;\n        int d = 0;\n        int e = 0;\n\
    \        int f = 0;\n        int g = 0;\n        int h = 0;\n        int i = 0;\n\
    \        int j = 0;\n        int k = 0;\n        int l = 0;\n        int m = 0;\n\
    \        int n = 0;\n        int o = 0;\n        int p = 0;\n        int q = 0;\n\
    \        int r = 0;\n        int s = 0;\n        int t = 0;\n        int u = 0;\n\
    \        int v = 0;\n        int w = 0;\n        int x = 0;\n        int y = 0;\n\
    \        int z = 0;\n        int a = 0;\n        int b = 0;\n        int c = 0;\n\
    \        int d = 0;\n        int e = 0;\n        int f = 0;\n        int g = 0;\n\
    \        int h = 0;\n        int i = 0;\n        int j = 0;\n        int k = 0;\n\
    \        int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n\
    \        int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n\
    \        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n\
    \        int x = 0;\n        int y = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxs6bcji.java:58: error: variable i is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int i = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:59: error: variable j is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int j = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:60: error: variable k is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int k = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:61: error: variable l is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int l = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:62: error: variable m is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int m = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:63: error: variable n is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int n = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:64: error: variable o is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int o = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:65: error: variable p is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int p = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:66: error: variable q is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int q = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:67: error: variable r is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int r = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:68: error: variable s is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int s = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:69: error: variable t is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int t = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:70: error: variable u is already defined in method\
    \ totalMatch(ArrayList<String>,ArrayList<String>)\n        int u = 0;\n      \
    \      ^\n/tmp/tmpwxs6bcji.java:71: error: variable v is"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n\
    \            String s2 = lst2.get(i);\n            if (s1.length() == s2.length())\
    \ {\n                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmpmv68y8th.java:27)\n\tat Problem.main(tmpmv68y8th.java:40)\n"
  stdout: ''
  timestamp: 1659799704
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhe4632i.java:39)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j\
    \ < lst2.size(); j++) {\n                if(lst1.get(i).length() < lst2.get(j).length())\
    \ {\n                    result.add(lst1.get(i));\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6055tp9.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        lst1.stream().filter(x -> lst2.stream().noneMatch(y -> y.equals(x)))\n\
    \                .forEach(x -> result.add(x));\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfizv6sm8.java:31)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            String s1 = lst1.get(i);\n            String\
    \ s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n          \
    \      result.add(s1);\n            } else if (s2.length() < s1.length()) {\n\
    \                result.add(s2);\n            } else {\n                result.add(s1.substring(0,\
    \ Math.min(s1.length(), s2.length())));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp6dqffvvx.java:27)\n\tat Problem.main(tmp6dqffvvx.java:42)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                } else {\n    \
    \                result.add(lst2.get(i));\n                }\n            }\n\
    \        } else {\n            return lst1;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfehg02a8.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int count = 0;\n        for (String str : lst1) {\n            count\
    \ += str.length();\n        }\n        for (String str : lst2) {\n           \
    \ count += str.length();\n        }\n        if (count == lst1.size()) {\n   \
    \         return lst1;\n        }\n        if (count == lst2.size()) {\n     \
    \       return lst2;\n        }\n        int i = 0;\n        while (i < lst1.size()\
    \ && i < lst2.size()) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n                i++;\n        \
    \    } else if (lst2.get(i).length() > lst1.get(i).length()) {\n             \
    \   result.add(lst2.get(i));\n                i++;\n            } else {\n   \
    \             i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4e3pi6yt.java:54)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int max1 = lst1.size();\n        int max2 = lst2.size();\n        int\
    \ count = 0;\n        for (int i = 0; i < max1; i++) {\n            for (int j\
    \ = 0; j < max2; j++) {\n                if (lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \     }\n        if (max1 == max2) {\n            result.add(lst1.get(0));\n \
    \       }\n        if (max1 > max2) {\n            for (int i = 0; i < max1; i++)\
    \ {\n                for (int j = 0; j < max2; j++) {\n                    if\
    \ (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (max1 < max2) {\n            for (int i = 0; i < max2; i++) {\n            \
    \    for (int j = 0; j < max1; j++) {\n                    if (lst2.get(i).compareTo(lst1.get(j))\
    \ < 0) {\n                        count++;\n                    }\n          \
    \      }\n            }\n        }\n        if (max1 == max2) {\n            result.add(lst2.get(0));\n\
    \        }\n        if (max1 > max2) {\n            for (int i = 0; i < max1;\
    \ i++) {\n                for (int j = 0; j < max2; j++) {\n                 \
    \   if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (max1 < max2) {\n            for (int i = 0; i < max2; i++) {\n            \
    \    for (int j = 0; j < max1; j++) {\n                    if (lst2.get(i).compareTo(lst1.get(j))\
    \ < 0) {\n                        count++;\n                    }\n          \
    \      }\n            }\n        }\n        if (max1 == max2) {\n            result.add(lst1.get(0));\n\
    \        }\n        if (max1 > max2) {\n            for (int i = 0; i < max1;\
    \ i++) {\n                for (int j = 0; j < max2; j++) {\n                 \
    \   if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (max1 < max2) {\n            for (int i = 0; i < max2; i++) {\n            \
    \    for (int j = 0; j < max1; j++) {\n                    if (lst2.get(i).compareTo(lst1.get(j))\
    \ < 0) {\n                        count++;\n                    }\n          \
    \      }\n            }\n        }\n        if (max1 == max2) {\n            result.add(lst2.get(0));\n\
    \        }\n        if (max1 > max2) {\n            for (int i = 0; i < max1;\
    \ i++) {\n                for (int j = 0; j < max2; j++) {\n                 \
    \   if (lst1.get(i).compareTo(lst2.get(j)) < 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (max1 < max2) {\n            for (int i = 0; i < max2; i++) {\n            \
    \    for (int j = 0; j < max1; j++) {\n                    if (lst2.get(i).compareTo(lst1.get(j))\
    \ < 0) {\n                        count++;\n                    }\n          \
    \      }\n            }\n        }\n        if (max1 == max2) {\n            result.add(lst1.get(0));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxxgebqjy.java:123: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799705
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Integer.MIN_VALUE;\n        for (String str : lst1) {\n\
    \            maxLen = Math.max(maxLen, str.length());\n        }\n        for\
    \ (String str : lst2) {\n            maxLen = Math.max(maxLen, str.length());\n\
    \        }\n        int count = 0;\n        for (String str : lst1) {\n      \
    \      count += str.length();\n        }\n        for (String str : lst2) {\n\
    \            count += str.length();\n        }\n        if (count == maxLen) {\n\
    \            result.addAll(lst1);\n            return result;\n        }\n   \
    \     if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n   \
    \         return result;\n        }\n        if (lst2.size() > lst1.size()) {\n\
    \            result.addAll(lst2);\n            return result;\n        }\n   \
    \     int i = 0;\n        while (i < lst1.size() && i < lst2.size()) {\n     \
    \       String str1 = lst1.get(i);\n            String str2 = lst2.get(i);\n \
    \           if (str1.length() > str2.length()) {\n                result.add(str1);\n\
    \                i++;\n            } else if (str2.length() > str1.length()) {\n\
    \                result.add(str2);\n                i++;\n            } else {\n\
    \                if (str1.equals(str2)) {\n                    result.add(str1);\n\
    \                    i++;\n                } else {\n                    result.add(str1);\n\
    \                    result.add(str2);\n                    i++;\n           \
    \     }\n            }\n        }\n        if (lst1.size() > lst2.size()) {\n\
    \            result.addAll(lst1);\n            return result;\n        }\n   \
    \     if (lst2.size() > lst1.size()) {\n            result.addAll(lst2);\n   \
    \         return result;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo64ggeyu.java:84)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() < s2.length()) {\n\
    \                result.add(s1);\n            } else if (s2.length() < s1.length())\
    \ {\n                result.add(s2);\n            } else {\n                result.add(s1);\n\
    \                result.add(s2);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8miundk.java:42)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int len1 = lst1.size();\n        int len2 = lst2.size();\n        if\
    \ (len1 == len2) {\n            for (int i = 0; i < len1; i++) {\n           \
    \     String s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n   \
    \             if (s1.length() < s2.length()) {\n                    result.add(s1);\n\
    \                } else {\n                    result.add(s2);\n             \
    \   }\n            }\n            return result;\n        }\n        if (len1\
    \ > len2) {\n            for (int i = 0; i < len1; i++) {\n                String\
    \ s1 = lst1.get(i);\n                String s2 = lst2.get(i);\n              \
    \  if (s1.length() < s2.length()) {\n                    result.add(s1);\n   \
    \             } else {\n                    result.add(s2);\n                }\n\
    \            }\n            return result;\n        }\n        if (len1 < len2)\
    \ {\n            for (int i = 0; i < len2; i++) {\n                String s1 =\
    \ lst1.get(i);\n                String s2 = lst2.get(i);\n                if (s1.length()\
    \ < s2.length()) {\n                    result.add(s2);\n                } else\
    \ {\n                    result.add(s1);\n                }\n            }\n \
    \           return result;\n        }\n        return lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmps5untx85.java:53)\n\tat Problem.main(tmps5untx85.java:68)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        if (lst1.size() == lst2.size()) {\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                if (lst1.get(i).length() > lst2.get(i).length()) {\n\
    \                    result.add(lst1.get(i));\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpag9rlf.java:36)\n"
  stdout: ''
  timestamp: 1659799706
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).compareTo(lst2.get(j))\
    \ < 0) {\n                    count++;\n                }\n            }\n   \
    \         if(count == lst2.size()) {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw1lisxs.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = lst1.size() > lst2.size() ? lst1.size() : lst2.size();\n\
    \        for (int i = 0; i < maxLen; i++) {\n            if (lst1.get(i).length()\
    \ > lst2.get(i).length()) {\n                result.add(lst1.get(i));\n      \
    \      } else if (lst1.get(i).length() < lst2.get(i).length()) {\n           \
    \     result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgflbs6w.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLen = Math.max(lst1.size(), lst2.size());\n        for (int i\
    \ = 0; i < maxLen; i++) {\n            if (lst1.get(i).length() > lst2.get(i).length())\
    \ {\n                result.add(lst1.get(i));\n            } else if (lst2.get(i).length()\
    \ > lst1.get(i).length()) {\n                result.add(lst2.get(i));\n      \
    \      } else {\n                result.add(lst1.get(i));\n                result.add(lst2.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0ikfcgn.java:40)\n"
  stdout: ''
  timestamp: 1659799699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int maxLength = Math.max(lst1.size(), lst2.size());\n        for (int\
    \ i = 0; i < maxLength; i++) {\n            String s1 = lst1.get(i);\n       \
    \     String s2 = lst2.get(i);\n            if (s1.length() == s2.length()) {\n\
    \                result.add(s1);\n            } else {\n                result.add(s2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.totalMatch(tmp4kg6k9g6.java:27)\n\tat Problem.main(tmp4kg6k9g6.java:40)\n"
  stdout: ''
  timestamp: 1659799703
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList())))\n\
    \    // (new ArrayList<String>(Arrays.asList()))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < lst1.size(); i++) {\n            int count = 0;\n\
    \            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).equals(lst2.get(j)))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if(count < lst2.size()) {\n                result.add(lst1.get(i));\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpst62h0q5.java:40)\n"
  stdout: ''
  timestamp: 1659799706

language: java
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> numbers = IntStream.rangeClosed(0,\
    \ n).boxed().collect(Collectors.toList());\n        return IntStream.range(0,\
    \ numbers.size()).mapToObj(i -> numbers.get(i)).collect(Collectors.joining(\"\
    \ \"));\n    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2upvir_.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        List<Integer> numbers = IntStream.rangeClosed(0, n).boxed().collect(Collectors.toList());\n\
    \                                                         ^\n/tmp/tmpo2upvir_.java:16:\
    \ error: no suitable method found for collect(Collector<CharSequence,CAP#1,String>)\n\
    \        return IntStream.range(0, numbers.size()).mapToObj(i -> numbers.get(i)).collect(Collectors.joining(\"\
    \ \"));\n                                                                    \
    \           ^\n    method Stream.<R#1>collect(Supplier<R#1>,BiConsumer<R#1,? super\
    \ Integer>,BiConsumer<R#1,R#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ R#1\n        (actual and formal argument lists differ in length))\n    method\
    \ Stream.<R#2,A>collect(Collector<? super Integer,A,R#2>) is not applicable\n\
    \      (cannot infer type-variable(s) R#2,A\n        (argument mismatch; Collector<CharSequence,CAP#1,String>\
    \ cannot be converted to Collector<? super Integer,A,R#2>))\n  where R#1,T,R#2,A\
    \ are type-variables:\n    R#1 extends Object declared in method <R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super T>,BiConsumer<R#1,R#1>)\n    T extends Object declared in interface Stream\n\
    \    R#2 extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \    A extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> numbers = IntStream.rangeClosed(0,\
    \ n).boxed().collect(Collectors.toList());\n        return IntStream.rangeClosed(0,\
    \ n).mapToObj(i -> Integer.toString(i)).collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvjkzpo5q.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        List<Integer> numbers = IntStream.rangeClosed(0, n).boxed().collect(Collectors.toList());\n\
    \                                                         ^\n/tmp/tmpvjkzpo5q.java:16:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    return IntStream.rangeClosed(0, n).mapToObj(i -> Integer.toString(i)).collect(Collectors.joining(\"\
    \ \"));\n                                        ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659793595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> list = IntStream.rangeClosed(0,\
    \ n).boxed().collect(Collectors.toList());\n        return list.stream().map(Object::toString).collect(Collectors.joining(\"\
    \ \"));\n    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_8gddgdg.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        List<Integer> list = IntStream.rangeClosed(0, n).boxed().collect(Collectors.toList());\n\
    \                                                      ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659793596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppug5ajl.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjrw_b15.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjrw_b15.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j17gzzy.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaenrek0x.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6cf44cu.java:23)\n"
  stdout: ''

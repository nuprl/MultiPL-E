language: java
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz18cxl1k.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 2;\n\
    \        while (primeFactor * primeFactor <= n) {\n            while (n % primeFactor\
    \ == 0) {\n                largestPrimeFactor = primeFactor;\n               \
    \ n /= primeFactor;\n            }\n            primeFactor++;\n        }\n  \
    \      return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ol4egr1.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= n / 2) {\n            if (n % factor == 0) {\n          \
    \      largestPrimeFactor = factor;\n                break;\n            }\n \
    \           factor++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0c4ydud.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n            }\n\
    \            factor++;\n        }\n        return maxFactorPrime;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplom_o7g6.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime < largestPrimeFactor) {\n            while (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = currentPrime;\n              \
    \  n /= currentPrime;\n            }\n            currentPrime++;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzulc_eej.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n / 2) {\n            if (n % currentFactor == 0) {\n\
    \                maxFactor = currentFactor;\n                break;\n        \
    \    }\n            currentFactor++;\n        }\n        return maxFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnocsx5za.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n            }\n\
    \            factor++;\n        }\n        return maxFactorPrime;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplom_o7g6.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long largestPrimeFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactor = 2;\n        long largestPrimeFactorFactorFactorFactor\
    \ = 3;\n        long largestPrimeFactorFactorFactorFactorFactor = 4;\n       \
    \ long largestPrimeFactorFactorFactorFactorFactorFactor = 5;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = 6;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor =\
    \ 7;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor = 8;\n\
    \        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactor = 9;\n\
    \        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 10;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 11;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 12;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 13;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 14;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 15;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 16;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 17;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 18;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 19;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 20;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 21;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 22;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 23;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 24;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 25;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 26;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 27;\n        long largestPrimeFactorFactorFactorFactorFactor\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ihzsdvl.java:43: error: ';' expected\n        long largestPrimeFactorFactorFactorFactorFactor\n\
    \                                                       ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 2;\n\
    \        while (primeFactor <= largestPrimeFactor) {\n            if (n % primeFactor\
    \ == 0) {\n                largestPrimeFactor = primeFactor;\n            }\n\
    \            primeFactor++;\n        }\n        return largestPrimeFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7my7j6c.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 1;\n\
    \        while (primeFactor < n) {\n            while (n % primeFactor == 0) {\n\
    \                largestPrimeFactor = primeFactor;\n                n /= primeFactor;\n\
    \            }\n            primeFactor++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            while (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime <= largestPrimeFactor) {\n            if (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = currentPrime;\n            }\n\
    \            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpor0xu09p.java:26)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long currentPrime = 2;\n\
    \        while (currentPrime < n) {\n            while (n % currentPrime == 0)\
    \ {\n                largestPrimeFactor = currentPrime;\n                n /=\
    \ currentPrime;\n            }\n            currentPrime++;\n        }\n     \
    \   return largestPrimeFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9amc1law.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm2glv2w.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i < largestPrimeFactor) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n            }\n            i += 2;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rgs5a1s.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm2glv2w.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 1;\n\
    \        while (n > 1) {\n            while (n % primeFactor == 0) {\n       \
    \         largestPrimeFactor = primeFactor;\n                n /= primeFactor;\n\
    \            }\n            primeFactor++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 1;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3hn6e04.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            while (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= n) {\n            if (n % factor == 0) {\n              \
    \  largestPrimeFactor = factor;\n                break;\n            }\n     \
    \       factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l23jn6w.java:27)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            while (n % factor == 0)\
    \ {\n                largestPrimeFactor = factor;\n            }\n           \
    \ factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long currentPrimeFactor\
    \ = 1;\n        while (n > 1) {\n            while (n % currentPrimeFactor ==\
    \ 0) {\n                largestPrimeFactor = currentPrimeFactor;\n           \
    \     n /= currentPrimeFactor;\n            }\n            currentPrimeFactor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            if (n % factor == 0) {\n\
    \                largestPrimeFactor = factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2smmiuay.java:26)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= n / 2) {\n            if (n % factor == 0) {\n          \
    \      largestPrimeFactor = factor;\n                break;\n            }\n \
    \           factor++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0c4ydud.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplv62gcor.java:27)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                while (n % i == 0) {\n                    largestPrimeFactor\
    \ = i;\n                    n /= i;\n                }\n            }\n      \
    \      i++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5k5zhsj.java:30)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            if (n % factor == 0) {\n\
    \                largestPrimeFactor = factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2smmiuay.java:26)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime <= largestPrimeFactor) {\n            long currentFactor\
    \ = currentPrime;\n            while (currentPrime * currentPrime <= n) {\n  \
    \              currentPrime++;\n            }\n            if (currentPrime >\
    \ largestPrimeFactor) {\n                largestPrimeFactor = currentFactor;\n\
    \            }\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            while (n % factor == 0)\
    \ {\n                largestPrimeFactor = factor;\n                factor++;\n\
    \            }\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n               \
    \ maxFactor = n / factor;\n            }\n            factor++;\n        }\n \
    \       return maxFactorPrime;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl33jzau4.java:29)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 1;\n        while (largestPrimeFactor % currentPrimeFactor != 0) {\n     \
    \       currentPrimeFactor++;\n        }\n        while (currentPrimeFactor <=\
    \ largestPrimeFactor) {\n            largestPrimeFactor = largestPrimeFactor *\
    \ currentPrimeFactor;\n            currentPrimeFactor++;\n        }\n        return\
    \ largestPrimeFactor;\n    }\n    public static void main(String[] args) {\n \
    \   assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpefslamhk.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                long factorPrime = 1;\n                while\
    \ (factorPrime <= factor) {\n                    if (n % factorPrime == 0) {\n\
    \                        break;\n                    }\n                    factorPrime++;\n\
    \                }\n                if (factorPrime > maxFactorPrime) {\n    \
    \                maxFactorPrime = factorPrime;\n                    maxFactor\
    \ = factor;\n                }\n            }\n            factor++;\n       \
    \ }\n        return maxFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxihfatzj.java:37)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jmgve87.java:27)\n"
  stdout: ''
  timestamp: 1659805543
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 0;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsf8s0yh5.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            while (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                n /= i;\n            }\n            i++;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuht5mu88.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = n;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n            }\n\
    \            factor++;\n        }\n        return maxFactorPrime;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0o3d_tzc.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long largestPrimeFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactor = 1;\n        long largestPrimeFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactor = 1;\n       \
    \ long largestPrimeFactorFactorFactorFactorFactorFactor = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long \n    }\n    public static void main(String[] args) {\n \
    \   assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22y5p__1.java:46: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp22y5p__1.java:46: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659805541
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            if (n % factor == 0) {\n\
    \                largestPrimeFactor = factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2smmiuay.java:26)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 1;\n\
    \        while (primeFactor <= largestPrimeFactor) {\n            while (n % primeFactor\
    \ == 0) {\n                largestPrimeFactor = primeFactor;\n            }\n\
    \            primeFactor++;\n        }\n        return largestPrimeFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (largestPrimeFactor % currentPrime != 0) {\n            currentPrime++;\n\
    \        }\n        while (currentPrime <= n / 2) {\n            if (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = largestPrimeFactor * currentPrime;\n\
    \                n /= currentPrime;\n            }\n            currentPrime++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp867bg_1i.java:30)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime < n) {\n            if (n % currentPrime == 0) {\n\
    \                largestPrimeFactor = currentPrime;\n                break;\n\
    \            }\n            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqg7uo37g.java:27)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 2;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            while\
    \ (n % factor == 0) {\n                maxFactorPrime = factor;\n            \
    \    n /= factor;\n            }\n            factor++;\n        }\n        return\
    \ maxFactorPrime;\n    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 2;\n\
    \        while (primeFactor < n) {\n            if (n % primeFactor == 0) {\n\
    \                largestPrimeFactor = primeFactor;\n            }\n          \
    \  primeFactor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vx2tkaj.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax2yt4d2.java:27)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long maxFactorPrimePrime = 2;\n        long maxFactorPrimePrimePrime = 3;\n\
    \        long maxFactorPrimePrimePrimePrime = 4;\n        long maxFactorPrimePrimePrimePrimePrime\
    \ = 5;\n        long maxFactorPrimePrimePrimePrimePrime = 6;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 7;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 8;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 9;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 10;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 11;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 12;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 13;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 14;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 15;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 16;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 17;\n\
    \        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 18;\n      \
    \  long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 19;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrime = 20;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 21;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 22;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 23;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 24;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 25;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 26;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjez8osa.java:43: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 1;\n\
    \        while (primeFactor < n) {\n            while (n % primeFactor == 0) {\n\
    \                largestPrimeFactor = primeFactor;\n                n /= primeFactor;\n\
    \            }\n            primeFactor++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i++;\n        }\n      \
    \  return largestPrimeFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06sfmiww.java:26)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n) {\n            if (n % currentFactor == 0) {\n  \
    \              maxFactor = currentFactor;\n            }\n            currentFactor++;\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnp3uelo9.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 2;\n\
    \        while (primeFactor * primeFactor <= n) {\n            if (n % primeFactor\
    \ == 0) {\n                largestPrimeFactor = primeFactor;\n            }\n\
    \            primeFactor++;\n        }\n        return largestPrimeFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmx5hjhx4.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        long currentPrimeFactor = 1;\n        while (currentPrimeFactor < largestPrimeFactor)\
    \ {\n            while (n % currentPrime == 0) {\n                largestPrimeFactor\
    \ = currentPrime;\n                currentPrime++;\n            }\n          \
    \  currentPrimeFactor++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6wlttok.java:28)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n) {\n            if (n % currentFactor == 0) {\n  \
    \              maxFactor = currentFactor;\n            }\n            currentFactor++;\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnp3uelo9.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        for (long i = 2; i <= n\
    \ / 2; i++) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_6_u1kn.java:25)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor < n) {\n            if (n % factor == 0) {\n               \
    \ largestPrimeFactor = factor;\n                break;\n            }\n      \
    \      factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdaytrx4.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (largestPrimeFactor % currentPrime != 0) {\n            currentPrime++;\n\
    \        }\n        while (currentPrime <= n / 2) {\n            if (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = largestPrimeFactor * currentPrime;\n\
    \                n /= currentPrime;\n            }\n            currentPrime++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp867bg_1i.java:30)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long currentPrime = 2;\n\
    \        while (n > 1) {\n            if (n % currentPrime == 0) {\n         \
    \       largestPrimeFactor = currentPrime;\n            }\n            currentPrime++;\n\
    \            n /= currentPrime;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotgy7_kp.java:27)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 0;\n        long factor = 2;\n        while (factor\
    \ < n) {\n            if (n % factor == 0) {\n                maxFactor = factor;\n\
    \            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7d8irep.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i++;\n        }\n      \
    \  return largestPrimeFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06sfmiww.java:26)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n            }\n            i += 2;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnnv6pio.java:26)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long currentPrime = 2;\n\
    \        long currentPrimeFactor = 2;\n        long currentPrimeFactorFactor =\
    \ 2;\n        while (currentPrimeFactor <= n) {\n            if (n % currentPrimeFactor\
    \ == 0) {\n                largestPrimeFactor = currentPrimeFactor;\n        \
    \    }\n            currentPrimeFactor++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon2nvb9j.java:28)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long largestPrimeFactorOfN\
    \ = 1;\n        long currentPrimeFactorOfN = 1;\n        long currentPrimeFactorOfN2\
    \ = 1;\n        long currentPrimeFactorOfN3 = 1;\n        long currentPrimeFactorOfN4\
    \ = 1;\n        long currentPrimeFactorOfN5 = 1;\n        long currentPrimeFactorOfN6\
    \ = 1;\n        long currentPrimeFactorOfN7 = 1;\n        long currentPrimeFactorOfN8\
    \ = 1;\n        long currentPrimeFactorOfN9 = 1;\n        long currentPrimeFactorOfN10\
    \ = 1;\n        long currentPrimeFactorOfN11 = 1;\n        long currentPrimeFactorOfN12\
    \ = 1;\n        long currentPrimeFactorOfN13 = 1;\n        long currentPrimeFactorOfN14\
    \ = 1;\n        long currentPrimeFactorOfN15 = 1;\n        long currentPrimeFactorOfN16\
    \ = 1;\n        long currentPrimeFactorOfN17 = 1;\n        long currentPrimeFactorOfN18\
    \ = 1;\n        long currentPrimeFactorOfN19 = 1;\n        long currentPrimeFactorOfN20\
    \ = 1;\n        long currentPrimeFactorOfN21 = 1;\n        long currentPrimeFactorOfN22\
    \ = 1;\n        long currentPrimeFactorOfN23 = 1;\n        long currentPrimeFactorOfN24\
    \ = 1;\n        long currentPrimeFactorOfN25 = 1;\n        long currentPrimeFactorOfN26\
    \ = 1;\n        long currentPrimeFactorOfN27 = 1;\n        long currentPrimeFactorOfN28\
    \ = 1;\n        long currentPrimeFactorOfN29 = 1;\n        long currentPrimeFactorOfN30\
    \ = 1;\n        long currentPrimeFactorOfN31 = 1;\n        long currentPrimeFactorOfN32\
    \ = 1;\n        long currentPrimeFactorOfN33 = 1;\n        long currentPrimeFactorOfN34\
    \ = 1;\n        long currentPrimeFactorOfN35 = 1;\n        long currentPrimeFactorOfN36\
    \ = 1;\n        long currentPrimeFactorOfN37 = 1;\n        long currentPrimeFactorOfN38\
    \ = 1;\n        long currentPrimeFactorOfN39 = 1;\n        long currentPrimeFactorOfN40\
    \ = 1;\n        long currentPrimeFactorOfN41 = 1;\n        long currentPrimeFactorOfN42\
    \ = 1;\n        long currentPrimeFactorOfN43 = 1;\n        long currentPrimeFactorOfN44\
    \ = 1;\n        long currentPrimeFactorOfN\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ehkmhqe.java:61: error: ';' expected\n        long currentPrimeFactorOfN\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor < largestPrimeFactor) {\n            if (n % factor == 0) {\n\
    \                largestPrimeFactor = factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkkxb_0.java:26)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 2;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            while\
    \ (n % factor == 0) {\n                maxFactorPrime = factor;\n            \
    \    n /= factor;\n            }\n            factor++;\n        }\n        return\
    \ maxFactorPrime;\n    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i += 2;\n        }\n   \
    \     return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddr02jy8.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor /= i;\n    \
    \        ++i;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8n83ss41.java:24)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0qi_dp2.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n            }\n\
    \            factor++;\n        }\n        return maxFactorPrime;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplom_o7g6.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= n / 2) {\n            if (n % factor == 0) {\n          \
    \      largestPrimeFactor = factor;\n                break;\n            }\n \
    \           factor++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0c4ydud.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long i = 2;\n        while (i <=\
    \ n / 2) {\n            if (n % i == 0) {\n                maxFactor = i;\n  \
    \          }\n            i += 2;\n        }\n        return maxFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcdvpx5ft.java:26)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jmgve87.java:27)\n"
  stdout: ''
  timestamp: 1659805543
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime <= largestPrimeFactor) {\n            while (n %\
    \ currentPrime == 0) {\n                largestPrimeFactor = currentPrime;\n \
    \           }\n            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            while (n % factor == 0)\
    \ {\n                largestPrimeFactor = factor;\n            }\n           \
    \ factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor < n) {\n            if (n % factor == 0) {\n               \
    \ largestPrimeFactor = factor;\n                break;\n            }\n      \
    \      factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdaytrx4.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            while (n % factor == 0)\
    \ {\n                largestPrimeFactor = factor;\n            }\n           \
    \ factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n / 2) {\n            if (n % currentFactor == 0) {\n\
    \                maxFactor = currentFactor;\n                break;\n        \
    \    }\n            currentFactor++;\n        }\n        return maxFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnocsx5za.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh9acht8.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            while (n % factor == 0) {\n                n /=\
    \ factor;\n            }\n            if (n == 1) {\n                break;\n\
    \            }\n            maxFactor = factor;\n            factor++;\n     \
    \   }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodg1bnxw.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i < largestPrimeFactor) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n            }\n            i += 2;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rgs5a1s.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long largestPrimeFactorFactor\
    \ = 1;\n        long largestPrimeFactorFactorFactor = 2;\n        long largestPrimeFactorFactorFactorFactor\
    \ = 3;\n        long largestPrimeFactorFactorFactorFactorFactor = 4;\n       \
    \ long largestPrimeFactorFactorFactorFactorFactorFactor = 5;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = 6;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor =\
    \ 7;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactor = 8;\n\
    \        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactor = 9;\n\
    \        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 10;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 11;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 12;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 13;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 14;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 15;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 16;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 17;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 18;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 19;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 20;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 21;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 22;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 23;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 24;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 25;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 26;\n        long largestPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 27;\n        long largestPrimeFactorFactorFactorFactorFactor\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ihzsdvl.java:43: error: ';' expected\n        long largestPrimeFactorFactorFactorFactorFactor\n\
    \                                                       ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long primeFactor = 2;\n\
    \        while (primeFactor * primeFactor <= n) {\n            if (n % primeFactor\
    \ == 0) {\n                largestPrimeFactor = primeFactor;\n            }\n\
    \            primeFactor++;\n        }\n        return largestPrimeFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmx5hjhx4.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 1;\n        while (currentPrimeFactor <= largestPrimeFactor) {\n         \
    \   currentPrimeFactor = currentPrimeFactor * 2;\n            if (n % currentPrimeFactor\
    \ == 0) {\n                largestPrimeFactor = currentPrimeFactor;\n        \
    \    }\n        }\n        return largestPrimeFactor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd5_066g.java:26)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long maxFactorPrimePrime = 2;\n        long maxFactorPrimePrimePrime = 3;\n\
    \        long maxFactorPrimePrimePrimePrime = 4;\n        long maxFactorPrimePrimePrimePrimePrime\
    \ = 5;\n        long maxFactorPrimePrimePrimePrimePrime = 6;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 7;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 8;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 9;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 10;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 11;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 12;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 13;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 14;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 15;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 16;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 17;\n\
    \        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 18;\n      \
    \  long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 19;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrime = 20;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 21;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 22;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 23;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 24;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 25;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 26;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjez8osa.java:43: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jmgve87.java:27)\n"
  stdout: ''
  timestamp: 1659805543
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor /= i;\n    \
    \        i++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntwdl7_m.java:24)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jmgve87.java:27)\n"
  stdout: ''
  timestamp: 1659805543
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime < largestPrimeFactor) {\n            while (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = currentPrime;\n            }\n\
    \            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n                break;\n            }\n            factor++;\n    \
    \    }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppio0wjwm.java:27)\n"
  stdout: ''
  timestamp: 1659805541
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n            }\n            i += 2;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnnv6pio.java:26)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor < n) {\n            if (n % factor == 0) {\n               \
    \ largestPrimeFactor = factor;\n                break;\n            }\n      \
    \      factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdaytrx4.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4fg2jz.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm2glv2w.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 2;\n        long currentPrimeFactorIsPrime = 1;\n        long currentPrimeFactorIsNotPrime\
    \ = 1;\n        long currentPrimeFactorIsNotPrime2 = 1;\n        long currentPrimeFactorIsNotPrime3\
    \ = 1;\n        long currentPrimeFactorIsNotPrime4 = 1;\n        long currentPrimeFactorIsNotPrime5\
    \ = 1;\n        long currentPrimeFactorIsNotPrime6 = 1;\n        long currentPrimeFactorIsNotPrime7\
    \ = 1;\n        long currentPrimeFactorIsNotPrime8 = 1;\n        long currentPrimeFactorIsNotPrime9\
    \ = 1;\n        long currentPrimeFactorIsNotPrime10 = 1;\n        long currentPrimeFactorIsNotPrime11\
    \ = 1;\n        long currentPrimeFactorIsNotPrime12 = 1;\n        long currentPrimeFactorIsNotPrime13\
    \ = 1;\n        long currentPrimeFactorIsNotPrime14 = 1;\n        long currentPrimeFactorIsNotPrime15\
    \ = 1;\n        long currentPrimeFactorIsNotPrime16 = 1;\n        long currentPrimeFactorIsNotPrime17\
    \ = 1;\n        long currentPrimeFactorIsNotPrime18 = 1;\n        long currentPrimeFactorIsNotPrime19\
    \ = 1;\n        long currentPrimeFactorIsNotPrime20 = 1;\n        long currentPrimeFactorIsNotPrime21\
    \ = 1;\n        long currentPrimeFactorIsNotPrime22 = 1;\n        long currentPrimeFactorIsNotPrime23\
    \ = 1;\n        long currentPrimeFactorIsNotPrime24 = 1;\n        long currentPrimeFactorIsNotPrime25\
    \ = 1;\n        long currentPrimeFactorIsNotPrime26 = 1;\n        long currentPrimeFactorIsNotPrime27\
    \ = 1;\n        long currentPrimeFactorIsNotPrime28 = 1;\n        long currentPrimeFactorIsNotPrime29\
    \ = 1;\n        long currentPrimeFactorIsNotPrime30 = 1;\n        long currentPrimeFactorIsNotPrime31\
    \ = 1;\n        long currentPrimeFactorIsNotPrime32 = 1;\n        long currentPrimeFactorIsNotPrime33\
    \ = 1;\n        long currentPrimeFactorIsNotPrime34 = 1;\n        long currentPrimeFactorIsNotPrime35\
    \ = 1;\n        long currentPrimeFactorIsNotPrime36 = 1;\n        long currentPrimeFactorIsNotPrime37\
    \ = 1;\n        long currentPri\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsy2xw9vz.java:55: error: ';' expected\n        long currentPri\n\
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n / 2) {\n            if (n % currentFactor == 0) {\n\
    \                maxFactor = currentFactor;\n            }\n            currentFactor++;\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprssy4gkt.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 1;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3hoeeki.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long maxFactorPrimePrime = 2;\n        long maxFactorPrimePrimePrime = 3;\n\
    \        long maxFactorPrimePrimePrimePrime = 4;\n        long maxFactorPrimePrimePrimePrimePrime\
    \ = 5;\n        long maxFactorPrimePrimePrimePrimePrime = 6;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 7;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 8;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 9;\n        long maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 10;\n        long maxFactorPrimePrimePrimePrimePrimePrime = 11;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrime = 12;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 13;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 14;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 15;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 16;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 17;\n\
    \        long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 18;\n      \
    \  long maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 19;\n        long\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrime = 20;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 21;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 22;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 23;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 24;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime = 25;\n   \
    \     long maxFactorPrimePrimePrimePrimePrimePrimePrime = 26;\n        long maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjez8osa.java:43: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long currentPrime = 1;\n\
    \        long currentPrimeFactor = 1;\n        long currentPrimeFactorFactor =\
    \ 1;\n        long currentPrimeFactorFactorFactor = 1;\n        long currentPrimeFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactor = 1;\n       \
    \ long currentPrimeFactorFactorFactorFactorFactorFactor = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactor\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnwqhw53.java:45: error: ';' expected\n        long currentPrimeFactor\n\
    \                               ^\n1 error\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i++;\n        }\n      \
    \  return largestPrimeFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06sfmiww.java:26)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 1;\n        while (currentPrimeFactor <= largestPrimeFactor) {\n         \
    \   boolean isPrime = true;\n            for (int i = 2; i <= largestPrimeFactor;\
    \ i++) {\n                if (n % i == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (isPrime) {\n                largestPrimeFactor = currentPrimeFactor;\n    \
    \        }\n            currentPrimeFactor++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp823rvfvz.java:33)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long maxFactor = n;\n  \
    \      long currentFactor = 2;\n        while (currentFactor <= maxFactor) {\n\
    \            if (n % currentFactor == 0) {\n                largestPrimeFactor\
    \ = currentFactor;\n                break;\n            }\n            currentFactor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoh6xoqpo.java:28)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                n = n / i;\n            }\n            i++;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1evykw5f.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime < largestPrimeFactor) {\n            while (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = currentPrime;\n              \
    \  n /= currentPrime;\n            }\n            currentPrime++;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzulc_eej.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor <= largestPrimeFactor) {\n            while (n % factor == 0)\
    \ {\n                largestPrimeFactor = factor;\n            }\n           \
    \ factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long factor = 2;\n     \
    \   while (factor < largestPrimeFactor) {\n            if (n % factor == 0) {\n\
    \                largestPrimeFactor = factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkkxb_0.java:26)\n"
  stdout: ''
  timestamp: 1659805540
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long currentPrime = 2;\n\
    \        while (currentPrime <= n / 2) {\n            if (n % currentPrime ==\
    \ 0) {\n                largestPrimeFactor = currentPrime;\n                break;\n\
    \            }\n            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfxuww_g4.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long i = 2;\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckjhq1rb.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ < maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku92dnx_.java:27)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long currentFactor = 2;\n       \
    \ while (currentFactor <= n / 2) {\n            if (n % currentFactor == 0) {\n\
    \                maxFactor = currentFactor;\n                break;\n        \
    \    }\n            currentFactor++;\n        }\n        return maxFactor;\n \
    \   }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnocsx5za.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            while (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        for (long i = 2; i <= n\
    \ / 2; i++) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_6_u1kn.java:25)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i += 2;\n        }\n\
    \        return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm2glv2w.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 0;\n        long factor = 2;\n     \
    \   while (factor <= n) {\n            if (n % factor == 0) {\n              \
    \  largestPrimeFactor = factor;\n                break;\n            }\n     \
    \       factor++;\n        }\n        return largestPrimeFactor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpszld1p0t.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long currentPrime = 2;\n\
    \        long currentPrimeFactor = 1;\n        while (n > 1) {\n            while\
    \ (n % currentPrime == 0) {\n                currentPrimeFactor++;\n         \
    \   }\n            if (currentPrimeFactor > largestPrimeFactor) {\n          \
    \      largestPrimeFactor = currentPrimeFactor;\n            }\n            currentPrime++;\n\
    \            n /= currentPrime;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoer_18la.java:31)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = 1;\n        long factor = 2;\n        while (factor\
    \ <= n / 2) {\n            if (n % factor == 0) {\n                maxFactor =\
    \ factor;\n                break;\n            }\n            factor++;\n    \
    \    }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppio0wjwm.java:27)\n"
  stdout: ''
  timestamp: 1659805541
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i < n) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return largestPrimeFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyr82b9pj.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            } else {\n                factor++;\n            }\n\
    \        }\n        return maxFactor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 1;\n        long currentPrimeFactorFactor = 2;\n        while (currentPrimeFactor\
    \ <= largestPrimeFactor) {\n            while (n % currentPrimeFactor == 0) {\n\
    \                largestPrimeFactor = currentPrimeFactor;\n            }\n   \
    \         currentPrimeFactorFactor++;\n            currentPrimeFactor = currentPrimeFactorFactor\
    \ * currentPrimeFactor;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long maxFactorPrime = 1;\n      \
    \  long factor = 2;\n        while (factor <= maxFactor) {\n            if (n\
    \ % factor == 0) {\n                maxFactorPrime = factor;\n            }\n\
    \            factor++;\n        }\n        return maxFactorPrime;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplom_o7g6.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (largestPrimeFactor % i == 0) {\n            largestPrimeFactor = largestPrimeFactor\
    \ / i;\n            i++;\n        }\n        return largestPrimeFactor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh73qxht.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i < largestPrimeFactor) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n            }\n            i += 2;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rgs5a1s.java:26)\n"
  stdout: ''
  timestamp: 1659805575
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            if (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6efcu9q.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long i = 2;\n        while\
    \ (i <= largestPrimeFactor) {\n            if (n % i == 0) {\n               \
    \ largestPrimeFactor = i;\n            }\n            i++;\n        }\n      \
    \  return largestPrimeFactor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06sfmiww.java:26)\n"
  stdout: ''
  timestamp: 1659805542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = 1;\n        long currentPrime = 2;\n\
    \        while (currentPrime < n) {\n            if (n % currentPrime == 0) {\n\
    \                largestPrimeFactor = currentPrime;\n                break;\n\
    \            }\n            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3198nyxy.java:27)\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrime = 2;\n\
    \        while (currentPrime < largestPrimeFactor) {\n            while (n % currentPrime\
    \ == 0) {\n                largestPrimeFactor = currentPrime;\n            }\n\
    \            currentPrime++;\n        }\n        return largestPrimeFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long currentPrimeFactor\
    \ = 1;\n        long currentPrimeFactorFactor = 1;\n        long currentPrimeFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactor = 1;\n        long currentPrimeFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactor = 1;\n \
    \       long currentPrimeFactorFactorFactorFactorFactorFactorFactor = 1;\n   \
    \     long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactor = 1;\n\
    \        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentPrime\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4i9kcomy.java:44: error: ';' expected\n        long currentPrime\n\
    \                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659805576
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long maxFactor = n;\n        long factor = 2;\n        while (factor\
    \ <= maxFactor) {\n            while (n % factor == 0) {\n                maxFactor\
    \ = factor;\n            }\n            factor++;\n        }\n        return maxFactor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n   \
    \ // >>> largestPrimeFactor((2048l))\n    // (2l)\n    public static long largestPrimeFactor(long\
    \ n) {\n        long largestPrimeFactor = n;\n        long maxFactor = n;\n  \
    \      long factor = 2;\n        while (factor <= maxFactor) {\n            if\
    \ (n % factor == 0) {\n                largestPrimeFactor = factor;\n        \
    \        maxFactor = factor * factor;\n            }\n            factor++;\n\
    \        }\n        return largestPrimeFactor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh0b_tfr.java:28)\n"
  stdout: ''
  timestamp: 1659805540

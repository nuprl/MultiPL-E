name: HumanEval_120_maximum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array arr of integers and a positive integer k,\
  \ return a sorted list \n    // of length k with the maximum k numbers in arr.\n\
  \    // Example 1:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)-4l, (long)5l))), (3l))\n    // (new ArrayList<Long>(Arrays.asList((long)-4l,\
  \ (long)-3l, (long)5l)))\n    // Example 2:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)-4l, (long)4l))), (2l))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)4l)))\n    // Example 3:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)2l, (long)1l, (long)2l, (long)-1l, (long)-2l, (long)1l))), (1l))\n    //\
  \ (new ArrayList<Long>(Arrays.asList((long)2l)))\n    // Note:\n    // 1. The length\
  \ of the array will be in the range of [1, 1000].\n    // 2. The elements in the\
  \ array will be in the range of [-1000, 1000].\n    // 3. 0 <= k <= len(arr)\n \
  \   public static ArrayList<Long> maximum(ArrayList<Long> arr, long k) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-4l, (long)5l))), (3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-4l, (long)-3l, (long)5l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)-4l, (long)4l))), (2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)2l, (long)1l, (long)2l, (long)-1l,\
  \ (long)-2l, (long)1l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)2l)))));\n\
  \    assert(maximum((new ArrayList<Long>(Arrays.asList((long)123l, (long)-123l,\
  \ (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (3l)).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)20l, (long)123l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-123l,\
  \ (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (4l)).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)20l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)15l, (long)0l, (long)3l, (long)-13l, (long)-8l, (long)0l))), (7l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-13l, (long)-8l, (long)0l, (long)0l, (long)3l,\
  \ (long)5l, (long)15l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)0l, (long)2l, (long)5l, (long)3l, (long)-10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)5l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)5l, (long)-7l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)5l)))));\n\
  \    assert(maximum((new ArrayList<Long>(Arrays.asList((long)4l, (long)-4l))), (2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-4l, (long)4l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-10l, (long)10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)-10l,\
  \ (long)10l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)-23l, (long)243l, (long)-400l, (long)0l))), (0l)).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMax = max;\n        long currentMaxIndex = maxIndex;\n\
    \        long currentMaxValue = max;\n        long currentMaxValueIndex = maxIndex;\n\
    \        long currentMaxValueValue = max;\n        long currentMaxValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex - k\
    \ >= 0) {\n            max = arr.get(maxIndex - k);\n        }\n        result.add(max);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long currentMax = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > currentMax) {\n                currentMax\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     long currentMaxIndex = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > currentMax) {\n                currentMax\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (currentMaxIndex - maxIndex > k) {\n            k = currentMaxIndex -\
    \ maxIndex;\n        }\n        long maxIndex2 = maxIndex - k;\n        long maxIndex3\
    \ = maxIndex2 - k;\n        long maxIndex4 = maxIndex3 - k;\n        long maxIndex5\
    \ = maxIndex4 - k;\n        long maxIndex6 = maxIndex5 - k;\n        long maxIndex7\
    \ = maxIndex6 - k;\n        long maxIndex8 = maxIndex7 - k;\n        long maxIndex9\
    \ = maxIndex8 - k;\n        long maxIndex10 = maxIndex9 - k;\n        long maxIndex11\
    \ = maxIndex10 - k;\n        long maxIndex12 = maxIndex11 - k;\n        long maxIndex13\
    \ = maxIndex12 - k;\n        long maxIndex14 = maxIndex13 - k;\n        long maxIndex15\
    \ = maxIndex14 - k;\n        long maxIndex16 = maxIndex15 - k;\n        long maxIndex17\
    \ = maxIndex16 - k;\n        long maxIndex18 = maxIndex17 - k;\n        long maxIndex19\
    \ = maxIndex18 - k;\n        long maxIndex20 = maxIndex19 - k;\n        long maxIndex21\
    \ = maxIndex20 - k;\n        long maxIndex22 = maxIndex21 - k;\n        long maxIndex23\
    \ = maxIndex22 - k;\n        long maxIndex24 = maxIndex23 - k;\n        long maxIndex25\
    \ = maxIndex24 - k;\n        long maxIndex26 = maxIndex25 - k;\n        long maxIndex27\
    \ = maxIndex26 - k;\n        long maxIndex28 = maxIndex27 - k;\n        long maxIndex29\
    \ = maxIndex28 - k;\n        long maxIndex30 = maxIndex29 - k;\n        long maxIndex31\
    \ = maxIndex30 - k;\n        long maxIndex32 = maxIndex31 - k;\n        long maxIndex33\
    \ = maxIndex32 - k;\n        long maxIndex34 = ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > max) {\n                max = arr.get(i);\n       \
    \         maxIndex = i;\n            }\n        }\n        if (maxIndex < k) {\n\
    \            k = maxIndex;\n        }\n        ArrayList<Long> subArr = new ArrayList<>();\n\
    \        for (int i = 0; i < k; i++) {\n            subArr.add(arr.get(i));\n\
    \        }\n        result.addAll(subArr);\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n       \
    \ long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n\
    \            min = Math.min(min, arr.get(i));\n            maxIndex = i;\n   \
    \         minIndex = i;\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) == max) {\n                result.add(max);\n \
    \               maxIndex = i;\n            }\n            if(arr.get(i) == min)\
    \ {\n                result.add(min);\n                minIndex = i;\n       \
    \     }\n        }\n        if(maxIndex - minIndex > k) {\n            for(int\
    \ i = maxIndex; i < minIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n        long maxIndex\
    \ = 0;\n        for (long i : arr) {\n            if (max < i) {\n           \
    \     max = i;\n                maxIndex = 0;\n            } else if (max > i)\
    \ {\n                maxIndex++;\n            }\n        }\n        if (maxIndex\
    \ < k) {\n            while (maxIndex < k) {\n                result.add(max);\n\
    \                maxIndex++;\n            }\n        } else {\n            while\
    \ (maxIndex > k) {\n                result.add(max);\n                maxIndex--;\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                max = i;\n         \
    \   }\n        }\n        long maxIndex = arr.indexOf(max);\n        if (maxIndex\
    \ < k) {\n            k = maxIndex;\n        }\n        ArrayList<Long> subArr\
    \ = new ArrayList<>();\n        for (long i = 0; i < k; i++) {\n            subArr.add(arr.get(i));\n\
    \        }\n        Collections.sort(subArr);\n        result.addAll(subArr);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        result.add(max);\n        for(int i = maxIndex; i\
    \ < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     result.add(max);\n        for(int i = maxIndex; i < arr.size(); i++) {\n\
    \            if(arr.get(i) > max) {\n                max = arr.get(i);\n     \
    \           maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for(int i = maxIndex; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        result.add(max);\n        for(int i = maxIndex;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n               \
    \ max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n\
    \        result.add(max);\n        for(int i = maxIndex; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for(int i = maxIndex; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        result.add(max);\n        for(int i = maxIndex;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n               \
    \ max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n\
    \        result.add(max);\n        for(int i = maxIndex; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for(int i = maxIndex; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        result.add(max);\n        for(int i = maxIndex;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n               \
    \ max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n\
    \        result.add(max);\n        for(int i = maxIndex; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for(int i = maxIndex; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        long maxIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n        \
    \        max = arr.get(i);\n                maxIndex = i;\n            }\n   \
    \     }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == max) {\n                result.add(arr.get(maxIndex));\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        long mid = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxCount = 0;\n        long minCount = 0;\n        long maxCount2\
    \ = 0;\n        long minCount2 = 0;\n        long maxCount3 = 0;\n        long\
    \ minCount3 = 0;\n        long maxCount4 = 0;\n        long minCount4 = 0;\n \
    \       long maxCount5 = 0;\n        long minCount5 = 0;\n        long maxCount6\
    \ = 0;\n        long minCount6 = 0;\n        long maxCount7 = 0;\n        long\
    \ minCount7 = 0;\n        long maxCount8 = 0;\n        long minCount8 = 0;\n \
    \       long maxCount9 = 0;\n        long minCount9 = 0;\n        long maxCount10\
    \ = 0;\n        long minCount10 = 0;\n        long maxCount11 = 0;\n        long\
    \ minCount11 = 0;\n        long maxCount12 = 0;\n        long minCount12 = 0;\n\
    \        long maxCount13 = 0;\n        long minCount13 = 0;\n        long maxCount14\
    \ = 0;\n        long minCount14 = 0;\n        long maxCount15 = 0;\n        long\
    \ minCount15 = 0;\n        long maxCount16 = 0;\n        long minCount16 = 0;\n\
    \        long maxCount17 = 0;\n        long minCount17 = 0;\n        long maxCount18\
    \ = 0;\n        long minCount18 = 0;\n        long maxCount19 = 0;\n        long\
    \ minCount19 = 0;\n        long maxCount20 = 0;\n        long minCount20 = 0;\n\
    \        long maxCount21 = 0;\n        long minCount21 = 0;\n        long maxCount22\
    \ = 0;\n        long minCount22 = 0;\n        long maxCount23 = 0;\n        long\
    \ minCount23 = 0;\n        long maxCount24 = 0;\n        long minCount24 = 0;\n\
    \        long maxCount25 = 0;\n        long minCount25 = 0;\n        long maxCount26\
    \ = 0;\n        long minCount26 = 0;\n        long maxCount27 = 0;\n        long\
    \ minCount27 = 0;\n        long maxCount28 = 0;\n        long minCount28 = 0;\n\
    \        long maxCount29 = 0;\n        long minCount29 = 0;\n        long maxCount30\
    \ = 0;\n        long minCount30 = 0;\n        long maxCount31 = 0;\n        long\
    \ minCount31 = 0;\n        long maxCount32 = 0;\n        long minCount32 = 0;\n\
    \        long maxCount33 = 0;\n        long minCount33 = 0;\n        long maxCount34\
    \ = 0;\n        long minCount34 = 0;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        if (max < k) {\n            max = k;\n        }\n        long\
    \ start = 0;\n        long end = arr.size() - 1;\n        while (start <= end)\
    \ {\n            long mid = (start + end) / 2;\n            if (arr[mid] >= max)\
    \ {\n                end = mid - 1;\n            } else {\n                start\
    \ = mid + 1;\n            }\n        }\n        for (long i = start; i <= end;\
    \ i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long max = 0;\n\
    \        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n          \
    \  if (i < min) {\n                min = i;\n            }\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        long mid\
    \ = max - (max - min) / 2;\n        long mid2 = mid / 2;\n        long mid3 =\
    \ mid2 / 2;\n        long mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n  \
    \      long mid6 = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long mid8\
    \ = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n\
    \        long mid11 = mid10 / 2;\n        long mid12 = mid11 / 2;\n        long\
    \ mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n        long mid15 = mid14\
    \ / 2;\n        long mid16 = mid15 / 2;\n        long mid17 = mid16 / 2;\n   \
    \     long mid18 = mid17 / 2;\n        long mid19 = mid18 / 2;\n        long mid20\
    \ = mid19 / 2;\n        long mid21 = mid20 / 2;\n        long mid22 = mid21 /\
    \ 2;\n        long mid23 = mid22 / 2;\n        long mid24 = mid23 / 2;\n     \
    \   long mid25 = mid24 / 2;\n        long mid26 = mid25 / 2;\n        long mid27\
    \ = mid26 / 2;\n        long mid28 = mid27 / 2;\n        long mid29 = mid28 /\
    \ 2;\n        long mid30 = mid29 / 2;\n        long mid31 = mid30 / 2;\n     \
    \   long mid32 = mid31 / 2;\n        long mid33 = mid32 / 2;\n        long mid34\
    \ = mid33 / 2;\n        long mid35 = mid34 / 2;\n        long mid36 = mid35 /\
    \ 2;\n        long mid37 = mid36 / 2;\n        long mid38 = mid37 / 2;\n     \
    \   long mid39 = mid38 / 2;\n        long mid40 = mid39 / 2;\n        long mid41\
    \ = mid40 / 2;\n        long mid42 = mid41 / 2;\n        long mid43 = mid42 /\
    \ 2;\n        long mid44 = mid43 / 2;\n        long mid45 = mid44 / 2;\n     \
    \   long mid46 = mid45 / 2;\n        long mid47 = mid46", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n        long maxIndex2\
    \ = 0;\n        long maxIndex3 = 0;\n        long maxIndex4 = 0;\n        long\
    \ maxIndex5 = 0;\n        long maxIndex6 = 0;\n        long maxIndex7 = 0;\n \
    \       long maxIndex8 = 0;\n        long maxIndex9 = 0;\n        long maxIndex10\
    \ = 0;\n        long maxIndex11 = 0;\n        long maxIndex12 = 0;\n        long\
    \ maxIndex13 = 0;\n        long maxIndex14 = 0;\n        long maxIndex15 = 0;\n\
    \        long maxIndex16 = 0;\n        long maxIndex17 = 0;\n        long maxIndex18\
    \ = 0;\n        long maxIndex19 = 0;\n        long maxIndex20 = 0;\n        long\
    \ maxIndex21 = 0;\n        long maxIndex22 = 0;\n        long maxIndex23 = 0;\n\
    \        long maxIndex24 = 0;\n        long maxIndex25 = 0;\n        long maxIndex26\
    \ = 0;\n        long maxIndex27 = 0;\n        long maxIndex28 = 0;\n        long\
    \ maxIndex29 = 0;\n        long maxIndex30 = 0;\n        long maxIndex31 = 0;\n\
    \        long maxIndex32 = 0;\n        long maxIndex33 = 0;\n        long maxIndex34\
    \ = 0;\n        long maxIndex35 = 0;\n        long maxIndex36 = 0;\n        long\
    \ maxIndex37 = 0;\n        long maxIndex38 = 0;\n        long maxIndex39 = 0;\n\
    \        long maxIndex40 = 0;\n        long maxIndex41 = 0;\n        long maxIndex42\
    \ = 0;\n        long maxIndex43 = 0;\n        long maxIndex44 = 0;\n        long\
    \ maxIndex45 = 0;\n        long maxIndex46 = 0;\n        long maxIndex47 = 0;\n\
    \        long maxIndex48 = 0;\n        long maxIndex49 = 0;\n        long maxIndex50\
    \ = 0;\n        long maxIndex51 = 0;\n        long maxIndex52 = 0;\n        long\
    \ maxIndex53 = 0;\n        long maxIndex54 = 0;\n        long maxIndex55 = 0;\n\
    \        long maxIndex56 = 0;\n        long maxIndex57 = 0;\n        long maxIndex58\
    \ = 0;\n        long maxIndex59 = 0;\n        long maxIndex60 = 0;\n        long\
    \ maxIndex61 = 0;\n        long maxIndex62 = 0;\n        long maxIndex63 = 0;\n\
    \        long maxIndex64 = 0;\n        long maxIndex65 = 0;\n        long maxIndex66\
    \ = 0;\n        long maxIndex67 = 0;\n        long maxIndex68 = 0;\n        long\
    \ maxIndex69 = 0;\n        long maxIndex70 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n\
    \        long maxIndex = 0;\n        long minIndex = 0;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n     \
    \       min = Math.min(min, arr.get(i));\n            maxIndex = i;\n        \
    \    minIndex = i;\n        }\n        for(int i = arr.size() - 1; i >= 0; i--)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n            if(arr.get(i) < min)\
    \ {\n                min = arr.get(i);\n                minIndex = i;\n      \
    \      }\n        }\n        if(maxIndex - minIndex < k) {\n            k = maxIndex\
    \ - minIndex;\n        }\n        for(int i = minIndex; i <= maxIndex; i++) {\n\
    \            result.add(arr.get(i));\n        }\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMaxValue = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = ", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == max)\
    \ {\n                result.add(arr.get(maxIndex));\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long maxValue = arr.get(0);\n        long maxIndex = -1;\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if(value > maxValue) {\n                maxValue = value;\n           \
    \     maxIndex = i;\n            }\n        }\n        if(maxIndex - k >= 0) {\n\
    \            for(int i = maxIndex - k; i < maxIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentValue =\
    \ arr.get(0);\n        long currentIndex = arr.size() - 1;\n        while (currentIndex\
    \ >= 0 && currentValue > maxValue) {\n            currentIndex--;\n          \
    \  currentValue = arr.get(currentIndex);\n        }\n        while (currentIndex\
    \ >= 0 && currentIndex < arr.size() && currentValue > maxValue) {\n          \
    \  currentIndex++;\n            currentValue = arr.get(currentIndex);\n      \
    \  }\n        while (currentIndex < arr.size() && currentValue > maxValue) {\n\
    \            result.add(arr.get(currentIndex));\n            currentIndex++;\n\
    \            currentValue = arr.get(currentIndex);\n        }\n        if (currentIndex\
    \ >= arr.size()) {\n            result.add(arr.get(currentIndex));\n        }\n\
    \        if (currentIndex < arr.size() && currentValue > maxValue) {\n       \
    \     result.add(arr.get(currentIndex));\n        }\n        if (currentIndex\
    \ < arr.size() && currentIndex >= 0) {\n            while (currentIndex < arr.size()\
    \ && currentValue > maxValue) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex++;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n        }\n        if (currentIndex >= arr.size()) {\n       \
    \     result.add(arr.get(currentIndex));\n        }\n        if (currentIndex\
    \ < arr.size() && currentIndex >= 0) {\n            while (currentIndex < arr.size()\
    \ && currentIndex >= 0) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n        }\n        if (currentIndex >= arr.size()) {\n       \
    \     result.add(arr.get(currentIndex));\n        }\n        if (currentIndex\
    \ < arr.size() && currentIndex >= 0) {\n            while (currentIndex < arr.size()\
    \ && currentIndex >= 0) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n        }\n        if (currentIndex >= arr.size()) {\n       \
    \     result.add(arr.get(currentIndex));\n        }\n        if (currentIndex\
    \ < arr.size() && currentIndex >= 0) {\n            while (currentIndex < arr.size()\
    \ && currentIndex >= 0) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n        }\n        if (currentIndex >= arr.size()) {\n       \
    \     result.add(arr.get(currentIndex));\n        }\n        if (currentIndex\
    \ < arr.size() && currentIndex >= 0) {\n            while (currentIndex < arr.size()\
    \ && currentIndex >= 0) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }", "        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long i\
    \ : arr) {\n            if (max < i) {\n                max = i;\n           \
    \ }\n            if (min > i) {\n                min = i;\n            }\n   \
    \     }\n        if (max > min) {\n            long mid = (max + min) / 2;\n \
    \           for (long i : arr) {\n                if (i > mid) {\n           \
    \         result.add(i);\n                }\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        for (long i : arr) {\n            sum += i;\n     \
    \       if (sum > max) {\n                max = sum;\n            }\n        \
    \    if (sum < min) {\n                min = sum;\n            }\n           \
    \ if (count < k) {\n                result.add(i);\n                count++;\n\
    \            }\n        }\n        if (count < k) {\n            while (count\
    \ < k) {\n                result.add(max);\n                count++;\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(k);\n\
    \        long maxIndex = k;\n        long maxIndexValue = arr.get(k);\n      \
    \  for(int i = 0; i <= arr.size(); i++) {\n            if(arr.get(i) == maxValue)\
    \ {\n                maxIndex = i;\n                maxIndexValue = arr.get(i);\n\
    \            }\n        }\n        while(maxIndexValue != 0) {\n            result.add(maxValue);\n\
    \            maxValue = maxIndexValue;\n            maxIndex = maxIndex - 1;\n\
    \            maxIndexValue = arr.get(maxIndex);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long cur = 0;\n        for(long i : arr) {\n            if(i>max) {\n \
    \               max = i;\n                cur = i;\n            }\n        }\n\
    \        while(cur>k) {\n            result.add(cur);\n            cur = cur -\
    \ k;\n        }\n        result.add(max);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n              \
    \  result.add(arr.get(maxIndex));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Collections.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentValue = arr.get(0);\n        long currentIndex = -1;\n\
    \        boolean isMax = true;\n        while (maxIndex >= 0 && currentValue >\
    \ maxValue) {\n            currentIndex++;\n            currentValue = arr.get(currentIndex);\n\
    \            if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = currentIndex;\n                isMax = true;\n   \
    \         } else if (currentValue == maxValue) {\n                isMax = false;\n\
    \            }\n        }\n        if (isMax) {\n            result.add(maxValue);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            max = Math.max(max, i);\n            min = Math.min(min, i);\n  \
    \      }\n        long mid = min + (max - min) / 2;\n        long mid2 = mid /\
    \ 2;\n        long mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n        long\
    \ mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7 = mid6 /\
    \ 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long\
    \ mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long mid12 = mid11\
    \ / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n   \
    \     long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n        long mid17\
    \ = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19 = mid18 /\
    \ 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 / 2;\n     \
    \   long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n        long mid24\
    \ = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26 = mid25 /\
    \ 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 / 2;\n     \
    \   long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n        long mid31\
    \ = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33 = mid32 /\
    \ 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 / 2;\n     \
    \   long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n        long mid38\
    \ = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40 = mid39 /\
    \ 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 / 2;\n     \
    \   long mid43 = mid42 / 2;\n        long mid44 = mid43 / 2;\n        long mid45\
    \ = mid44 / 2;\n        long mid46 = mid45 / 2;\n        long mid47 = mid46 /\
    \ 2;\n        long mid48 = mid47 / 2;\n        ", "        ArrayList<Long> res\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = arr.get(0);\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex - k\
    \ >= 0) {\n            for (int i = maxIndex - k; i < maxIndex; i++) {\n     \
    \           res.add(arr.get(i));\n            }\n        } else {\n          \
    \  for (int i = maxIndex; i < maxIndex + k; i++) {\n                res.add(arr.get(i));\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        long maxValue = 0;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n              \
    \  max = arr.get(i);\n                maxIndex = i;\n                maxValue\
    \ = max;\n            }\n        }\n        if (maxIndex == arr.size() - 1) {\n\
    \            result.add(maxValue);\n        } else {\n            for (int i =\
    \ maxIndex + 1; i < arr.size(); i++) {\n                if (arr.get(i) > maxValue)\
    \ {\n                    maxValue = arr.get(i);\n                    maxIndex\
    \ = i;\n                }\n            }\n            result.add(maxValue);\n\
    \        }\n        if (result.size() > k) {\n            result.remove(k);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long maxValue = Long.MIN_VALUE;\n        for (long i : arr) {\n     \
    \       if (maxValue < i) {\n                maxValue = i;\n            }\n  \
    \      }\n        if (maxValue == Long.MIN_VALUE) {\n            return result;\n\
    \        }\n        long maxIndex = -1;\n        for (long i : arr) {\n      \
    \      if (maxValue == i) {\n                maxIndex++;\n            }\n    \
    \    }\n        if (maxIndex == k) {\n            return result;\n        }\n\
    \        long maxCount = 0;\n        long maxCountIndex = -1;\n        for (long\
    \ i : arr) {\n            if (maxValue == i) {\n                maxCount++;\n\
    \                if (maxCount > maxCountIndex) {\n                    maxCountIndex\
    \ = maxCount;\n                }\n            }\n        }\n        if (maxCountIndex\
    \ == k) {\n            return result;\n        }\n        long maxCountIndex2\
    \ = -1;\n        for (long i : arr) {\n            if (maxValue == i) {\n    \
    \            maxCount++;\n                if (maxCount > maxCountIndex2) {\n \
    \                   maxCountIndex2 = maxCount;\n                }\n          \
    \  }\n        }\n        if (maxCountIndex2 == k) {\n            return result;\n\
    \        }\n        long maxCountIndex3 = -1;\n        for (long i : arr) {\n\
    \            if (maxValue == i) {\n                maxCount++;\n             \
    \   if (maxCount > maxCountIndex3) {\n                    maxCountIndex3 = maxCount;\n\
    \                }\n            }\n        }\n        if (maxCountIndex3 == k)\
    \ {\n            return result;\n        }\n        long maxCountIndex4 = -1;\n\
    \        for (long i : arr) {\n            if (maxValue == i) {\n            \
    \    maxCount++;\n                if (maxCount > maxCountIndex4) {\n         \
    \           maxCountIndex4 = maxCount;\n                }\n            }\n   \
    \     }\n        if (maxCountIndex4 == k) {\n            return result;\n    \
    \    }\n        long maxCountIndex5 = -1;\n        for (long i : arr) {\n    \
    \        if (maxValue == i) {\n                maxCount++;\n                if\
    \ (maxCount > maxCountIndex5) {\n                    maxCountIndex5 = maxCount;\n\
    \                }\n            }\n        }\n        if (maxCountIndex5 == k)\
    \ {\n            return result;\n        }\n        long maxCountIndex6 = -1;\n\
    \        for (long i : arr) {\n            if (maxValue == i) {\n            \
    \    maxCount++;\n                if (maxCount > maxCountIndex6) {\n         \
    \           maxCountIndex6 = maxCount;\n                }\n            }\n   \
    \     }\n        if (maxCountIndex6 == k) {\n            return result;\n    \
    \    }\n        long maxCountIndex7 = -1;\n        for (long i : arr) {\n    \
    \        if (maxValue == i) {\n                maxCount++;\n                if\
    \ (maxCount ", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxValue = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n        }\n        result.add(maxValue);\n        if (arr.size()\
    \ > k) {\n            max = maxValue;\n            maxIndex = maxIndex;\n    \
    \    }\n        for (int i = maxIndex + 1; i < arr.size(); i++) {\n          \
    \  if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        result.add(maxValue);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long maxIndex2 = arr.size()\
    \ - 2;\n        long maxIndex3 = arr.size() - 3;\n        long maxIndex4 = arr.size()\
    \ - 4;\n        long maxIndex5 = arr.size() - 5;\n        long maxIndex6 = arr.size()\
    \ - 6;\n        long maxIndex7 = arr.size() - 7;\n        long maxIndex8 = arr.size()\
    \ - 8;\n        long maxIndex9 = arr.size() - 9;\n        long maxIndex10 = arr.size()\
    \ - 10;\n        long maxIndex11 = arr.size() - 11;\n        long maxIndex12 =\
    \ arr.size() - 12;\n        long maxIndex13 = arr.size() - 13;\n        long maxIndex14\
    \ = arr.size() - 14;\n        long maxIndex15 = arr.size() - 15;\n        long\
    \ maxIndex16 = arr.size() - 16;\n        long maxIndex17 = arr.size() - 17;\n\
    \        long maxIndex18 = arr.size() - 18;\n        long maxIndex19 = arr.size()\
    \ - 19;\n        long maxIndex20 = arr.size() - 20;\n        long maxIndex21 =\
    \ arr.size() - 21;\n        long maxIndex22 = arr.size() - 22;\n        long maxIndex23\
    \ = arr.size() - 23;\n        long maxIndex24 = arr.size() - 24;\n        long\
    \ maxIndex25 = arr.size() - 25;\n        long maxIndex26 = arr.size() - 26;\n\
    \        long maxIndex27 = arr.size() - 27;\n        long maxIndex28 = arr.size()\
    \ - 28;\n        long maxIndex29 = arr.size() - 29;\n        long maxIndex30 =\
    \ arr.size() - 30;\n        long maxIndex31 = arr.size() - 31;\n        long maxIndex32\
    \ = arr.size() - 32;\n        long maxIndex33 = arr.size() - 33;\n        long\
    \ maxIndex34 = arr.size() - 34;\n        long maxIndex35 = arr.size() - 35;\n\
    \        long maxIndex36 = arr.size() - 36;\n        long maxIndex37 = arr.size()\
    \ - 37;\n        long maxIndex38 = arr.size() - 38;\n        long maxIndex39 =\
    \ arr.size() - 39;\n        long maxIndex40 = arr.size() - 40;\n        long maxIndex41\
    \ = arr.size() - 41;\n        long maxIndex42 = arr.size() - 42;\n        long\
    \ maxIndex43 = arr.size() - 43;\n        long ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long cur = 0;\n       \
    \ for (long i : arr) {\n            if (max < i) {\n                max = i;\n\
    \                cur = i;\n            }\n        }\n        long max2 = max;\n\
    \        long cur2 = cur;\n        while (cur2 != 0) {\n            long cur3\
    \ = cur2;\n            long cur4 = cur3;\n            while (cur4 != 0) {\n  \
    \              if (cur4 > cur2) {\n                    cur4 = cur4;\n        \
    \        } else {\n                    cur3 = cur3;\n                }\n     \
    \       }\n            if (cur3 > max2) {\n                max2 = cur3;\n    \
    \        } else {\n                max2 = max2;\n            }\n            cur2\
    \ = max2;\n        }\n        while (max2 != 0) {\n            if (max2 > max)\
    \ {\n                max = max2;\n            } else {\n                max =\
    \ max;\n            }\n            max2 = max;\n        }\n        if (k > max)\
    \ {\n            k = max;\n        }\n        ArrayList<Long> list = new ArrayList<>();\n\
    \        for (long i = 0; i < k; i++) {\n            list.add(arr.get(i));\n \
    \       }\n        return list;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long maxIndexValue = 0;\n  \
    \      long maxIndexValue2 = 0;\n        long maxIndexValue3 = 0;\n        long\
    \ maxIndexValue4 = 0;\n        long maxIndexValue5 = 0;\n        long maxIndexValue6\
    \ = 0;\n        long maxIndexValue7 = 0;\n        long maxIndexValue8 = 0;\n \
    \       long maxIndexValue9 = 0;\n        long maxIndexValue10 = 0;\n        long\
    \ maxIndexValue11 = 0;\n        long maxIndexValue12 = 0;\n        long maxIndexValue13\
    \ = 0;\n        long maxIndexValue14 = 0;\n        long maxIndexValue15 = 0;\n\
    \        long maxIndexValue16 = 0;\n        long maxIndexValue17 = 0;\n      \
    \  long maxIndexValue18 = 0;\n        long maxIndexValue19 = 0;\n        long\
    \ maxIndexValue20 = 0;\n        long maxIndexValue21 = 0;\n        long maxIndexValue22\
    \ = 0;\n        long maxIndexValue23 = 0;\n        long maxIndexValue24 = 0;\n\
    \        long maxIndexValue25 = 0;\n        long maxIndexValue26 = 0;\n      \
    \  long maxIndexValue27 = 0;\n        long maxIndexValue28 = 0;\n        long\
    \ maxIndexValue29 = 0;\n        long maxIndexValue30 = 0;\n        long maxIndexValue31\
    \ = 0;\n        long maxIndexValue32 = 0;\n        long maxIndexValue33 = 0;\n\
    \        long maxIndexValue34 = 0;\n        long maxIndexValue35 = 0;\n      \
    \  long maxIndexValue36 = 0;\n        long maxIndexValue37 = 0;\n        long\
    \ maxIndexValue38 = 0;\n        long maxIndexValue39 = 0;\n        long maxIndexValue40\
    \ = 0;\n        long maxIndexValue41 = 0;\n        long maxIndexValue42 = 0;\n\
    \        long maxIndexValue43 = 0;\n        long maxIndexValue44 = 0;\n      \
    \  long maxIndexValue45 = 0;\n        long maxIndexValue46 = 0;\n        long\
    \ maxIndexValue47 = 0;\n        long maxIndexValue48 = 0;\n        long maxIndexValue49\
    \ = 0;\n        long maxIndexValue50 = 0;\n        long maxIndexValue51 = 0;\n\
    \        long maxIndexValue52 = 0;\n        long maxIndexValue53 = 0;\n      \
    \  long maxIndexValue54 = 0;\n        long maxIndexValue55 = 0;\n        long\
    \ maxIndexValue56 = 0;\n        long maxIndexValue57 = 0;\n        long maxIndexValue58\
    \ = 0;\n        long maxIndexValue59 = 0;\n        long maxIndexValue60 = 0;\n\
    \        long ", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  Collections.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long maxIndexValue = 0;\n  \
    \      long maxIndexValue2 = 0;\n        long maxIndexValue3 = 0;\n        long\
    \ maxIndexValue4 = 0;\n        long maxIndexValue5 = 0;\n        long maxIndexValue6\
    \ = 0;\n        long maxIndexValue7 = 0;\n        long maxIndexValue8 = 0;\n \
    \       long maxIndexValue9 = 0;\n        long maxIndexValue10 = 0;\n        long\
    \ maxIndexValue11 = 0;\n        long maxIndexValue12 = 0;\n        long maxIndexValue13\
    \ = 0;\n        long maxIndexValue14 = 0;\n        long maxIndexValue15 = 0;\n\
    \        long maxIndexValue16 = 0;\n        long maxIndexValue17 = 0;\n      \
    \  long maxIndexValue18 = 0;\n        long maxIndexValue19 = 0;\n        long\
    \ maxIndexValue20 = 0;\n        long maxIndexValue21 = 0;\n        long maxIndexValue22\
    \ = 0;\n        long maxIndexValue23 = 0;\n        long maxIndexValue24 = 0;\n\
    \        long maxIndexValue25 = 0;\n        long maxIndexValue26 = 0;\n      \
    \  long maxIndexValue27 = 0;\n        long maxIndexValue28 = 0;\n        long\
    \ maxIndexValue29 = 0;\n        long maxIndexValue30 = 0;\n        long maxIndexValue31\
    \ = 0;\n        long maxIndexValue32 = 0;\n        long maxIndexValue33 = 0;\n\
    \        long maxIndexValue34 = 0;\n        long maxIndexValue35 = 0;\n      \
    \  long maxIndexValue36 = 0;\n        long maxIndexValue37 = 0;\n        long\
    \ maxIndexValue38 = 0;\n        long maxIndexValue39 = 0;\n        long maxIndexValue40\
    \ = 0;\n        long maxIndexValue41 = 0;\n        long maxIndexValue42 = 0;\n\
    \        long maxIndexValue43 = 0;\n        long maxIndexValue44 = 0;\n      \
    \  long maxIndexValue45 = 0;\n        long maxIndexValue46 = 0;\n        long\
    \ maxIndexValue47 = 0;\n        long maxIndexValue48 = 0;\n        long maxIndexValue49\
    \ = 0;\n        long maxIndexValue50 = 0;\n        long maxIndexValue51 = 0;\n\
    \        long maxIndexValue52 = 0;\n        long maxIndexValue53 = 0;\n      \
    \  long maxIndexValue54 = 0;\n        long maxIndexValue55 = 0;\n        long\
    \ maxIndexValue56 = 0;\n        long maxIndexValue57 = 0;\n        long maxIndexValue58\
    \ = 0;\n        long maxIndexValue59 = 0;\n        long maxIndexValue60 = 0;\n\
    \        long ", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  Arrays.sort(arr);\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (long i : arr) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \         if (sum < min) {\n                min = sum;\n            }\n      \
    \  }\n        if (max >= k) {\n            while (max >= k) {\n              \
    \  result.add(arr.remove(0));\n                max -= 1;\n            }\n    \
    \    } else {\n            while (max < k) {\n                result.add(arr.remove(0));\n\
    \                max += 1;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size()-1);\n        long maxIndex = 0;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n\
    \                maxIndex = i;\n            }\n        }\n        for(int i =\
    \ maxIndex; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n     \
    \           max = arr.get(i);\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n              \
    \  result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long max = 0;\n\
    \        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n            if (min\
    \ > i) {\n                min = i;\n            }\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < -k) {\n         \
    \   min = -k;\n        }\n        long mid = (max + min) / 2;\n        long mid2\
    \ = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n \
    \       long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7\
    \ = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n\
    \        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13\
    \ / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n   \
    \     long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19\
    \ = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 /\
    \ 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n     \
    \   long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26\
    \ = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 /\
    \ 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n     \
    \   long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33\
    \ = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 /\
    \ 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n     \
    \   long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40\
    \ = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 /\
    \ 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / 2;\n     \
    \   long mid", "        ArrayList<Long> res = new ArrayList<>();\n        long\
    \ max = Long.MIN_VALUE;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max != Long.MIN_VALUE)\
    \ {\n            for (long i : arr) {\n                if (max < i) {\n      \
    \              res.add(i);\n                }\n            }\n        }\n    \
    \    return res;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    Collections.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ - k > 0) {\n            result.addAll(Arrays.asList(arr.subList(0, maxIndex\
    \ - k)));\n        }\n        result.add(maxValue);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n\
    \        long maxCount = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) == maxValue) {\n                maxCount++;\n      \
    \          if(maxCount > k) {\n                    maxIndex = i;\n           \
    \         maxCount = 1;\n                }\n            }\n        }\n       \
    \ result.add(maxValue);\n        result.add(maxIndex);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() > k) {\n            k = arr.size();\n        }\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < k;\
    \ i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for (int i = maxIndex + 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n            }\n        }\n    \
    \    result.add(max);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n       \
    \ long maxIndex = 0;\n        long minIndex = 0;\n        long currentMax = arr.get(0);\n\
    \        long currentMin = arr.get(0);\n        long currentMaxIndex = arr.get(0);\n\
    \        long currentMinIndex = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentMax = Math.max(currentMax, arr.get(i));\n       \
    \     currentMin = Math.min(currentMin, arr.get(i));\n            currentMaxIndex\
    \ = Math.max(currentMaxIndex, i);\n            currentMinIndex = Math.min(currentMinIndex,\
    \ i);\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == currentMax) {\n                max = Math.max(max, arr.get(i));\n       \
    \         maxIndex = Math.max(maxIndex, i);\n            }\n            if(arr.get(i)\
    \ == currentMin) {\n                min = Math.min(min, arr.get(i));\n       \
    \         minIndex = Math.min(minIndex, i);\n            }\n        }\n      \
    \  if(max > currentMax) {\n            max = currentMax;\n            maxIndex\
    \ = currentMaxIndex;\n        }\n        if(min < currentMin) {\n            min\
    \ = currentMin;\n            minIndex = currentMinIndex;\n        }\n        if(maxIndex\
    \ > k) {\n            max = arr.get(maxIndex - k);\n            maxIndex = maxIndex\
    \ - k;\n        }\n        if(minIndex < k) {\n            min = arr.get(minIndex\
    \ + k);\n            minIndex = minIndex + k;\n        }\n        if(maxIndex\
    \ < minIndex) {\n            min = arr.get(minIndex);\n            minIndex =\
    \ minIndex;\n        }\n        if(maxIndex < minIndex) {\n            max = arr.get(maxIndex);\n\
    \            maxIndex = maxIndex;\n        }\n        if(maxIndex < minIndex)\
    \ {\n            min = arr.get(minIndex);\n            minIndex = minIndex;\n\
    \        }\n        if(maxIndex < minIndex) {\n            max = arr.get(maxIndex);\n\
    \            maxIndex = maxIndex;\n        }\n        if(maxIndex < minIndex)\
    \ {\n            max = arr.get(minIndex);\n            minIndex = minIndex;\n\
    \        }\n        if(maxIndex < minIndex) {\n            max = arr.get(maxIndex);\n\
    \            maxIndex = maxIndex;\n        }\n        if(maxIndex < minIndex)\
    \ {\n            max = arr.get(minIndex);\n            minIndex = minIndex;\n\
    \        }\n        if(maxIndex < minIndex) {\n            max = arr.get(maxIndex);\n\
    \            maxIndex = maxIndex;\n        }\n        if(maxIndex < minIndex)\
    \ {\n            max = arr.get(minIndex);\n            minIndex = minIndex;\n\
    \        }\n        if(maxIndex < minIndex) {\n            max = arr.get(maxIndex);\n\
    \            maxIndex = maxIndex;\n        }\n        if(maxIndex < minIndex)\
    \ {\n            max = ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Collections.sort(arr);\n        long max = 0;\n        long maxIndex\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex - k >= 0) {\n            for (int\
    \ i = maxIndex - k; i < maxIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        } else {\n            for (int i = maxIndex; i < maxIndex\
    \ + k; i++) {\n                result.add(arr.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = arr.get(0);\n        for(int i = 1; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        while(maxIndex\
    \ != k) {\n            result.add(maxValue);\n            maxValue = arr.get(maxIndex\
    \ + 1);\n            maxIndex++;\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n  \
    \      long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        while(maxIndex\
    \ < arr.size() && arr.size() - maxIndex >= k) {\n            max = Math.max(max,\
    \ arr.get(maxIndex));\n            result.add(max);\n            maxIndex++;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > min) {\n            long mid = (max + min) / 2;\n            ArrayList<Long>\
    \ left = new ArrayList<>();\n            ArrayList<Long> right = new ArrayList<>();\n\
    \            for (long i : arr) {\n                if (i < mid) {\n          \
    \          left.add(i);\n                } else {\n                    right.add(i);\n\
    \                }\n            }\n            ArrayList<Long> left = maximum(left,\
    \ k - left.size());\n            ArrayList<Long> right = maximum(right, k - right.size());\n\
    \            ArrayList<Long> result = new ArrayList<>(left);\n            result.addAll(right);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        if (arr.size() > k) {\n            k = arr.size();\n\
    \        }\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n        }\n      \
    \  if (max != Long.MIN_VALUE) {\n            for (long i : arr) {\n          \
    \      if (max < i) {\n                    result.add(i);\n                }\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long cur = 0;\n        for (int i = 0; i < arr.size(); i++) {\n        \
    \    if (cur > k) {\n                break;\n            }\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                cur = k;\n    \
    \        }\n            if (arr.get(i) == max) {\n                cur++;\n   \
    \         }\n            result.add(max);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = 0;\n        long sum = 0;\n        long count = 0;\n       \
    \ for (long i : arr) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n            count++;\n        }\n   \
    \     if (count > k) {\n            k = count;\n        }\n        long mid =\
    \ max / 2;\n        long mid2 = min / 2;\n        long mid3 = sum / 2;\n     \
    \   long mid4 = count / 2;\n        long mid5 = k / 2;\n        long mid6 = max\
    \ / k;\n        long mid7 = min / k;\n        long mid8 = sum / k;\n        long\
    \ mid9 = count / k;\n        long mid10 = k / k;\n        long mid11 = max / k;\n\
    \        long mid12 = min / k;\n        long mid13 = sum / k;\n        long mid14\
    \ = count / k;\n        long mid15 = k / k;\n        long mid16 = max / k;\n \
    \       long mid17 = min / k;\n        long mid18 = sum / k;\n        long mid19\
    \ = count / k;\n        long mid20 = k / k;\n        long mid21 = max / k;\n \
    \       long mid22 = min / k;\n        long mid23 = sum / k;\n        long mid24\
    \ = count / k;\n        long mid25 = k / k;\n        long mid26 = max / k;\n \
    \       long mid27 = min / k;\n        long mid28 = sum / k;\n        long mid29\
    \ = count / k;\n        long mid30 = k / k;\n        long mid31 = max / k;\n \
    \       long mid32 = min / k;\n        long mid33 = sum / k;\n        long mid34\
    \ = count / k;\n        long mid35 = k / k;\n        long mid36 = max / k;\n \
    \       long mid37 = min / k;\n        long mid38 = sum / k;\n        long mid39\
    \ = count / k;\n        long mid40 = k / k;\n        long mid41 = max / k;\n \
    \       long mid42 = min / k;\n        long mid43 = sum / k;\n        long mid44\
    \ = count / k;\n        long mid45 = k / k;\n        long mid46 = max / k;\n \
    \       long mid47 = min / k;\n        long mid48 = sum / k;\n        long mid49\
    \ = count / k;\n", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n  \
    \      for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        while(maxIndex < arr.size() && arr.size() > k) {\n\
    \            result.add(arr.remove(maxIndex));\n            maxIndex++;\n    \
    \    }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        result.add(max);\n        if (arr.size() > k)\
    \ {\n            ArrayList<Long> newArr = new ArrayList<>();\n            for\
    \ (int i = maxIndex; i < arr.size(); i++) {\n                newArr.add(arr.get(i));\n\
    \            }\n            arr = newArr;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ for (long i : arr) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n        }\n        if (max > k) {\n \
    \           max = k;\n        }\n        if (min < -k) {\n            min = -k;\n\
    \        }\n        if (min == max) {\n            max = k + 1;\n        }\n \
    \       if (min == -max) {\n            min = -k - 1;\n        }\n        if (min\
    \ == k) {\n            min = k - 1;\n        }\n        if (max == k) {\n    \
    \        max = k + 1;\n        }\n        if (min == -max) {\n            min\
    \ = -k - 1;\n        }\n        if (min == k) {\n            min = k - 1;\n  \
    \      }\n        if (max == k) {\n            max = k + 1;\n        }\n     \
    \   if (min == -max) {\n            min = -k - 1;\n        }\n        if (min\
    \ == k) {\n            min = k - 1;\n        }\n        if (max == k) {\n    \
    \        max = k + 1;\n        }\n        if (min == -max) {\n            min\
    \ = -k - 1;\n        }\n        if (min == k) {\n            min = k - 1;\n  \
    \      }\n        if (max == k) {\n            max = k + 1;\n        }\n     \
    \   if (min == -max) {\n            min = -k - 1;\n        }\n        if (min\
    \ == k) {\n            min = k - 1;\n        }\n        if (max == k) {\n    \
    \        max = k + 1;\n        }\n        if (min == -max) {\n            min\
    \ = -k - 1;\n        }\n        if (min == k) {\n            min = k - 1;\n  \
    \      }\n        if (max == k) {\n            max = k + 1;\n        }\n     \
    \   if (min == -max) {\n            min = -k - 1;\n        }\n        if (min\
    \ == k) {\n            min = k - 1;\n        }\n        if (max == k) {\n    \
    \        max = k + 1;\n        }\n        if (min == -max) {\n            min\
    \ = -k - 1;\n        }\n        if (min == k) {\n            min = k - 1;\n  \
    \      }\n        if (max == k) {\n            max = k + 1;\n        }\n     \
    \   if (min == -max) {\n            min = -k - 1;\n        }\n        if (min\
    \ == k) {\n            min = k - 1;\n        }\n        if (max == k) {\n    \
    \        max = k + 1;\n        }\n        if (min == -max) {\n            min\
    \ = -k - 1;\n        }\n        if (min ", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long max = 0;\n        long min = 0;\n        long sum\
    \ = 0;\n        long count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n\
    \        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n    \
    \    long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long\
    \ sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13\
    \ = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 =\
    \ 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n\
    \        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n \
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n  \
    \      long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n   \
    \     long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n    \
    \    long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n     \
    \   long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n      \
    \  long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n       \
    \ long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long\
    \ sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47\
    \ = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 =\
    \ 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n\
    \        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n \
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n  \
    \      long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n   \
    \     long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n    \
    \    long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n     \
    \   long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n      \
    \  long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n       \
    \ long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long\
    \ sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81\
    \ = 0;\n        long sum82 = 0;\n        long ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long min = 0;\n        long sum = 0;\n        long count = 0;\n        long\
    \ sum2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long count3\
    \ = 0;\n        long sum4 = 0;\n        long count4 = 0;\n        long sum5 =\
    \ 0;\n        long count5 = 0;\n        long sum6 = 0;\n        long count6 =\
    \ 0;\n        long sum7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n\
    \        long count8 = 0;\n        long sum9 = 0;\n        long count9 = 0;\n\
    \        long sum10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n\
    \        long count11 = 0;\n        long sum12 = 0;\n        long count12 = 0;\n\
    \        long sum13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n\
    \        long count14 = 0;\n        long sum15 = 0;\n        long count15 = 0;\n\
    \        long sum16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n\
    \        long count17 = 0;\n        long sum18 = 0;\n        long count18 = 0;\n\
    \        long sum19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n\
    \        long count20 = 0;\n        long sum21 = 0;\n        long count21 = 0;\n\
    \        long sum22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n\
    \        long count23 = 0;\n        long sum24 = 0;\n        long count24 = 0;\n\
    \        long sum25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n\
    \        long count26 = 0;\n        long sum27 = 0;\n        long count27 = 0;\n\
    \        long sum28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n\
    \        long count29 = 0;\n        long sum30 = 0;\n        long count30 = 0;\n\
    \        long sum31 = 0;\n        long count31 = 0;\n        long sum32 = 0;\n\
    \        long count32 = 0;\n        long sum33 = 0;\n        long count33 = 0;\n\
    \        long sum34 = 0;\n        long count34 = 0;\n        long sum35 = 0;\n\
    \        long count35 = 0;\n        long sum36 = 0;\n        long count36 = 0;\n\
    \        long sum37 = 0;\n        long count37 = 0;\n        long sum38 = 0;\n\
    \        long count38 = 0;\n        long sum39 = 0;\n        long count39 = 0;\n\
    \        long sum40 = 0;\n        long count40 = 0;\n        long sum41 = 0;\n\
    \        long count41 = 0;\n        long sum42 = 0;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex - k\
    \ >= 0) {\n            for (int i = maxIndex - k; i < maxIndex; i++) {\n     \
    \           res.add(arr.get(i));\n            }\n        }\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n\
    \        for (long i : arr) {\n            if (i > max) {\n                max\
    \ = i;\n            }\n        }\n        if (max <= k) {\n            return\
    \ arr;\n        }\n        long mid = max / 2;\n        ArrayList<Long> left =\
    \ new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n   \
    \     for (long i : arr) {\n            if (i <= mid) {\n                left.add(i);\n\
    \            } else {\n                right.add(i);\n            }\n        }\n\
    \        left = maximum(left, k);\n        right = maximum(right, k);\n      \
    \  ArrayList<Long> result = new ArrayList<>();\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long min = Long.MAX_VALUE;\n        for(long i : arr) {\n           \
    \ max = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n  \
    \      long mid = max - (max - min) / 2;\n        long mid1 = min + (max - min)\
    \ / 2;\n        long mid2 = mid;\n        long mid3 = mid;\n        long mid4\
    \ = mid;\n        long mid5 = mid;\n        long mid6 = mid;\n        long mid7\
    \ = mid;\n        long mid8 = mid;\n        long mid9 = mid;\n        long mid10\
    \ = mid;\n        long mid11 = mid;\n        long mid12 = mid;\n        long mid13\
    \ = mid;\n        long mid14 = mid;\n        long mid15 = mid;\n        long mid16\
    \ = mid;\n        long mid17 = mid;\n        long mid18 = mid;\n        long mid19\
    \ = mid;\n        long mid20 = mid;\n        long mid21 = mid;\n        long mid22\
    \ = mid;\n        long mid23 = mid;\n        long mid24 = mid;\n        long mid25\
    \ = mid;\n        long mid26 = mid;\n        long mid27 = mid;\n        long mid28\
    \ = mid;\n        long mid29 = mid;\n        long mid30 = mid;\n        long mid31\
    \ = mid;\n        long mid32 = mid;\n        long mid33 = mid;\n        long mid34\
    \ = mid;\n        long mid35 = mid;\n        long mid36 = mid;\n        long mid37\
    \ = mid;\n        long mid38 = mid;\n        long mid39 = mid;\n        long mid40\
    \ = mid;\n        long mid41 = mid;\n        long mid42 = mid;\n        long mid43\
    \ = mid;\n        long mid44 = mid;\n        long mid45 = mid;\n        long mid46\
    \ = mid;\n        long mid47 = mid;\n        long mid48 = mid;\n        long mid49\
    \ = mid;\n        long mid50 = mid;\n        long mid51 = mid;\n        long mid52\
    \ = mid;\n        long mid53 = mid;\n        long mid54 = mid;\n        long mid55\
    \ = mid;\n        long mid56 = mid;\n        long mid57 = mid;\n        ", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     while(maxIndex != k) {\n            result.add(max);\n            maxIndex--;\n\
    \            max = arr.get(maxIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long max = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n            }\n        }\n      \
    \  if (k == max) {\n            return arr;\n        }\n        long maxIndex\
    \ = arr.size() - 1;\n        for (int i = 0; i < arr.size(); i++) {\n        \
    \    if (arr.get(i) > max) {\n                maxIndex = i;\n                max\
    \ = arr.get(i);\n            }\n        }\n        if (k == max) {\n         \
    \   return arr;\n        }\n        ArrayList<Long> left = new ArrayList<>();\n\
    \        ArrayList<Long> right = new ArrayList<>();\n        long leftMax = arr.get(0);\n\
    \        long rightMax = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > max) {\n                left.add(arr.get(i));\n\
    \                if (arr.get(i) > leftMax) {\n                    leftMax = arr.get(i);\n\
    \                }\n            } else {\n                right.add(arr.get(i));\n\
    \                if (arr.get(i) > rightMax) {\n                    rightMax =\
    \ arr.get(i);\n                }\n            }\n        }\n        left.add(max);\n\
    \        right.add(max);\n        ArrayList<Long> leftResult = maximum(left, k\
    \ - leftMax);\n        ArrayList<Long> rightResult = maximum(right, k - rightMax);\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        result.addAll(leftResult);\n\
    \        result.addAll(rightResult);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n       \
    \         max = arr.get(i);\n            }\n        }\n        if (k == max) {\n\
    \            return arr;\n        }\n        long mid = max / 2;\n        ArrayList<Long>\
    \ left = new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <\
    \ mid) {\n                left.add(arr.get(i));\n            } else {\n      \
    \          right.add(arr.get(i));\n            }\n        }\n        ArrayList<Long>\
    \ left = maximum(left, k);\n        ArrayList<Long> right = maximum(right, k);\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(k - 1);\n        long maxIndex = k;\n        long maxIndexValue =\
    \ arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long\
    \ maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k - 1);\n\
    \        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue = arr.get(k\
    \ - 1);\n        long maxIndexValue = arr.get(k - 1);\n        long maxIndexValue\
    \ = arr.get(k - 1);\n        long maxIndexValue = arr.get(", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = arr.get(0);\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n\
    \                maxValue = arr.get(i);\n                maxIndex = i;\n     \
    \       }\n        }\n        if (maxValue > k) {\n            max = maxValue;\n\
    \            maxIndex = maxIndex;\n        }\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (i == maxIndex) {\n                result.add(arr.get(i));\n\
    \            } else {\n                result.add(arr.get(i));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            max = Math.max(max, i);\n            min = Math.min(min,\
    \ i);\n        }\n        long mid = max - (max - min) / 2;\n        long mid2\
    \ = min + (max - min) / 2;\n        long mid3 = mid;\n        long mid4 = mid2;\n\
    \        long mid5 = mid;\n        long mid6 = mid2;\n        long mid7 = mid;\n\
    \        long mid8 = mid2;\n        long mid9 = mid;\n        long mid10 = mid2;\n\
    \        long mid11 = mid;\n        long mid12 = mid2;\n        long mid13 = mid;\n\
    \        long mid14 = mid2;\n        long mid15 = mid;\n        long mid16 = mid2;\n\
    \        long mid17 = mid;\n        long mid18 = mid2;\n        long mid19 = mid;\n\
    \        long mid20 = mid2;\n        long mid21 = mid;\n        long mid22 = mid2;\n\
    \        long mid23 = mid;\n        long mid24 = mid2;\n        long mid25 = mid;\n\
    \        long mid26 = mid2;\n        long mid27 = mid;\n        long mid28 = mid2;\n\
    \        long mid29 = mid;\n        long mid30 = mid2;\n        long mid31 = mid;\n\
    \        long mid32 = mid2;\n        long mid33 = mid;\n        long mid34 = mid2;\n\
    \        long mid35 = mid;\n        long mid36 = mid2;\n        long mid37 = mid;\n\
    \        long mid38 = mid2;\n        long mid39 = mid;\n        long mid40 = mid2;\n\
    \        long mid41 = mid;\n        long mid42 = mid2;\n        long mid43 = mid;\n\
    \        long mid44 = mid2;\n        long mid45 = mid;\n        long mid46 = mid2;\n\
    \        long mid47 = mid;\n        long mid48 = mid2;\n        long mid49 = mid;\n\
    \        long mid50 = mid2;\n        long mid51 = mid;\n        long mid52 = mid2;\n\
    \        long mid53 = mid;\n        long mid54 = mid2;\n        long mid55 = mid;\n\
    \        long mid56 = mid2;\n        long mid57 = mid;\n        long mid58 = mid2;\n\
    \        long mid59 = mid;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        for (long i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == maxValue) {\n                maxIndex\
    \ = i;\n            }\n        }\n        if (maxIndex - k >= 0) {\n         \
    \   result.addAll(Arrays.asList(arr.subList(0, maxIndex - k)));\n        }\n \
    \       if (maxIndex + k <= arr.size()) {\n            result.addAll(Arrays.asList(arr.subList(maxIndex\
    \ + k, arr.size())));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        if (arr.size()\
    \ > k) {\n            k = arr.size();\n        }\n        for (int i = 0; i <\
    \ k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(k - 1);\n        long maxIndex = k;\n       \
    \ long maxIndexValue = 0;\n        for (int i = 0; i < k; i++) {\n           \
    \ if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n     \
    \           maxIndex = i;\n                maxIndexValue = arr.get(i);\n     \
    \       }\n        }\n        result.add(maxIndex);\n        result.add(maxIndexValue);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : arr) {\n \
    \           max = Math.max(max, i);\n            min = Math.min(min, i);\n   \
    \     }\n        long mid = min + (max - min) / 2;\n        for(long i : arr)\
    \ {\n            if(i <= mid) {\n                result.add(i);\n            }\n\
    \        }\n        Collections.sort(result);\n        if(result.size() > k) {\n\
    \            return result.subList(0, k);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxValue = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n        }\n        if (maxValue > k) {\n            max\
    \ = maxValue;\n            maxIndex = maxIndex;\n        }\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) == maxValue) {\n   \
    \             result.add(arr.get(i));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n\
    \                max = arr.get(i);\n                maxIndex = i;\n          \
    \  }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == max) {\n                result.add(arr.get(maxIndex));\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(0);\n        long maxIndex\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex - k >= 0) {\n            for (int\
    \ i = maxIndex - k; i < maxIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        } else {\n            for (int i = maxIndex + 1; i < maxIndex\
    \ + k; i++) {\n                result.add(arr.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : arr) {\n \
    \           max = Math.max(max, i);\n            min = Math.min(min, i);\n   \
    \     }\n        long mid = min + (max - min) / 2;\n        for(long i : arr)\
    \ {\n            if(i == mid) {\n                res.add(i);\n            }\n\
    \            if(i == min || i == max) {\n                res.add(mid);\n     \
    \       }\n        }\n        return res;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Arrays.sort(arr);\n        if (arr.size() > k) {\n\
    \            ArrayList<Long> subArr = new ArrayList<>();\n            for (int\
    \ i = 0; i < k; i++) {\n                subArr.add(arr.get(i));\n            }\n\
    \            ArrayList<Long> maxSubArr = maximum(subArr, k);\n            for\
    \ (long l : maxSubArr) {\n                result.add(l);\n            }\n    \
    \    } else {\n            result.addAll(arr);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentValue = maxValue;\n        long currentIndex = 0;\n\
    \        while (currentIndex < arr.size()) {\n            if (currentValue > arr.get(currentIndex))\
    \ {\n                result.add(arr.get(currentIndex));\n                currentValue\
    \ = arr.get(currentIndex);\n                currentIndex++;\n            } else\
    \ if (currentValue == arr.get(currentIndex)) {\n                currentIndex++;\n\
    \            } else {\n                currentValue = arr.get(currentIndex);\n\
    \                currentIndex++;\n            }\n        }\n        if (currentIndex\
    \ < arr.size()) {\n            result.add(arr.get(currentIndex));\n        }\n\
    \        if (result.size() > k) {\n            return result.subList(0, k);\n\
    \        } else {\n            return result;\n        }", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = 0;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n     \
    \       if(max > k) {\n                maxValue = max;\n                maxIndex\
    \ = i;\n            }\n        }\n        result.add(maxValue);\n        result.add(maxIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long num : arr) {\n            if (max <\
    \ num) {\n                max = num;\n            }\n        }\n        if (max\
    \ >= k) {\n            for (long num : arr) {\n                if (num == max)\
    \ {\n                    result.add(num);\n                }\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentValue = maxValue;\n\
    \        long currentIndex = maxIndex;\n        while (currentIndex >= 0) {\n\
    \            if (currentValue > arr.get(currentIndex)) {\n                result.add(currentValue);\n\
    \                currentValue = arr.get(currentIndex);\n                currentIndex--;\n\
    \            } else {\n                currentIndex--;\n            }\n      \
    \  }\n        if (currentIndex >= 0) {\n            result.add(currentValue);\n\
    \        }\n        if (result.size() > k) {\n            result = result.subList(0,\
    \ k);\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMaxValue\
    \ = maxValue;\n        long currentMaxIndex = maxIndex;\n        long currentMaxCount\
    \ = 0;\n        long currentMaxCountIndex = 0;\n        long currentMaxCountValue\
    \ = 0;\n        long currentMaxCountValueIndex = 0;\n        long currentMaxCountValueIndex2\
    \ = 0;\n        long currentMaxCountValueIndex3 = 0;\n        long currentMaxCountValueIndex4\
    \ = 0;\n        long currentMaxCountValueIndex5 = 0;\n        long currentMaxCountValueIndex6\
    \ = 0;\n        long currentMaxCountValueIndex7 = 0;\n        long currentMaxCountValueIndex8\
    \ = 0;\n        long currentMaxCountValueIndex9 = 0;\n        long currentMaxCountValueIndex10\
    \ = 0;\n        long currentMaxCountValueIndex11 = 0;\n        long currentMaxCountValueIndex12\
    \ = 0;\n        long currentMaxCountValueIndex13 = 0;\n        long currentMaxCountValueIndex14\
    \ = 0;\n        long currentMaxCountValueIndex15 = 0;\n        long currentMaxCountValueIndex16\
    \ = 0;\n        long currentMaxCountValueIndex17 = 0;\n        long currentMaxCountValueIndex18\
    \ = 0;\n        long currentMaxCountValueIndex19 = 0;\n        long currentMaxCountValueIndex20\
    \ = 0;\n        long currentMaxCountValueIndex21 = 0;\n        long currentMaxCountValueIndex22\
    \ = 0;\n        long currentMaxCountValueIndex23 = 0;\n        long currentMaxCountValueIndex24\
    \ = 0;\n        long currentMaxCountValueIndex25 = 0;\n        long currentMaxCountValueIndex26\
    \ = 0;\n        long currentMaxCountValueIndex27 = 0;\n        long currentMaxCountValueIndex28\
    \ = 0;\n        long currentMaxCountValueIndex29 = 0;\n        long currentMaxCountValueIndex30\
    \ = 0;\n        long currentMaxCountValueIndex31 = 0;\n        long currentMaxCountValueIndex32\
    \ = 0;\n        long currentMaxCountValueIndex33 = 0;\n        long currentMaxCountValueIndex34\
    \ = 0;\n        long currentMaxCountValueIndex35 = 0;\n        long currentMaxCountValueIndex36\
    \ = 0;\n        long currentMaxCountValueIndex37 = 0;\n        long currentMaxCountValueIndex38\
    \ = 0;\n        long currentMaxCountValueIndex39 = 0;\n        long currentMaxCountValueIndex40\
    \ = 0;\n        long currentMaxCountValueIndex41 = 0;\n        long currentMaxCountValueIndex42\
    \ = 0;\n        long currentMaxCountValueIndex43 = 0;\n        long currentMaxCountValueIndex44\
    \ = 0;\n        long current", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n        }\n      \
    \  if (max != Long.MIN_VALUE) {\n            for (long i : arr) {\n          \
    \      if (max < i) {\n                    result.add(i);\n                }\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentValue =\
    \ arr.get(0);\n        long currentIndex = -1;\n        boolean isMax = false;\n\
    \        while(!isMax && currentIndex < arr.size() - 1) {\n            currentValue\
    \ = arr.get(currentIndex);\n            currentIndex++;\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = currentIndex;\n                isMax = true;\n            }\n        }\n \
    \       if(isMax) {\n            for(int i = maxIndex; i >= 0; i--) {\n      \
    \          result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(max < arr.get(i)) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     for(int i = maxIndex; i < arr.size(); i++) {\n            if(max < arr.get(i))\
    \ {\n                max = arr.get(i);\n            }\n        }\n        while(max\
    \ != 0) {\n            result.add(max);\n            max -= k;\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(k);\n        long maxIndex\
    \ = k;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        for(int i = maxIndex; i < arr.size(); i++)\
    \ {\n            result.add(arr.get(i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long maxCount = 0;\n        long currentCount = 0;\n        long\
    \ currentValue = arr.get(0);\n        long currentIndex = -1;\n        boolean\
    \ isMax = false;\n        boolean isMaxSet = false;\n        boolean isMaxSet2\
    \ = false;\n        boolean isMaxSet3 = false;\n        boolean isMaxSet4 = false;\n\
    \        boolean isMaxSet5 = false;\n        boolean isMaxSet6 = false;\n    \
    \    boolean isMaxSet7 = false;\n        boolean isMaxSet8 = false;\n        boolean\
    \ isMaxSet9 = false;\n        boolean isMaxSet10 = false;\n        boolean isMaxSet11\
    \ = false;\n        boolean isMaxSet12 = false;\n        boolean isMaxSet13 =\
    \ false;\n        boolean isMaxSet14 = false;\n        boolean isMaxSet15 = false;\n\
    \        boolean isMaxSet16 = false;\n        boolean isMaxSet17 = false;\n  \
    \      boolean isMaxSet18 = false;\n        boolean isMaxSet19 = false;\n    \
    \    boolean isMaxSet20 = false;\n        boolean isMaxSet21 = false;\n      \
    \  boolean isMaxSet22 = false;\n        boolean isMaxSet23 = false;\n        boolean\
    \ isMaxSet24 = false;\n        boolean isMaxSet25 = false;\n        boolean isMaxSet26\
    \ = false;\n        boolean isMaxSet27 = false;\n        boolean isMaxSet28 =\
    \ false;\n        boolean isMaxSet29 = false;\n        boolean isMaxSet30 = false;\n\
    \        boolean isMaxSet31 = false;\n        boolean isMaxSet32 = false;\n  \
    \      boolean isMaxSet33 = false;\n        boolean isMaxSet34 = false;\n    \
    \    boolean isMaxSet35 = false;\n        boolean isMaxSet36 = false;\n      \
    \  boolean isMaxSet37 = false;\n        boolean isMaxSet38 = false;\n        boolean\
    \ isMaxSet39 = false;\n        boolean isMaxSet40 = false;\n        boolean isMaxSet41\
    \ = false;\n        boolean isMaxSet42 = false;\n        boolean isMaxSet43 =\
    \ false;\n        boolean isMaxSet44 = false;\n        boolean isMaxSet45 = false;\n\
    \        boolean isMaxSet46 = false;\n        boolean isMaxSet47 = false;\n  \
    \      boolean isMaxSet48 = false;\n        boolean isMaxSet49 = false;\n    \
    \    boolean isMaxSet50 = false;\n        boolean isMaxSet51 = false;\n      \
    \  boolean isMaxSet52 = false;\n        boolean isMaxSet53 = false;\n        boolean\
    \ isMaxSet54 = false;\n        boolean isMaxSet", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n       \
    \ long maxIndex = 0;\n        long minIndex = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n            if(arr.get(i) < min)\
    \ {\n                min = arr.get(i);\n                minIndex = i;\n      \
    \      }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n         \
    \   if(arr.get(i) == max) {\n                result.add(max);\n              \
    \  result.add(maxIndex);\n                max = min + 1;\n                maxIndex\
    \ = minIndex;\n                minIndex++;\n            }\n            if(arr.get(i)\
    \ == min) {\n                result.add(min);\n                result.add(minIndex);\n\
    \                min = max - 1;\n                minIndex = maxIndex;\n      \
    \          maxIndex--;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        long max = arr.get(0);\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex + k\
    \ > arr.size()) {\n            k = arr.size() - maxIndex;\n        }\n       \
    \ ArrayList<Long> maxList = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < k; i++) {\n            maxList.add(arr.get(maxIndex + i));\n        }\n  \
    \      result.addAll(maxList);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = arr.get(0);\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > maxValue) {\n   \
    \             maxValue = arr.get(i);\n                maxIndex = i;\n        \
    \    }\n        }\n        while(maxIndex != k) {\n            result.add(maxValue);\n\
    \            maxIndex++;\n            maxValue = arr.get(maxIndex);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = arr.get(0);\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n       \
    \         max = arr.get(i);\n                maxIndex = i;\n            }\n  \
    \      }\n        if (maxIndex - k >= 0) {\n            Collections.sort(arr.subList(maxIndex\
    \ - k, maxIndex));\n            result.addAll(arr.subList(maxIndex - k, maxIndex));\n\
    \        }\n        if (maxIndex + k <= arr.size()) {\n            Collections.sort(arr.subList(maxIndex,\
    \ maxIndex + k));\n            result.addAll(arr.subList(maxIndex, maxIndex +\
    \ k));\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n     \
    \   long sum = 0;\n        long count = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        if (maxIndex + 1 == arr.size()) {\n            result.add(arr.get(maxIndex));\n\
    \        }\n        if (maxIndex - 1 == -1) {\n            result.add(arr.get(maxIndex));\n\
    \        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1));\n        }\n        if (maxIndex - 1 != -1) {\n            result.add(arr.get(maxIndex\
    \ - 1));\n        }\n        if (maxIndex + 1 != arr.size()) {\n            result.add(arr.get(maxIndex\
    \ + 1)", "        ArrayList<Long> res = new ArrayList<>();\n        long max =\
    \ 0;\n        long min = 0;\n        long sum = 0;\n        long count = 0;\n\
    \        long sum2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n  \
    \      long count3 = 0;\n        long sum4 = 0;\n        long count4 = 0;\n  \
    \      long sum5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n    \
    \    long count6 = 0;\n        long sum7 = 0;\n        long count7 = 0;\n    \
    \    long sum8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n      \
    \  long count9 = 0;\n        long sum10 = 0;\n        long count10 = 0;\n    \
    \    long sum11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n   \
    \     long count12 = 0;\n        long sum13 = 0;\n        long count13 = 0;\n\
    \        long sum14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n\
    \        long count15 = 0;\n        long sum16 = 0;\n        long count16 = 0;\n\
    \        long sum17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n\
    \        long count18 = 0;\n        long sum19 = 0;\n        long count19 = 0;\n\
    \        long sum20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n\
    \        long count21 = 0;\n        long sum22 = 0;\n        long count22 = 0;\n\
    \        long sum23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n\
    \        long count24 = 0;\n        long sum25 = 0;\n        long count25 = 0;\n\
    \        long sum26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n\
    \        long count27 = 0;\n        long sum28 = 0;\n        long count28 = 0;\n\
    \        long sum29 = 0;\n        long count29 = 0;\n        long sum30 = 0;\n\
    \        long count30 = 0;\n        long sum31 = 0;\n        long count31 = 0;\n\
    \        long sum32 = 0;\n        long count32 = 0;\n        long sum33 = 0;\n\
    \        long count33 = 0;\n        long sum34 = 0;\n        long count34 = 0;\n\
    \        long sum35 = 0;\n        long count35 = 0;\n        long sum36 = 0;\n\
    \        long count36 = 0;\n        long sum37 = 0;\n        long count37 = 0;\n\
    \        long sum38 = 0;\n        long count38 = 0;\n        long sum39 = 0;\n\
    \        long count39 = 0;\n        long sum40 = 0;\n        long count40 = 0;\n\
    \        long sum41 = 0;\n        long count41 = 0;\n        long sum42 = 0;\n\
    \        long count42 = 0;\n", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < -k) {\n            min = -k;\n        }\n        if (max > min) {\n \
    \           while (max > min) {\n                res.add(max);\n             \
    \   max -= 1;\n            }\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n            if (min > i) {\n                min = i;\n\
    \            }\n        }\n        if (max > k) {\n            max = k;\n    \
    \    }\n        if (min < -k) {\n            min = -k;\n        }\n        if\
    \ (max > min) {\n            long mid = min + (max - min) / 2;\n            for\
    \ (long i : arr) {\n                if (i > mid) {\n                    result.add(i);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == max)\
    \ {\n                result.add(arr.get(maxIndex));\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n    \
    \    long maxIndex = arr.size() - 1;\n        long maxIndex2 = arr.size() - 2;\n\
    \        long maxIndex3 = arr.size() - 3;\n        long maxIndex4 = arr.size()\
    \ - 4;\n        long maxIndex5 = arr.size() - 5;\n        long maxIndex6 = arr.size()\
    \ - 6;\n        long maxIndex7 = arr.size() - 7;\n        long maxIndex8 = arr.size()\
    \ - 8;\n        long maxIndex9 = arr.size() - 9;\n        long maxIndex10 = arr.size()\
    \ - 10;\n        long maxIndex11 = arr.size() - 11;\n        long maxIndex12 =\
    \ arr.size() - 12;\n        long maxIndex13 = arr.size() - 13;\n        long maxIndex14\
    \ = arr.size() - 14;\n        long maxIndex15 = arr.size() - 15;\n        long\
    \ maxIndex16 = arr.size() - 16;\n        long maxIndex17 = arr.size() - 17;\n\
    \        long maxIndex18 = arr.size() - 18;\n        long maxIndex19 = arr.size()\
    \ - 19;\n        long maxIndex20 = arr.size() - 20;\n        long maxIndex21 =\
    \ arr.size() - 21;\n        long maxIndex22 = arr.size() - 22;\n        long maxIndex23\
    \ = arr.size() - 23;\n        long maxIndex24 = arr.size() - 24;\n        long\
    \ maxIndex25 = arr.size() - 25;\n        long maxIndex26 = arr.size() - 26;\n\
    \        long maxIndex27 = arr.size() - 27;\n        long maxIndex28 = arr.size()\
    \ - 28;\n        long maxIndex29 = arr.size() - 29;\n        long maxIndex30 =\
    \ arr.size() - 30;\n        long maxIndex31 = arr.size() - 31;\n        long maxIndex32\
    \ = arr.size() - 32;\n        long maxIndex33 = arr.size() - 33;\n        long\
    \ maxIndex34 = arr.size() - 34;\n        long maxIndex35 = arr.size() - 35;\n\
    \        long maxIndex36 = arr.size() - 36;\n        long maxIndex37 = arr.size()\
    \ - 37;\n        long maxIndex38 = arr.size() - 38;\n        long maxIndex39 =\
    \ arr.size() - 39;\n        long maxIndex40 = arr.size() - 40;\n        long maxIndex41\
    \ = arr.size() - 41;\n        long maxIndex42 = arr.size() - 42;\n        long\
    \ maxIndex43 = arr.size() - 43;\n        long max", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long maxValue =\
    \ arr.get(arr.size() - 1);\n        long maxIndex = arr.size() - 1;\n        long\
    \ currentMaxValue = maxValue;\n        long currentMaxIndex = maxIndex;\n    \
    \    long currentMaxIndexValue = currentMaxValue;\n        long currentMaxIndexIndex\
    \ = 0;\n        while (currentMaxIndexIndex < k) {\n            if (currentMaxIndexIndex\
    \ == currentMaxIndex) {\n                result.add(currentMaxIndexValue);\n \
    \               currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   currentMaxIndexIndex++;\n                currentMaxIndexValue = currentMaxIndexIndexValue;\n\
    \                currentMaxIndexIndex++;\n                currentMaxIndexValue\
    \ = currentMaxIndexIndexValue;\n                currentMaxIndexIndex++;\n    \
    \            currentMaxIndexValue = currentMaxIndexIndexValue;\n             \
    \   ", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (maxIndex + k > arr.size()) {\n            k = arr.size() - maxIndex;\n\
    \        }\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(maxIndex\
    \ + i));\n        }\n        return result;", "        ArrayList<Long> res = new\
    \ ArrayList<>();\n        long max = 0;\n        long cur = 0;\n        long maxIndex\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            cur = arr.get(i);\n\
    \            if(cur > max) {\n                max = cur;\n                maxIndex\
    \ = i;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            cur = arr.get(i);\n            if(cur > max && i != maxIndex)\
    \ {\n                res.add(cur);\n            }\n        }\n        return res;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long max = Long.MIN_VALUE;\n\
    \        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n            if (min\
    \ > i) {\n                min = i;\n            }\n        }\n        if (max\
    \ > min) {\n            while (max > min) {\n                result.add(max);\n\
    \                max -= k;\n            }\n            while (min < max) {\n \
    \               result.add(min);\n                min += k;\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        if (arr.size() <= k) {\n            result.addAll(arr);\n\
    \            return result;\n        }\n        ArrayList<Long> tmp = new ArrayList<>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        long mid = min + (max - min) / 2;\n        long mid2 = mid\
    \ / 2;\n        long mid3 = mid * 2;\n        long mid4 = mid * 3;\n        long\
    \ mid5 = mid * 4;\n        long mid6 = mid * 5;\n        long mid7 = mid * 6;\n\
    \        long mid8 = mid * 7;\n        long mid9 = mid * 8;\n        long mid10\
    \ = mid * 9;\n        long mid11 = mid * 10;\n        long mid12 = mid * 11;\n\
    \        long mid13 = mid * 12;\n        long mid14 = mid * 13;\n        long\
    \ mid15 = mid * 14;\n        long mid16 = mid * 15;\n        long mid17 = mid\
    \ * 16;\n        long mid18 = mid * 17;\n        long mid19 = mid * 18;\n    \
    \    long mid20 = mid * 19;\n        long mid21 = mid * 20;\n        long mid22\
    \ = mid * 21;\n        long mid23 = mid * 22;\n        long mid24 = mid * 23;\n\
    \        long mid25 = mid * 24;\n        long mid26 = mid * 25;\n        long\
    \ mid27 = mid * 26;\n        long mid28 = mid * 27;\n        long mid29 = mid\
    \ * 28;\n        long mid30 = mid * 29;\n        long mid31 = mid * 30;\n    \
    \    long mid32 = mid * 31;\n        long mid33 = mid * 32;\n        long mid34\
    \ = mid * 33;\n        long mid35 = mid * 34;\n        long mid36 = mid * 35;\n\
    \        long mid37 = mid * 36;\n        long mid38 = mid * 37;\n        long\
    \ mid39 = mid * 38;\n        long mid40 = mid * 39;\n        long mid41 = mid\
    \ * 40;\n        long mid42 = mid * 41;\n        long mid43 = mid * 42;\n    \
    \    long mid44 = mid * ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max > k)\
    \ {\n            return result;\n        }\n        long mid = max / 2;\n    \
    \    ArrayList<Long> left = new ArrayList<>();\n        ArrayList<Long> right\
    \ = new ArrayList<>();\n        for (long i : arr) {\n            if (i < mid)\
    \ {\n                left.add(i);\n            } else {\n                right.add(i);\n\
    \            }\n        }\n        left = maximum(left, k);\n        right = maximum(right,\
    \ k);\n        ArrayList<Long> result = new ArrayList<>();\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n              \
    \  result.add(arr.get(maxIndex));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for(long i : arr) {\n            max\
    \ = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n      \
    \  long mid = min + (max - min) / 2;\n        for(long i : arr) {\n          \
    \  if(i == mid) {\n                result.add(i);\n            }\n           \
    \ else if(i < mid) {\n                result.add(i);\n            }\n        \
    \    else if(i > mid) {\n                result.add(mid);\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n   \
    \     for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                cur = i;\n           \
    \ }\n        }\n        if (max > k) {\n            max = k;\n        }\n    \
    \    result.add(max, cur);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long num :\
    \ arr) {\n            if (num > max) {\n                max = num;\n         \
    \   }\n        }\n        if (max > k) {\n            max = k;\n        }\n  \
    \      long start = 0;\n        long end = arr.size() - 1;\n        while (start\
    \ <= end) {\n            long mid = (start + end) / 2;\n            if (arr[mid]\
    \ > max) {\n                end = mid - 1;\n            } else {\n           \
    \     start = mid + 1;\n            }\n        }\n        if (start > end) {\n\
    \            while (start <= end) {\n                result.add(arr[start]);\n\
    \                start++;\n            }\n        } else {\n            while\
    \ (start <= end) {\n                result.add(arr[end]);\n                end--;\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        if (max > k) {\n            max = k;\n        }\n        long cur\
    \ = 0;\n        for (long i : arr) {\n            if (cur < i) {\n           \
    \     result.add(cur);\n                cur = i;\n            }\n        }\n \
    \       result.add(cur);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n        long maxIndex\
    \ = 0;\n        long currentMax = Long.MIN_VALUE;\n        long currentMaxIndex\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            currentMax\
    \ = arr.get(i);\n            currentMaxIndex = i;\n            for(int j = i +\
    \ 1; j < arr.size(); j++) {\n                long currentMax2 = arr.get(j);\n\
    \                if(currentMax2 > currentMax) {\n                    currentMax\
    \ = currentMax2;\n                    currentMaxIndex = j;\n                }\n\
    \            }\n            if(currentMaxIndex != i) {\n                result.add(currentMax);\n\
    \                max = Math.max(max, currentMax);\n                maxIndex =\
    \ currentMaxIndex;\n            }\n        }\n        if(maxIndex != arr.size())\
    \ {\n            result.add(max);\n            max = Math.max(max, arr.get(maxIndex));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = Long.MIN_VALUE;\n        long maxIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n       \
    \     if(curr > max) {\n                max = curr;\n                maxIndex\
    \ = i;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long curr = arr.get(i);\n            if(curr == max) {\n    \
    \            result.add(max);\n                result.add(maxIndex);\n       \
    \         break;\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n   \
    \     long max = arr.get(k - 1);\n        long maxIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n        \
    \        max = arr.get(i);\n                maxIndex = i;\n            }\n   \
    \     }\n        result.add(max);\n        result.add(arr.get(maxIndex));\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = -k;\n        }\n        if (max > min) {\n            max =\
    \ min;\n        }\n        if (max > k) {\n            max = k;\n        }\n \
    \       if (min < -k) {\n            min = -k;\n        }\n        if (max > min)\
    \ {\n            max = min;\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = -k;\n        }\n\
    \        if (max > min) {\n            max = min;\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < -k) {\n         \
    \   min = -k;\n        }\n        if (max > min) {\n            max = min;\n \
    \       }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < -k) {\n            min = -k;\n        }\n        if (max > min) {\n \
    \           max = min;\n        }\n        if (max > k) {\n            max = k;\n\
    \        }\n        if (min < -k) {\n            min = -k;\n        }\n      \
    \  if (max > min) {\n            max = min;\n        }\n        if (max > k) {\n\
    \            max = k;\n        }\n        if (min < -k) {\n            min = -k;\n\
    \        }\n        if (max > min) {\n            max = min;\n        }\n    \
    \    if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = -k;\n        }\n        if (max > min) {\n            max =\
    \ min;\n        }\n        if (max > k) {\n            max = k;\n        }\n \
    \       if (min < -k) {\n            min = -k;\n        }\n        if (max > min)\
    \ {\n            max = min;\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = -k;\n        }\n\
    \        if (max > min) {\n            max = min;\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < -k) {\n         \
    \   min = -k;\n        }\n        if (max > min) {\n            max = min;\n \
    \       }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < -k) {\n            min = -k;\n        }\n        if (max > min) {\n \
    \           max = min;\n        }\n        if (max > k) {\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = 0;\n        long maxIndex2 = -1;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n \
    \               maxIndex = i;\n            }\n            if (arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        if (maxIndex != arr.size() - 1) {\n            while\
    \ (maxIndex < arr.size() - 1) {\n                result.add(arr.get(maxIndex));\n\
    \                maxIndex++;\n            }\n        }\n        if (maxIndex2\
    \ != -1) {\n            while (maxIndex2 < arr.size() - 1) {\n               \
    \ result.add(arr.get(maxIndex2));\n                maxIndex2++;\n            }\n\
    \        }\n        if (result.size() > k) {\n            ArrayList<Long> temp\
    \ = new ArrayList<>();\n            for (int i = 0; i < result.size(); i++) {\n\
    \                if (i < k) {\n                    temp.add(result.get(i));\n\
    \                }\n            }\n            result = temp;\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long min = 0;\n   \
    \     long maxIndex = 0;\n        long minIndex = 0;\n        long maxValue =\
    \ arr.get(0);\n        long minValue = arr.get(0);\n        long maxIndexValue\
    \ = arr.get(0);\n        long minIndexValue = arr.get(0);\n        long maxValueIndex\
    \ = arr.get(0);\n        long minValueIndex = arr.get(0);\n        long maxValueValue\
    \ = arr.get(0);\n        long minValueValue = arr.get(0);\n        long maxIndexValueIndex\
    \ = arr.get(0);\n        long minIndexValueIndex = arr.get(0);\n        long maxValueIndexValue\
    \ = arr.get(0);\n        long minValueIndexValue = arr.get(0);\n        long maxIndexValueIndexValue\
    \ = arr.get(0);\n        long minIndexValueIndexValue = arr.get(0);\n        long\
    \ maxValueIndexValueIndex = arr.get(0);\n        long minValueIndexValueIndex\
    \ = arr.get(0);\n        long maxValueIndexValueIndexValue = arr.get(0);\n   \
    \     long minValueIndexValueIndexValue = arr.get(0);\n        long maxValueIndexValueIndexValueIndex\
    \ = arr.get(0);\n        long minValueIndexValueIndexValueIndex = arr.get(0);\n\
    \        long maxValueIndexValueIndexValueIndexValue = arr.get(0);\n        long\
    \ minValueIndexValueIndexValueIndexValue = arr.get(0);\n        long maxValueIndexValueIndexValueIndexValueIndex\
    \ = arr.get(0);\n        long minValueIndexValueIndexValueIndexValueIndex = arr.get(0);\n\
    \        long maxValueIndexValueIndexValueIndexValueIndexValue = arr.get(0);\n\
    \        long minValueIndexValueIndexValueIndexValueIndexValue = arr.get(0);\n\
    \        long maxValueIndexValueIndexValueIndexValueIndexValueIndex = arr.get(0);\n\
    \        long minValueIndexValueIndexValueIndexValueIndexValueIndex = arr.get(0);\n\
    \        long maxValueIndexValueIndexValueIndexValueIndexValueIndexValue = arr.get(0);\n\
    \        long minValueIndexValueIndexValueIndexValueIndexValueIndexValue = arr.get(0);\n\
    \        long maxValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = arr.get(0);\n        long minValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = arr.get(0);\n        long maxValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = arr.get(0);\n        long minValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = arr.get(0);\n        long maxValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = arr.get(0);\n        long minValueIndexValue", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMaxValue\
    \ = 0;\n        long currentMaxIndex = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxValue =\
    \ arr.get(i);\n                maxIndex = i;\n            }\n            if (arr.get(i)\
    \ == maxValue) {\n                currentMaxValue = arr.get(i);\n            \
    \    currentMaxIndex = i;\n            }\n        }\n        if (maxIndex - currentMaxIndex\
    \ >= k) {\n            for (int i = maxIndex; i > currentMaxIndex; i--) {\n  \
    \              result.add(arr.get(i));\n            }\n        } else {\n    \
    \        for (int i = currentMaxIndex + 1; i <= maxIndex; i++) {\n           \
    \     result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     while(maxIndex != k) {\n            result.add(max, maxIndex);\n       \
    \     maxIndex++;\n            max = arr.get(maxIndex);\n            maxIndex++;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                max = i;\n         \
    \   }\n            if (min > i) {\n                min = i;\n            }\n \
    \       }\n        if (max < k) {\n            max = k;\n        }\n        if\
    \ (min > k) {\n            min = k;\n        }\n        if (max > min) {\n   \
    \         long mid = (max + min) / 2;\n            ArrayList<Long> left = new\
    \ ArrayList<>();\n            ArrayList<Long> right = new ArrayList<>();\n   \
    \         for (long i : arr) {\n                if (i < mid) {\n             \
    \       left.add(i);\n                } else {\n                    right.add(i);\n\
    \                }\n            }\n            left.addAll(maximum(new ArrayList<>(left),\
    \ k - mid));\n            right.addAll(maximum(new ArrayList<>(right), k - mid));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k));\n            right.addAll(maximum(new\
    \ ArrayList<>(right), k));\n            left.addAll(maximum(new ArrayList<>(left),\
    \ k + mid));\n            right.addAll(maximum(new ArrayList<>(right), k + mid));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - mid));\n         \
    \   right.addAll(maximum(new ArrayList<>(right), k - mid));\n            left.addAll(maximum(new\
    \ ArrayList<>(left), k));\n            right.addAll(maximum(new ArrayList<>(right),\
    \ k));\n            left.addAll(maximum(new ArrayList<>(left), k + mid));\n  \
    \          right.addAll(maximum(new ArrayList<>(right), k + mid));\n         \
    \   left.addAll(maximum(new ArrayList<>(left), k - mid));\n            right.addAll(maximum(new\
    \ ArrayList<>(right), k - mid));\n            left.addAll(maximum(new ArrayList<>(left),\
    \ k));\n            right.addAll(maximum(new ArrayList<>(right), k));\n      \
    \      left.addAll(maximum(new ArrayList<>(left), k + mid));\n            right.addAll(maximum(new\
    \ ArrayList<>(right), k + mid));\n            left.addAll(maximum(new ArrayList<>(left),\
    \ k - mid));\n            right.addAll(maximum(new ArrayList<>(right), k - mid));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k));\n            right.addAll(maximum(new\
    \ ArrayList<>(right), k));\n            left.addAll(maximum(new ArrayList<>(left),\
    \ k + mid));\n            right.addAll(maximum(new ArrayList<>(right), k + mid));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - mid));\n         \
    \   right.addAll(maximum(new ArrayList<>(right), k - ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n        long maxIndex2\
    \ = 0;\n        long maxIndex3 = 0;\n        long maxIndex4 = 0;\n        long\
    \ maxIndex5 = 0;\n        long maxIndex6 = 0;\n        long maxIndex7 = 0;\n \
    \       long maxIndex8 = 0;\n        long maxIndex9 = 0;\n        long maxIndex10\
    \ = 0;\n        long maxIndex11 = 0;\n        long maxIndex12 = 0;\n        long\
    \ maxIndex13 = 0;\n        long maxIndex14 = 0;\n        long maxIndex15 = 0;\n\
    \        long maxIndex16 = 0;\n        long maxIndex17 = 0;\n        long maxIndex18\
    \ = 0;\n        long maxIndex19 = 0;\n        long maxIndex20 = 0;\n        long\
    \ maxIndex21 = 0;\n        long maxIndex22 = 0;\n        long maxIndex23 = 0;\n\
    \        long maxIndex24 = 0;\n        long maxIndex25 = 0;\n        long maxIndex26\
    \ = 0;\n        long maxIndex27 = 0;\n        long maxIndex28 = 0;\n        long\
    \ maxIndex29 = 0;\n        long maxIndex30 = 0;\n        long maxIndex31 = 0;\n\
    \        long maxIndex32 = 0;\n        long maxIndex33 = 0;\n        long maxIndex34\
    \ = 0;\n        long maxIndex35 = 0;\n        long maxIndex36 = 0;\n        long\
    \ maxIndex37 = 0;\n        long maxIndex38 = 0;\n        long maxIndex39 = 0;\n\
    \        long maxIndex40 = 0;\n        long maxIndex41 = 0;\n        long maxIndex42\
    \ = 0;\n        long maxIndex43 = 0;\n        long maxIndex44 = 0;\n        long\
    \ maxIndex45 = 0;\n        long maxIndex46 = 0;\n        long maxIndex47 = 0;\n\
    \        long maxIndex48 = 0;\n        long maxIndex49 = 0;\n        long maxIndex50\
    \ = 0;\n        long maxIndex51 = 0;\n        long maxIndex52 = 0;\n        long\
    \ maxIndex53 = 0;\n        long maxIndex54 = 0;\n        long maxIndex55 = 0;\n\
    \        long maxIndex56 = 0;\n        long maxIndex57 = 0;\n        long maxIndex58\
    \ = 0;\n        long maxIndex59 = 0;\n        long maxIndex60 = 0;\n        long\
    \ maxIndex61 = 0;\n        long maxIndex62 = 0;\n        long maxIndex63 = 0;\n\
    \        long maxIndex64 = 0;\n        long maxIndex65 = 0;\n        long maxIndex66\
    \ = 0;\n        long maxIndex67 = 0;\n        long maxIndex68 = 0;\n        long\
    \ maxIndex69 = 0;\n        long maxIndex70 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        if (arr.size()\
    \ > k) {\n            k = arr.size();\n        }\n        long max = 0;\n    \
    \    for (long i : arr) {\n            if (max < i) {\n                max = i;\n\
    \            }\n        }\n        result.add(max);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      for (long i : arr) {\n            if (max < i) {\n                max =\
    \ i;\n            }\n        }\n        if (max > k) {\n            return result;\n\
    \        }\n        long start = 0;\n        long end = arr.size() - 1;\n    \
    \    while (start <= end) {\n            long mid = (start + end) / 2;\n     \
    \       if (arr[mid] > k) {\n                end = mid - 1;\n            } else\
    \ {\n                start = mid + 1;\n            }\n        }\n        ArrayList<Long>\
    \ tmp = new ArrayList<>();\n        for (long i = start; i <= end; i++) {\n  \
    \          if (max < arr.get(i)) {\n                tmp.add(arr.get(i));\n   \
    \         }\n        }\n        result.addAll(tmp);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMax = maxValue;\n        long currentIndex = maxIndex;\n\
    \        boolean isMax = true;\n        while (currentIndex >= 0 && currentIndex\
    \ < arr.size()) {\n            long currentValue = arr.get(currentIndex);\n  \
    \          if (currentValue > currentMax) {\n                currentMax = currentValue;\n\
    \                maxIndex = currentIndex;\n                isMax = true;\n   \
    \         } else if (currentValue == currentMax) {\n                isMax = false;\n\
    \            }\n            currentIndex--;\n        }\n        if (isMax) {\n\
    \            result.add(maxValue);\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() > k) {\n            k = arr.size();\n        }\n     \
    \   long max = 0;\n        long cur = 0;\n        for (long i : arr) {\n     \
    \       if (cur < i) {\n                cur = i;\n            }\n            if\
    \ (max < cur) {\n                max = cur;\n            }\n        }\n      \
    \  result.add(max);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        for (long i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n             \
    \   maxValue = arr.get(i);\n                maxIndex = i;\n            }\n   \
    \     }\n        if (maxIndex - k >= 0) {\n            result.addAll(Arrays.asList(arr.get(maxIndex\
    \ - k)));\n        }\n        if (maxIndex + k <= arr.size()) {\n            result.addAll(Arrays.asList(arr.get(maxIndex\
    \ + k)));\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : arr) {\n            if (num > max) {\n              \
    \  max = num;\n            }\n            if (num < min) {\n                min\
    \ = num;\n            }\n        }\n        if (max > min) {\n            long\
    \ mid = max + (max - min) / 2;\n            while (k >= 0) {\n               \
    \ if (mid > max) {\n                    result.add(mid);\n                   \
    \ k--;\n                } else if (mid < min) {\n                    result.add(mid);\n\
    \                    k--;\n                } else {\n                    mid =\
    \ (mid + min) / 2;\n                }\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n\
    \                max = arr.get(i);\n                maxIndex = i;\n          \
    \  }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == max) {\n                result.add(arr.get(maxIndex));\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max > k)\
    \ {\n            max = k;\n        }\n        for (long i : arr) {\n         \
    \   if (max < i) {\n                result.add(i);\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        if (arr.size() > k) {\n            ArrayList<Long>\
    \ arr2 = new ArrayList<Long>(arr.subList(0, k));\n            arr2.addAll(arr.subList(k,\
    \ arr.size()));\n            result = maximum(arr2, k);\n        } else {\n  \
    \          result.addAll(arr);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = Long.MIN_VALUE;\n      \
    \  long cur = Long.MIN_VALUE;\n        for (long i : arr) {\n            if (max\
    \ < i) {\n                max = i;\n            }\n            if (cur < i) {\n\
    \                cur = i;\n            }\n        }\n        if (max != Long.MIN_VALUE\
    \ && cur != Long.MIN_VALUE) {\n            for (long i : arr) {\n            \
    \    if (max < i) {\n                    max = i;\n                }\n       \
    \         if (cur < i) {\n                    cur = i;\n                }\n  \
    \          }\n        }\n        if (max != Long.MIN_VALUE && cur != Long.MIN_VALUE)\
    \ {\n            while (max != Long.MIN_VALUE && cur != Long.MIN_VALUE) {\n  \
    \              if (max < cur) {\n                    result.add(max);\n      \
    \              max = Long.MIN_VALUE;\n                } else {\n             \
    \       result.add(cur);\n                    cur = Long.MIN_VALUE;\n        \
    \        }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        for (long i\
    \ : arr) {\n            if (max < i) {\n                max = i;\n           \
    \ }\n        }\n        if (max < k) {\n            max = k;\n        }\n    \
    \    long temp = 0;\n        for (long i : arr) {\n            if (temp < i) {\n\
    \                temp = i;\n            }\n        }\n        if (temp < k) {\n\
    \            temp = k;\n        }\n        long temp2 = 0;\n        for (long\
    \ i : arr) {\n            if (temp2 < i) {\n                temp2 = i;\n     \
    \       }\n        }\n        if (temp2 < k) {\n            temp2 = k;\n     \
    \   }\n        long temp3 = 0;\n        for (long i : arr) {\n            if (temp3\
    \ < i) {\n                temp3 = i;\n            }\n        }\n        if (temp3\
    \ < k) {\n            temp3 = k;\n        }\n        long temp4 = 0;\n       \
    \ for (long i : arr) {\n            if (temp4 < i) {\n                temp4 =\
    \ i;\n            }\n        }\n        if (temp4 < k) {\n            temp4 =\
    \ k;\n        }\n        long temp5 = 0;\n        for (long i : arr) {\n     \
    \       if (temp5 < i) {\n                temp5 = i;\n            }\n        }\n\
    \        if (temp5 < k) {\n            temp5 = k;\n        }\n        long temp6\
    \ = 0;\n        for (long i : arr) {\n            if (temp6 < i) {\n         \
    \       temp6 = i;\n            }\n        }\n        if (temp6 < k) {\n     \
    \       temp6 = k;\n        }\n        long temp7 = 0;\n        for (long i :\
    \ arr) {\n            if (temp7 < i) {\n                temp7 = i;\n         \
    \   }\n        }\n        if (temp7 < k) {\n            temp7 = k;\n        }\n\
    \        long temp8 = 0;\n        for (long i : arr) {\n            if (temp8\
    \ < i) {\n                temp8 = i;\n            }\n        }\n        if (temp8\
    \ < k) {\n            temp8 = k;\n        }\n        long temp9 = 0;\n       \
    \ for (long i : arr) {\n            if (temp9 < i) {\n                temp9 =\
    \ i;\n            }\n        }\n        if (temp9 < k) {\n            temp9 =\
    \ k;\n        }\n        long temp10 = 0;\n        for (long i : arr) {\n    \
    \        if (temp10 < i) {\n                temp10 = i;\n            }\n     \
    \   }\n        if (temp10 < k) {\n            temp10 = k;\n        }\n       \
    \ long temp11 = 0;\n        for (long i : arr) {\n            if (temp11 < i)\
    \ {\n                temp11 = i;\n            }\n        }\n        if (temp11\
    \ < k) {\n            temp11 = k;\n        }\n        long temp12 = 0;\n     \
    \   for (long i : arr) {\n            if (temp12 < i) {\n                temp12\
    \ = i;\n            }\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long min = 0;\n   \
    \     long sum = 0;\n        long count = 0;\n        for (long i : arr) {\n \
    \           sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n            if (sum < min) {\n                min = sum;\n   \
    \         }\n            count++;\n        }\n        if (count > k) {\n     \
    \       k = count;\n        }\n        long maxSum = max;\n        long minSum\
    \ = min;\n        long sum = 0;\n        for (long i : arr) {\n            sum\
    \ += i;\n            if (sum > maxSum) {\n                maxSum = sum;\n    \
    \        }\n            if (sum < minSum) {\n                minSum = sum;\n \
    \           }\n        }\n        long maxCount = k;\n        long minCount =\
    \ k;\n        for (long i : arr) {\n            if (sum > maxSum) {\n        \
    \        maxSum = sum;\n                maxCount = count;\n            }\n   \
    \         if (sum < minSum) {\n                minSum = sum;\n               \
    \ minCount = count;\n            }\n            count++;\n        }\n        if\
    \ (maxCount > minCount) {\n            k = maxCount;\n        }\n        if (k\
    \ == minCount) {\n            result.add(minSum);\n        }\n        if (k ==\
    \ maxCount) {\n            result.add(maxSum);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMax = maxValue;\n        long currentIndex = maxIndex;\n\
    \        while (currentIndex >= 0) {\n            if (currentMax > arr.get(currentIndex))\
    \ {\n                currentMax = arr.get(currentIndex);\n                currentIndex\
    \ = currentIndex - 1;\n            } else {\n                result.add(currentMax);\n\
    \                currentMax = maxValue;\n                currentIndex = maxIndex;\n\
    \            }\n        }\n        if (currentIndex < 0) {\n            result.add(currentMax);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n    \
    \    long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n    \
    \        if (arr.get(i) == max) {\n                maxIndex = i;\n           \
    \ }\n        }\n        long maxValue = arr.get(maxIndex);\n        long maxIndex2\
    \ = maxIndex;\n        while (maxIndex2 < arr.size() - 1) {\n            if (arr.get(maxIndex2)\
    \ == maxValue) {\n                maxIndex2++;\n            }\n        }\n   \
    \     long maxValue2 = arr.get(maxIndex2);\n        long maxIndex3 = maxIndex2;\n\
    \        while (maxIndex3 < arr.size() - 2) {\n            if (arr.get(maxIndex3)\
    \ == maxValue2) {\n                maxIndex3++;\n            }\n        }\n  \
    \      long maxValue3 = arr.get(maxIndex3);\n        long maxIndex4 = maxIndex3;\n\
    \        while (maxIndex4 < arr.size() - 3) {\n            if (arr.get(maxIndex4)\
    \ == maxValue3) {\n                maxIndex4++;\n            }\n        }\n  \
    \      long maxValue4 = arr.get(maxIndex4);\n        long maxIndex5 = maxIndex4;\n\
    \        while (maxIndex5 < arr.size() - 4) {\n            if (arr.get(maxIndex5)\
    \ == maxValue4) {\n                maxIndex5++;\n            }\n        }\n  \
    \      long maxValue5 = arr.get(maxIndex5);\n        long maxIndex6 = maxIndex5;\n\
    \        while (maxIndex6 < arr.size() - 5) {\n            if (arr.get(maxIndex6)\
    \ == maxValue5) {\n                maxIndex6++;\n            }\n        }\n  \
    \      long maxValue6 = arr.get(maxIndex6);\n        long maxIndex7 = maxIndex6;\n\
    \        while (maxIndex7 < arr.size() - 6) {\n            if (arr.get(maxIndex7)\
    \ == maxValue6) {\n                maxIndex7++;\n            }\n        }\n  \
    \      long maxValue7 = arr.get(maxIndex7);\n        long maxIndex8 = maxIndex7;\n\
    \        while (maxIndex8 < arr.size() - 7) {\n            if (arr.get(maxIndex8)\
    \ == maxValue7) {\n                maxIndex8++;\n            }\n        }\n  \
    \      long maxValue8 = arr.get(maxIndex8);\n        long maxIndex9 = maxIndex8;\n\
    \        while (maxIndex9 < arr.size() - 8) {\n            if (arr.get(maxIndex9)\
    \ == maxValue8) {\n                maxIndex9++;\n            }\n        }\n  \
    \      long maxValue9 = arr.get(maxIndex9);\n        long maxIndex10 = maxIndex9;\n\
    \        while (maxIndex10 < arr.size() - 9) {\n            if (arr.get(maxIndex10)\
    \ == maxValue9) {\n                ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        if (max > k) {\n            max = k;\n        }\n        for\
    \ (long i : arr) {\n            if (max < i) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long cur = 0;\n       \
    \ for (long i : arr) {\n            if (max < i) {\n                max = i;\n\
    \                cur = i;\n            }\n            if (cur > k) {\n       \
    \         break;\n            }\n        }\n        result.add(max);\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        long sum2 = 0;\n        long count2 = 0;\n        long\
    \ sum3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long count4\
    \ = 0;\n        long sum5 = 0;\n        long count5 = 0;\n        long sum6 =\
    \ 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long count7 =\
    \ 0;\n        long sum8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n\
    \        long count9 = 0;\n        long sum10 = 0;\n        long count10 = 0;\n\
    \        long sum11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n\
    \        long count12 = 0;\n        long sum13 = 0;\n        long count13 = 0;\n\
    \        long sum14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n\
    \        long count15 = 0;\n        long sum16 = 0;\n        long count16 = 0;\n\
    \        long sum17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n\
    \        long count18 = 0;\n        long sum19 = 0;\n        long count19 = 0;\n\
    \        long sum20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n\
    \        long count21 = 0;\n        long sum22 = 0;\n        long count22 = 0;\n\
    \        long sum23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n\
    \        long count24 = 0;\n        long sum25 = 0;\n        long count25 = 0;\n\
    \        long sum26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n\
    \        long count27 = 0;\n        long sum28 = 0;\n        long count28 = 0;\n\
    \        long sum29 = 0;\n        long count29 = 0;\n        long sum30 = 0;\n\
    \        long count30 = 0;\n        long sum31 = 0;\n        long count31 = 0;\n\
    \        long sum32 = 0;\n        long count32 = 0;\n        long sum33 = 0;\n\
    \        long count33 = 0;\n        long sum34 = 0;\n        long count34 = 0;\n\
    \        long sum35 = 0;\n        long count35 = 0;\n        long sum36 = 0;\n\
    \        long count36 = 0;\n        long sum37 = 0;\n        long count37 = 0;\n\
    \        long sum38 = 0;\n        long count38 = 0;\n        long sum39 = 0;\n\
    \        long count39 = 0;\n        long sum40 = 0;\n        long count40 = 0;\n\
    \        long sum41 = 0;\n        long count41 = 0;\n        long sum42 = 0;\n\
    \        long count42 = 0;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        ArrayList<Long> tmp = new ArrayList<>();\n \
    \       for (int i = 0; i < arr.size(); i++) {\n            if (i == maxIndex)\
    \ {\n                tmp.add(arr.get(i));\n            } else {\n            \
    \    tmp.add(arr.get(i));\n            }\n        }\n        result.addAll(tmp);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Collections.sort(arr);\n        long max = 0;\n        long maxIndex\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        for(int i = maxIndex; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \           }\n        }\n        result.add(max);\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n\
    \        long currentMax = 0;\n        long currentIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > maxValue) {\n   \
    \             currentMax = maxValue;\n                currentIndex = i;\n    \
    \        }\n            else if(arr.get(i) == maxValue) {\n                if(currentMax\
    \ < arr.get(i)) {\n                    currentMax = arr.get(i);\n            \
    \        currentIndex = i;\n                }\n            }\n        }\n    \
    \    while(currentIndex != k) {\n            result.add(currentMax);\n       \
    \     currentMax = arr.get(currentIndex);\n            currentIndex++;\n     \
    \   }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = - k;\n        }\n        if (max > min) {\n            for\
    \ (long i = max; i >= min; i--) {\n                res.add(i);\n            }\n\
    \        } else {\n            for (long i = max; i >= min; i--) {\n         \
    \       res.add(- i);\n            }\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (maxIndex == arr.size() - 1) {\n            result.add(max);\n      \
    \  } else {\n            result.add(max, maxIndex);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long\
    \ temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6\
    \ = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 =\
    \ 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12\
    \ = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15\
    \ = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18\
    \ = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21\
    \ = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24\
    \ = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27\
    \ = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30\
    \ = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33\
    \ = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36\
    \ = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39\
    \ = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42\
    \ = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45\
    \ = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48\
    \ = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51\
    \ = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54\
    \ = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57\
    \ = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60\
    \ = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63\
    \ = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66\
    \ = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69\
    \ = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72\
    \ = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75\
    \ = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78\
    \ = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81\
    \ = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     while(maxIndex < arr.size() && arr.size() > k) {\n            result.add(arr.get(maxIndex));\n\
    \            maxIndex++;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        long temp =\
    \ 0;\n        for (long i : arr) {\n            temp = i;\n            if (max\
    \ < temp) {\n                max = temp;\n            }\n        }\n        long\
    \ count = 0;\n        for (long i : arr) {\n            if (i == max) {\n    \
    \            count++;\n            }\n        }\n        if (count > k) {\n  \
    \          for (long i : arr) {\n                if (i == max) {\n           \
    \         result.add(i);\n                }\n            }\n        } else {\n\
    \            for (long i : arr) {\n                if (i == max) {\n         \
    \           result.add(max);\n                }\n            }\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentMaxValue = maxValue;\n\
    \        long currentMaxIndex = maxIndex;\n        long currentMax = maxValue;\n\
    \        long currentIndex = -1;\n        long currentValue = 0;\n        long\
    \ currentCount = 0;\n        boolean isMax = true;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean isMaxChanged = false;\n        boolean isMaxChanged\
    \ = false;\n        boolean ", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for(int i\
    \ = 0; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n\
    \            min = Math.min(min, arr.get(i));\n        }\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n           \
    \     result.add(max);\n                max = Long.MAX_VALUE;\n            }\n\
    \            if(arr.get(i) == min) {\n                result.add(min);\n     \
    \           min = Long.MAX_VALUE;\n            }\n        }\n        if(result.size()\
    \ > k) {\n            result = result.subList(0, k);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMax = maxValue;\n        long currentIndex = maxIndex;\n\
    \        long currentValue = maxValue;\n        boolean isMax = true;\n      \
    \  while (currentIndex >= 0) {\n            if (currentValue > maxValue) {\n \
    \               maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \            }\n            currentValue = arr.get(currentIndex);\n          \
    \  if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex--;\n\
    \        }\n        if (isMax) {\n            result.add(maxValue);\n        }\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long max = Long.MIN_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n        }\n      \
    \  if (k == max) {\n            return arr;\n        }\n        if (k > max) {\n\
    \            k = max;\n        }\n        long cur = Long.MIN_VALUE;\n       \
    \ for (long i : arr) {\n            if (cur < i) {\n                res.add(cur);\n\
    \                cur = i;\n            }\n            if (k == cur) {\n      \
    \          res.add(cur);\n                break;\n            }\n        }\n \
    \       return res;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long max = 0;\n        long maxIndex = 0;\n        long currentMax = -1;\n\
    \        long currentMaxIndex = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long current = arr.get(i);\n            if(current > max) {\n\
    \                max = current;\n                maxIndex = i;\n            }\n\
    \            else if(current == max) {\n                currentMax = current;\n\
    \                currentMaxIndex = i;\n            }\n        }\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n    \
    \        if(current > max) {\n                max = current;\n               \
    \ maxIndex = i;\n            }\n            else if(current == max) {\n      \
    \          currentMax = current;\n                currentMaxIndex = i;\n     \
    \       }\n        }\n        if(maxIndex == arr.size() - 1) {\n            result.add(max);\n\
    \        }\n        else {\n            result.add(max);\n            result.add(arr[maxIndex\
    \ + 1]);\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMaxValue\
    \ = maxValue;\n        long currentMaxIndex = maxIndex;\n        long currentMax\
    \ = maxValue;\n        long currentIndex = maxIndex;\n        long currentValue\
    \ = maxValue;\n        long currentElement = arr.get(maxIndex);\n        while\
    \ (currentIndex >= 0 && currentValue > currentElement) {\n            currentMaxValue\
    \ = currentMax;\n            currentMaxIndex = currentIndex;\n            currentMax\
    \ = currentValue;\n            currentIndex = currentIndex - 1;\n            currentValue\
    \ = currentElement;\n            currentElement = arr.get(currentIndex);\n   \
    \     }\n        if (currentIndex >= 0) {\n            currentMaxValue = currentMax;\n\
    \            currentMaxIndex = currentIndex;\n            currentMax = currentValue;\n\
    \        }\n        if (currentMaxIndex < k) {\n            result.add(currentMaxValue);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for(long i\
    \ : arr) {\n            max = Math.max(max, i);\n            min = Math.min(min,\
    \ i);\n        }\n        long mid = min + (max - min) / 2;\n        for(long\
    \ i : arr) {\n            if(i <= mid) {\n                result.add(i);\n   \
    \         }\n        }\n        Collections.sort(result);\n        return result.subList(0,\
    \ k);", "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max > k)\
    \ {\n            max = k;\n        }\n        for (long i : arr) {\n         \
    \   if (max < i) {\n                result.add(i);\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long currentMax = arr.get(0);\n        long currentMaxIndex = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ currentMax) {\n                currentMax = arr.get(i);\n                currentMaxIndex\
    \ = i;\n            }\n        }\n        long currentMaxValue = currentMax;\n\
    \        long currentMaxIndex = currentMaxIndex;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) == currentMaxValue) {\n     \
    \           result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);\n                result.add(currentMaxIndex);\n\
    \                result.add(currentMaxIndex);", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxValue = arr.get(i);\n                maxIndex = i;\n       \
    \     }\n        }\n        if (maxIndex + k > arr.size()) {\n            k =\
    \ arr.size() - maxIndex;\n        }\n        for (int i = 0; i < k; i++) {\n \
    \           result.add(arr.get(maxIndex + i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      for (long num : arr) {\n            if (num > max) {\n                max\
    \ = num;\n            }\n        }\n        if (max <= k) {\n            return\
    \ arr;\n        }\n        long mid = max / 2;\n        ArrayList<Long> left =\
    \ new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n   \
    \     for (long num : arr) {\n            if (num > mid) {\n                left.add(num);\n\
    \            } else {\n                right.add(num);\n            }\n      \
    \  }\n        left = maximum(left, k);\n        right = maximum(right, k);\n \
    \       ArrayList<Long> result = new ArrayList<>();\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long num :\
    \ arr) {\n            if (num > max) {\n                max = num;\n         \
    \   }\n        }\n        if (max > k) {\n            max = k;\n        }\n  \
    \      for (long num : arr) {\n            if (num > max) {\n                result.add(num);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        long cur = arr.get(0);\n        long maxIndex = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n  \
    \              max = arr.get(i);\n                maxIndex = i;\n            }\n\
    \        }\n        ArrayList<Long> tmp = new ArrayList<>();\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (i == maxIndex) {\n          \
    \      tmp.add(cur);\n            } else {\n                tmp.add(arr.get(i));\n\
    \            }\n        }\n        result.addAll(tmp);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = arr.get(0);\n        long minValue = arr.get(0);\n  \
    \      long maxIndexValue = arr.get(0);\n        long minIndexValue = arr.get(0);\n\
    \        long maxIndexValue2 = arr.get(0);\n        long minIndexValue2 = arr.get(0);\n\
    \        long maxValue2 = arr.get(0);\n        long minValue2 = arr.get(0);\n\
    \        long maxIndexValue3 = arr.get(0);\n        long minIndexValue3 = arr.get(0);\n\
    \        long maxValue3 = arr.get(0);\n        long minValue3 = arr.get(0);\n\
    \        long maxIndexValue4 = arr.get(0);\n        long minIndexValue4 = arr.get(0);\n\
    \        long maxValue4 = arr.get(0);\n        long minValue4 = arr.get(0);\n\
    \        long maxIndexValue5 = arr.get(0);\n        long minIndexValue5 = arr.get(0);\n\
    \        long maxValue5 = arr.get(0);\n        long minValue5 = arr.get(0);\n\
    \        long maxIndexValue6 = arr.get(0);\n        long minIndexValue6 = arr.get(0);\n\
    \        long maxValue6 = arr.get(0);\n        long minValue6 = arr.get(0);\n\
    \        long maxIndexValue7 = arr.get(0);\n        long minIndexValue7 = arr.get(0);\n\
    \        long maxValue7 = arr.get(0);\n        long minValue7 = arr.get(0);\n\
    \        long maxIndexValue8 = arr.get(0);\n        long minIndexValue8 = arr.get(0);\n\
    \        long maxValue8 = arr.get(0);\n        long minValue8 = arr.get(0);\n\
    \        long maxIndexValue9 = arr.get(0);\n        long minIndexValue9 = arr.get(0);\n\
    \        long maxValue9 = arr.get(0);\n        long minValue9 = arr.get(0);\n\
    \        long maxIndexValue10 = arr.get(0);\n        long minIndexValue10 = arr.get(0);\n\
    \        long maxValue10 = arr.get(0);\n        long minValue10 = arr.get(0);\n\
    \        long maxIndexValue11 = arr.get(0);\n        long minIndexValue11 = arr.get(0);\n\
    \        long maxValue11 = arr.get(0);\n        long minValue11 = arr.get(0);\n\
    \        long maxIndexValue12 = arr.get(0);\n        long minIndexValue12 = arr.get(0);\n\
    \        long maxValue12 = arr.get(0);\n        long minValue12 = arr.get(0);\n\
    \        long maxIndexValue13 = arr.get(0);\n        long minIndexValue13 = arr.get(0);\n\
    \        long maxValue13 = arr", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        for (long num : arr) {\n        \
    \    if (num > max) {\n                max = num;\n            }\n        }\n\
    \        long start = max;\n        long end = max;\n        for (long num : arr)\
    \ {\n            if (num > max) {\n                end = num;\n            }\n\
    \        }\n        if (end > k) {\n            end = k;\n        }\n        long\
    \ mid = start + (end - start) / 2;\n        ArrayList<Long> left = new ArrayList<>();\n\
    \        ArrayList<Long> right = new ArrayList<>();\n        for (long num : arr)\
    \ {\n            if (num > mid) {\n                left.add(num);\n          \
    \  } else {\n                right.add(num);\n            }\n        }\n     \
    \   left = maximum(left, k);\n        right = maximum(right, k);\n        ArrayList<Long>\
    \ result = new ArrayList<>(left);\n        result.addAll(right);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() <= k) {\n            result.addAll(arr);\n           \
    \ return result;\n        }\n        long maxValue = arr.get(k - 1);\n       \
    \ long maxIndex = k;\n        for (int i = k - 1; i >= 0; i--) {\n           \
    \ if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n     \
    \           maxIndex = i;\n            }\n        }\n        result.add(maxValue);\n\
    \        result.add(arr.get(maxIndex));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n            if (min > i) {\n                min = i;\n\
    \            }\n        }\n        if (max > min) {\n            long mid = (max\
    \ + min) / 2;\n            for (long i : arr) {\n                if (i > mid)\
    \ {\n                    result.add(i);\n                }\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long max = Long.MIN_VALUE;\n        long maxIndex = 0;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n       \
    \     if (curr > max) {\n                max = curr;\n                maxIndex\
    \ = i;\n            }\n        }\n        if (maxIndex == arr.size() - 1) {\n\
    \            res.add(max);\n            return res;\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        long mid = max / 2;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long curr = arr.get(i);\n            if (curr == mid) {\n       \
    \         left.add(curr);\n            } else if (curr > mid) {\n            \
    \    right.add(curr);\n            } else {\n                left.add(curr);\n\
    \                right.add(curr);\n            }\n        }\n        left = maximum(left,\
    \ k);\n        right = maximum(right, k);\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        res.addAll(left);\n        res.addAll(right);\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long maxCount = 0;\n        long currentCount = 0;\n        long\
    \ currentValue = arr.get(0);\n        long currentIndex = 0;\n        while (currentIndex\
    \ < arr.size()) {\n            if (currentValue == maxValue) {\n             \
    \   currentCount++;\n                if (currentCount > maxCount) {\n        \
    \            maxCount = currentCount;\n                    maxIndex = currentIndex;\n\
    \                }\n            } else if (currentValue > maxValue) {\n      \
    \          maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \                maxCount = 1;\n            } else if (currentValue == maxValue\
    \ && currentCount > maxCount) {\n                maxCount = currentCount;\n  \
    \              maxIndex = currentIndex;\n            }\n            currentValue\
    \ = arr.get(currentIndex + 1);\n            currentIndex++;\n        }\n     \
    \   result.add(maxValue);\n        result.add(maxIndex);\n        result.add(maxCount);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = arr.get(0);\n        long maxIndex = 0;\n        for(int i\
    \ = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n          \
    \      max = arr.get(i);\n                maxIndex = i;\n            }\n     \
    \   }\n        for(int i = maxIndex; i >= 0; i--) {\n            if(arr.get(i)\
    \ > max) {\n                result.add(max);\n                max = arr.get(i);\n\
    \            }\n        }\n        for(int i = maxIndex + 1; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                result.add(max);\n  \
    \              max = arr.get(i);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long max = 0;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n        }\n        if (max <= k) {\n            result.add(max);\n\
    \            return result;\n        }\n        long mid = max / 2;\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (long i : arr) {\n            if (i <= mid) {\n                left.add(i);\n\
    \            } else {\n                right.add(i);\n            }\n        }\n\
    \        left = maximum(left, k - mid);\n        right = maximum(right, k - mid);\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max =\
    \ 0;\n        long maxIndex = 0;\n        long maxValue = arr.get(0);\n      \
    \  for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue)\
    \ {\n                maxValue = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        if (maxValue > k) {\n            max = maxValue;\n\
    \            while (maxIndex < arr.size() && arr.get(maxIndex) < k) {\n      \
    \          maxIndex++;\n            }\n        }\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) == maxValue) {\n            \
    \    res.add(arr.get(i));\n            }\n        }\n        return res;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n \
    \       long min = 0;\n        long sum = 0;\n        long count = 0;\n      \
    \  long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79 =\
    \ 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n\
    \        long ", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  Collections.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for(long i : arr) {\n            if(i>max) {\n                max = i;\n\
    \                maxIndex = i;\n            }\n        }\n        while(maxIndex<k)\
    \ {\n            result.add(max);\n            maxIndex++;\n            max =\
    \ arr[maxIndex];\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        for(long i : arr) {\n\
    \            sum += i;\n            count += 1;\n            if(sum > k) {\n \
    \               max = sum;\n                min = i;\n            }\n        \
    \    else if(sum < k) {\n                max = sum;\n                min = i;\n\
    \            }\n            else if(sum == k) {\n                max = i;\n  \
    \          }\n        }\n        for(long i : arr) {\n            sum += i;\n\
    \            count += 1;\n            if(sum > k) {\n                max = sum;\n\
    \                min = i;\n            }\n            else if(sum < k) {\n   \
    \             max = sum;\n                min = i;\n            }\n          \
    \  else if(sum == k) {\n                max = i;\n            }\n        }\n \
    \       for(long i : arr) {\n            sum += i;\n            count += 1;\n\
    \            if(sum > k) {\n                max = sum;\n                min =\
    \ i;\n            }\n            else if(sum < k) {\n                max = sum;\n\
    \                min = i;\n            }\n            else if(sum == k) {\n  \
    \              max = i;\n            }\n        }\n        for(long i : arr) {\n\
    \            sum += i;\n            count += 1;\n            if(sum > k) {\n \
    \               max = sum;\n                min = i;\n            }\n        \
    \    else if(sum < k) {\n                max = sum;\n                min = i;\n\
    \            }\n            else if(sum == k) {\n                max = i;\n  \
    \          }\n        }\n        for(long i : arr) {\n            sum += i;\n\
    \            count += 1;\n            if(sum > k) {\n                max = sum;\n\
    \                min = i;\n            }\n            else if(sum < k) {\n   \
    \             max = sum;\n                min = i;\n            }\n          \
    \  else if(sum == k) {\n                max = i;\n            }\n        }\n \
    \       for(long i : arr) {\n            sum += i;\n            count += 1;\n\
    \            if(sum > k) {\n                max = sum;\n                min =\
    \ i;\n            }\n            else if(sum < k) {\n                max = sum;\n\
    \                min = i;\n            }\n            else if(sum == k) {\n  \
    \              max = i;\n            }\n        }\n        for(long i : arr) {\n\
    \            sum += i;\n            count += 1;\n            if(sum > k) {\n \
    \               max = sum;\n                min = i;\n            }\n        \
    \    else if(sum < k) {\n                max = sum;\n                min = i;\n\
    \            }\n            else if(sum == k) {\n                max = i;\n  \
    \          }\n        }\n        for(long i : arr) {\n            sum += i;\n\
    \            count ", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long ", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentMaxValue = maxValue;\n\
    \        long currentMaxIndex = maxIndex;\n        long currentMaxValueIndex =\
    \ -1;\n        long currentMaxValueIndexInArray = -1;\n        long currentMaxValueIndexInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArray = -1;\n      \
    \  long currentMaxValueIndexInArrayInArrayInArrayInArray = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMaxValueIndexInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArrayInArray\
    \ = -1;\n        long currentMax", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long temp = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        long count = 0;\n        for (long i : arr) {\n            if (i\
    \ == max) {\n                count++;\n            }\n        }\n        if (count\
    \ > k) {\n            temp = max;\n            max = count;\n            count\
    \ = temp;\n        }\n        long temp2 = max;\n        max = temp2;\n      \
    \  long temp3 = max;\n        max = temp3;\n        for (long i : arr) {\n   \
    \         if (i == max) {\n                result.add(i);\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ for (long i : arr) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n        }\n        if (max > k) {\n \
    \           max = k;\n        }\n        if (min < -k) {\n            min = k;\n\
    \        }\n        long temp = 0;\n        for (long i : arr) {\n           \
    \ temp = i;\n            if (temp > max) {\n                max = temp;\n    \
    \        }\n            if (temp < min) {\n                min = temp;\n     \
    \       }\n        }\n        if (max > k) {\n            max = k;\n        }\n\
    \        if (min < -k) {\n            min = k;\n        }\n        long temp2\
    \ = 0;\n        for (long i : arr) {\n            temp2 = i;\n            if (temp2\
    \ > max) {\n                max = temp2;\n            }\n            if (temp2\
    \ < min) {\n                min = temp2;\n            }\n        }\n        if\
    \ (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n    \
    \        min = k;\n        }\n        long temp3 = 0;\n        for (long i : arr)\
    \ {\n            temp3 = i;\n            if (temp3 > max) {\n                max\
    \ = temp3;\n            }\n            if (temp3 < min) {\n                min\
    \ = temp3;\n            }\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = k;\n        }\n\
    \        long temp4 = 0;\n        for (long i : arr) {\n            temp4 = i;\n\
    \            if (temp4 > max) {\n                max = temp4;\n            }\n\
    \            if (temp4 < min) {\n                min = temp4;\n            }\n\
    \        }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < -k) {\n            min = k;\n        }\n        long temp5 = 0;\n   \
    \     for (long i : arr) {\n            temp5 = i;\n            if (temp5 > max)\
    \ {\n                max = temp5;\n            }\n            if (temp5 < min)\
    \ {\n                min = temp5;\n            }\n        }\n        if (max >\
    \ k) {\n            max = k;\n        }\n        if (min < -k) {\n           \
    \ min = k;\n        }\n        long temp6 = 0;\n        for (long i : arr) {\n\
    \            temp6 = i;\n            if (temp6 > max) {\n                max =\
    \ temp6;\n            }\n            if (temp6 < min) {\n                min =\
    \ temp6;\n            }\n        }\n        if (max > k) {\n            max =\
    \ k;\n        }\n        if (min < -k) {\n            min = k;\n        }\n  \
    \      long temp7 = 0;\n        for (long ", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long max = 0;\n        long min = 0;\n        long\
    \ sum = 0;\n        for (long i : arr) {\n            sum += i;\n            if\
    \ (sum > max) {\n                max = sum;\n            }\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        long\
    \ half = max / 2;\n        long half2 = min / 2;\n        long half3 = max / 3;\n\
    \        long half4 = min / 3;\n        long half5 = max / 4;\n        long half6\
    \ = min / 4;\n        long half7 = max / 5;\n        long half8 = min / 5;\n \
    \       long half9 = max / 6;\n        long half10 = min / 6;\n        long half11\
    \ = max / 7;\n        long half12 = min / 7;\n        long half13 = max / 8;\n\
    \        long half14 = min / 8;\n        long half15 = max / 9;\n        long\
    \ half16 = min / 9;\n        long half17 = max / 10;\n        long half18 = min\
    \ / 10;\n        long half19 = max / 11;\n        long half20 = min / 11;\n  \
    \      long half21 = max / 12;\n        long half22 = min / 12;\n        long\
    \ half23 = max / 13;\n        long half24 = min / 13;\n        long half25 = max\
    \ / 14;\n        long half26 = min / 14;\n        long half27 = max / 15;\n  \
    \      long half28 = min / 15;\n        long half29 = max / 16;\n        long\
    \ half30 = min / 16;\n        long half31 = max / 17;\n        long half32 = min\
    \ / 17;\n        long half33 = max / 18;\n        long half34 = min / 18;\n  \
    \      long half35 = max / 19;\n        long half36 = min / 19;\n        long\
    \ half37 = max / 20;\n        long half38 = min / 20;\n        long half39 = max\
    \ / 21;\n        long half40 = min / 21;\n        long half41 = max / 22;\n  \
    \      long half42 = min / 22;\n        long half43 = max / 23;\n        long\
    \ half44 = min / 23;\n        long half45 = max / 24;\n        long half46 = min\
    \ / 24;\n        long half47 = max / 25;\n        long half48 = min / 25;\n  \
    \      long half49 = max / 26;\n        long half", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n   \
    \     long sum = 0;\n        long count = 0;\n        long sum2 = 0;\n       \
    \ long count2 = 0;\n        long sum3 = 0;\n        long count3 = 0;\n       \
    \ long sum4 = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long\
    \ count5 = 0;\n        long sum6 = 0;\n        long count6 = 0;\n        long\
    \ sum7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long count8\
    \ = 0;\n        long sum9 = 0;\n        long count9 = 0;\n        long sum10 =\
    \ 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long count11\
    \ = 0;\n        long sum12 = 0;\n        long count12 = 0;\n        long sum13\
    \ = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long count14\
    \ = 0;\n        long sum15 = 0;\n        long count15 = 0;\n        long sum16\
    \ = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long count17\
    \ = 0;\n        long sum18 = 0;\n        long count18 = 0;\n        long sum19\
    \ = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long count20\
    \ = 0;\n        long sum21 = 0;\n        long count21 = 0;\n        long sum22\
    \ = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long count23\
    \ = 0;\n        long sum24 = 0;\n        long count24 = 0;\n        long sum25\
    \ = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long count26\
    \ = 0;\n        long sum27 = 0;\n        long count27 = 0;\n        long sum28\
    \ = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long count29\
    \ = 0;\n        long sum30 = 0;\n        long count30 = 0;\n        long sum31\
    \ = 0;\n        long count31 = 0;\n        long sum32 = 0;\n        long count32\
    \ = 0;\n        long sum33 = 0;\n        long count33 = 0;\n        long sum34\
    \ = 0;\n        long count34 = 0;\n        long sum35 = 0;\n        long count35\
    \ = 0;\n        long sum36 = 0;\n        long count36 = 0;\n        long sum37\
    \ = 0;\n        long count37 = 0;\n        long sum38 = 0;\n        long count38\
    \ = 0;\n        long sum39 = 0;\n        long count39 = 0;\n        long sum40\
    \ = 0;\n        long count40 = 0;\n        long sum41 = 0;\n        long count41\
    \ = 0;\n        long sum42 = 0;\n        long count42 = 0;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        long sum2 = 0;\n    \
    \    long count2 = 0;\n        long sum3 = 0;\n        long count3 = 0;\n    \
    \    long sum4 = 0;\n        long count4 = 0;\n        long sum5 = 0;\n      \
    \  long count5 = 0;\n        long sum6 = 0;\n        long count6 = 0;\n      \
    \  long sum7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long\
    \ count8 = 0;\n        long sum9 = 0;\n        long count9 = 0;\n        long\
    \ sum10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long\
    \ count11 = 0;\n        long sum12 = 0;\n        long count12 = 0;\n        long\
    \ sum13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long\
    \ count14 = 0;\n        long sum15 = 0;\n        long count15 = 0;\n        long\
    \ sum16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long\
    \ count17 = 0;\n        long sum18 = 0;\n        long count18 = 0;\n        long\
    \ sum19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long\
    \ count20 = 0;\n        long sum21 = 0;\n        long count21 = 0;\n        long\
    \ sum22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long\
    \ count23 = 0;\n        long sum24 = 0;\n        long count24 = 0;\n        long\
    \ sum25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long\
    \ count26 = 0;\n        long sum27 = 0;\n        long count27 = 0;\n        long\
    \ sum28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long\
    \ count29 = 0;\n        long sum30 = 0;\n        long count30 = 0;\n        long\
    \ sum31 = 0;\n        long count31 = 0;\n        long sum32 = 0;\n        long\
    \ count32 = 0;\n        long sum33 = 0;\n        long count33 = 0;\n        long\
    \ sum34 = 0;\n        long count34 = 0;\n        long sum35 = 0;\n        long\
    \ count35 = 0;\n        long sum36 = 0;\n        long count36 = 0;\n        long\
    \ sum37 = 0;\n        long count37 = 0;\n        long sum38 = 0;\n        long\
    \ count38 = 0;\n        long sum39 = 0;\n        long count39 = 0;\n        long\
    \ sum40 = 0;\n        long count40 = 0;\n        long sum41 = 0;\n        long\
    \ count41 = 0;\n        long sum42 = 0;\n        long count42 = 0;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n   \
    \     long max = 0;\n        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (long i : arr) {\n            sum += i;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n            if (sum < min) {\n\
    \                min = sum;\n            }\n        }\n        long count = 0;\n\
    \        for (long i : arr) {\n            if (i == max) {\n                result.add(max);\n\
    \                count++;\n            }\n            if (i == min) {\n      \
    \          result.add(min);\n                count++;\n            }\n       \
    \ }\n        if (count > k) {\n            ArrayList<Long> temp = new ArrayList<>();\n\
    \            for (long i : arr) {\n                if (result.size() < k) {\n\
    \                    temp.add(i);\n                }\n            }\n        \
    \    result = temp;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        long temp = 0;\n    \
    \    long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n     \
    \   long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n      \
    \  long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n      \
    \  long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n    \
    \    long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n  \
    \      long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n        }\n        if (max < k) {\n            max = k;\n\
    \        }\n        long maxIndex = 0;\n        for (long i : arr) {\n       \
    \     if (i == max) {\n                result.add(max);\n                maxIndex++;\n\
    \            } else if (maxIndex < k) {\n                result.add(i);\n    \
    \            maxIndex++;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> res = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n    \
    \    }\n        return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max <= k)\
    \ {\n            return arr;\n        }\n        long start = max;\n        long\
    \ end = max;\n        long mid = max / 2;\n        while (true) {\n          \
    \  if (end - start <= k) {\n                result.add(mid);\n               \
    \ end = mid;\n                mid = max / 2;\n            } else {\n         \
    \       result.add(start);\n                start = mid;\n                mid\
    \ = mid / 2;\n            }\n            if (mid == 0) {\n                break;\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n   \
    \     long sum = 0;\n        for (long i : arr) {\n            sum += i;\n   \
    \         if (sum > max) {\n                max = sum;\n            }\n      \
    \      if (sum < min) {\n                min = sum;\n            }\n        }\n\
    \        if (k > max) {\n            k = max;\n        }\n        if (k < min)\
    \ {\n            k = min;\n        }\n        long cur = k;\n        long curSum\
    \ = sum;\n        while (cur > 0) {\n            long nextSum = sum - cur;\n \
    \           if (nextSum > curSum) {\n                res.add(cur);\n         \
    \       curSum = nextSum;\n            }\n            cur--;\n        }\n    \
    \    return res;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    Arrays.sort(arr);\n        if (arr.size() <= k) {\n            result.addAll(arr);\n\
    \            return result;\n        }\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        for (int i = 0; i <\
    \ arr.size() - k + 1; i++) {\n            long value = arr.get(i);\n         \
    \   if (value > maxValue) {\n                maxValue = value;\n             \
    \   maxIndex = i;\n            }\n        }\n        result.add(maxValue);\n \
    \       result.add(maxIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Collections.sort(arr);\n        long\
    \ max = 0;\n        for (long i : arr) {\n            if (max < i) {\n       \
    \         max = i;\n            }\n        }\n        long cur = max;\n      \
    \  while (cur < k) {\n            long next = Math.max(cur + k, 0);\n        \
    \    result.add(next);\n            cur = next;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for(long i : arr) {\n            max\
    \ = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n      \
    \  long mid = (min + max) / 2;\n        for(long i : arr) {\n            if(i\
    \ == mid) {\n                result.add(i);\n            }\n        }\n      \
    \  if(result.size() > k) {\n            ArrayList<Long> newResult = new ArrayList<>();\n\
    \            for(long i : result) {\n                if(i < mid) {\n         \
    \           newResult.add(i);\n                }\n            }\n            result\
    \ = newResult;\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > max) {\n                max = arr.get(i);\n       \
    \         maxIndex = i;\n            }\n        }\n        ArrayList<Long> maxList\
    \ = new ArrayList<>();\n        if (maxIndex - k > 0) {\n            maxList.addAll(Arrays.asList(arr.subList(0,\
    \ maxIndex - k)));\n        }\n        maxList.addAll(Arrays.asList(arr.subList(maxIndex\
    \ + k, arr.size())));\n        result.addAll(maxList);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (maxIndex + 1 < arr.size() && arr.get(maxIndex + 1) > arr.get(maxIndex))\
    \ {\n            max = arr.get(maxIndex + 1);\n            maxIndex = maxIndex\
    \ + 1;\n        }\n        if (maxIndex + 2 < arr.size() && arr.get(maxIndex +\
    \ 2) > arr.get(maxIndex + 1)) {\n            max = arr.get(maxIndex + 2);\n  \
    \          maxIndex = maxIndex + 2;\n        }\n        if (maxIndex + 3 < arr.size()\
    \ && arr.get(maxIndex + 3) > arr.get(maxIndex + 2)) {\n            max = arr.get(maxIndex\
    \ + 3);\n            maxIndex = maxIndex + 3;\n        }\n        if (maxIndex\
    \ + 4 < arr.size() && arr.get(maxIndex + 4) > arr.get(maxIndex + 3)) {\n     \
    \       max = arr.get(maxIndex + 4);\n            maxIndex = maxIndex + 4;\n \
    \       }\n        if (maxIndex + 5 < arr.size() && arr.get(maxIndex + 5) > arr.get(maxIndex\
    \ + 4)) {\n            max = arr.get(maxIndex + 5);\n            maxIndex = maxIndex\
    \ + 5;\n        }\n        if (maxIndex + 6 < arr.size() && arr.get(maxIndex +\
    \ 6) > arr.get(maxIndex + 5)) {\n            max = arr.get(maxIndex + 6);\n  \
    \          maxIndex = maxIndex + 6;\n        }\n        if (maxIndex + 7 < arr.size()\
    \ && arr.get(maxIndex + 7) > arr.get(maxIndex + 6)) {\n            max = arr.get(maxIndex\
    \ + 7);\n            maxIndex = maxIndex + 7;\n        }\n        if (maxIndex\
    \ + 8 < arr.size() && arr.get(maxIndex + 8) > arr.get(maxIndex + 7)) {\n     \
    \       max = arr.get(maxIndex + 8);\n            maxIndex = maxIndex + 8;\n \
    \       }\n        if (maxIndex + 9 < arr.size() && arr.get(maxIndex + 9) > arr.get(maxIndex\
    \ + 8)) {\n            max = arr.get(maxIndex + 9);\n            maxIndex = maxIndex\
    \ + 9;\n        }\n        if (maxIndex + 10 < arr.size() && arr.get(maxIndex\
    \ + 10) > arr.get(maxIndex + 9)) {\n            max = arr.get(maxIndex + 10);\n\
    \            maxIndex = maxIndex + 10;\n        }\n        if (maxIndex + 11 <\
    \ arr.size() && arr.get(maxIndex + 11) > arr.get(maxIndex + 10)) {\n         \
    \   max = arr.get(maxIndex + 11);\n            maxIndex = maxIndex + 11;\n   \
    \     }\n        if (max", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Collections.sort(arr);\n        if (arr.size() <= k) {\n            result.addAll(arr);\n\
    \            return result;\n        }\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long maxIndexValue =\
    \ arr.get(maxIndex);\n        while (maxIndex > 0) {\n            long value =\
    \ arr.get(maxIndex - 1);\n            if (value > maxValue) {\n              \
    \  maxValue = value;\n                maxIndex = maxIndex - 1;\n             \
    \   maxIndexValue = arr.get(maxIndex);\n            } else if (value == maxValue)\
    \ {\n                maxIndexValue = Math.max(maxIndexValue, arr.get(maxIndex));\n\
    \                maxIndex = maxIndex - 1;\n                maxIndexValue = arr.get(maxIndex);\n\
    \            }\n        }\n        result.add(maxValue);\n        result.add(maxIndexValue);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        long maxIndex = 0;\n        long minIndex = 0;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n               \
    \ max = arr.get(i);\n                maxIndex = i;\n            }\n          \
    \  if(arr.get(i) < min) {\n                min = arr.get(i);\n               \
    \ minIndex = i;\n            }\n        }\n        if(maxIndex - minIndex == k)\
    \ {\n            result.add(max);\n            return result;\n        }\n   \
    \     long mid = maxIndex + minIndex / 2;\n        ArrayList<Long> left = new\
    \ ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) < mid) {\n\
    \                left.add(arr.get(i));\n            } else {\n               \
    \ right.add(arr.get(i));\n            }\n        }\n        ArrayList<Long> leftResult\
    \ = maximum(left, k);\n        ArrayList<Long> rightResult = maximum(right, k);\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        result.addAll(leftResult);\n\
    \        result.addAll(rightResult);\n        result.add(max);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ long max = 0;\n        for (long i : arr) {\n            if (max < i) {\n  \
    \              max = i;\n            }\n        }\n        if (max >= k) {\n \
    \           for (long i : arr) {\n                if (max < i) {\n           \
    \         result.add(i);\n                }\n            }\n        } else {\n\
    \            for (long i : arr) {\n                if (max >= i) {\n         \
    \           result.add(i);\n                }\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long max = Long.MIN_VALUE;\n        for (long i : arr) {\n           \
    \ if (max < i) {\n                max = i;\n            }\n        }\n       \
    \ if (max != Long.MIN_VALUE) {\n            while (max != Long.MIN_VALUE && result.size()\
    \ < k) {\n                result.add(max);\n                max--;\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long max = 0;\n        long min = 0;\n        long sum\
    \ = 0;\n        long count = 0;\n        long sum2 = 0;\n        long count2 =\
    \ 0;\n        long sum3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n\
    \        long count4 = 0;\n        long sum5 = 0;\n        long count5 = 0;\n\
    \        long sum6 = 0;\n        long count6 = 0;\n        long sum7 = 0;\n  \
    \      long count7 = 0;\n        long sum8 = 0;\n        long count8 = 0;\n  \
    \      long sum9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n   \
    \     long count10 = 0;\n        long sum11 = 0;\n        long count11 = 0;\n\
    \        long sum12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n\
    \        long count13 = 0;\n        long sum14 = 0;\n        long count14 = 0;\n\
    \        long sum15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n\
    \        long count16 = 0;\n        long sum17 = 0;\n        long count17 = 0;\n\
    \        long sum18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n\
    \        long count19 = 0;\n        long sum20 = 0;\n        long count20 = 0;\n\
    \        long sum21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n\
    \        long count22 = 0;\n        long sum23 = 0;\n        long count23 = 0;\n\
    \        long sum24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n\
    \        long count25 = 0;\n        long sum26 = 0;\n        long count26 = 0;\n\
    \        long sum27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n\
    \        long count28 = 0;\n        long sum29 = 0;\n        long count29 = 0;\n\
    \        long sum30 = 0;\n        long count30 = 0;\n        long sum31 = 0;\n\
    \        long count31 = 0;\n        long sum32 = 0;\n        long count32 = 0;\n\
    \        long sum33 = 0;\n        long count33 = 0;\n        long sum34 = 0;\n\
    \        long count34 = 0;\n        long sum35 = 0;\n        long count35 = 0;\n\
    \        long sum36 = 0;\n        long count36 = 0;\n        long sum37 = 0;\n\
    \        long count37 = 0;\n        long sum38 = 0;\n        long count38 = 0;\n\
    \        long sum39 = 0;\n        long count39 = 0;\n        long sum40 = 0;\n\
    \        long count40 = 0;\n        long sum41 = 0;\n        long count41 = 0;\n\
    \        long sum42 = 0;\n        long count42 = 0;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        long start = max;\n        long end = max;\n        while (end\
    \ < arr.size()) {\n            end = end + k;\n            if (end > arr.size())\
    \ {\n                end = arr.size();\n            }\n            ArrayList<Long>\
    \ sub = new ArrayList<>();\n            for (long i = start; i <= end; i++) {\n\
    \                sub.add(arr.get(i));\n            }\n            result.addAll(sub);\n\
    \            start = end;\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        if (max > k) {\n            return res;\n        }\n        long\
    \ cur = max;\n        long curMax = max;\n        long curMin = max;\n       \
    \ long curSum = 0;\n        for (long i : arr) {\n            if (curSum + i >\
    \ curMax) {\n                curMax = curSum;\n                curMin = cur;\n\
    \                cur = i;\n                curSum = i;\n            } else if\
    \ (curSum + i < curMin) {\n                curMin = curSum;\n                cur\
    \ = i;\n                curSum = i;\n            }\n            curSum += i;\n\
    \        }\n        res.add(cur);\n        res.add(curMax);\n        res.add(curMin);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n    \
    \    for (long i : arr) {\n            if (i < min) {\n                min = i;\n\
    \            }\n            if (i > max) {\n                max = i;\n       \
    \     }\n        }\n        if (max < min) {\n            max = min;\n       \
    \ }\n        long mid = max / 2;\n        long mid2 = mid / 2;\n        long mid3\
    \ = mid2 / 2;\n        long mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n\
    \        long mid6 = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long mid8\
    \ = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n\
    \        long mid11 = mid10 / 2;\n        long mid12 = mid11 / 2;\n        long\
    \ mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n        long mid15 = mid14\
    \ / 2;\n        long mid16 = mid15 / 2;\n        long mid17 = mid16 / 2;\n   \
    \     long mid18 = mid17 / 2;\n        long mid19 = mid18 / 2;\n        long mid20\
    \ = mid19 / 2;\n        long mid21 = mid20 / 2;\n        long mid22 = mid21 /\
    \ 2;\n        long mid23 = mid22 / 2;\n        long mid24 = mid23 / 2;\n     \
    \   long mid25 = mid24 / 2;\n        long mid26 = mid25 / 2;\n        long mid27\
    \ = mid26 / 2;\n        long mid28 = mid27 / 2;\n        long mid29 = mid28 /\
    \ 2;\n        long mid30 = mid29 / 2;\n        long mid31 = mid30 / 2;\n     \
    \   long mid32 = mid31 / 2;\n        long mid33 = mid32 / 2;\n        long mid34\
    \ = mid33 / 2;\n        long mid35 = mid34 / 2;\n        long mid36 = mid35 /\
    \ 2;\n        long mid37 = mid36 / 2;\n        long mid38 = mid37 / 2;\n     \
    \   long mid39 = mid38 / 2;\n        long mid40 = mid39 / 2;\n        long mid41\
    \ = mid40 / 2;\n        long mid42 = mid41 / 2;\n        long mid43 = mid42 /\
    \ 2;\n        long mid44 = mid43 / 2;\n        long mid45 = mid44 / 2;\n     \
    \   long mid4", "        ArrayList<Long> result = new ArrayList<>();\n       \
    \ long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > max) {\n                max = arr.get(i);\n       \
    \     }\n        }\n        long maxCount = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount++;\n\
    \            }\n        }\n        if (maxCount > k) {\n            return result;\n\
    \        }\n        long maxCount2 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount2++;\n\
    \            }\n        }\n        if (maxCount2 > k) {\n            return result;\n\
    \        }\n        long maxCount3 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount3++;\n\
    \            }\n        }\n        if (maxCount3 > k) {\n            return result;\n\
    \        }\n        long maxCount4 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount4++;\n\
    \            }\n        }\n        if (maxCount4 > k) {\n            return result;\n\
    \        }\n        long maxCount5 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount5++;\n\
    \            }\n        }\n        if (maxCount5 > k) {\n            return result;\n\
    \        }\n        long maxCount6 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount6++;\n\
    \            }\n        }\n        if (maxCount6 > k) {\n            return result;\n\
    \        }\n        long maxCount7 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount7++;\n\
    \            }\n        }\n        if (maxCount7 > k) {\n            return result;\n\
    \        }\n        long maxCount8 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount8++;\n\
    \            }\n        }\n        if (maxCount8 > k) {\n            return result;\n\
    \        }\n        long maxCount9 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount9++;\n\
    \            }\n        }\n        if (maxCount9 > k) {\n            return result;\n\
    \        }\n        long maxCount10 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount10++;\n\
    \            }\n        }\n        if (maxCount10 > k) {\n            return result;\n\
    \        }\n        long maxCount11 = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == max) {\n                maxCount11", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n \
    \       long min = Long.MAX_VALUE;\n        for (long i : arr) {\n           \
    \ if (max < i) {\n                max = i;\n            }\n            if (min\
    \ > i) {\n                min = i;\n            }\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < k) {\n          \
    \  min = k;\n        }\n        if (max > min) {\n            long mid = max +\
    \ (max - min) / 2;\n            while (max < mid) {\n                result.add(mid);\n\
    \                max += mid;\n            }\n            while (min > mid) {\n\
    \                result.add(mid);\n                min -= mid;\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                max = i;\n         \
    \   }\n            if (min > i) {\n                min = i;\n            }\n \
    \       }\n        long mid = min + (max - min) / 2;\n        for (long i : arr)\
    \ {\n            if (i < mid) {\n                result.add(i);\n            }\n\
    \            if (i > mid) {\n                result.add(mid);\n            }\n\
    \        }\n        if (result.size() > k) {\n            result = result.subList(0,\
    \ k);\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n            }\n        }\n        result.add(max);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) == maxValue) {\n                maxIndex = i;\n  \
    \          }\n        }\n        if (maxIndex - k >= 0) {\n            result.addAll(Arrays.copyOfRange(arr,\
    \ maxIndex - k, maxIndex));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        long mid = 0;\n        for(long i : arr) {\n            max = Math.max(max,\
    \ i);\n            min = Math.min(min, i);\n        }\n        mid = (max - min)\
    \ / 2;\n        for(long i : arr) {\n            if(i <= mid) {\n            \
    \    result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result.subList(0, k);", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMax = maxValue;\n\
    \        long currentIndex = maxIndex;\n        boolean isMax = true;\n      \
    \  while (currentIndex >= 0) {\n            if (currentMax < arr.get(currentIndex))\
    \ {\n                currentMax = arr.get(currentIndex);\n                currentIndex\
    \ = currentIndex - 1;\n            } else {\n                isMax = false;\n\
    \                break;\n            }\n        }\n        if (isMax) {\n    \
    \        while (currentIndex >= 0) {\n                result.add(arr.get(currentIndex));\n\
    \                currentIndex = currentIndex - 1;\n            }\n        }\n\
    \        Arrays.sort(result);\n        if (result.size() > k) {\n            return\
    \ result.subList(0, k);\n        } else {\n            return result;\n      \
    \  }", "        ArrayList<Long> result = new ArrayList<>();\n        long max\
    \ = Long.MIN_VALUE;\n        for (long i : arr) {\n            if (max < i) {\n\
    \                max = i;\n            }\n        }\n        long size = arr.size();\n\
    \        long start = 0;\n        while (start + k <= size) {\n            long\
    \ end = start + k;\n            while (end < size && arr[end] > max) {\n     \
    \           end++;\n            }\n            result.add(max, start, end);\n\
    \            start = end;\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        for (long i : arr) {\n\
    \            sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n            if (sum < min) {\n                min = sum;\n   \
    \         }\n            count++;\n        }\n        if (count > k) {\n     \
    \       k = count;\n        }\n        long mid = min + (max - min) / 2;\n   \
    \     long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4 =\
    \ mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n  \
    \      long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9\
    \ = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n\
    \        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long\
    \ mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15\
    \ / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n   \
    \     long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21\
    \ = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 /\
    \ 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n     \
    \   long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28\
    \ = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 /\
    \ 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n     \
    \   long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35\
    \ = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 /\
    \ 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n     \
    \   long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42\
    \ = mid41 / 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / ",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long maxIndex2 = arr.size() - 2;\n        long maxIndex3 = arr.size()\
    \ - 3;\n        long maxIndex4 = arr.size() - 4;\n        long maxIndex5 = arr.size()\
    \ - 5;\n        long maxIndex6 = arr.size() - 6;\n        long maxIndex7 = arr.size()\
    \ - 7;\n        long maxIndex8 = arr.size() - 8;\n        long maxIndex9 = arr.size()\
    \ - 9;\n        long maxIndex10 = arr.size() - 10;\n        long maxIndex11 =\
    \ arr.size() - 11;\n        long maxIndex12 = arr.size() - 12;\n        long maxIndex13\
    \ = arr.size() - 13;\n        long maxIndex14 = arr.size() - 14;\n        long\
    \ maxIndex15 = arr.size() - 15;\n        long maxIndex16 = arr.size() - 16;\n\
    \        long maxIndex17 = arr.size() - 17;\n        long maxIndex18 = arr.size()\
    \ - 18;\n        long maxIndex19 = arr.size() - 19;\n        long maxIndex20 =\
    \ arr.size() - 20;\n        long maxIndex21 = arr.size() - 21;\n        long maxIndex22\
    \ = arr.size() - 22;\n        long maxIndex23 = arr.size() - 23;\n        long\
    \ maxIndex24 = arr.size() - 24;\n        long maxIndex25 = arr.size() - 25;\n\
    \        long maxIndex26 = arr.size() - 26;\n        long maxIndex27 = arr.size()\
    \ - 27;\n        long maxIndex28 = arr.size() - 28;\n        long maxIndex29 =\
    \ arr.size() - 29;\n        long maxIndex30 = arr.size() - 30;\n        long maxIndex31\
    \ = arr.size() - 31;\n        long maxIndex32 = arr.size() - 32;\n        long\
    \ maxIndex33 = arr.size() - 33;\n        long maxIndex34 = arr.size() - 34;\n\
    \        long maxIndex35 = arr.size() - 35;\n        long maxIndex36 = arr.size()\
    \ - 36;\n        long maxIndex37 = arr.size() - 37;\n        long maxIndex38 =\
    \ arr.size() - 38;\n        long maxIndex39 = arr.size() - 39;\n        long maxIndex40\
    \ = arr.size() - 40;\n        long maxIndex41 = arr.size() - 41;\n        long\
    \ maxIndex42 = arr.size() - 42;\n        long maxIndex43 = arr.size() - 43;\n\
    \        long "]
stop_tokens:
- "\n    }\n"

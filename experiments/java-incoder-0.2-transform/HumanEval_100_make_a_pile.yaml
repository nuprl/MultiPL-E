name: HumanEval_100_make_a_pile
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a positive integer n, you have to make a pile of n\
  \ levels of stones.\n    // The first level has n stones.\n    // The number of\
  \ stones in the next level is:\n    // - the next odd number if n is odd.\n    //\
  \ - the next even number if n is even.\n    // Return the number of stones in each\
  \ level in a list, where element at index\n    // i represents the number of stones\
  \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)5l, (long)7l)))\n    public static\
  \ ArrayList<Long> makeAPile(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(makeAPile((3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)5l, (long)7l)))));\n    assert(makeAPile((4l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)6l, (long)8l, (long)10l)))));\n\
  \    assert(makeAPile((5l)).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)7l, (long)9l, (long)11l, (long)13l)))));\n    assert(makeAPile((6l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)6l, (long)8l, (long)10l, (long)12l, (long)14l,\
  \ (long)16l)))));\n    assert(makeAPile((8l)).equals((new ArrayList<Long>(Arrays.asList((long)8l,\
  \ (long)10l, (long)12l, (long)14l, (long)16l, (long)18l, (long)20l, (long)22l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd\
    \ = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2 == 1) ? n : n + 1;\n\
    \        result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        if (n % 2 == 0) {\n            nextEven =\
    \ n;\n        } else {\n            nextOdd = n;\n        }\n        long nextLevel\
    \ = nextOdd;\n        while (nextLevel > 0) {\n            result.add(nextLevel);\n\
    \            nextLevel = nextLevel / 2;\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+2);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n / 2;\n     \
    \   long nextOdd = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd;\n        long nextEven;\n        if (n <= 0) {\n      \
    \      return result;\n        }\n        if (n % 2 == 0) {\n            nextEven\
    \ = n;\n            nextOdd = nextEven + 1;\n        } else {\n            nextEven\
    \ = n - 1;\n            nextOdd = nextEven + 1;\n        }\n        result.add(nextEven);\n\
    \        result.add(nextOdd);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n);\n          \
    \  return result;\n        }\n        long nextEven = n;\n        long nextOdd\
    \ = nextEven + 1;\n        while (nextEven < n) {\n            result.add(nextEven);\n\
    \            nextEven = nextEven + 2;\n        }\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = (n / 2) + 1;\n        long nextEven = n / 2;\n       \
    \ while (nextEven > 1) {\n            nextEven = nextEven / 2;\n            nextOdd\
    \ = nextOdd + 1;\n        }\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2 ==\
    \ 0) ? nextOddEvenEven : nextOddEvenEven+1;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEven", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7\
    \ ? n : (n&11)==11 ? n : (n&13)==13 ? n : (n&17)==17 ? n : (n&19)==19 ? n : (n&23)==23\
    \ ? n : (n&29)==29 ? n : (n&31)==31 ? n : (n&37)==37 ? n : (n&43)==43 ? n : (n&49)==49\
    \ ? n : (n&57)==57 ? n : (n&61)==61 ? n : (n&67)==67 ? n : (n&73)==73 ? n : (n&79)==79\
    \ ? n : (n&83)==83 ? n : (n&89)==89 ? n : (n&97)==97 ? n : (n&101)==101 ? n :\
    \ (n&107)==107 ? n : (n&113)==113 ? n : (n&119)==119 ? n : (n&127)==127 ? n :\
    \ (n&131)==131 ? n : (n&137)==137 ? n : (n&143)==143 ? n : (n&149)==149 ? n :\
    \ (n&157)==157 ? n : (n&163)==163 ? n : (n&169)==169 ? n : (n&175)==175 ? n :\
    \ (n&181)==181 ? n : (n&187)==187 ? n : (n&193)==193 ? n : (n&199)==199 ? n :\
    \ (n&205)==205 ? n : (n&211)==211 ? n : (n&217)==217 ? n : (n&223)==223 ? n :\
    \ (n&229)==229 ? n : (n&235)==235 ? n : (n&241)==241 ? n : (n&247)==247 ? n :\
    \ (n&253)==253 ? n : (n&259)==259 ? n : (n&267)==267 ? n : (n&273)==273 ? n :\
    \ (n&279)==279 ? n : (n&287)==287 ? n : (n&293)==293 ? n : (n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n);\n          \
    \  return result;\n        }\n        long nextEven = n / 2;\n        long nextOdd\
    \ = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = (n / 2) + 1;\n        long nextEven = n / 2;\n       \
    \ result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n\
    \ + 1l) / 2;\n        long nextEven = (n + 1l) % 2;\n        long nextLevel =\
    \ nextOdd;\n        long nextLevelCount = 1;\n        while (nextLevelCount <\
    \ n) {\n            result.add(nextLevelCount);\n            nextLevel = nextEven;\n\
    \            nextLevelCount += 2;\n            nextEven = (nextEven + 1l) % 2;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n+1;\n        long nextEven = (n%2 == 0) ? n+1 : n;\n        long\
    \ nextLevel = nextOdd;\n        while(nextLevel > 0) {\n            result.add(nextLevel);\n\
    \            nextLevel = nextEven;\n            nextEven = (n%2 == 0) ? n+1 :\
    \ n;\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (n <= 0) {\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            result.add(n);\n            return result;\n\
    \        }\n        long nextEven = n / 2;\n        long nextOdd = nextEven +\
    \ 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 0) {\n            return result;\n        }\n        if (n % 2 == 0) {\n\
    \            result.add(n);\n            return result;\n        }\n        long\
    \ nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n        result.add(nextEven);\n\
    \        result.add(nextOdd);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 1) ? n : (n+1);\n\
    \        long nextEven = (n%2 == 0) ? n : (n+1);\n        long nextOddEven = (nextOdd%2\
    \ == 0) ? nextOdd : nextEven;\n        long nextOddEvenNextOdd = (nextOddEven%2\
    \ == 0) ? nextOddEven : nextOdd;\n        long nextOddEvenNextOddNextOdd = (nextOddEvenNextOdd%2\
    \ == 0) ? nextOddEvenNextOdd : nextOdd;\n        long nextOddEvenNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOdd : nextOdd;\n\
    \        long nextOddEvenNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOdd : nextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOddNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOddNextOddNextOdd\
    \ : nextOddEvenNextOddNextOddNextOddNextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOddNextOddNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOddNextOddNextOddNextOdd\
    \ : nextOddEvenNextOddNextOddNextOddNextOddNextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd\
    \ : nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        long nextLevel = n;\n        while (nextLevel\
    \ > 0) {\n            if (nextLevel % 2 == 0) {\n                nextEven++;\n\
    \            } else {\n                nextOdd++;\n            }\n           \
    \ result.add(nextLevel);\n            nextLevel = nextLevel / 2;\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = n / 2;\n        long nextEven = nextOdd * 2;\n       \
    \ result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+2);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long nextOdd =\
    \ (n%2 == 1) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+1);\n \
    \       long nextOddEven = nextOdd + nextEven;\n        long nextOddEvenOdd =\
    \ nextOdd * nextOdd;\n        long nextOddEvenOddEven = nextOdd * nextEven * nextOdd;\n\
    \        long nextOddEvenOddEvenOdd = nextOdd * nextEven * nextOdd * nextOdd;\n\
    \        long nextOddEvenOddEvenOddEven = nextOdd * nextEven * nextOdd * nextEven\
    \ * nextOdd;\n        long nextOddEvenOddEvenOddEvenOdd = nextOdd * nextEven *\
    \ nextOdd * nextEven * nextOdd * nextOdd;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven * nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOdd * nextEven * nextOdd\
    \ * nextEven * nextOdd * nextEven * nextOdd * nextOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven\
    \ * nextOdd * nextEven;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven\
    \ * nextOdd * nextEven * nextOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven * nextOdd * nextEven\
    \ * nextOdd * nextEven * nextOdd * nextEven * nextOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOdd * nextEven * nextOdd * nextEven * nextOdd * ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n\
    \        long nextEven = (n%2 == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2\
    \ == 0) ? nextOdd : nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2\
    \ == 0) ? nextOddEven : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2\
    \ == 0) ? nextOddEvenEven : nextOddEvenEven+1;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2 ==\
    \ 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : ", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long nextOdd = (n&1)==1 ? n : (n&1==0 ? n+2 : n+1);\n\
    \        long nextEven = (n&2)==2 ? n : (n&2==0 ? n+4 : n+3);\n        long nextOddEven\
    \ = nextOdd+nextEven;\n        long nextOddEvenOdd = nextOddEven+nextOdd;\n  \
    \      long nextOddEvenOddEven = nextOddEvenOdd+nextEven;\n        long nextOddEvenOddEvenOdd\
    \ = nextOddEvenOddEven+nextOdd;\n        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOdd", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n / 2;\n     \
    \   long nextOdd = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2 ==\
    \ 0) ? nextOddEvenEven : nextOddEvenEven+1;\n        result.add(nextOdd);\n  \
    \      result.add(nextEven);\n        result.add(nextOddEven);\n        result.add(nextOddEvenEven);\n\
    \        result.add(nextOddEvenEvenEven);\n        result.add(nextOddEvenEvenEvenEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : n+1;\n        long nextEven = (n&1)==0 ? n : n-1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n&1)==1 ? n+1 : n;\n  \
    \      long nextEven = (n&2)==2 ? n+1 : n;\n        long nextOddEven = nextOdd+nextEven;\n\
    \        long nextOddEvenOdd = nextOddEven+nextOdd;\n        long nextOddEvenOddEven\
    \ = nextOddEvenOdd+nextOddEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven+nextOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddOdd+nextOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenO",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long nextOdd =\
    \ (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2 == 1) ? n : (n+1);\n \
    \       long nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextEven;\n        long\
    \ nextOddEvenNextOdd = (nextOddEven%2 == 0) ? nextOddEven : nextOdd;\n       \
    \ long nextOddEvenNextOddNextOdd = (nextOddEvenNextOdd%2 == 0) ? nextOddEvenNextOdd\
    \ : nextOdd;\n        long nextOddEvenNextOddNextOddNextOdd = (nextOddEvenNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOdd : nextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOddNextOdd\
    \ : nextOdd;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOddNextOdd : nextOddEvenNextOddNextOddNextOdd;\n\
    \        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOddNextOddNextOdd : nextOddEvenNextOddNextOddNextOddNextOdd;\n\
    \        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd : nextOddEvenNextOddNextOddNextOddNextOddNextOdd;\n\
    \        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOddNext", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n + 1;\n        long nextEven = (n%2 == 1) ? n : n + 1;\n      \
    \  long nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextOdd + 1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        result.add(nextOddEven);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 0) {\n            return result;\n        }\n        long nextOdd = (n +\
    \ 1) & 1;\n        long nextEven = (n + 1) >> 1;\n        if (nextOdd > 0) {\n\
    \            result.add(nextOdd);\n        }\n        if (nextEven > 0) {\n  \
    \          result.add(nextEven);\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2 ==\
    \ 1) ? n : n+1;\n        long nextEven = (n%2 == 0) ? n : n+1;\n        long nextOddEven\
    \ = nextOdd + nextEven;\n        long nextOddEvenOdd = nextOddEven + nextOdd;\n\
    \        long nextOddEvenOddEven = nextOddEvenOdd + nextOddEven;\n        long\
    \ nextOddEvenOddEvenOdd = nextOddEvenOddEven + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEven + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOdd;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven +\
    \ nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n        ", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n + 1)\
    \ / 2;\n        long nextEven = (n + 2) / 2;\n        if (n % 2 == 0) {\n    \
    \        result.add(nextEven);\n        } else {\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long nextLevel\
    \ = n;\n        while(nextLevel > 0) {\n            if(nextLevel % 2 == 0) {\n\
    \                nextEven = nextLevel;\n            } else {\n               \
    \ nextOdd = nextLevel;\n            }\n            result.add(nextLevel);\n  \
    \          nextLevel = nextEven + nextOdd;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          result.add(0l);\n            return result;\n        }\n        long\
    \ nextEven = n / 2;\n        long nextOdd = n % 2;\n        if (nextEven % 2 ==\
    \ 0) {\n            result.add(nextEven);\n        } else {\n            result.add(nextOdd);\n\
    \        }\n        long nextEven = n / 2;\n        long nextOdd = n % 2;\n  \
    \      if (nextEven % 2 == 0) {\n            result.add(nextEven);\n        }\
    \ else {\n            result.add(nextOdd);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n\
    \ + 1) / 2;\n        long nextEven = (n + 2) / 2;\n        if (n % 2 == 0) {\n\
    \            result.add(nextEven);\n        } else {\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextOdd\
    \ = (n & 1) == 1 ? n : n + 1;\n        long nextEven = n & 1 == 0 ? n : n + 2;\n\
    \        result.add((long) nextOdd);\n        result.add((long) nextEven);\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&1)==0 ? n*2 : n*2+1;\n        long nextEven\
    \ = (n&2)==2 ? n : (n&2)==0 ? n*4 : n*4+2;\n        long nextOddEven = nextOdd+nextEven;\n\
    \        long nextOddEvenOdd = nextOddEven+nextOdd;\n        long nextOddEvenOddEven\
    \ = nextOddEvenOdd+nextEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOdd+nextEven;\n  \
    \      long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenO", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextEven = n / 2;\n        long nextOdd = n % 2;\n        if (nextEven\
    \ > nextOdd) {\n            result.add(nextEven);\n            result.add(nextOdd);\n\
    \        } else {\n            result.add(nextOdd);\n            result.add(nextEven);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = (n / 2) + 1;\n        long nextEven = (n / 2) - 1;\n \
    \       result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        if (n % 2 == 0) {\n            nextEven =\
    \ n;\n        } else {\n            nextOdd = n;\n        }\n        long nextLevel\
    \ = nextOdd;\n        while (nextLevel > 0) {\n            long nextLevelOdd =\
    \ nextLevel % 2 == 0 ? nextLevel : nextLevel - 1;\n            long nextLevelEven\
    \ = nextLevel % 2 == 0 ? nextLevel + 1 : nextLevel;\n            result.add(nextLevelOdd);\n\
    \            result.add(nextLevelEven);\n            nextLevel = nextLevelEven;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long currentLevel\
    \ = n;\n        while (currentLevel > 0) {\n            if (currentLevel % 2 ==\
    \ 0) {\n                nextEven = currentLevel;\n            } else {\n     \
    \           nextOdd = currentLevel;\n            }\n            result.add(nextOdd);\n\
    \            result.add(nextEven);\n            currentLevel--;\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextOdd\
    \ = n % 2 == 0 ? n : n + 1;\n        long nextEven = n % 2 == 0 ? n + 1 : n;\n\
    \        result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n\
    \ + 1) / 2;\n        long nextEven = (n + 1) % 2;\n        if (n >= 1) {\n   \
    \         result.add(nextOdd);\n        }\n        if (n >= 2) {\n           \
    \ result.add(nextEven);\n        }\n        if (n >= 3) {\n            result.add(nextOdd\
    \ + nextEven);\n        }\n        if (n >= 4) {\n            result.add(nextOdd\
    \ + nextEven + nextOdd + nextEven);\n        }\n        if (n >= 5) {\n      \
    \      result.add(nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n\
    \        }\n        if (n >= 6) {\n            result.add(nextOdd + nextEven +\
    \ nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n        }\n\
    \        if (n >= 7) {\n            result.add(nextOdd + nextEven + nextOdd +\
    \ nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n\
    \        }\n        if (n >= 8) {\n            result.add(nextOdd + nextEven +\
    \ nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven\
    \ + nextOdd + nextEven);\n        }\n        if (n >= 9) {\n            result.add(nextOdd\
    \ + nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven +\
    \ nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n        }\n\
    \        if (n >= 10) {\n            result.add(nextOdd + nextEven + nextOdd +\
    \ nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd\
    \ + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n        }\n        if\
    \ (n >= 11) {\n            result.add(nextOdd + nextEven + nextOdd + nextEven\
    \ + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven\
    \ + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven);\n        }\n\
    \        if (n >= 12) {\n            result.add(nextOdd + nextEven + nextOdd +\
    \ nextEven + nextOdd + nextEven + nextOdd + nextEven + nextOdd + nextEven + ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2==0)\
    \ ? n : (n+1);\n        long nextEven = (n%2==0) ? n : (n+2);\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n\
    \        long nextEven = (n%2 == 1) ? n : n + 1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextEven = n / 2;\n        long nextOdd\
    \ = n % 2;\n        if (nextEven % 2 == 0) {\n            result.add(nextEven);\n\
    \        } else {\n            result.add(nextOdd);\n        }\n        if (n\
    \ != 1) {\n            result.add(n - 1);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : (n&3==3 ? n : (n&7==7 ? n : (n&15==15 ? n : (n&31==31 ? n : (n&63==63\
    \ ? n : (n&127==127 ? n : (n&255==255 ? n : (n&511==511 ? n : (n&1023==1023 ?\
    \ n : (n&2047==2047 ? n : (n&4095==4095 ? n : (n&8191==8191 ? n : (n&16383==16383\
    \ ? n : (n&32767==32767 ? n : (n&65535==65535 ? n : (n&131071==131071 ? n : (n&262143==262143\
    \ ? n : (n&524287==524287 ? n : (n&1048575==1048575 ? n : (n&2097151==2097151\
    \ ? n : (n&4194303==4194303 ? n : (n&8388607==8388607 ? n : (n&16777215==16777215\
    \ ? n : (n&33554431==33554431 ? n : (n&67108863==67108863 ? n : (n&134217727==134217727\
    \ ? n : (n&268435455==268435455 ? n : (n&536870911==536870911 ? n : (n&1073741823==1073741823\
    \ ? n : (n&2147483647==2147483647 ? n : (n&4294967291==4294967291 ? n : (n&8589934591==8589934591\
    \ ? n : (n&17179869183==17179869183 ? n : (n&34359738367==34359738367 ? n : (n&68719476735==68719476735\
    \ ? n : (n&1374389534731==1374389534731 ? n : (n&268435455143==268435455143 ?\
    \ n : (n&536870911143==536870911143 ? n : (n&1073741823143==1073741823143 ? n ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextEven = n;\n\
    \        long nextOdd = n;\n        while (nextEven % 2 == 0) {\n            nextEven\
    \ /= 2;\n            result.add(nextEven);\n        }\n        while (nextOdd\
    \ % 2 == 1) {\n            nextOdd /= 2;\n            result.add(nextOdd);\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 1) ? n : n+1;\n        long nextEven = (n%2 ==\
    \ 0) ? n : n+1;\n        long nextOddEven = nextOdd + nextEven;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        result.add(nextOddEven);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ nextOdd;\n        long nextEven;\n        if (n % 2 == 0) {\n            nextEven\
    \ = n;\n            nextOdd = n / 2;\n        } else {\n            nextEven =\
    \ n / 2;\n            nextOdd = n;\n        }\n        result.add(nextOdd);\n\
    \        while (nextEven > 1) {\n            result.add(nextEven);\n         \
    \   nextEven = nextEven / 2;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 1) ? n : n+1;\n\
    \        long nextEven = (n%2 == 0) ? n : n+1;\n        long nextOddEven = nextOdd;\n\
    \        long nextOddEvenOdd = nextEven;\n        long nextOddEvenOddEven = nextOddEven;\n\
    \        long nextOddEvenOddEvenOdd = nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOdd", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n + 1) / 2;\n        long nextEven = (n + 1) - (nextOdd\
    \ * 2);\n        if (n % 2 == 0) {\n            result.add(nextEven);\n      \
    \  } else {\n            result.add(nextOdd);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextEven = n\
    \ / 2;\n        long nextOdd = n % 2;\n        if (nextEven % 2 == 0) {\n    \
    \        result.add(nextEven);\n        }\n        if (nextOdd % 2 == 1) {\n \
    \           result.add(nextOdd);\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n      \
    \      return result;\n        }\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextOdd = (n / 2) + 1;\n\
    \        long nextEven = n / 2;\n        while (nextEven < n) {\n            nextEven\
    \ += 2;\n        }\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2 ==\
    \ 0) ? nextOddEvenEven : nextOddEvenEven+1;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2 ==\
    \ 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : ", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (n == 0) {\n            result.add(0l);\n   \
    \         return result;\n        }\n        ArrayList<Long> level = new ArrayList<Long>();\n\
    \        level.add(0l);\n        long nextOdd = 1l;\n        long nextEven = 1l;\n\
    \        while (n > 0) {\n            level.add(nextOdd);\n            if (n %\
    \ 2 == 0) {\n                nextEven++;\n            }\n            n /= 2;\n\
    \        }\n        result.addAll(level);\n        result.add(nextEven);\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n + 1) / 2;\n        long nextEven = (n + 1) % 2;\n \
    \       if (n > 0) {\n            result.add((long) n);\n        }\n        if\
    \ (n > 0) {\n            result.add((long) nextOdd);\n        }\n        if (n\
    \ > 0) {\n            result.add((long) nextEven);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2 == 0) ? n +\
    \ 1 : n;\n        long nextLevel = nextOdd;\n        while(nextLevel > 0) {\n\
    \            result.add(nextLevel);\n            nextLevel = nextEven;\n     \
    \       nextEven = (n%2 == 0) ? n + 1 : n;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n\
    \ + 1) / 2;\n        long nextEven = (n + 1) % 2;\n        if (nextOdd > nextEven)\
    \ {\n            result.add(nextOdd);\n            result.add(nextEven);\n   \
    \     } else {\n            result.add(nextEven);\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n+1 : n;\n        long nextEven = (n&2)==2\
    \ ? n+2 : n;\n        long nextNextOdd = (n&3)==3 ? n+3 : n;\n        long nextNextEven\
    \ = (n&4)==4 ? n+4 : n;\n        long nextNextNextOdd = (n&5)==5 ? n+5 : n;\n\
    \        long nextNextNextEven = (n&6)==6 ? n+6 : n;\n        long nextNextNextNextOdd\
    \ = (n&7)==7 ? n+7 : n;\n        long nextNextNextNextEven = (n&8)==8 ? n+8 :\
    \ n;\n        long nextNextNextNextNextOdd = (n&9)==9 ? n+9 : n;\n        long\
    \ nextNextNextNextNextEven = (n&10)==10 ? n+10 : n;\n        long nextNextNextNextNextNextOdd\
    \ = (n&11)==11 ? n+11 : n;\n        long nextNextNextNextNextNextEven = (n&12)==12\
    \ ? n+12 : n;\n        long nextNextNextNextNextNextNextOdd = (n&13)==13 ? n+13\
    \ : n;\n        long nextNextNextNextNextNextNextEven = (n&14)==14 ? n+14 : n;\n\
    \        long nextNextNextNextNextNextNextNextOdd = (n&15)==15 ? n+15 : n;\n \
    \       long nextNextNextNextNextNextNextNextEven = (n&16)==16 ? n+16 : n;\n \
    \       long nextNextNextNextNextNextNextNextOdd = (n&17)==17 ? n+17 : n;\n  \
    \      long nextNextNextNextNextNextNextNextEven = (n&18)==18 ? n+18 : n;\n  \
    \      long nextNextNextNextNextNextNextNextOdd = (n&19)==19 ? n+19 : n;\n   \
    \     long nextNextNextNextNextNextNextNextEven = (n&20)==20 ? n+20 : n;\n   \
    \     long nextNextNextNextNextNextNextNextOdd = (n&21)==21 ? n+21 : n;\n    \
    \    long nextNextNextNextNextNextNextNextEven = (n&22)==22 ? n+22 : n;\n    \
    \    long nextNextNextNextNextNextNextNextOdd = (n&23)==23 ? n+23 ", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long nextOdd;\n       \
    \ long nextEven;\n        if (n % 2 == 0) {\n            nextEven = n;\n     \
    \       nextOdd = n - 1;\n        } else {\n            nextEven = n + 1;\n  \
    \          nextOdd = n;\n        }\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n+1;\n        long nextEven = (n%2 ==\
    \ 1) ? n : n+1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextOdd+1;\n\
    \        long nextOddEvenOdd = (nextOddEven%2 == 0) ? nextOddEven : nextOddEven+1;\n\
    \        long nextOddEvenOddEven = (nextOddEvenOdd%2 == 0) ? nextOddEvenOdd :\
    \ nextOddEvenOdd+1;\n        long nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEven : nextOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd : nextOddEvenOddEvenOdd+1;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2 ==\
    \ 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven+1;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOddEven ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n + 1;\n        long nextEven = (n%2 == 0) ? n + 1 : n;\n      \
    \  long nextOddEven = (n%2 == 0) ? nextEven : nextOdd;\n        long nextOddEvenOdd\
    \ = (n%2 == 0) ? nextOddEven : nextOdd;\n        long nextOddEvenOddEven = (n%2\
    \ == 0) ? nextOddEvenOdd : nextOddEvenOdd;\n        long nextOddEvenOddEvenOdd\
    \ = (n%2 == 0) ? nextOddEvenOddEven : nextOddEvenOddOdd;\n        long nextOddEvenOddEvenOddEven\
    \ = (n%2 == 0) ? nextOddEvenOddEvenOdd : nextOddEvenOddEvenOddOdd;\n        long\
    \ nextOddEvenOddEvenOddEvenOdd = (n%2 == 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = (n%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (n%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = (n%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOddOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (n%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = (n%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOddEvenOddO", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven = 0;\n\
    \        long nextNextOdd = 0;\n        long nextNextEven = 0;\n        long nextNextNextOdd\
    \ = 0;\n        long nextNextNextEven = 0;\n        long nextNextNextNextOdd =\
    \ 0;\n        long nextNextNextNextEven = 0;\n        long nextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNextNextNextNextNextOdd\
    \ = 0;\n        long nextNextNextNextNextNextEven = 0;\n        long nextNext",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : (n&3==3 ? n : (n&7==7 ? n : n&15==15 ? n : n&31==31 ? n : n&63==63 ? n\
    \ : n&127==127 ? n : n&255==255 ? n : n&511==511 ? n : n&1023==1023 ? n : n&2047==2047\
    \ ? n : n&4095==4095 ? n : n&8191==8191 ? n : n&16383==16383 ? n : n&32767==32767\
    \ ? n : n&65535==65535 ? n : n&131071==131071 ? n : n&262143==262143 ? n : n&524287==524287\
    \ ? n : n&1048575==1048575 ? n : n&2097151==2097151 ? n : n&4194303==4194303 ?\
    \ n : n&8388607==8388607 ? n : n&16777215==16777215 ? n : n&33554431==33554431\
    \ ? n : n&67108863==67108863 ? n : n&134217727==134217727 ? n : n&268435455==268435455\
    \ ? n : n&536870911==536870911 ? n : n&1073741823==1073741823 ? n : n&2147483647==2147483647\
    \ ? n : n&4294967311==4294967311) ? n : n&8589934591==8589934591 ? n : n&17179869183==17179869183\
    \ ? n : n&34359738367==34359738367 ? n : n&68719476735==68719476735 ? n : n&13743895347==13743895347\
    \ ? n : n&274877906935==274877906935 ? n : n&549755813887==549755813887 ? n :\
    \ n&1099511627775==1099511627775 ? n : n&", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n+1;\n        long\
    \ nextEven = (n%2 == 1) ? n : n+1;\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n+1 : n;\n        long nextLevel = nextOdd;\n        while(nextLevel\
    \ < nextEven) {\n            result.add(nextLevel);\n            nextLevel = (nextOdd+nextEven)/2;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenOdd = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven+1;\n        long nextOddEvenOddEven = (nextOddEvenOdd%2 == 0)\
    \ ? nextOddEvenOdd : nextOddEvenOdd+1;\n        long nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEven : nextOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd : nextOddEvenOddEvenOdd+1;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2 ==\
    \ 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven+1;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 1) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+1);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 1) ? n : n+1;\n        long nextEven = (n%2 == 0) ? n : n+1;\n        long\
    \ nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextOdd+1;\n        long nextOddEvenOdd\
    \ = (nextOddEven%2 == 1) ? nextOddEven : nextOddEven+1;\n        long nextOddEvenOddEven\
    \ = (nextOddEvenOdd%2 == 0) ? nextOddEvenOdd : nextOddEvenOdd+1;\n        long\
    \ nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2 == 1) ? nextOddEvenOddEven : nextOddEvenOddEven+1;\n\
    \        long nextOddEvenOddEvenOddEven = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2\
    \ == 1) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven+1;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 1) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd%2 == 1) ? nextOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long nextOdd =\
    \ (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&11)==11 ? n :\
    \ (n&13)==13 ? n : (n&17)==17 ? n : (n&19)==19 ? n : (n&23)==23 ? n : (n&29)==29\
    \ ? n : (n&31)==31 ? n : (n&37)==37 ? n : (n&43)==43 ? n : (n&49)==49 ? n : (n&57)==57\
    \ ? n : (n&63)==63 ? n : (n&69)==69 ? n : (n&71)==71 ? n : (n&77)==77 ? n : (n&83)==83\
    \ ? n : (n&89)==89 ? n : (n&97)==97 ? n : (n&103)==103 ? n : (n&109)==109 ? n\
    \ : (n&117)==117 ? n : (n&123)==123 ? n : (n&129)==129 ? n : (n&137)==137 ? n\
    \ : (n&143)==143 ? n : (n&149)==149 ? n : (n&157)==157 ? n : (n&163)==163 ? n\
    \ : (n&169)==169 ? n : (n&177)==177 ? n : (n&183)==183 ? n : (n&189)==189 ? n\
    \ : (n&197)==197 ? n : (n&203)==203 ? n : (n&209)==209 ? n : (n&217)==217 ? n\
    \ : (n&223)==223 ? n : (n&229)==229 ? n : (n&237)==237 ? n : (n&243)==243 ? n\
    \ : (n&249)==249 ? n : (n&257)==257 ? n : (n&263)==263 ? n : (n&269)==269 ? n\
    \ : (n&277)==277 ? n : (n&283)==283 ? n : (n&289)==289 ? n : (n&297)==297 ? n\
    \ : (n&303)==303 ? n : (n&309)", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenOdd = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven + 1;\n        long nextOddEvenOddEven = (nextOddEvenOdd%2 == 0)\
    \ ? nextOddEvenOdd : nextOddEvenOdd + 1;\n        long nextOddEvenOddEvenOdd =\
    \ (nextOddEvenOddEven%2 == 0) ? nextOddEvenOddEven : nextOddEvenOddEven + 1;\n\
    \        long nextOddEvenOddEvenOddEven = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOdd + 1;\n        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven + 1;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0)\
    \ ? nextOddEvenOddEvenOddEvenOdd : nextOddEvenOddEvenOddEvenOdd + 1;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEven\
    \ + 1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOddEvenOdd%2\
    \ == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd : nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ + 1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEvenOdd", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n / 2l);\n     \
    \       return result;\n        }\n        long nextEven = n / 2l;\n        long\
    \ nextOdd = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n+1;\n        long nextEven = (n%2 == 1) ? n : n+1;\n        long\
    \ nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextOdd+1;\n        long nextOddEvenOdd\
    \ = (nextOddEven%2 == 0) ? nextOddEven : nextOddEven+1;\n        long nextOddEvenOddEven\
    \ = (nextOddEvenOdd%2 == 0) ? nextOddEvenOdd : nextOddEvenOdd+1;\n        long\
    \ nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2 == 0) ? nextOddEvenOddEven : nextOddEvenOddEven+1;\n\
    \        long nextOddEvenOddEvenOddEven = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2\
    \ == 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven+1;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOddEven ",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n;\n        long\
    \ nextOdd = nextEven + 1;\n        while (nextEven % 2 == 0) {\n            nextEven\
    \ = nextEven + 1;\n        }\n        while (nextOdd % 2 == 0) {\n           \
    \ nextOdd = nextOdd + 1;\n        }\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long nextLevel\
    \ = n;\n        while (nextLevel > 0) {\n            if (nextLevel % 2 == 0) {\n\
    \                nextEven++;\n            } else {\n                nextOdd++;\n\
    \            }\n            nextLevel--;\n        }\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n);\n          \
    \  return result;\n        }\n        long nextEven = n / 2;\n        long nextOdd\
    \ = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n : (n+2);\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = (n / 2) + 1;\n        long nextEven = n / 2;\n       \
    \ while (nextEven != nextOdd) {\n            nextOdd = nextOdd + 1;\n        \
    \    nextEven = nextEven + 1;\n        }\n        result.add(nextOdd);\n     \
    \   result.add(nextEven);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : (n+1);\n     \
    \   long nextEven = (n%2 == 0) ? n+1 : n;\n        result.add(nextOdd);\n    \
    \    result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        if (n != 0) {\n            while (n != 0) {\n                nextOdd\
    \ = nextOdd * 2 + 1;\n                nextEven = nextEven * 2 + 1;\n         \
    \       result.add(nextOdd);\n                result.add(nextEven);\n        \
    \        n = n / 2;\n            }\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long nextEven = n;\n\
    \        long nextOdd = n;\n        long nextEvenCount = 0;\n        long nextOddCount\
    \ = 0;\n        while (nextEven > 0 || nextOdd > 0) {\n            if (nextEven\
    \ % 2 == 0) {\n                nextEvenCount++;\n                nextEven = nextEven\
    \ / 2;\n            } else {\n                nextOddCount++;\n              \
    \  nextOdd = nextOdd / 2;\n            }\n        }\n        result.add(nextEvenCount);\n\
    \        result.add(nextOddCount);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 1) ? n : (n+1);\n\
    \        long nextEven = (n%2 == 0) ? n : (n+1);\n        long nextOddEven = nextOdd\
    \ + nextEven;\n        long nextOddEvenOdd = nextOddEven + nextOdd;\n        long\
    \ nextOddEvenOddEven = nextOddEvenOdd + nextOddEven;\n        long nextOddEvenOddEvenOdd\
    \ = nextOddEvenOddEven + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEven + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextO",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        long nextEven = nextEven(n);\n \
    \       long nextOdd = nextOdd(n);\n        long nextNextEven = nextEven(nextEven);\n\
    \        long nextNextOdd = nextOdd(nextOdd);\n        long nextNextNextEven =\
    \ nextEven(nextNextEven);\n        long nextNextNextOdd = nextOdd(nextNextOdd);\n\
    \        long nextNextNextNextEven = nextEven(nextNextNextEven);\n        long\
    \ nextNextNextNextOdd = nextOdd(nextNextNextOdd);\n        long nextNextNextNextNextEven\
    \ = nextEven(nextNextNextNextEven);\n        long nextNextNextNextNextOdd = nextOdd(nextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextEven = nextEven(nextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextNextEven = nextEven(nextNextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextNextNextEven = nextEven(nextNextNextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextNextNextNextEven = nextEven(nextNextNextNextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextNextNextNextNextEven = nextEven(nextNextNextNextNextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextNextNextNextNextOdd);\n\
    \        long nextNextNextNextNextNextNextNextNextNextNextEven = nextEven(nextNextNextNextNextNextNextNextNextNextNextEven);\n\
    \        long nextNextNextNextNextNextNextNextNextNextNextOdd = nextOdd(nextNextNextNextNextNextNextNextNextNextOdd);\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        long nextLevel = n;\n        long currentLevel\
    \ = n;\n        while (currentLevel > 0) {\n            nextOdd = nextLevel %\
    \ 2 == 0 ? nextLevel : nextLevel - 1;\n            nextEven = nextLevel % 2 ==\
    \ 0 ? nextLevel + 1 : nextLevel;\n            result.add(nextLevel);\n       \
    \     nextLevel = nextOdd;\n            nextLevel = nextEven;\n            currentLevel--;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n + 1) / 2;\n        long nextEven = (n + 1) % 2;\n \
    \       if (n <= 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n >= 1) {\n            result.add(1l);\n        }\n  \
    \      if (n >= 2) {\n            result.add(nextOdd);\n        }\n        if\
    \ (n >= 3) {\n            result.add(nextEven);\n        }\n        if (n >= 4)\
    \ {\n            result.add(nextOdd + nextEven);\n        }\n        if (n >=\
    \ 5) {\n            result.add(nextOdd * 2 + nextEven);\n        }\n        if\
    \ (n >= 6) {\n            result.add(nextOdd * 3 + nextEven);\n        }\n   \
    \     if (n >= 7) {\n            result.add(nextOdd * 4 + nextEven);\n       \
    \ }\n        if (n >= 8) {\n            result.add(nextOdd * 5 + nextEven);\n\
    \        }\n        if (n >= 9) {\n            result.add(nextOdd * 6 + nextEven);\n\
    \        }\n        if (n >= 10) {\n            result.add(nextOdd * 7 + nextEven);\n\
    \        }\n        if (n >= 11) {\n            result.add(nextOdd * 8 + nextEven);\n\
    \        }\n        if (n >= 12) {\n            result.add(nextOdd * 9 + nextEven);\n\
    \        }\n        if (n >= 13) {\n            result.add(nextOdd * 10 + nextEven);\n\
    \        }\n        if (n >= 14) {\n            result.add(nextOdd * 11 + nextEven);\n\
    \        }\n        if (n >= 15) {\n            result.add(nextOdd * 12 + nextEven);\n\
    \        }\n        if (n >= 16) {\n            result.add(nextOdd * 13 + nextEven);\n\
    \        }\n        if (n >= 17) {\n            result.add(nextOdd * 14 + nextEven);\n\
    \        }\n        if (n >= 18) {\n            result.add(nextOdd * 15 + nextEven);\n\
    \        }\n        if (n >= 19) {\n            result.add(nextOdd * 16 + nextEven);\n\
    \        }\n        if (n >= 20) {\n            result.add(nextOdd * 17 + nextEven);\n\
    \        }\n        if (n >= 21) {\n            result.add(nextOdd * 18 + nextEven);\n\
    \        }\n        if (n >= 22) {\n            result.add(nextOdd * 19 + nextEven);\n\
    \        }\n        if (n >= 23) {\n            result.add(nextOdd * 20 + nextEven);\n\
    \        }\n        if (n >= 24) {\n            result.add(nextOdd * 21 + nextEven);\n\
    \        }\n        if (n >= 25) {\n            result.add(nextOdd * 22 + ", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n \
    \           return result;\n        }\n        if (n % 2 == 0) {\n           \
    \ result.add(n);\n            return result;\n        }\n        long nextEven\
    \ = n / 2;\n        long nextOdd = nextEven + 1;\n        if (nextEven % 2 ==\
    \ 0) {\n            result.add(nextEven);\n        }\n        if (nextOdd % 2\
    \ == 0) {\n            result.add(nextOdd);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+2);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : (n&3==3 ? n : (n&5==5 ? n : (n&7==7 ? n : (n&11==11 ? n : (n&13==13 ?\
    \ n : (n&17==17 ? n : (n&19==19 ? n : (n&23==23 ? n : (n&29==29 ? n : (n&31==31\
    \ ? n : (n&37==37 ? n : (n&41==41 ? n : (n&43==43 ? n : (n&47==47 ? n : (n&53==53\
    \ ? n : (n&59==59 ? n : (n&61==61 ? n : (n&67==67 ? n : (n&71==71 ? n : (n&73==73\
    \ ? n : (n&79==79 ? n : (n&83==83 ? n : (n&89==89 ? n : (n&97==97 ? n : (n&103==103\
    \ ? n : (n&107==107 ? n : (n&113==113 ? n : (n&119==119 ? n : (n&121==121 ? n\
    \ : (n&127==127 ? n : (n&131==131 ? n : (n&137==137 ? n : (n&143==143 ? n : (n&149==149\
    \ ? n : (n&151==151 ? n : (n&157==157 ? n : (n&163==163 ? n : (n&167==167 ? n\
    \ : (n&173==173 ? n : (n&179==179 ? n : (n&181==181 ? n : (n&187==187 ? n : (n&193==193\
    \ ? n : (n&199==199 ? n : (n&203==203 ? n : (n&207==207 ? n : (n&211==211 ? n\
    \ : (n&217==217 ? n : (n&223==223 ? n : (n&229==229 ? n : (n&233==233 ? n : (n&239==239\
    \ ? n : (n&241==241 ? n : (n&247==247 ? n : (n&251==251 ? n : (n&257==257 ? n\
    \ : (n&263==263 ? n : ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long nextOdd =\
    \ (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2 == 0) ? n + 1 : n;\n \
    \       result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n % 2 == 0) {\n\
    \            result.add(n);\n            return result;\n        }\n        long\
    \ nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n        result.add(nextEven);\n\
    \        result.add(nextOdd);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n;\n        long\
    \ nextOdd = nextEven + 1;\n        while (nextEven % 2 == 0) {\n            nextEven\
    \ = nextEven + 1;\n        }\n        while (nextOdd % 2 == 1) {\n           \
    \ nextOdd = nextOdd + 1;\n        }\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 1) ? n : (n+1);\n        long nextOddEven = nextOdd + nextEven;\n       \
    \ long nextOddEvenOdd = nextOddEven + nextOdd;\n        long nextOddEvenOddEven\
    \ = nextOddEvenOdd + nextOddEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven\
    \ + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long nextOdd = (n&1)==1 ? n+1 : n;\n        long\
    \ nextEven = (n&2)==2 ? n+1 : n;\n        long nextOddEven = nextOdd + nextEven;\n\
    \        long nextOddEvenOdd = nextOddEven + nextOdd;\n        long nextOddEvenOddEven\
    \ = nextOddEvenOdd + nextOddEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven\
    \ + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n+1;\n        long nextEven = (n%2 == 0) ? n+1 : n;\n        long\
    \ nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextOdd+1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        result.add(nextOddEven);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 0) {\n            return result;\n        }\n        if (n % 2 == 0) {\n\
    \            result.add(n);\n            return result;\n        }\n        long\
    \ nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n        result.add(nextEven);\n\
    \        result.add(nextOdd);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n);\n          \
    \  return result;\n        }\n        long nextEven = n / 2;\n        long nextOdd\
    \ = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7\
    \ ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ?\
    \ n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n\
    \ : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n :\
    \ (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1\
    \ ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ?\
    \ n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n\
    \ : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n :\
    \ (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3\
    \ ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ?\
    \ n : (n&7)==7 ? n : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n\
    \ : (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&1)==1 ? n :\
    \ (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n  \
    \      }\n        if (n % 2 == 0) {\n            result.add(n);\n            return\
    \ result;\n        }\n        long nextEven = n;\n        long nextOdd = nextEven\
    \ + 1;\n        while (nextEven % 2 == 0) {\n            nextEven = nextEven +\
    \ 1;\n        }\n        while (nextOdd % 2 == 0) {\n            nextOdd = nextOdd\
    \ + 1;\n        }\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0l) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n % 2 == 0l) {\n            result.add(n / 2l);\n    \
    \        return result;\n        }\n        long nextOdd = n / 2l;\n        long\
    \ nextEven = nextOdd * 2l;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2 ==\
    \ 0) ? nextOddEvenEven : nextOddEvenEven + 1;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven +\
    \ 1;\n        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 ==\
    \ 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven\
    \ + 1;\n        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2 ==\
    \ 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n        long nextOddEvenEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven\
    \ + 1;\n        long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven + 1;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextO", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n;\n        long\
    \ nextOdd = nextEven + 1;\n        long nextOddEven = nextOdd + nextEven;\n  \
    \      result.add(nextEven);\n        result.add(nextOdd);\n        result.add(nextOddEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextOdd\
    \ = (n + 1) / 2;\n        long nextEven = (n + 1) >> 1;\n        if (n & 1 ==\
    \ 0) {\n            result.add(nextEven);\n        } else {\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextOdd\
    \ = (n % 2 == 1) ? n : n + 1;\n        long nextEven = (n % 2 == 0) ? n : n +\
    \ 1;\n        result.add(nextOdd);\n        result.add(nextEven);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2 == 1) ?\
    \ n : n + 1;\n        long nextLevel = nextOdd;\n        long nextLevelCount =\
    \ 1;\n        while (nextLevelCount <= n) {\n            result.add(nextLevelCount);\n\
    \            nextLevel += nextEven;\n            nextLevelCount += 2;\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n % 2 == 0) {\n            result.add(n);\n            return result;\n\
    \        }\n        long nextEven = n / 2;\n        long nextOdd = nextEven +\
    \ 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ nextOdd = (n + 1l) / 2;\n        long nextEven = (n + 1l) % 2;\n        if (nextOdd\
    \ > nextEven) {\n            result.add(nextOdd);\n            result.add(nextEven);\n\
    \        } else {\n            result.add(nextEven);\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextEven\
    \ = n / 2;\n        long nextOdd = n % 2;\n        if (nextEven > nextOdd) {\n\
    \            result.add(nextEven);\n            result.add(nextOdd);\n       \
    \ } else {\n            result.add(nextOdd);\n            result.add(nextEven);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n : (n+2);\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2==0) ? n : n+1;\n        long nextEven = (n%2==0)\
    \ ? n+1 : n;\n        long nextLevel = nextOdd;\n        while(nextLevel<nextEven)\
    \ {\n            result.add(nextLevel);\n            nextLevel += 2;\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        long nextEven = n / 2;\n        long nextOdd = n % 2;\n  \
    \      if (nextEven % 2 == 0) {\n            result.add(nextEven);\n        }\n\
    \        if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long nextOddEven\
    \ = 0;\n        long nextOddEvenOdd = 0;\n        long nextOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        long nextOdd = (n + 1) / 2;\n  \
    \      long nextEven = (n + 2) / 2;\n        if (n % 2 == 0) {\n            result.add(nextEven);\n\
    \        } else {\n            result.add(nextOdd);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0l) {\n            result.add(0l);\n            return result;\n        }\n\
    \        long nextOdd = n / 2l;\n        long nextEven = n % 2l;\n        if (nextOdd\
    \ % 2l == 0l) {\n            result.add(nextOdd);\n        }\n        if (nextEven\
    \ % 2l == 0l) {\n            result.add(nextEven);\n        }\n        ArrayList<Long>\
    \ nextLevel = makeAPile(nextEven);\n        nextLevel.addAll(makeAPile(nextOdd));\n\
    \        result.addAll(nextLevel);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        long nextLevel = n;\n        while(nextLevel > 0) {\n        \
    \    nextOdd = nextLevel % 2 == 0 ? nextLevel : nextLevel - 1;\n            nextEven\
    \ = nextLevel % 2 == 0 ? nextLevel + 1 : nextLevel;\n            result.add(nextLevel);\n\
    \            nextLevel = nextOdd;\n            nextLevel = nextEven;\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2==0) ? n : n+1;\n        long nextEven = (n%2==0)\
    \ ? n+1 : n;\n        result.add(nextOdd);\n        result.add(nextEven);\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3==3 ? n : (n&5==5 ? n : (n&7==7 ? n\
    \ : (n&11==11 ? n : (n&13==13 ? n : (n&17==17 ? n : (n&19==19 ? n : (n&23==23\
    \ ? n : (n&29==29 ? n : (n&31==31 ? n : (n&37==37 ? n : (n&41==41 ? n : (n&43==43\
    \ ? n : (n&47==47 ? n : (n&53==53 ? n : (n&59==59 ? n : (n&61==61 ? n : (n&67==67\
    \ ? n : (n&71==71 ? n : (n&73==73 ? n : (n&79==79 ? n : (n&83==83 ? n : (n&89==89\
    \ ? n : (n&97==97 ? n : (n&103==103 ? n : (n&107==107 ? n : (n&113==113 ? n :\
    \ (n&119==119 ? n : (n&121==121 ? n : (n&127==127 ? n : (n&131==131 ? n : (n&137==137\
    \ ? n : (n&143==143 ? n : (n&149==149 ? n : (n&151==151 ? n : (n&157==157 ? n\
    \ : (n&163==163 ? n : (n&167==167 ? n : (n&173==173 ? n : (n&179==179 ? n : (n&181==181\
    \ ? n : (n&187==187 ? n : (n&193==193 ? n : (n&199==199 ? n : (n&203==203 ? n\
    \ : (n&209==209 ? n : (n&213==213 ? n : (n&217==217 ? n : (n&223==223 ? n : (n&229==229\
    \ ? n : (n&233==233 ? n : (n&239==239 ? n : (n&241==241 ? n : (n&247==247 ? n\
    \ : (n&253==253 ? n : (n&259==259 ? n : (n&261==261 ? n : (n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        long nextOdd = (n + 1) / 2;\n        long nextEven = (n +\
    \ 1) % 2;\n        if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n\
    \        }\n        if (nextEven % 2 == 0) {\n            result.add(nextEven);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7\
    \ ? n : (n&11)==11 ? n : (n&13)==13 ? n : (n&17)==17 ? n : (n&19)==19 ? n : (n&23)==23\
    \ ? n : (n&29)==29 ? n : (n&31)==31 ? n : (n&37)==37 ? n : (n&43)==43 ? n : (n&49)==49\
    \ ? n : (n&57)==57 ? n : (n&63)==63 ? n : (n&69)==69 ? n : (n&71)==71 ? n : (n&77)==77\
    \ ? n : (n&83)==83 ? n : (n&89)==89 ? n : (n&97)==97 ? n : (n&103)==103 ? n :\
    \ (n&107)==107 ? n : (n&113)==113 ? n : (n&127)==127 ? n : (n&131)==131 ? n :\
    \ (n&137)==137 ? n : (n&143)==143 ? n : (n&149)==149 ? n : (n&157)==157 ? n :\
    \ (n&163)==163 ? n : (n&169)==169 ? n : (n&175)==175 ? n : (n&181)==181 ? n :\
    \ (n&187)==187 ? n : (n&193)==193 ? n : (n&199)==199 ? n : (n&205)==205 ? n :\
    \ (n&211)==211 ? n : (n&217)==217 ? n : (n&223)==223 ? n : (n&229)==229 ? n :\
    \ (n&235)==235 ? n : (n&241)==241 ? n : (n&247)==247 ? n : (n&253)==253 ? n :\
    \ (n&259)==259 ? n : (n&265)==265 ? n : (n&271)==271 ? n : (n&277)==277 ? n :\
    \ (n&283)==283 ? n : (n&289)==289 ? n : (n&295)==295 ? n ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        long nextOdd = (n % 2 == 1) ? n : n + 1;\n        long nextEven\
    \ = (n % 2 == 0) ? n : n + 1;\n        long nextOddEven = nextOdd + nextEven;\n\
    \        result.add(nextOdd);\n        result.add(nextEven);\n        result.add(nextOddEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long nextOdd = (n%2==0) ? n : (n+1);\n        long nextEven = (n%2==0)\
    \ ? n : (n+2);\n        long nextOddEven = (nextOdd%2==0) ? nextOdd : nextEven;\n\
    \        long nextOddEvenOdd = (nextOddEven%2==0) ? nextOddEven : nextOdd;\n \
    \       long nextOddEvenOddEven = (nextOddEvenOdd%2==0) ? nextOddEvenOdd : nextOddEven;\n\
    \        long nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2==0) ? nextOddEvenOddEven\
    \ : nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven = (nextOddEvenOddEvenOdd%2==0)\
    \ ? nextOddEvenOddEvenOdd : nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEven%2==0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2==0)\
    \ ? nextOddEvenOddEvenOddEvenOdd : nextOddEvenOddEvenOddEvenOdd;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEven%2==0)\
    \ ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEven;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOddEvenOdd%2==0)\
    \ ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEvenOddEven%2==0)\
    \ ? nextOddEvenOddEvenOddEvenO", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&1)==0 ? n*2 : n*3;\n        long nextEven\
    \ = (n&1)==0 ? n : (n&1)==1 ? n*2 : n*3;\n        long nextOddEven = nextOdd +\
    \ nextEven;\n        long nextOddEvenOdd = nextOddEven + nextOdd;\n        long\
    \ nextOddEvenOddEven = nextOddEvenOdd + nextOddEven;\n        long nextOddEvenOddEvenOdd\
    \ = nextOddEvenOddEven + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEven + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOdd;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenO", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long nextOdd = (n%2 == 1) ? n : (n+1);\n        long\
    \ nextEven = (n%2 == 0) ? n : (n+1);\n        long nextOddEven = nextOdd + nextEven;\n\
    \        long nextOddEvenOdd = nextOddEven + nextOdd;\n        long nextOddEvenOddEven\
    \ = nextOddEvenOdd + nextOddEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven\
    \ + nextOddEvenOdd;\n        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEven;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenO", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long\
    \ nextEven = (n%2 == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 ==\
    \ 0) ? nextOdd : nextOdd + 1;\n        long nextOddEvenNextOdd = (nextEven%2 ==\
    \ 0) ? nextEven : nextEven + 1;\n        long nextOddEvenNextOddNextOdd = (nextOddEven%2\
    \ == 0) ? nextOddEven : nextOddEven + 1;\n        long nextOddEvenNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOdd%2 == 0) ? nextOddEvenNextOdd : nextOddEvenNextOdd + 1;\n\
    \        long nextOddEvenNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOdd : nextOddEvenNextOddNextOdd + 1;\n       \
    \ long nextOddEvenNextOddNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOdd : nextOddEvenNextOddNextOddNextOddNextOdd\
    \ + 1;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd = (nextOddEvenNextOddNextOddNextOddNextOdd%2\
    \ == 0) ? nextOddEvenNextOddNextOddNextOddNextOdd : nextOddEvenNextOddNextOddNextOddNextOddNextOdd\
    \ + 1;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOddNextOddNextOddNextOddNextOdd%2 == 0) ? nextOddEvenNextOddNextOddNextOddNextOddNextOdd\
    \ : nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOdd + 1;\n        long nextOddEvenNextOddNextOddNextOddNextOddNextOddNextOddNextOddNextOdd\
    \ = (nextOddEvenNextOdd", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n % 2 == 0) {\n            result.add(n);\n            return result;\n\
    \        }\n        long nextOdd = (n / 2) + 1;\n        long nextEven = n / 2;\n\
    \        while (nextEven < n) {\n            result.add(nextEven);\n         \
    \   nextEven = nextEven + 2;\n        }\n        result.add(nextOdd);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     if (n <= 0) {\n            return result;\n        }\n        if (n % 2\
    \ == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextOdd = (n / 2) + 1;\n\
    \        long nextEven = n / 2;\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 1) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n : (n+1);\n        long nextOddEven = nextOdd + nextEven;\n       \
    \ result.add(nextOdd);\n        result.add(nextEven);\n        result.add(nextOddEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        long nextOdd = n / 2;\n        long\
    \ nextEven = n % 2;\n        if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n\
    \        }\n        if (nextEven % 2 == 0) {\n            result.add(nextEven);\n\
    \        }\n        if (nextOdd % 2 != 0) {\n            result.add(nextOdd +\
    \ 1);\n        }\n        if (nextEven % 2 != 0) {\n            result.add(nextEven\
    \ + 1);\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextEven = n / 2;\n     \
    \   long nextOdd = nextEven + 1;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2 == 0) ? nextOdd :\
    \ nextOdd + 1;\n        long nextOddEvenOdd = (nextOddEven%2 == 0) ? nextOddEven\
    \ : nextOddEven+1;\n        long nextOddEvenOddEven = (nextOddEvenOdd%2 == 0)\
    \ ? nextOddEvenOdd : nextOddEvenOdd+1;\n        long nextOddEvenOddEvenOdd = (nextOddEvenOddEven%2\
    \ == 0) ? nextOddEvenOddEven : nextOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd : nextOddEvenOddEvenOdd+1;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2 ==\
    \ 0) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEven+1;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEven\
    \ : nextOddEvenOddEvenOddEvenOddEven+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOddEvenOddEvenOdd+1;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEvenOddEvenOddEvenOddEven%2 == 0) ? nextOddEvenOddEvenOddEvenOddEvenOdd",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n\
    \ + 1l) / 2;\n        long nextEven = (n + 1l) % 2;\n        if (n != 0l) {\n\
    \            result.add(nextOdd);\n        }\n        if (n != 1l) {\n       \
    \     result.add(nextEven);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n\
    \        long nextEven = (n%2 == 1) ? n : n + 1;\n        long nextOddEven = (nextOdd%2\
    \ == 0) ? nextOdd : nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2\
    \ == 0) ? nextOddEven : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2\
    \ == 0) ? nextOddEvenEven : nextOddEvenEven;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven;\n\
    \        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n       \
    \ long nextOddEvenEvenEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven;\n   \
    \     long nextOddEvenEvenEvenEvenEvenEvenEven", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n+1;\n       \
    \ long nextEven = (n%2 == 1) ? n : n+1;\n        long nextOddEven = (nextOdd%2\
    \ == 0) ? nextOdd : nextOdd+1;\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        result.add(nextOddEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : (n+1);\n\
    \        long nextEven = (n%2 == 0) ? n : (n+2);\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n&1)==1 ? n+1 : n;\n  \
    \      long nextEven = (n&2)==2 ? n+1 : n;\n        long nextOddEven = nextOdd\
    \ + nextEven;\n        result.add(nextOdd);\n        result.add(nextEven);\n \
    \       result.add(nextOddEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextEven = n;\n        long nextOdd\
    \ = n;\n        while (nextEven % 2 == 0) {\n            nextEven = nextEven /\
    \ 2;\n        }\n        while (nextOdd % 2 == 1) {\n            nextOdd = nextOdd\
    \ / 2;\n        }\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long currentLevel\
    \ = 1;\n        while (n > 0) {\n            if (n % 2 == 0) {\n             \
    \   nextEven++;\n            } else {\n                nextOdd++;\n          \
    \  }\n            result.add(currentLevel);\n            currentLevel = nextOdd\
    \ + nextEven;\n            nextOdd = nextEven;\n            nextEven = 0;\n  \
    \          n /= 2;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextEven = nextEven(n);\n        long\
    \ nextOdd = nextOdd(n);\n        if (nextEven > nextOdd) {\n            result.add(nextOdd);\n\
    \            result.add(nextEven);\n        } else {\n            result.add(nextEven);\n\
    \            result.add(nextOdd);\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n \
    \       long nextEven = 0;\n        long nextOddEven = 0;\n        long nextOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n  \
    \      long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+2);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n  \
    \          return result;\n        }\n        long nextEven = n / 2;\n       \
    \ long nextOdd = n % 2;\n        if (nextEven % 2 == 0) {\n            result.add(nextEven);\n\
    \        }\n        if (nextOdd % 2 == 1) {\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextOdd = (n / 2) + 1;\n        long nextEven = n / 2;\n       \
    \ result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : n + 1;\n        long nextEven = (n%2 == 0) ? n + 1 : n;\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        long nextLevel = n;\n        while (nextLevel\
    \ > 0) {\n            if (nextLevel % 2 == 0) {\n                nextEven++;\n\
    \            } else {\n                nextOdd++;\n            }\n           \
    \ nextLevel--;\n        }\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextEven = n;\n        long nextOdd = n;\n        while (nextEven\
    \ % 2 == 0) {\n            nextEven = nextEven / 2;\n        }\n        while\
    \ (nextOdd % 2 == 1) {\n            nextOdd = nextOdd / 2;\n        }\n      \
    \  result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&11)==11 ? n : (n&13)==13\
    \ ? n : (n&17)==17 ? n : (n&19)==19 ? n : (n&23)==23 ? n : (n&29)==29 ? n : (n&31)==31\
    \ ? n : (n&37)==37 ? n : (n&43)==43 ? n : (n&49)==49 ? n : (n&57)==57 ? n : (n&61)==61\
    \ ? n : (n&67)==67 ? n : (n&73)==73 ? n : (n&79)==79 ? n : (n&83)==83 ? n : (n&89)==89\
    \ ? n : (n&97)==97 ? n : (n&101)==101 ? n : (n&107)==107 ? n : (n&113)==113 ?\
    \ n : (n&127)==127 ? n : (n&131)==131 ? n : (n&137)==137 ? n : (n&143)==143 ?\
    \ n : (n&149)==149 ? n : (n&157)==157 ? n : (n&163)==163 ? n : (n&169)==169 ?\
    \ n : (n&175)==175 ? n : (n&181)==181 ? n : (n&187)==187 ? n : (n&193)==193 ?\
    \ n : (n&199)==199 ? n : (n&205)==205 ? n : (n&211)==211 ? n : (n&217)==217 ?\
    \ n : (n&223)==223 ? n : (n&229)==229 ? n : (n&235)==235 ? n : (n&241)==241 ?\
    \ n : (n&247)==247 ? n : (n&253)==253 ? n : (n&259)==259 ? n : (n&265)==265 ?\
    \ n : (n&271)==271 ? n : (n&277)==277 ? n : (n&283)==283 ? n : (n&289)==289 ?\
    \ n : (n&295)==295 ? n : ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        long nextOdd\
    \ = (n % 2 == 0) ? n : n + 1;\n        long nextEven = (n % 2 == 0) ? n + 1 :\
    \ n;\n        result.add(nextOdd);\n        result.add(nextEven);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ nextOdd = 0;\n        long nextEven = 0;\n        long nextOddEven = 0;\n  \
    \      long nextOddEvenOdd = 0;\n        long nextOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 0) {\n\
    \            return result;\n        }\n        long nextOdd = (n + 1) / 2;\n\
    \        long nextEven = (n + 2) / 2;\n        if (n % 2 == 0) {\n           \
    \ result.add(nextEven);\n        } else {\n            result.add(nextOdd);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n : (n-1);\n        long nextLevel = nextOdd;\n        while(nextLevel\
    \ > 0) {\n            result.add(nextLevel);\n            nextLevel = (nextOdd\
    \ > nextEven) ? nextOdd : nextEven;\n            nextOdd = nextEven;\n       \
    \     nextEven = (nextOdd > nextEven) ? nextOdd : nextEven;\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n / 2l);\n     \
    \       return result;\n        }\n        long nextEven = n / 2l;\n        long\
    \ nextOdd = n - nextEven;\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        long nextEven = nextEven(n);\n        long nextOdd = nextOdd(n);\n\
    \        long nextEvenNextOdd = nextEvenNextOdd(n);\n        long nextOddNextEven\
    \ = nextOddNextEven(n);\n        long nextOddNextOdd = nextOddNextOdd(n);\n  \
    \      long nextEvenNextOddNextEven = nextEvenNextOddNextEven(n);\n        long\
    \ nextOddNextEvenNextOdd = nextOddNextEvenNextOdd(n);\n        long nextEvenNextOddNextOddNextEven\
    \ = nextEvenNextOddNextOddNextEven(n);\n        long nextOddNextEvenNextOddNextOdd\
    \ = nextOddNextEvenNextOddNextOdd(n);\n        long nextEvenNextOddNextOddNextOddNextEven\
    \ = nextEvenNextOddNextOddNextOddNextEven(n);\n        long nextOddNextEvenNextOddNextOddNextOdd\
    \ = nextOddNextEvenNextOddNextOddNextOdd(n);\n        long nextEvenNextOddNextOddNextOddNextOddNextEven\
    \ = nextEvenNextOddNextOddNextOddNextOddNextEven(n);\n        long nextOddNextEvenNextOddNextOddNextOddNextOdd\
    \ = nextOddNextEvenNextOddNextOddNextOddNextOdd(n);\n        long nextEvenNextOddNextOddNextOddNextOddNextOddNextEven\
    \ = nextEvenNextOddNextOddNextOddNextOddNextOddNextEven(n);\n        long nextOddNextEvenNextOddNextOddNextOddNextOddNextOdd\
    \ = nextOddNextEvenNextOddNextOddNextOddNextOddNextOdd(n);\n        long nextEvenNextOddNextOddNextOddNextOddNextOddNextOddNextEven\
    \ = nextEvenNextOddNextOddNextOddNextOddNextOddNextOddNextEven(n);\n        long\
    \ nextOddNextEvenNextOddNextOddNextOddNextOddNextOddNextOdd = nextOddNextEvenNextOddNextO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 0) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+2);\n      \
    \  result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 1) ? n : n+1;\n        long nextEven = (n%2 == 0) ? n : n+1;\n        long\
    \ nextOddEven = nextOdd + nextEven;\n        long nextOddEvenOdd = nextOddEven\
    \ + nextOdd;\n        long nextOddEvenOddEven = nextOddEvenOdd + nextOddEven;\n\
    \        long nextOddEvenOddEvenOdd = nextOddEvenOddEven + nextOddEvenOdd;\n \
    \       long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEven + nextOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long nextOdd = 0;\n        long nextEven = 0;\n    \
    \    long nextOddEven = 0;\n        long nextOddEvenOdd = 0;\n        long nextOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextEven = n;\n\
    \        long nextOdd = n;\n        if (n % 2 == 0) {\n            nextEven =\
    \ nextEven + 1;\n        }\n        if (n % 2 != 0) {\n            nextOdd = nextOdd\
    \ + 1;\n        }\n        result.add(nextEven);\n        result.add(nextOdd);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 0) ? n + 1 : n;\n        long nextOddEven = nextOdd + nextEven;\n       \
    \ result.add(nextOdd);\n        result.add(nextEven);\n        result.add(nextOddEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n+1;\n        long nextEven = (n%2 ==\
    \ 0) ? n+1 : n;\n        long nextOddEven = nextOdd + nextEven;\n        long\
    \ nextOddEvenOdd = nextOddEven + nextOdd;\n        long nextOddEvenOddEven = nextOddEvenOdd\
    \ + nextOddEven;\n        long nextOddEvenOddEvenOdd = nextOddEvenOddEven + nextOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEven + nextOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd + nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ + nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        long nextOddEven = 0;\n        long nextOddEvenOdd = 0;\n    \
    \    long nextOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOdd = 0;\n \
    \       long nextOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n  \
    \      long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n <= 0) {\n \
    \           return result;\n        }\n        long nextOdd = (n + 1) / 2;\n \
    \       long nextEven = (n + 1) % 2;\n        if (nextOdd > nextEven) {\n    \
    \        result.add(nextOdd);\n        } else {\n            result.add(nextEven);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextEven = n;\n        long nextOdd = n;\n        long nextOddEven\
    \ = n;\n        long nextOddEvenOdd = n;\n        long nextOddEvenOddEven = n;\n\
    \        long nextOddEvenOddEvenOdd = n;\n        long nextOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOdd = n;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = n;\n       \
    \ long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = n;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = n;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = n;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = n;\n        long nextOddEvenOddEvenOddEvenOdd", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n % 2 == 0) {\n            result.add(n);\n\
    \            return result;\n        }\n        long nextOdd = (n % 2 == 1) ?\
    \ n : n + 1;\n        long nextEven = (n % 2 == 0) ? n : n + 1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(n);\n          \
    \  return result;\n        }\n        long nextEven = n;\n        while (nextEven\
    \ % 2 == 0) {\n            nextEven /= 2;\n        }\n        long nextOdd = n;\n\
    \        while (nextOdd % 2 != 0) {\n            nextOdd /= 2;\n        }\n  \
    \      result.add(nextEven);\n        result.add(nextOdd);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        long nextOddEven = 0;\n        long nextOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n  \
    \      long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2==0)\
    \ ? n : n+1;\n        long nextEven = (n%2==0) ? n+1 : n;\n        long nextLevel\
    \ = nextOdd;\n        while(nextLevel>0) {\n            result.add(nextLevel);\n\
    \            nextLevel = nextEven;\n            nextEven = (nextEven%2==0) ? nextEven+1\
    \ : nextEven;\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long nextOdd = (n + 1l) / 2;\n        long nextEven\
    \ = (n + 1l) % 2;\n        if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n\
    \        } else {\n            result.add(nextEven);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 0) {\n            return result;\n        }\n        long nextOdd = (n +\
    \ 1) & 1;\n        long nextEven = n & 1;\n        if (nextOdd != 0) {\n     \
    \       result.add(nextOdd);\n        }\n        if (nextEven != 0) {\n      \
    \      result.add(nextEven);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        long nextOddEven = 0;\n        long nextOddEvenOdd = 0;\n    \
    \    long nextOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOdd = 0;\n \
    \       long nextOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n  \
    \      long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : (n&3)==3 ? n : (n&5)==5 ? n : (n&7)==7 ? n : (n&11)==11 ? n : (n&13)==13\
    \ ? n : (n&17)==17 ? n : (n&19)==19 ? n : (n&23)==23 ? n : (n&29)==29 ? n : (n&31)==31\
    \ ? n : (n&37)==37 ? n : (n&43)==43 ? n : (n&49)==49 ? n : (n&57)==57 ? n : (n&63)==63\
    \ ? n : (n&69)==69 ? n : (n&71)==71 ? n : (n&77)==77 ? n : (n&83)==83 ? n : (n&89)==89\
    \ ? n : (n&97)==97 ? n : (n&103)==103 ? n : (n&109)==109 ? n : (n&117)==117 ?\
    \ n : (n&123)==123 ? n : (n&129)==129 ? n : (n&137)==137 ? n : (n&143)==143 ?\
    \ n : (n&149)==149 ? n : (n&157)==157 ? n : (n&163)==163 ? n : (n&169)==169 ?\
    \ n : (n&177)==177 ? n : (n&183)==183 ? n : (n&189)==189 ? n : (n&197)==197 ?\
    \ n : (n&203)==203 ? n : (n&209)==209 ? n : (n&217)==217 ? n : (n&223)==223 ?\
    \ n : (n&229)==229 ? n : (n&237)==237 ? n : (n&243)==243 ? n : (n&249)==249 ?\
    \ n : (n&257)==257 ? n : (n&263)==263 ? n : (n&269)==269 ? n : (n&277)==277 ?\
    \ n : (n&283)==283 ? n : (n&289)==289 ? n : (n&297)==297 ? n : (n&303)==303 ?\
    \ n : (n&309)==", "        ArrayList<Long> result = new ArrayList<>();\n     \
    \   if (n <= 0) {\n            return result;\n        }\n        if (n % 2 ==\
    \ 0) {\n            result.add(n);\n            return result;\n        }\n  \
    \      long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n        result.add(nextEven);\n\
    \        result.add(nextOdd);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        long nextOdd = (n + 1) & 1;\n        long nextEven = (n +\
    \ 1) >> 1;\n        if (nextOdd != 0) {\n            result.add(nextOdd);\n  \
    \      }\n        if (nextEven != 0) {\n            result.add(nextEven);\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd;\n        long nextEven;\n        if (n % 2 == 0) {\n  \
    \          nextEven = n;\n            nextOdd = n - 1;\n        } else {\n   \
    \         nextEven = n + 1;\n            nextOdd = n;\n        }\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 1) ? n : n+1;\n\
    \        long nextEven = (n%2 == 0) ? n : n+1;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n\
    \        long nextEven = (n%2 == 0) ? n + 1 : n;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextEven = n;\n        long nextOdd\
    \ = n;\n        if (n % 2 == 0) {\n            nextEven = nextEven + 2;\n    \
    \    }\n        result.add(nextEven);\n        if (n % 2 == 0) {\n           \
    \ nextOdd = nextOdd + 1;\n        }\n        result.add(nextOdd);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ nextEven = n;\n        long nextOdd = n;\n        while (nextEven > 0 || nextOdd\
    \ > 0) {\n            if (nextEven % 2 == 0) {\n                nextEven = nextEven\
    \ / 2;\n                result.add(nextEven);\n            } else {\n        \
    \        nextOdd = nextOdd / 2;\n                result.add(nextOdd);\n      \
    \      }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n  \
    \      }\n        long nextOdd = n / 2;\n        long nextEven = n % 2;\n    \
    \    if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n        }\n  \
    \      if (nextEven % 2 == 0) {\n            result.add(nextEven);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n%2 == 0) ? n : (n+1);\n        long nextEven = (n%2\
    \ == 0) ? n : (n+2);\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 0) {\n            return result;\n        }\n        if (n %\
    \ 2 == 0) {\n            result.add(n);\n            return result;\n        }\n\
    \        long nextEven = n / 2;\n        long nextOdd = nextEven + 1;\n      \
    \  if (nextEven % 2 == 0) {\n            result.add(nextEven);\n        }\n  \
    \      if (nextOdd % 2 == 0) {\n            result.add(nextOdd);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3==3 ? n : (n&7==7 ? n : (n&15==15 ?\
    \ n : (n&31==31 ? n : (n&63==63 ? n : (n&127==127 ? n : (n&255==255 ? n : (n&511==511\
    \ ? n : (n&1023==1023 ? n : (n&2047==2047 ? n : (n&4095==4095 ? n : (n&8191==8191\
    \ ? n : (n&16383==16383 ? n : (n&32767==32767 ? n : (n&65535==65535 ? n : (n&131071==131071\
    \ ? n : (n&262143==262143 ? n : (n&524287==524287 ? n : (n&1048575==1048575 ?\
    \ n : (n&2097151==2097151 ? n : (n&4194303==4194303 ? n : (n&8388607==8388607\
    \ ? n : (n&16777215==16777215 ? n : (n&33554431==33554431 ? n : (n&67108863==67108863\
    \ ? n : (n&134217727==134217727 ? n : (n&268435455==268435455 ? n : (n&536870911==536870911\
    \ ? n : (n&1073741823==1073741823 ? n : (n&2147483647==2147483647 ? n : (n&4294967311==4294967311))))))))))))))))))))))))))))))))))));\n\
    \        long nextEven = (n&1)==1 ? n : (n&3==3 ? n : (n&7==7 ? n : (n&15==15\
    \ ? n : (n&31==31 ? n : (n&63==63 ? n : (n&127==127 ? n : (n&255==255 ? n : (n&511==511\
    \ ? n : (n&1023==1023 ? n : (n&2047==2047 ? n : (n&4095==4095 ? n : (n&8191==8191\
    \ ? n : (n&16383==16383 ? n ", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long nextOdd = (n&1)==1 ? n+1 : n;\n        long nextEven = (n&2)==2\
    \ ? n+2 : n;\n        long nextOddEven = (nextOdd+nextEven)/2;\n        long nextOddEven2\
    \ = nextOddEven*2;\n        long nextOddEven3 = nextOddEven*3;\n        long nextOddEven4\
    \ = nextOddEven*4;\n        long nextOddEven5 = nextOddEven*5;\n        long nextOddEven6\
    \ = nextOddEven*6;\n        long nextOddEven7 = nextOddEven*7;\n        long nextOddEven8\
    \ = nextOddEven*8;\n        long nextOddEven9 = nextOddEven*9;\n        long nextOddEven10\
    \ = nextOddEven*10;\n        long nextOddEven11 = nextOddEven*11;\n        long\
    \ nextOddEven12 = nextOddEven*12;\n        long nextOddEven13 = nextOddEven*13;\n\
    \        long nextOddEven14 = nextOddEven*14;\n        long nextOddEven15 = nextOddEven*15;\n\
    \        long nextOddEven16 = nextOddEven*16;\n        long nextOddEven17 = nextOddEven*17;\n\
    \        long nextOddEven18 = nextOddEven*18;\n        long nextOddEven19 = nextOddEven*19;\n\
    \        long nextOddEven20 = nextOddEven*20;\n        long nextOddEven21 = nextOddEven*21;\n\
    \        long nextOddEven22 = nextOddEven*22;\n        long nextOddEven23 = nextOddEven*23;\n\
    \        long nextOddEven24 = nextOddEven*24;\n        long nextOddEven25 = nextOddEven*25;\n\
    \        long nextOddEven26 = nextOddEven*26;\n        long nextOddEven27 = nextOddEven*27;\n\
    \        long nextOddEven28 = nextOddEven*28;\n        long nextOddEven29 = nextOddEven*29;\n\
    \        long nextOddEven30 = nextOddEven*30;\n        long nextOddEven31 = nextOddEven*31;\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 0) {\n            return result;\n        }\n        long nextOdd = (n %\
    \ 2 == 1) ? n : n + 1;\n        long nextEven = (n % 2 == 0) ? n : n + 1;\n  \
    \      result.add(nextOdd);\n        result.add(nextEven);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n&1)==1\
    \ ? n : n+1;\n        long nextEven = (n&2)==2 ? n : n+2;\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : n + 1;\n\
    \        long nextEven = (n%2 == 0) ? n + 1 : n;\n        long nextOddEven = (nextOdd%2\
    \ == 0) ? nextOdd : nextOdd + 1;\n        long nextOddEvenEven = (nextOddEven%2\
    \ == 0) ? nextOddEven : nextOddEven + 1;\n        long nextOddEvenEvenEven = (nextOddEvenEven%2\
    \ == 0) ? nextOddEvenEven : nextOddEvenEven+1;\n        long nextOddEvenEvenEvenEven\
    \ = (nextOddEvenEvenEven%2 == 0) ? nextOddEvenEvenEven : nextOddEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEven%2 == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n\
    \        long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n     \
    \   long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n     \
    \   long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n     \
    \   long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEvenEven+1;\n     \
    \   long nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2\
    \ == 0) ? nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long\
    \ nextOddEvenEvenEvenEvenEvenEven = (nextOddEvenEvenEvenEvenEvenEven%2 == 0) ?\
    \ nextOddEvenEvenEvenEvenEven : nextOddEvenEvenEvenEven+1;\n        long nextOddEvenEvenEvenEvenEvenEven\
    \ = (nextOddEvenEvenEvenEvenEvenEven%2 == 0) ? nextOdd", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = (n%2 == 0) ? n : (n+1);\n\
    \        long nextEven = (n%2 == 0) ? n : (n+2);\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        long nextLevel = 0;\n        long nextLevelCount = 0;\n      \
    \  long nextLevelCount2 = 0;\n        long nextLevelCount3 = 0;\n        long\
    \ nextLevelCount4 = 0;\n        long nextLevelCount5 = 0;\n        long nextLevelCount6\
    \ = 0;\n        long nextLevelCount7 = 0;\n        long nextLevelCount8 = 0;\n\
    \        long nextLevelCount9 = 0;\n        long nextLevelCount10 = 0;\n     \
    \   long nextLevelCount11 = 0;\n        long nextLevelCount12 = 0;\n        long\
    \ nextLevelCount13 = 0;\n        long nextLevelCount14 = 0;\n        long nextLevelCount15\
    \ = 0;\n        long nextLevelCount16 = 0;\n        long nextLevelCount17 = 0;\n\
    \        long nextLevelCount18 = 0;\n        long nextLevelCount19 = 0;\n    \
    \    long nextLevelCount20 = 0;\n        long nextLevelCount21 = 0;\n        long\
    \ nextLevelCount22 = 0;\n        long nextLevelCount23 = 0;\n        long nextLevelCount24\
    \ = 0;\n        long nextLevelCount25 = 0;\n        long nextLevelCount26 = 0;\n\
    \        long nextLevelCount27 = 0;\n        long nextLevelCount28 = 0;\n    \
    \    long nextLevelCount29 = 0;\n        long nextLevelCount30 = 0;\n        long\
    \ nextLevelCount31 = 0;\n        long nextLevelCount32 = 0;\n        long nextLevelCount33\
    \ = 0;\n        long nextLevelCount34 = 0;\n        long nextLevelCount35 = 0;\n\
    \        long nextLevelCount36 = 0;\n        long nextLevelCount37 = 0;\n    \
    \    long nextLevelCount38 = 0;\n        long nextLevelCount39 = 0;\n        long\
    \ nextLevelCount40 = 0;\n        long nextLevelCount41 = 0;\n        long nextLevelCount42\
    \ = 0;\n        long nextLevelCount43 = 0;\n        long nextLevelCount44 = 0;\n\
    \        long nextLevelCount45 = 0;\n        long nextLevelCount46 = 0;\n    \
    \    long nextLevelCount47 = 0;\n        long nextLevelCount48 = 0;\n        long\
    \ nextLevelCount49 = 0;\n        long nextLevelCount50 = 0;\n        long nextLevelCount51\
    \ = 0;\n        long nextLevelCount52 = 0;\n        long nextLevelCount53 = 0;\n\
    \        long nextLevelCount54 = 0;\n        long nextLevelCount55 = 0;\n    \
    \    long nextLevelCount56 = 0;\n        long nextLevelCount57 = 0;\n        long\
    \ nextLevelCount58 = 0;\n        long nextLevelCount59 = 0;\n        long nextLevelCount60\
    \ = 0;\n        long nextLevelCount61 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long nextOdd = (n&1)==1 ? n : (n&1)==0\
    \ ? n*2 : n*3;\n        long nextEven = (n&2)==2 ? n : (n&2)==0 ? n*3 : n*5;\n\
    \        long nextOddEven = nextOdd+nextEven;\n        long nextOddEvenOdd = nextOddEven+nextOdd;\n\
    \        long nextOddEvenOddEven = nextOddEvenOdd+nextEven;\n        long nextOddEvenOddEvenOdd\
    \ = nextOddEvenOddEven+nextOdd;\n        long nextOddEvenOddEvenOddEven = nextOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEven+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEven+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd+nextEven;\n\
    \        long nextOddEvenOdd", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = (n&1)==1 ? n : (n&3==3 ? n : (n&5==5 ? n : (n&7==7 ? n\
    \ : (n&11==11 ? n : (n&13==13 ? n : (n&17==17 ? n : (n&19==19 ? n : (n&23==23\
    \ ? n : (n&29==29 ? n : (n&31==31 ? n : (n&37==37 ? n : (n&41==41 ? n : (n&43==43\
    \ ? n : (n&47==47 ? n : (n&53==53 ? n : (n&59==59 ? n : (n&61==61 ? n : (n&67==67\
    \ ? n : (n&71==71 ? n : (n&73==73 ? n : (n&79==79 ? n : (n&83==83 ? n : (n&89==89\
    \ ? n : (n&97==97 ? n : (n&103==103 ? n : (n&107==107 ? n : (n&113==113 ? n :\
    \ (n&119==119 ? n : (n&121==121 ? n : (n&127==127 ? n : (n&131==131 ? n : (n&137==137\
    \ ? n : (n&143==143 ? n : (n&149==149 ? n : (n&151==151 ? n : (n&157==157 ? n\
    \ : (n&163==163 ? n : (n&167==167 ? n : (n&173==173 ? n : (n&179==179 ? n : (n&181==181\
    \ ? n : (n&187==187 ? n : (n&193==193 ? n : (n&199==199 ? n : (n&203==203 ? n\
    \ : (n&209==209 ? n : (n&213==213 ? n : (n&217==217 ? n : (n&223==223 ? n : (n&229==229\
    \ ? n : (n&233==233 ? n : (n&239==239 ? n : (n&241==241 ? n : (n&247==247 ? n\
    \ : (n&253==253 ? n : (n&259==259 ? n : (n&261==261 ? n : (n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long nextOdd = 0;\n        long nextEven\
    \ = 0;\n        long nextOddEven = 0;\n        long nextOddEvenOdd = 0;\n    \
    \    long nextOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOdd = 0;\n \
    \       long nextOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEven = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n        long\
    \ nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n   \
    \     long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n      \
    \  long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n  \
    \      long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = 0;\n\
    \        long nextEven = 0;\n        long nextNextOdd = 0;\n        long nextNextEven\
    \ = 0;\n        long nextNextNextOdd = 0;\n        long nextNextNextEven = 0;\n\
    \        long nextNextNextNextOdd = 0;\n        long nextNextNextNextEven = 0;\n\
    \        long nextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNextNextNextNextNextOdd = 0;\n        long nextNextNextNextNextNextEven\
    \ = 0;\n        long nextNext", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long nextOdd = (n%2 == 0) ? n : n + 1;\n        long nextEven = (n%2\
    \ == 1) ? n : n + 1;\n        result.add(nextOdd);\n        result.add(nextEven);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long nextOdd = 0;\n        long nextEven = 0;\n        long nextLevel\
    \ = n;\n        while (nextLevel > 0) {\n            if (nextLevel % 2 == 0) {\n\
    \                nextEven++;\n            } else {\n                nextOdd++;\n\
    \            }\n            nextLevel--;\n        }\n        result.add(nextOdd);\n\
    \        result.add(nextEven);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 0) {\n            return result;\n\
    \        }\n        long nextOdd = (n + 1) / 2;\n        long nextEven = (n +\
    \ 2) / 2;\n        if (n % 2 == 0) {\n            result.add(nextEven);\n    \
    \    } else {\n            result.add(nextOdd);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long nextOdd = (n%2\
    \ == 1) ? n : (n+1);\n        long nextEven = (n%2 == 0) ? n : (n+1);\n      \
    \  long nextOddEven = (nextOdd%2 == 0) ? nextOdd : nextEven;\n        long nextOddEvenOdd\
    \ = (nextOddEven%2 == 1) ? nextOddEven : nextOdd;\n        long nextOddEvenOddEven\
    \ = (nextOddEvenOdd%2 == 0) ? nextOddEvenOdd : nextOddEven;\n        long nextOddEvenOddEvenOdd\
    \ = (nextOddEvenOddEven%2 == 1) ? nextOddEvenOddEven : nextOddEvenOdd;\n     \
    \   long nextOddEvenOddEvenOddEven = (nextOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOdd\
    \ : nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOdd%2\
    \ == 1) ? nextOddEvenOddEvenOddEven : nextOddEvenOddEvenOdd;\n        long nextOddEvenOddEvenOddEvenOddEven\
    \ = (nextOddEvenOddEvenOddEvenOdd%2 == 0) ? nextOddEvenOddEvenOddEvenOdd : nextOddEvenOddEvenOddEvenOdd;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEvenOdd%2\
    \ == 1) ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOdd;\n \
    \       long nextOddEvenOddEvenOddEvenOddEvenOddEven = (nextOddEvenOddEvenOddEvenOddEvenOdd%2\
    \ == 0) ? nextOddEvenOddEvenOddEvenOddEven : nextOddEvenOddEvenOddEvenOddEven;\n\
    \        long nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd = (nextOddEvenOddEvenOddEvenOddEvenOddEvenOdd%2\
    \ == 1) ? nextOddEvenOddEvenOddEvenOddEvenOdd : "]
stop_tokens:
- "\n    }\n"
